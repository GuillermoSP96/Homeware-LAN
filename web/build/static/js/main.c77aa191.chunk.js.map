{"version":3,"sources":["functions.js","constants.js","components/web/Menu.js","components/devices/traits/OnOff.js","components/devices/aux/Information.js","components/devices/aux/Connecting.js","components/devices/aux/Edit.js","components/devices/Light.js","components/devices/Outlet.js","components/devices/traits/TemperatureSetting.js","components/devices/AcUnit.js","components/devices/AirFreshener.js","components/devices/AirPurifier.js","components/devices/Bed.js","components/devices/Fan.js","components/devices/Fireplace.js","components/devices/Radiator.js","components/devices/Switch.js","components/devices/Thermostat.js","components/devices/AirCooler.js","components/devices/Bathtub.js","components/devices/Awing.js","components/devices/Blinds.js","components/devices/Closet.js","components/devices/Curtain.js","components/devices/Door.js","components/devices/Drawer.js","components/devices/Garage.js","components/devices/Pergola.js","components/devices/Shutter.js","components/devices/Valve.js","components/devices/Window.js","components/devices/Lock.js","components/devices/Gate.js","components/devices/Heater.js","components/devices/Hood.js","components/devices/SecuritySystem.js","components/devices/Blender.js","components/devices/Global.js","components/devices/Scene.js","components/pages/Devices.js","components/editor/Text.js","components/editor/traits/Scene.js","components/editor/traits/OnOff.js","components/editor/traits/Brightness.js","components/editor/traits/FanSpeed.js","components/editor/traits/ColorSetting.js","components/editor/traits/TemperatureSetting.js","components/editor/traits/Toggles.js","components/editor/traits/Modes.js","components/editor/traits/HumiditySetting.js","components/editor/traits/OpenClose.js","components/editor/traits/Rotation.js","components/editor/traits/Fill.js","components/editor/traits/ArmDisarm.js","components/editor/traits/StartStop.js","components/editor/traits/Timer.js","components/editor/traits/TemperatureControl.js","components/editor/traits/Cook.js","components/editor/traits/SensorState.js","components/pages/Editor.js","components/pages/Info.js","components/pages/Connecting.js","components/pages/Tasks.js","components/manager/Logic.js","components/manager/Trigger.js","components/manager/Triggers.js","components/manager/Time.js","components/manager/Device.js","components/manager/DeviceToDevice.js","components/manager/Assistant.js","components/manager/Target.js","components/manager/DeviceTarget.js","components/pages/Manager.js","components/pages/Settings.js","components/system/Component.js","components/pages/System.js","components/pages/Backup.js","components/pages/Access.js","components/pages/Logs.js","components/pages/Login.js","App.js","serviceWorker.js","index.js"],"names":["getCookieValue","cname","name","ca","decodeURIComponent","document","cookie","split","i","length","c","charAt","substring","indexOf","root","window","location","href","includes","deviceReference","devices","traits","attributes","commandOnlyOnOff","type","default","queryOnlyOnOff","params","commands","commandOnlyBrightness","colorModel","commandOnlyColorSetting","colorTemperatureRange","temperatureMinK","temperatureMaxK","content","availableThermostatModes","thermostatTemperatureRange","minThresholdCelsius","maxThresholdCelsius","thermostatTemperatureUnit","bufferRangeCelsius","commandOnlyTemperatureSetting","queryOnlyTemperatureSetting","discreteOnlyOpenClose","openDirection","commandOnlyOpenClose","queryOnlyOpenClose","commandOnlyRotation","supportsContinuousRotation","supportsDegrees","supportsPercent","rotationDegreesRange","rotationDegreesMin","rotationDegreesMax","command","description","sceneReversible","availableToggles","commandOnlyToggles","availableZones","pausable","maxTimerLimitSec","commandOnlyTimer","temperatureStepCelsius","temperatureUnitForUX","queryOnlyTemperatureControl","commandOnlyTemperatureControl","temperatureRange","availableFanSpeeds","speeds","ordered","reversible","commandOnlyFanSpeed","availableArmLevels","levels","availableFillLevels","humiditySetpointRange","minPercent","maxPercent","commandOnlyHumiditySetting","queryOnlyHumiditySetting","foodPresets","supportedCookingModes","availableModes","commandOnlyModes","sensorStatesSupported","thermostatTemperatureAmbient","commanded","thermostatTemperatureSetpoint","thermostatHumidityAmbient","thermostatMode","select","on","deactivate","brightness","online","color","spectrumRgb","thermostatTemperatureSetpointHigh","thermostatTemperatureSetpointLow","openPercent","rotationPercent","rotationDegrees","isLocked","isJammed","isDocked","isRunning","isPaused","activeZones","timerRemainingSec","timerPaused","temperatureSetpointCelsius","temperatureAmbientCelsius","currentFanSpeedSetting","isArmed","exitAllowance","isFilled","humiditySetpointPercent","humidityAmbientPercent","currentArmLevel","currentFillLevel","currentCookingMode","currentFoodPreset","currentFoodQuantity","currentFoodUnit","currentToggleSettings","currentModeSettings","Menu","props","style","marginTop","display","gridTemplateColumns","src","image","alt","width","paddingTop","fontSize","cursor","onClick","exec","title","OnOff","toggle","bind","http","XMLHttpRequest","onload","e","readyState","status","this","reload","console","error","statusText","open","setRequestHeader","send","JSON","stringify","id","float","marginLeft","React","Component","Information","go","Connecting","Edit","Light","device","Object","keys","toString","spectrumRGB","color_strip","height","borderRadius","backgroundColor","opacity","className","paddingLeft","Outlet","TemperatureSetting","up","down","update","temperature","marginRight","AcUnit","AirFreshener","AirPurifier","Bed","Fan","Fireplace","Radiator","Switch","Thermostat","AirCooler","Bathtub","Awing","Blinds","Closet","Curtain","Door","Drawer","Garage","Pergola","Shutter","Valve","Window","Lock","Gate","Heater","Hood","SecuritySystem","Blender","Global","Scene","Devices","state","data","loadData","newDevice","setInterval","parse","responseText","setState","map","key","Text","event","target","value","defaultValue","onChange","updateCheckbox","checked","attribute","Brightness","FanSpeed","updateFanSpeeds","addFanSpeed","speed_id","speed_attribute","temp_availableFanSpeeds","speed_values","speed_name","push","names_box","speed","lang","speed_synonym","placeholder","supportsFanSpeedPercent","ColorSetting","min","max","updateMode","addMode","mode_id","temp_availableThermostatModes","splice","join","modes","mode","Toggles","updatetoggle","addToggle","toggle_id","toggle_attribute","temp_availableToggles","name_values","toggles","name_synonym","Modes","temp_availableModes","values","settings","setting_name","setting_values","setting_synonym","settings_box","setting","HumiditySetting","OpenClose","Rotation","Fill","updateLevels","addLevel","level_id","level_attribute","temp_availableFillLevels","level_values","level_name","level","level_synonym","ArmDisarm","updateSecurityLevel","addSecurityLevel","temp_availableArmLevels","StartStop","updateArray","Timer","TemperatureControl","Cook","updatePreset","addPreset","temp_supportedCookingModes","preset_id","temp_foodPresets","food_synonyms","synonym","food_preset_name","supported_units","presets","preset","SensorState","sensor","availableStates","rawValueUnit","numericCapabilities","Editor","pathname","create","deviceInfo","defaultNames","nicknames","posible_traits","save_status","updateNames","updateId","updateType","updateTraits","save","delete","renderAttrinutes","dumy_key","names","temp_device","trait","temp_status","forEach","param","filter","index","arr","setTimeout","payload","confirm","types","toLowerCase","disabled","hwVersion","swVersion","manufacturer","model","defaultnames","dev","sta","json_viewer","textAlign","concat","topic","Tasks","tasks","openManager","newTask","task","Logic","addOr","addAnd","openTriggerAssistant","addTriggerLogic","num_operations","triggers","operation","operations","op","Trigger","renderTriggerText","week","days","Triggers","trigger","Assistant","addTriggerOperation","hour","getElementById","minute","closeTriggerAssistant","Device","updateDevice","updateParam","typeConversion","origen","int","list","bool","string","options","option","DeviceToDevice","device_a","device_b","updateDependencies","params_a","params_b","timeTigger","deiceTrigger","deviceToDeviceTrigger","Time","Target","marginBottom","addTarget","Manager","trigger_assistant_parent","deleteTrigger","devices_names","tas","log","parent","ts","Date","now","targets","DeviceTarget","Settings","google","ddns","mqtt","apikey","url","auth","token","fulfillment","enableDdnsProvider","hostname","enabled","client_id","client_secret","user","password","ip","last","provider","username","fontWeight","padding","paddingRight","ReactMarkdown","require","System","components","git","version","code","upgrading","show_system_message","system_message","loadComponents","upgrade","areYouAwake","restart","reboot","shutdown","vers","latestRelease","body","tag_name","comp","response","upg","awa","res","reb","shu","component","enable","paddingBottom","border","source","Backup","button","restore_url","backup","method","encType","action","Access","generateAPIKey","Logs","page","previousPage","nextPage","downloadLog","line","borderBottom","yellow","red","homeware_lan_log","reverse","slice","register","severity","time","message","Login","enable_message","login","grantAccess","element","margin","App","session","logout","menu","classList","exact","path","Info","Boolean","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.c77aa191.chunk.js","sourcesContent":["function getCookieValue(cname) {\n  var name = cname + \"=\";\n  var decodedCookie = decodeURIComponent(document.cookie);\n  var ca = decodedCookie.split(';');\n  for(var i = 0; i <ca.length; i++) {\n    var c = ca[i];\n    while (c.charAt(0) === ' ') {\n      c = c.substring(1);\n    }\n    if (c.indexOf(name) === 0) {\n      return c.substring(name.length, c.length);\n    }\n  }\n  return \"\";\n}\n\nexport default getCookieValue;\n","var root = window.location.href.includes('localhost') ? \"http://homeware.local/\" : \"/\"\n\nconst deviceReference = {\n  devices: {\n    \"action.devices.types.AC_UNIT\": {\n      name: \"AC unit\",\n      traits: [\n        \"action.devices.traits.FanSpeed\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.TemperatureSetting\"\n      ]\n    },\n    \"action.devices.types.AIRCOOLER\": {\n      name: \"Air cooler\",\n      traits: [\n        \"action.devices.traits.FanSpeed\",\n        \"action.devices.traits.HumiditySetting\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.TemperatureSetting\"\n      ]\n    },\n    \"action.devices.types.AIRFRESHENER\": {\n      name: \"Air freshener\",\n      traits: [\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.AIRPURIFIER\": {\n      name: \"Air purifier\",\n      traits: [\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.FanSpeed\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.Toggles\",\n        \"action.devices.traits.SensorState\"\n      ]\n    },\n    \"action.devices.types.AWNING\": {\n      name: \"Awing\",\n      traits: [\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OpenClose\"\n      ]\n    },\n    \"action.devices.types.BATHTUB\": {\n      name: \"Bathtub\",\n      traits: [\n        \"action.devices.traits.Fill\",\n        \"action.devices.traits.OnOff\"\n      ]\n    },\n    \"action.devices.types.BED\": {\n      name: \"Bed\",\n      traits: [\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.BLINDS\": {\n      name: \"Blinds\",\n      traits: [\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OpenClose\"\n      ]\n    },\n    \"action.devices.types.BLENDER\": {\n      name: \"Blender\",\n      traits: [\n        \"action.devices.traits.Cook\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Timer\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.BOILER\": {\n      name: \"Boiler\",\n      traits: [\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.TemperatureControl\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.CARBON_MONOXIDE_DETECTOR\": {\n      name: \"Carbon monoxide detector\",\n      traits: [\n        \"action.devices.traits.SensorState\"\n      ]\n    },\n    \"action.devices.types.CLOSET\": {\n      name: \"Closet\",\n      traits: [\n        \"action.devices.traits.OpenClose\"\n      ]\n    },\n    \"action.devices.types.COFFE_MAKER\": {\n      name: \"Coffe maker\",\n      traits: [\n        \"action.devices.traits.Cook\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.TemperatureControl\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.COOKTOP\": {\n      name: \"Cooktop\",\n      traits: [\n        \"action.devices.traits.Cook\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Timer\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.CURTAIN\": {\n      name: \"Curtain\",\n      traits: [\n        \"action.devices.traits.OpenClose\"\n      ]\n    },\n    \"action.devices.types.DEHUMIDIFIER\": {\n      name: \"Dehumidifier\",\n      traits: [\n        \"action.devices.traits.FanSpeed\",\n        \"action.devices.traits.HumiditySetting\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.RunCycle\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.DEHYDRATOR\": {\n      name: \"Dehydrator\",\n      traits: [\n        \"action.devices.traits.Cook\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Timer\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.DISHWASHER\": {\n      name: \"Dishwasher\",\n      traits: [\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.Toggles\",\n        \"action.devices.traits.RunCycle\"\n      ]\n    },\n    \"action.devices.types.DOOR\": {\n      name: \"Door\",\n      traits: [\n        \"action.devices.traits.OpenClose\"\n      ]\n    },\n    \"action.devices.types.DRAWER\": {\n      name: \"Drawer\",\n      traits: [\n        \"action.devices.traits.OpenClose\"\n      ]\n    },\n    \"action.devices.types.DRYER\": {\n      name: \"Dryer\",\n      traits: [\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.Toggles\",\n        \"action.devices.traits.RunCycle\"\n      ]\n    },\n    \"action.devices.types.FAN\": {\n      name: \"Fan\",\n      traits: [\n        \"action.devices.traits.FanSpeed\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.FIREPLACE\": {\n      name: \"Fireplace\",\n      traits: [\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.FREEZER\": {\n      name: \"Fireplace\",\n      traits: [\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.TemperatureControl\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.FRYER\": {\n      name: \"Fryer\",\n      traits: [\n        \"action.devices.traits.Cook\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Timer\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.GARAGE\": {\n      name: \"Garage\",\n      traits: [\n        \"action.devices.traits.OpenClose\"\n      ]\n    },\n    \"action.devices.types.GATE\": {\n      name: \"Gate\",\n      traits: [\n        \"action.devices.traits.OpenClose\"\n      ]\n    },\n    \"action.devices.types.GRILL\": {\n      name: \"Grill\",\n      traits: [\n        \"action.devices.traits.Cook\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Timer\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.HEATER\": {\n      name: \"Heater\",\n      traits: [\n        \"action.devices.traits.FanSpeed\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.TemperatureSetting\",\n      ]\n    },\n    \"action.devices.types.HOOD\": {\n      name: \"Hood\",\n      traits: [\n        \"action.devices.traits.FanSpeed\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.HUMIDIFIER\": {\n      name: \"Humidifier\",\n      traits: [\n        \"action.devices.traits.FanSpeed\",\n        \"action.devices.traits.HumiditySetting\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.KETTLE\": {\n      name: \"Kettle\",\n      traits: [\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.TemperatureControl\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.LIGHT\": {\n      name: \"Light\",\n      traits: [\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.Brightness\",\n        \"action.devices.traits.ColorSetting\"\n      ]\n    },\n    \"action.devices.types.LOCK\": {\n      name: \"Lock\",\n      traits: [\n        \"action.devices.traits.LockUnlock\"\n      ]\n    },\n    \"action.devices.types.MICROWAVE\": {\n      name: \"Microwave\",\n      traits: [\n        \"action.devices.traits.Cook\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Timer\",\n        \"action.devices.traits.Toggles\"\n      ],\n    },\n    \"action.devices.types.MOP\": {\n      name: \"Mop\",\n      traits: [\n        \"action.devices.traits.Dock\",\n        \"action.devices.traits.Locator\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.RunCycle\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.MOWER\": {\n      name: \"Mower\",\n      traits: [\n        \"action.devices.traits.Dock\",\n        \"action.devices.traits.Locator\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.RunCycle\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.MULTICOOKER\": {\n      name: \"Multicooker\",\n      traits: [\n        \"action.devices.traits.Cook\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Timer\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.OUTLET\": {\n      name: \"Outlet\",\n      traits: [\n        \"action.devices.traits.OnOff\"\n      ]\n    },\n    \"action.devices.types.OVEN\": {\n      name: \"Oven\",\n      traits: [\n        \"action.devices.traits.Cook\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.TemperatureControl\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.PERGOLA\": {\n      name: \"Pergola\",\n      traits: [\n        \"action.devices.traits.OpenClose\",\n        \"action.devices.traits.Rotation\"\n      ]\n    },\n    \"action.devices.types.PRESSURECOOKER\": {\n      name: \"Pressure cooker\",\n      traits: [\n        \"action.devices.traits.Cook\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Timer\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.RADIATOR\": {\n      name: \"Radiator\",\n      traits: [\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.REFRIGERATOR\": {\n      name: \"Refrigerator\",\n      traits: [\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.TemperatureControl\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.SENSOR\": {\n      name: \"Sensor\",\n      traits: [\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.SensorState\"\n      ]\n    },\n    \"action.devices.types.SECURITYSYSTEM\": {\n      name: \"Security system\",\n      traits: [\n        \"action.devices.traits.ArmDisarm\",\n        \"action.devices.traits.StatusReport\"\n      ]\n    },\n    \"action.devices.types.SHOWER\": {\n      name: \"Shower\",\n      traits: [\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.TemperatureControl\"\n      ]\n    },\n    \"action.devices.types.SHUTTER\": {\n      name: \"Shutter\",\n      traits: [\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OpenClose\",\n        \"action.devices.traits.Rotation\"\n      ]\n    },\n    \"action.devices.types.SMOKE_DETECTOR\": {\n      name: \"Smoke detector\",\n      traits: [\n        \"action.devices.traits.SensorState\"\n      ]\n    },\n    \"action.devices.types.SOUSVIDE\": {\n      name: \"Sous vide\",\n      traits: [\n        \"action.devices.traits.Cook\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Timer\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.SPRINKLER\": {\n      name: \"Sprinkler\",\n      traits: [\n        \"action.devices.traits.StartStop\"\n      ]\n    },\n    \"action.devices.types.STANDMIXER\": {\n      name: \"Stand mixer\",\n      traits: [\n        \"action.devices.traits.Cook\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.SWITCH\": {\n      name: \"Switch\",\n      traits: [\n        \"action.devices.traits.OnOff\"\n      ]\n    },\n    \"action.devices.types.THERMOSTAT\": {\n      name: \"Thermostat\",\n      traits: [\n        \"action.devices.traits.TemperatureSetting\"\n      ]\n    },\n    \"action.devices.types.VACUUM\": {\n      name: \"Vacum\",\n      traits: [\n        \"action.devices.traits.Dock\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.VALVE\": {\n      name: \"Valve\",\n      traits: [\n        \"action.devices.traits.OpenClose\"\n      ]\n    },\n    \"action.devices.types.WASHER\": {\n      name: \"Washer\",\n      traits: [\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.RunCycle\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.WATERHEATER\": {\n      name: \"Water heater\",\n      traits: [\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.TemperatureControl\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.WATERPURIFIER\": {\n      name: \"Water purifier\",\n      traits: [\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.SensorState\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.WATERSOFTENER\": {\n      name: \"Water softener\",\n      traits: [\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.SensorState\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.WINDOW\": {\n      name: \"Window\",\n      traits: [\n        \"action.devices.traits.LockUnlock\",\n        \"action.devices.traits.OpenClose\"\n      ]\n    },\n    \"action.devices.types.SCENE\": {\n      name: \"Scene\",\n      traits: [\n        \"action.devices.traits.Scene\"\n      ]\n    },\n    \"action.devices.types.YOGURTMAKER\": {\n      name: \"Yogurt maker\",\n      traits: [\n        \"action.devices.traits.Cook\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Timer\",\n        \"action.devices.traits.Toggles\"\n      ]\n    }\n  },\n  traits: {\n    \"action.devices.traits.OnOff\": {\n      name: 'Power control',\n      attributes: {\n        commandOnlyOnOff: {\n          type: \"bool\",\n          default: false\n        },\n        queryOnlyOnOff: {\n          type: \"bool\",\n          default: false\n        }\n      },\n      params: ['on'],\n      commands: []\n    },\n    \"action.devices.traits.Brightness\": {\n      name: 'Brightness',\n      attributes: {\n        commandOnlyBrightness: {\n          type: \"bool\",\n          default: false\n        }\n      },\n      params: ['brightness'],\n      commands: []\n    },\n    \"action.devices.traits.ColorSetting\": {\n      name: 'Color setting',\n      attributes: {\n        colorModel: {\n          type: \"string\",\n          default: \"rgb\"\n        },\n        commandOnlyColorSetting: {\n            type: \"bool\",\n            default: false\n        },\n        colorTemperatureRange: {\n          type: \"object\",\n          default: {\n            temperatureMinK: 4000,\n            temperatureMaxK: 4200\n          },\n          content: {\n            temperatureMinK: {\n              type: \"int\",\n              default: 4000\n            },\n            temperatureMaxK: {\n              type: \"int\",\n              default: 4200\n            }\n          }\n        }\n      },\n      params: ['color'],\n      commands: []\n    },\n    \"action.devices.traits.TemperatureSetting\": {\n      name: 'Temperature Settings',\n      attributes: {\n        availableThermostatModes: {\n          type: \"select\",\n          default: \"off,heat,cool\"\n        },\n        thermostatTemperatureRange: {\n          type: \"object\",\n          default: {\n            minThresholdCelsius: 18,\n            maxThresholdCelsius: 34\n          }\n        },\n        thermostatTemperatureUnit: {\n          type: \"string\",\n          default: \"C\"\n        },\n        bufferRangeCelsius: {\n          type: \"int\",\n          default: 2\n        },\n        commandOnlyTemperatureSetting: {\n          type: \"bool\",\n          default: false\n        },\n        queryOnlyTemperatureSetting: {\n          type: \"bool\",\n          default: false\n        }\n      },\n      params: [\n        'thermostatMode',\n        'thermostatTemperatureSetpoint',\n        'thermostatTemperatureAmbient',\n        'thermostatTemperatureSetpointHigh',\n        'thermostatTemperatureSetpointLow',\n        'thermostatHumidityAmbient'\n      ],\n      commands: []\n    },\n    \"action.devices.traits.OpenClose\": {\n      name: 'Open or close',\n      attributes: {\n        discreteOnlyOpenClose: {\n          type: \"bool\",\n          default: false\n        },\n        openDirection: {\n          type: \"array\",\n          default: [\"UP\",\"DOWN\",\"LEFT\",\"RIGHT\",\"IN\",\"OUT\"]\n        },\n        commandOnlyOpenClose: {\n          type: \"bool\",\n          default: false\n        },\n        queryOnlyOpenClose: {\n          type: \"bool\",\n          default: false\n        }\n      },\n      params: ['openPercent'],\n      commands: []\n    },\n    \"action.devices.traits.Rotation\": {\n      name: 'Rotation - Google doesn\\'t respond',\n      attributes: {\n        commandOnlyRotation: {\n          type: \"bool\",\n          default: false\n        },\n        supportsContinuousRotation: {\n          type: \"bool\",\n          default: false\n        },\n        supportsDegrees: {\n          type: \"bool\",\n          default: false\n        },\n        supportsPercent: {\n          type: \"bool\",\n          default: false\n        },\n        rotationDegreesRange: {\n          type: \"object\",\n          default: {\n            rotationDegreesMin: 0,\n            rotationDegreesMax: 0\n          },\n          content: {\n            rotationDegreesMin: {\n              type: \"int\"\n            },\n            rotationDegreesMax: {\n              type: \"int\"\n            }\n          }\n        }\n      },\n      params: ['rotationPercent','rotationDegrees'],\n      commands: []\n    },\n    \"action.devices.traits.LockUnlock\": {\n      name: 'Lock or unlock',\n      attributes: {},\n      params: ['isLocked','isJammed'],\n      commands: [\n        {\n          command: 'lock',\n          description: 'Lock'\n        },\n        {\n          command: 'unlock',\n          description: 'Unlock'\n        }\n      ]\n    },\n    \"action.devices.traits.Scene\": {\n      name: 'Scene',\n      attributes: {\n        sceneReversible: {\n          type: \"bool\",\n          default: true\n        }\n      },\n      params: ['deactivate'],\n      commands: []\n    },\n    \"action.devices.traits.Dock\": {\n      name: 'Dock',\n      attributes: {},\n      params: ['isDocked'],\n      commands: []\n    },\n    \"action.devices.traits.Toggles\": {\n      name: 'Toogles',\n      attributes: {\n        availableToggles: {\n          type: \"strigifyedObject\",\n          default: []\n        },\n        commandOnlyToggles: {\n          type: \"bool\",\n          default: false\n        }\n      },\n      params: ['currentToggleSettings'],\n      commands: []\n    },\n    \"action.devices.traits.StartStop\": {\n      name: 'Start and stop',\n      attributes: {\n        availableZones: {\n          type: \"array\",\n          default: []\n        },\n        pausable: {\n          type: \"bool\",\n          default: false\n        }\n      },\n      params: ['isRunning','isPaused','activeZones'],\n      commands: [\n        {\n          command: 'start',\n          description: 'Start the process'\n        },\n        {\n          command: 'stop',\n          description: 'Stop the process'\n        },\n        {\n          command: 'pause',\n          description: 'Pause cooking'\n        },\n        {\n          command: 'unpause',\n          description: 'Unpause cooking'\n        }\n      ]\n    },\n    \"action.devices.traits.Timer\": {\n      name: 'Timer - Google doesn\\'t respond',\n      attributes: {\n        maxTimerLimitSec: {\n          type: \"int\",\n          default: 1000\n        },\n        commandOnlyTimer: {\n          type: \"bool\",\n          default: false\n        }\n      },\n      params: ['timerRemainingSec', 'timerPaused'],\n      commands: []\n    },\n    \"action.devices.traits.TemperatureControl\": {\n      name: 'Temperature control',\n      attributes: {\n        temperatureStepCelsius: {\n          type: \"int\",\n          default: 5\n        },\n        temperatureUnitForUX: {\n          type: \"string\",\n          default: \"C\"\n        },\n        queryOnlyTemperatureControl: {\n          type: \"bool\",\n          default: false\n        },\n        commandOnlyTemperatureControl: {\n          type: \"bool\",\n          default: false\n        },\n        temperatureRange: {\n          type: \"object\",\n          default: {\n            minThresholdCelsius: 0,\n            maxThresholdCelsius: 150\n          },\n          content: {\n            minThresholdCelsius: {\n              type: \"int\"\n            },\n            maxThresholdCelsius: {\n              type: \"int\"\n            }\n          }\n        }\n      },\n      params: ['temperatureSetpointCelsius','temperatureAmbientCelsius'],\n      commands: []\n    },\n    \"action.devices.traits.FanSpeed\": {\n      name: 'Fan Speed',\n      attributes: {\n        availableFanSpeeds: {\n          type: \"strigifyedObject\",\n          default: {\n            speeds: [],\n            ordered: true\n          }\n        },\n        reversible: {\n          type: \"bool\",\n          default: true\n        },\n        commandOnlyFanSpeed: {\n          type: \"bool\",\n          default: true\n        }\n      },\n      params: ['currentFanSpeedSetting'],\n      commands: []\n    },\n    \"action.devices.traits.ArmDisarm\": {\n      name: 'Arm or disarm',\n      attributes: {\n        availableArmLevels: {\n          type: \"strigifyedObject\",\n          default: {\n            levels: [],\n            ordered: true\n          }\n        }\n      },\n      params: ['isArmed', 'currentArmLevel','exitAllowance'],\n      commands: [\n        {\n          command: 'cancel',\n          description: 'The arm process must be canceled'\n        },\n        {\n          command: 'arm',\n          description: 'Arm the system'\n        },\n        {\n          command: 'disarm',\n          description: 'Disarm the system'\n        }\n      ]\n    },\n    \"action.devices.traits.Fill\": {\n      name: 'Fill',\n      attributes: {\n        availableFillLevels: {\n          type: \"strigifyedObject\",\n          default: {\n            levels: [],\n            ordered: true\n          }\n        }\n      },\n      params: ['isFilled','currentFillLevel'],\n      commands: [\n        {\n          command: 'fill',\n          description: 'Fill'\n        },\n        {\n          command: 'drain',\n          description: 'Drain'\n        }\n      ]\n    },\n    \"action.devices.traits.RunCycle\": {\n      name: 'RunCycle',\n      attributes: {},\n      params: [],\n      commands: []\n    },\n    \"action.devices.traits.StatusReport\": {\n      name: 'Status report',\n      attributes: {},\n      params: ['currentStatusReport'],\n      commands: []\n    },\n    \"action.devices.traits.HumiditySetting\": {\n      name: 'Humidity setting',\n      attributes: {\n        humiditySetpointRange: {\n          type: \"object\",\n          default: {\n            minPercent: 0,\n            maxPercent: 100\n          },\n          content: {\n            minPercent: {\n              type: \"int\"\n            },\n            maxPercent: {\n              type: \"int\"\n            }\n          }\n        },\n        commandOnlyHumiditySetting: {\n          type: \"bool\",\n          default: false\n        },\n        queryOnlyHumiditySetting: {\n          type: \"bool\",\n          default: false\n        }\n      },\n      params: ['humiditySetpointPercent','humidityAmbientPercent'],\n      commands: []\n    },\n    \"action.devices.traits.Cook\": {\n      name: 'Cooking',\n      attributes: {\n        foodPresets: {\n          type: \"strigifyedObject\",\n          default: []\n        },\n        supportedCookingModes: {\n          type: \"selectToArray\",\n          default: []\n        }\n      },\n      params: ['currentCookingMode','currentFoodPreset','currentFoodQuantity','currentFoodUnit'],\n      commands: []\n    },\n    \"action.devices.traits.Modes\": {\n      name: 'Modes',\n      attributes: {\n        availableModes: {\n          type: \"strigifyedObject\",\n          default: []\n        },\n        commandOnlyModes: {\n          type: \"bool\",\n          default: false\n        }\n      },\n      params: ['currentModeSettings'],\n      commands: [\n        {\n          command: 'start',\n          description: 'Start cooking'\n        },\n        {\n          command: 'stop',\n          description: 'Stop cooking'\n        }\n      ]\n    },\n    \"action.devices.traits.Locator\": {\n      name: 'Locator',\n      attributes: {\n      },\n      params: [],\n      commands: [\n        {\n          command: 'silence',\n          description: 'Stop the alarm'\n        }\n      ]\n    },\n    \"action.devices.traits.SensorState\": {\n      name: 'Sesnor - Google doesn\\'t respond',\n      attributes: {\n        sensorStatesSupported: {\n          type: 'object',\n          default: [\n            {\n              name: \"\"\n            }\n          ]\n        }\n      },\n      params: ['currentSensorStateData'],\n      commands: []\n    }\n  },\n  params: {\n    thermostatTemperatureAmbient: {\n      type: \"int\",\n      name: 'Ambient temperature',\n      commanded: false,\n      default: 21\n    },\n    thermostatTemperatureSetpoint: {\n      type: \"int\",\n      name: 'Temperature set point',\n      commanded: true,\n      default: 22\n    },\n    thermostatHumidityAmbient: {\n      type: \"int\",\n      name: 'Ambient humidity',\n      commanded: false,\n      default: 60\n    },\n    thermostatMode: {\n      type: \"list\",\n      select: [\"cool\",\"heat\",\"off\",\"on\",\"heatcool\",\"auto\",\"fan-only\",\"purifier\",\"eco\",\"dry\"],\n      name: 'Mode',\n      commanded: true,\n      default: 'off'\n    },\n    on: {\n      type: \"bool\",\n      select: [\"true\",\"false\"],\n      name: 'Power',\n      commanded: true,\n      default: false\n    },\n    deactivate: {\n      type: \"bool\",\n      select: [\"true\",\"false\"],\n      name: 'Deactivate',\n      commanded: true,\n      default: true\n    },\n    brightness: {\n      type: \"int\",\n      name: 'Brightness',\n      commanded: true,\n      default: 80\n    },\n    online: {\n      type: \"bool\",\n      select: [\"true\",\"false\"],\n      name: 'Online',\n      commanded: false,\n      default: true\n    },\n    color: {\n      type: \"color\",\n      name: 'Color',\n      commanded: true,\n      default: {\n        spectrumRgb: 16711935\n      }\n    },\n    thermostatTemperatureSetpointHigh: {\n      type: \"int\",\n      name: 'Hight set point in heatcool mode',\n      commanded: true,\n      default: 22\n    },\n    thermostatTemperatureSetpointLow: {\n      type: \"int\",\n      name: 'Low set point in heatcool mode',\n      commanded: true,\n      default: 18\n    },\n    openPercent: {\n      type: \"int\",\n      name: 'Open percentage',\n      commanded: true,\n      default: 60\n    },\n    rotationPercent: {\n      type: \"int\",\n      name: 'Rotation percentage',\n      commanded: true,\n      default: 50\n    },\n    rotationDegrees: {\n      type: \"int\",\n      name: 'Ration degrees',\n      commanded: true,\n      default: 90\n    },\n    isLocked: {\n      type: \"bool\",\n      name: 'Is locked',\n      commanded: false,\n      default: false\n    },\n    isJammed: {\n      type: \"bool\",\n      name: 'Is jammed',\n      commanded: false,\n      default: false\n    },\n    isDocked: {\n      type: \"bool\",\n      name: 'Is docked',\n      commanded: false,\n      default: false\n    },\n    isRunning: {\n      type: \"bool\",\n      name: 'Is running',\n      commanded: false,\n      default: false\n    },\n    isPaused: {\n      type: \"bool\",\n      name: 'Is paused',\n      commanded: false,\n      default: false\n    },\n    activeZones: {\n      type: \"object\",\n      name: 'Active Zones',\n      commanded: true,\n      default: []\n    },\n    timerRemainingSec: {\n      type: \"int\",\n      name: 'Remaining time [seconds]',\n      commanded: true,\n      default: 0\n    },\n    timerPaused: {\n      type: \"bool\",\n      name: 'Is paused',\n      commanded: true,\n      default: false\n    },\n    temperatureSetpointCelsius: {\n      type: \"int\",\n      name: 'Set point',\n      commanded: true,\n      default: 22\n    },\n    temperatureAmbientCelsius: {\n      type: \"int\",\n      name: 'Ambient',\n      commanded: false,\n      default: 21\n    },\n    currentFanSpeedSetting: {\n      type: \"string\",\n      name: 'Fan speed setting',\n      commanded: true,\n      default: ''\n    },\n    isArmed: {\n      type: \"bool\",\n      name: 'Is armed',\n      commanded: false,\n      default: false\n    },\n    exitAllowance: {\n      type: \"int\",\n      name: 'Time to leave',\n      commanded: true,\n      default: 20\n    },\n    isFilled: {\n      type: \"bool\",\n      name: 'Is filled',\n      commanded: false,\n      default: false\n    },\n    humiditySetpointPercent: {\n      type: \"int\",\n      name: 'Humidity set point',\n      commanded: true,\n      default: 70\n    },\n    humidityAmbientPercent: {\n      type: \"int\",\n      name: 'Ambient humidity',\n      commanded: false,\n      default: 60\n    },\n    currentArmLevel: {\n      type: \"string\",\n      name: 'Current security level',\n      commanded: true,\n      default: ''\n    },\n    currentFillLevel: {\n      type: \"string\",\n      name: 'Current fill levell',\n      commanded: true,\n      default: ''\n    },\n    currentCookingMode: {\n      type: \"string\",\n      name: 'Current cooking mode',\n      commanded: true,\n      default: ''\n    },\n    currentFoodPreset: {\n      type: \"string\",\n      name: 'Current food preset',\n      commanded: true,\n      default: ''\n    },\n    currentFoodQuantity: {\n      type: \"int\",\n      name: 'Current food quantity',\n      commanded: true,\n      default: ''\n    },\n    currentFoodUnit: {\n      type: \"string\",\n      name: 'Current food unit',\n      commanded: true,\n      default: ''\n    },\n    currentToggleSettings: {\n      type: \"object\",\n      name: 'Toggles status',\n      commanded: true,\n      default: {}\n    },\n    currentModeSettings: {\n      type: \"object\",\n      name: 'Modes status',\n      commanded: true,\n      default: {}\n    },\n  }\n}\n\nexport { root, deviceReference }\n","import React from 'react';\n\nfunction Menu(props) {\n\n  const menu = {\n    marginTop: '5px',\n    display: 'grid',\n    gridTemplateColumns: '40px auto'\n  }\n\n  const image = {\n    width: '30px'\n  }\n\n  const textContainer = {\n    paddingTop: '4px'\n  }\n\n  const text = {\n    fontSize: '18px',\n    cursor: 'pointer'\n  }\n\n  function go (){\n    window.location.href = props.href;\n  }\n\n  return (\n    <div style={ menu }>\n      <div>\n        <img src={ props.image } alt={ props.image } style={ image }/>\n      </div>\n      <div style={ textContainer }>\n        <span style={ text } onClick={ props.exec ? props.exec : go}>{ props.title }</span>\n      </div>\n    </div>\n  );\n}\n\nexport default Menu\n","import React from 'react';\nimport getCookieValue from '../../../functions'\nimport { root } from '../../../constants'\n\nclass OnOff extends React.Component {\n  constructor(props) {\n    super(props);\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle(){\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      if (http.readyState === 4) {\n        if (http.status === 200) {\n          this.props.reload();\n        } else {\n          console.error(http.statusText);\n        }\n      }\n    }.bind(this)\n    http.open(\"POST\", root + \"api/status/update/\");\n    http.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\n    http.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    http.send(JSON.stringify({\n      \"id\": this.props.id,\n      \"param\": \"on\",\n      \"value\": !this.props.on\n    }));\n  }\n\n  render() {\n\n    const container = {\n      float: 'left',\n      marginLeft: '5px'\n    }\n\n    const image = {\n      width: '30px'\n    }\n\n    return (\n      <div style={container}>\n        <img src={ this.props.on ? '/devices/onoff_on_true.png' : '/devices/onoff_on_false.png'} onClick={ this.toggle } alt={ this.props.image } style={ image }/>\n      </div>\n    );\n  }\n}\n\nexport default OnOff\n","import React from 'react';\n\nclass Information extends React.Component {\n  constructor(props) {\n    super(props);\n    this.go = this.go.bind(this);\n  }\n\n  go(){\n    window.location.href = \"/devices/info/\" + this.props.id + \"/\"\n  }\n\n  render() {\n\n    const container = {\n      float: 'left',\n      marginLeft: '5px'\n    }\n\n    const image = {\n      width: '30px'\n    }\n\n    return (\n      <div style={container}>\n        <img src=\"/devices/information.png\" onClick={ this.go } alt={ this.props.image } style={ image }/>\n      </div>\n    );\n  }\n}\n\nexport default Information\n","import React from 'react';\n\nclass Connecting extends React.Component {\n  constructor(props) {\n    super(props);\n    this.go = this.go.bind(this);\n  }\n\n  go(){\n    window.location.href = \"/devices/connecting/\" + this.props.id + \"/\"\n  }\n\n  render() {\n\n    const container = {\n      float: 'left',\n      marginLeft: '5px'\n    }\n\n    const image = {\n      width: '30px'\n    }\n\n    return (\n      <div style={container}>\n        <img src=\"/devices/connecting.png\" onClick={ this.go } alt={ this.props.image } style={ image }/>\n      </div>\n    );\n  }\n}\n\nexport default Connecting\n","import React from 'react';\n\nclass Edit extends React.Component {\n  constructor(props) {\n    super(props);\n    this.go = this.go.bind(this);\n  }\n\n  go(){\n    window.location.href = \"/devices/editor/\" + this.props.id + \"/\"\n  }\n\n  render() {\n\n    const container = {\n      float: 'left',\n      marginLeft: '5px'\n    }\n\n    const image = {\n      width: '30px'\n    }\n\n    return (\n      <div style={container}>\n        <img src=\"/devices/edit.png\" onClick={ this.go } alt={ this.props.image } style={ image }/>\n      </div>\n    );\n  }\n}\n\nexport default Edit\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Light extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    var color = 'yellow';\n    if (this.props.device.traits.includes(\"action.devices.traits.ColorSetting\")){\n      if (Object.keys(this.props.status.color).includes(\"spectrumRgb\"))\n        color = \"#\" + this.props.status.color.spectrumRgb.toString(16);\n      else\n        color = \"#\" + this.props.status.color.spectrumRGB.toString(16);\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: color,\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Light\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Outlet extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'blue',\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Outlet\n","import React from 'react';\nimport getCookieValue from '../../../functions'\nimport { root } from '../../../constants'\n\nclass TemperatureSetting extends React.Component {\n  constructor(props) {\n    super(props);\n    this.up = this.up.bind(this);\n    this.down = this.down.bind(this);\n    this.update = this.update.bind(this);\n  }\n\n  up(){\n    var temperature = this.props.status.thermostatTemperatureSetpoint + 1;\n    this.update(temperature)\n  }\n\n  down(){\n    var temperature = this.props.status.thermostatTemperatureSetpoint - 1;\n    this.update(temperature)\n  }\n\n  update(temperature){\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      if (http.readyState === 4) {\n        if (http.status === 200) {\n          this.props.reload();\n        } else {\n          console.error(http.statusText);\n        }\n      }\n    }.bind(this)\n    http.open(\"POST\", root + \"api/status/update/\");\n    http.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\n    http.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    http.send(JSON.stringify({\n      \"id\": this.props.id,\n      \"param\": \"thermostatTemperatureSetpoint\",\n      \"value\": temperature\n    }));\n  }\n\n  render() {\n\n    const container = {\n      float: 'left',\n      marginLeft: '5px'\n    }\n\n    const image = {\n      width: '30px'\n    }\n\n    const temperature = {\n      fontSize: '30px',\n      marginLeft: '5px',\n      marginRight: '5px',\n      color: '#777'\n    }\n\n    return (\n      <div style={container}>\n        <img src='/devices/arrow_down.png' onClick={ this.down } alt='Arrow up' style={ image }/>\n        <span style={temperature}>{this.props.status.thermostatTemperatureSetpoint}</span>\n        <img src='/devices/arrow_up.png' onClick={ this.up } alt='Arrow down' style={ image }/>\n      </div>\n    );\n  }\n}\n\nexport default TemperatureSetting\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport TemperatureSetting from './traits/TemperatureSetting'\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass AcUnit extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    var color = 'yellow';\n    if (this.props.status.thermostatMode === 'off')\n      color = \"#666\";\n    else if (this.props.status.thermostatMode === 'heat')\n      color = \"red\";\n    else if (this.props.status.thermostatMode === 'cool')\n      color = \"lightblue\";\n    else if (this.props.status.thermostatMode === 'on')\n      color = \"yellow\";\n    else if (this.props.status.thermostatMode === 'heatcool')\n      color = \"#DC97FF\";\n    else if (this.props.status.thermostatMode === 'auto')\n      color = \"#EE357E\";\n    else if (this.props.status.thermostatMode === 'fan-only')\n      color = \"blue\";\n    else if (this.props.status.thermostatMode === 'purifier')\n      color = \"#F3882E\";\n    else if (this.props.status.thermostatMode === 'eco')\n      color = \"green\";\n    else if (this.props.status.thermostatMode === 'dry')\n      color = \"#753500\";\n\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: color,\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <TemperatureSetting id={ this.props.device.id } status={this.props.status} on={ this.props.status } reload={ this.props.reload }/>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AcUnit\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass AirFreshener extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'yellow',\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AirFreshener\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass AirPurifier extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'yellow',\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AirPurifier\n","import React from 'react';\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Bed extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Bed\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Fan extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'yellow',\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Fan\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Fireplace extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'yellow',\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Fireplace\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Radiator extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'yellow',\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Radiator\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Switch extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'yellow',\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Switch\n","import React from 'react';\nimport TemperatureSetting from './traits/TemperatureSetting'\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Thermostat extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    var color = 'yellow';\n    if (this.props.status.thermostatMode === 'off')\n      color = \"#666\";\n    else if (this.props.status.thermostatMode === 'heat')\n      color = \"red\";\n    else if (this.props.status.thermostatMode === 'cool')\n      color = \"lightblue\";\n    else if (this.props.status.thermostatMode === 'on')\n      color = \"yellow\";\n    else if (this.props.status.thermostatMode === 'heatcool')\n      color = \"#DC97FF\";\n    else if (this.props.status.thermostatMode === 'auto')\n      color = \"#EE357E\";\n    else if (this.props.status.thermostatMode === 'fan-only')\n      color = \"blue\";\n    else if (this.props.status.thermostatMode === 'purifier')\n      color = \"#F3882E\";\n    else if (this.props.status.thermostatMode === 'eco')\n      color = \"green\";\n    else if (this.props.status.thermostatMode === 'dry')\n      color = \"#753500\";\n\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: color\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <TemperatureSetting id={ this.props.device.id } status={this.props.status} on={ this.props.status } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Thermostat\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass AirCooler extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    var color = 'yellow';\n    if (this.props.device.traits.includes(\"action.devices.traits.ColorSetting\")){\n      color = \"#\" + this.props.status.color.spectrumRgb.toString(16);\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: color,\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AirCooler\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Bathtub extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    var color = 'yellow';\n    if (this.props.device.traits.includes(\"action.devices.traits.ColorSetting\")){\n      color = \"#\" + this.props.status.color.spectrumRgb.toString(16);\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: color,\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Bathtub\n","import React from 'react';\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Awing extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Awing\n","import React from 'react';\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Blinds extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Blinds\n","import React from 'react';\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Closet extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Closet\n","import React from 'react';\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Curtain extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Curtain\n","import React from 'react';\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Door extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Door\n","import React from 'react';\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Drawer extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Drawer\n","import React from 'react';\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Garage extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Garage\n","import React from 'react';\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Pergola extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Pergola\n","import React from 'react';\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Shutter extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Shutter\n","import React from 'react';\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Valve extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Valve\n","import React from 'react';\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Window extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Window\n","import React from 'react';\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Lock extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Lock\n","import React from 'react';\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Gate extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Gate\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Heater extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    var color = 'yellow';\n    if (this.props.device.traits.includes(\"action.devices.traits.ColorSetting\")){\n      color = \"#\" + this.props.status.color.spectrumRgb.toString(16);\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: color,\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Heater\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Hood extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    var color = 'yellow';\n    if (this.props.device.traits.includes(\"action.devices.traits.ColorSetting\")){\n      color = \"#\" + this.props.status.color.spectrumRgb.toString(16);\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: color,\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Hood\n","import React from 'react';\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass SecuritySystem extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SecuritySystem\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Blender extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    var color = 'yellow';\n    if (this.props.device.traits.includes(\"action.devices.traits.ColorSetting\")){\n      color = \"#\" + this.props.status.color.spectrumRgb.toString(16);\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: color,\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Blender\n","import React from 'react';\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Global extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    var color = 'white';\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: color\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Global\n","import React from 'react';\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Scene extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    var color = 'white';\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: color\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">Scene: { this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Scene\n","import React from 'react';\nimport Light from '../devices/Light'\nimport Outlet from '../devices/Outlet'\nimport AcUnit from '../devices/AcUnit'\nimport AirFreshener from '../devices/AirFreshener'\nimport AirPurifier from '../devices/AirPurifier'\nimport Bed from '../devices/Bed'\nimport Fan from '../devices/Fan'\nimport Fireplace from '../devices/Fireplace'\nimport Radiator from '../devices/Radiator'\nimport Switch from '../devices/Switch'\nimport Thermostat from '../devices/Thermostat'\nimport AirCooler from '../devices/AirCooler'\nimport Bathtub from '../devices/Bathtub'\nimport Awing from '../devices/Awing'\nimport Blinds from '../devices/Blinds'\nimport Closet from '../devices/Closet'\nimport Curtain from '../devices/Curtain'\nimport Door from '../devices/Door'\nimport Drawer from '../devices/Drawer'\nimport Garage from '../devices/Garage'\nimport Pergola from '../devices/Pergola'\nimport Shutter from '../devices/Shutter'\nimport Valve from '../devices/Valve'\nimport Window from '../devices/Window'\nimport Lock from '../devices/Lock'\nimport Gate from '../devices/Gate'\nimport Heater from '../devices/Heater'\nimport Hood from '../devices/Hood'\nimport SecuritySystem from '../devices/SecuritySystem'\nimport Blender from '../devices/Blender'\nimport Global from '../devices/Global'\nimport Scene from '../devices/Scene'\nimport getCookieValue from '../../functions'\nimport { root } from '../../constants'\n\nimport './Devices.css';\n\nclass Devices extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {},\n      devices: []\n    }\n    this.loadData = this.loadData.bind(this);\n    this.newDevice = this.newDevice.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadData();\n    setInterval(this.loadData,3000);\n  }\n\n  loadData(){\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      if (http.readyState === 4) {\n        if (http.status === 200) {\n          var data = JSON.parse(http.responseText);\n          this.setState({\n             data: data,\n             devices: data.devices\n           });\n        } else {\n          console.error(http.statusText);\n        }\n      }\n    }.bind(this);\n    http.open(\"GET\", root + \"api/global/get/\");\n    http.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    http.send();\n  }\n\n  newDevice(){\n    window.location.href = '/devices/editor/'\n  }\n\n  render() {\n\n    const devices = this.state.devices.map((device) => {\n      if(device.type === 'action.devices.types.LIGHT')\n        return <Light key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.OUTLET')\n        return <Outlet key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.AC_UNIT')\n        return <AcUnit key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.AIRFRESHENER')\n        return <AirFreshener key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.AIRPURIFIER')\n        return <AirPurifier key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.BED')\n        return <Bed key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.FAN')\n        return <Fan key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.FIREPLACE')\n        return <Fireplace key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.RADIATOR')\n        return <Radiator key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.SWITCH')\n        return <Switch key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.THERMOSTAT')\n        return <Thermostat key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.AIRCOOLER')\n        return <AirCooler key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.BATHTUB')\n        return <Bathtub key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.AWING')\n        return <Awing key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.AIRCOOLER')\n        return <AirCooler key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.BLINDS')\n        return <Blinds key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.CLOSET')\n        return <Closet key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.CURTAIN')\n        return <Curtain key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.DOOR')\n        return <Door key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.DRAWER')\n        return <Drawer key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.GARAGE')\n        return <Garage key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.GATE')\n        return <Gate key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.PERGOLA')\n        return <Pergola key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.SHUTTER')\n        return <Shutter key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.VALVE')\n        return <Valve key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.WINDOW')\n        return <Window key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.LOCK')\n        return <Lock key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.HEATER')\n        return <Heater key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.HOOD')\n        return <Hood key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.SECURITYSYSTEM')\n        return <SecuritySystem key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.BLENDER')\n        return <Blender key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.SCENE')\n        return <Scene key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else\n        return <Global key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n    });\n\n    return (\n      <div>\n        <div className=\"page_title_container\">\n          <h2>Devices and scences</h2>\n        </div>\n\n        <div className=\"page_cards_container\">\n          { devices }\n        </div>\n\n        <div className=\"page_buttons_containter\">\n          <button type=\"button\" onClick={ this.newDevice }>New</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Devices\n","import React from 'react';\n\nimport '../pages/Editor.css';\n\nclass Text extends React.Component {\n  constructor(props) {\n    super(props);\n    this.update = this.update.bind(this);\n  }\n\n\n  update(event){\n    this.props.update(this.props.data,event.target.value);\n  }\n\n  render() {\n    return (\n      <div className=\"two_table_row\">\n        <div className=\"two_table_cel\">\n          {this.props.name}\n        </div>\n        <div className=\"two_table_cel\">\n          <input type=\"text\" className=\"two_input\" id={this.props.data} defaultValue={this.props.value} onChange={this.update}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Text\n","import React from 'react';\nimport Switch from \"react-switch\";\n\nclass Scene extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n  }\n\n\n  updateCheckbox(checked, attribute){\n    this.props.update('attributes/' + attribute,checked);\n  }\n\n  render() {\n\n\n    return (\n      <div>\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            <i>sceneReversible</i>\n          </div>\n          <div className=\"three_table_cel\">\n            <Switch onChange={(checked) => {this.updateCheckbox(checked,\"sceneReversible\")}} checked={this.props.attributes.sceneReversible} />\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if the scene can be desabled.</span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Scene\n","import React from 'react';\nimport Switch from \"react-switch\";\n\nclass OnOff extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n  }\n\n\n  updateCheckbox(checked, attribute){\n    this.props.update('attributes/' + attribute,checked);\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            <i>commandOnlyOnOff</i>\n          </div>\n          <div className=\"three_table_cel\">\n            <Switch onChange={(checked) => {this.updateCheckbox(checked,\"commandOnlyOnOff\")}} checked={this.props.attributes.commandOnlyOnOff} />\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the state.</span>\n          </div>\n        </div>\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            <i>queryOnlyOnOff</i>\n          </div>\n          <div className=\"three_table_cel\">\n            <Switch onChange={(checked) => {this.updateCheckbox(checked,\"queryOnlyOnOff\")}} checked={this.props.attributes.queryOnlyOnOff} />\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Google shouldn't change the device state.</span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default OnOff\n","import React from 'react';\nimport Switch from \"react-switch\";\n\nclass Brightness extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n  }\n\n\n  updateCheckbox(checked, attribute){\n    this.props.update('attributes/' + attribute,checked);\n  }\n\n  render() {\n\n\n    return (\n      <div>\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            <i>commandOnlyBrightness</i>\n          </div>\n          <div className=\"three_table_cel\">\n            <Switch onChange={(checked) => {this.updateCheckbox(checked,\"commandOnlyBrightness\")}} checked={this.props.commandOnlyBrightness} />\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the brightness.</span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Brightness\n","import React from 'react';\nimport Switch from \"react-switch\";\n\nclass FanSpeed extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n    this.updateFanSpeeds = this.updateFanSpeeds.bind(this);\n    this.addFanSpeed = this.addFanSpeed.bind(this);\n  }\n\n\n  updateCheckbox(checked, attribute){\n    this.props.update('attributes/' + attribute,checked);\n  }\n\n  updateFanSpeeds(event){\n    const id = event.target.id.split('_')\n    const speed_id = id[1]\n    //Process the attribute and value depending of the attribute\n    const speed_attribute = id[0] === 'lang' ? id[0] : 'speed_synonym';\n    const value = id[0] === 'lang' ? event.target.value : event.target.value.split(',')\n    //Update the temporal data and update it\n    var temp_availableFanSpeeds = this.props.attributes.availableFanSpeeds\n    temp_availableFanSpeeds.speeds[speed_id].speed_values[0][speed_attribute] = value\n    if (id[0] === 'names') temp_availableFanSpeeds.speeds[speed_id].speed_name = value[0]\n    this.props.update('attributes/availableFanSpeeds', temp_availableFanSpeeds);\n  }\n\n  addFanSpeed(){\n    var temp_availableFanSpeeds = this.props.attributes.availableFanSpeeds\n    temp_availableFanSpeeds.speeds.push({\n      \"speed_name\": \"\",\n      \"speed_values\": [\n        {\n          \"speed_synonym\": [\"\"],\n          \"lang\": \"en\"\n        }\n      ]\n    });\n    this.props.update('attributes/availableFanSpeeds', temp_availableFanSpeeds);\n  }\n\n  render() {\n\n    const names_box = {\n      width: '150px'\n    }\n\n    const speeds = this.props.attributes.availableFanSpeeds.speeds.map((speed, i) => {\n      return (\n              <div key={i}>\n                <div className=\"two_table_row\" key={i}>\n                  <div className=\"two_table_cel\">\n                  </div>\n                  <div className=\"two_table_cel\">\n                    <label>\n                      <span>Languaje: </span>\n                      <select name=\"type\" id={\"lang_\" + i} value={speed.speed_values[0].lang} onChange={this.updateFanSpeeds}>\n                        <option value=\"es\">es</option>\n                        <option value=\"en\">en</option>\n                      </select>\n                    </label>\n                    <label>\n                      <span>Speed name: </span>\n                      <input type=\"text\" id={\"names_\" + i} style={names_box} defaultValue={speed.speed_values[0].speed_synonym} placeholder=\"Speed name\" onChange={this.updateFanSpeeds}/>\n                    </label>\n                  </div>\n                </div>\n              </div>\n              )\n    });\n\n    return (\n      <div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            <i>reversible</i>\n          </div>\n          <div className=\"three_table_cel\">\n            <Switch onChange={(checked) => {this.updateCheckbox(checked,\"reversible\")}} checked={this.props.attributes.reversible} />\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if the fan supports blowing in both directions.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            <i>supportsFanSpeedPercent</i>\n          </div>\n          <div className=\"three_table_cel\">\n            <Switch onChange={(checked) => {this.updateCheckbox(checked,\"supportsFanSpeedPercent\")}} checked={this.props.attributes.supportsFanSpeedPercent} />\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if the speed can be controlled with a number from 0 to 100.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            <i>commandOnlyFanSpeed</i>\n          </div>\n          <div className=\"three_table_cel\">\n            <Switch onChange={(checked) => {this.updateCheckbox(checked,\"commandOnlyFanSpeed\")}} checked={this.props.attributes.commandOnlyFanSpeed} />\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the fan speed.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            Add a speed\n          </div>\n          <div className=\"three_table_cel\">\n            <button type=\"button\" className=\"add_attribute_button\" onClick={ this.addFanSpeed }>Add</button>\n          </div>\n        </div>\n\n        {speeds}\n\n      </div>\n    );\n  }\n}\n\nexport default FanSpeed\n","import React from 'react';\nimport Switch from \"react-switch\";\n\nclass ColorSetting extends React.Component {\n  constructor(props) {\n    super(props);\n    this.update = this.update.bind(this);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n  }\n\n  update(event){\n    this.props.update('attributes/' + event.target.id,event.target.value);\n  }\n\n  updateCheckbox(checked, attribute){\n    this.props.update('attributes/' + attribute,checked);\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            <i>Color type</i>\n          </div>\n          <div className=\"three_table_cel\">\n            <select name=\"type\" id=\"colorModel\" className=\"table_input\" value={this.props.attributes.colorModel} onChange={this.update}>\n              <option value=\"\">Select</option>\n              <option value=\"rgb\">RGB light</option>\n              <option value=\"hsv\">HSV light</option>\n              <option value=\"\">Color temperature</option>\n            </select>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\"></span>\n          </div>\n        </div>\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            Minimum temperature\n          </div>\n          <div className=\"three_table_cel\">\n            <input type=\"number\" id=\"colorTemperatureRange/temperatureMinK\" defaultValue={ this.props.attributes.colorTemperatureRange ? this.props.attributes.colorTemperatureRange.temperatureMinK : 0} min=\"0\" max=\"10000\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Minimum color temperature (in Kelvin) supported by the device.</span>\n          </div>\n        </div>\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            Maximum temperature\n          </div>\n          <div className=\"three_table_cel\">\n            <input type=\"number\" id=\"colorTemperatureRange/temperatureMaxK\" defaultValue={this.props.attributes.colorTemperatureRange ? this.props.attributes.colorTemperatureRange.temperatureMaxK : 0} min=\"0\" max=\"10000\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Maximum color temperature (in Kelvin) supported by the device.</span>\n          </div>\n        </div>\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            <i>commandOnlyColorSetting</i>\n          </div>\n          <div className=\"three_table_cel\">\n            <Switch onChange={(checked) => {this.updateCheckbox(checked,\"commandOnlyColorSetting\")}} checked={this.props.attributes.commandOnlyColorSetting} />\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the color.</span>\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default ColorSetting\n","import React from 'react';\nimport Switch from \"react-switch\";\n\nclass TemperatureSetting extends React.Component {\n  constructor(props) {\n    super(props);\n    this.update = this.update.bind(this);\n    this.updateMode = this.updateMode.bind(this);\n    this.addMode = this.addMode.bind(this);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n  }\n\n  update(event){\n    this.props.update('attributes/' + event.target.id,event.target.value);\n  }\n\n  updateMode(event){\n    const id = event.target.id.split('_')\n    const mode_id = id[1]\n    var temp_availableThermostatModes = this.props.attributes.availableThermostatModes.split(',')\n\n    if (event.target.value === 'delete'){\n      temp_availableThermostatModes.splice(mode_id, 1)\n    } else if (event.target.value !== 'select') {\n      temp_availableThermostatModes[mode_id] = event.target.value;\n    }\n\n    this.props.update('attributes/availableThermostatModes', temp_availableThermostatModes.join(','));\n  }\n\n  addMode(){\n    var temp_availableThermostatModes = this.props.attributes.availableThermostatModes\n    temp_availableThermostatModes += \",\"\n    this.props.update('attributes/availableThermostatModes', temp_availableThermostatModes);\n  }\n\n  updateCheckbox(checked, attribute){\n    this.props.update('attributes/' + attribute,checked);\n  }\n\n\n  render() {\n\n    const modes = this.props.attributes.availableThermostatModes.split(',').map((mode, i) => {\n\n      return (\n          <div key={i}>\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">\n              </div>\n              <div className=\"two_table_cel\">\n                <label>\n                  <span>Mode: </span>\n                  <select name=\"type\" id={\"mode_\" + i} value={mode} onChange={this.updateMode}>\n                    <option value=\"select\">Select a mode</option>\n                    <option value=\"delete\">Delete this mode</option>\n                    <option value=\"off\">Off</option>\n                    <option value=\"heat\">Heat</option>\n                    <option value=\"cool\">Cool</option>\n                    <option value=\"on\">On</option>\n                    <option value=\"heatcool\">Heatcool</option>\n                    <option value=\"auto\">Auto</option>\n                    <option value=\"fan-only\">Fan only</option>\n                    <option value=\"purifier\">Purifier</option>\n                    <option value=\"eco\">Eco</option>\n                    <option value=\"dry\">Dry</option>\n                  </select>\n                </label>\n              </div>\n            </div>\n          </div>\n\n          )\n    });\n\n    return (\n      <div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            Add a thermostat mode\n          </div>\n          <div className=\"three_table_cel\">\n            <button type=\"button\" className=\"add_attribute_button\" onClick={ this.addMode }>Add</button>\n          </div>\n        </div>\n\n        {modes}\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            <i>commandOnlyTemperatureSetting</i>\n          </div>\n          <div className=\"three_table_cel\">\n            <Switch onChange={(checked) => {this.updateCheckbox(checked,\"commandOnlyTemperatureSetting\")}} checked={this.props.attributes.commandOnlyTemperatureSetting} />\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the temperature.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            <i>queryOnlyTemperatureSetting</i>\n          </div>\n          <div className=\"three_table_cel\">\n            <Switch onChange={(checked) => {this.updateCheckbox(checked,\"queryOnlyTemperatureSetting\")}} checked={this.props.attributes.queryOnlyTemperatureSetting} />\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Google shouldn't change the device temperature settings.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            Minimum temperature\n          </div>\n          <div className=\"three_table_cel\">\n            <input type=\"number\" id=\"thermostatTemperatureRange/minThresholdCelsius\" defaultValue={ this.props.attributes.thermostatTemperatureRange ? this.props.attributes.thermostatTemperatureRange.minThresholdCelsius : 0} min=\"0\" max=\"50\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Minimum temperature (in Celsius) supported by the device.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            Maximum temperature\n          </div>\n          <div className=\"three_table_cel\">\n            <input type=\"number\" id=\"thermostatTemperatureRange/maxThresholdCelsius\" defaultValue={this.props.attributes.thermostatTemperatureRange ? this.props.attributes.thermostatTemperatureRange.maxThresholdCelsius : 0} min=\"0\" max=\"50\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Maximum temperature (in Celsius) supported by the device.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            Range\n          </div>\n          <div className=\"three_table_cel\">\n            <input type=\"number\" id=\"bufferRangeCelsius\" defaultValue={this.props.attributes.bufferRangeCelsius} min=\"0\" max=\"50\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Specifies the minimum offset between heat-cool setpoints in Celsius.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            Units\n          </div>\n          <div className=\"three_table_cel\">\n            <select name=\"type\" id=\"thermostatTemperatureUnit\" className=\"table_input\" value={this.props.attributes.thermostatTemperatureUnit} onChange={this.update}>\n              <option value=\"C\">Celsius</option>\n              <option value=\"F\">Fahrenheit</option>\n            </select>\n          </div>\n        </div>\n\n\n\n      </div>\n    );\n  }\n}\n\nexport default TemperatureSetting\n","import React from 'react';\nimport Switch from \"react-switch\";\n\nclass Toggles extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n    this.updatetoggle = this.updatetoggle.bind(this);\n    this.addToggle = this.addToggle.bind(this);\n  }\n\n\n  updateCheckbox(checked, attribute){\n    this.props.update('attributes/' + attribute,checked);\n  }\n\n  updatetoggle(event){\n    const id = event.target.id.split('_')\n    const toggle_id = id[1]\n    //Process the attribute and value depending of the attribute\n    const toggle_attribute = id[0] === 'lang' ? id[0] : 'name_synonym';\n    const value = id[0] === 'lang' ? event.target.value : event.target.value.split(',')\n    //Update the temporal data and update it\n    var temp_availableToggles = this.props.attributes.availableToggles\n    temp_availableToggles[toggle_id].name_values[0][toggle_attribute] = value\n    if (id[0] === 'names') temp_availableToggles[toggle_id].name = value[0]\n    this.props.update('attributes/availableToggles', temp_availableToggles);\n  }\n\n  addToggle(){\n    var temp_availableToggles = this.props.attributes.availableToggles\n    temp_availableToggles.push({\n      \"name\": \"\",\n      \"name_values\": [\n        {\n          \"name_synonym\": [\"\"],\n          \"lang\": \"en\"\n        }\n      ]\n    });\n    this.props.update('attributes/availableToggles', temp_availableToggles);\n  }\n\n  render() {\n\n    const names_box = {\n      marginLeft: '20px',\n      width: '150px'\n    }\n\n    const toggles = this.props.attributes.availableToggles.map((toggle, i) => {\n      return (\n              <div key={i}>\n                <div className=\"two_table_row\">\n                  <div className=\"two_table_cel\">\n                  </div>\n                  <div className=\"two_table_cel\">\n                    <label>\n                      <span>Languaje: </span>\n                      <select name=\"type\" id={\"lang_\" + i} value={toggle.name_values[0].lang} placeholder=\"Name for the toggle\" onChange={this.updatetoggle}>\n                        <option value=\"es\">es</option>\n                        <option value=\"en\">en</option>\n                      </select>\n                    </label>\n                    <label>\n                      <span>Name: </span>\n                      <input type=\"text\" id={\"names_\" + i} style={names_box} defaultValue={toggle.name_values[0].name_synonym} placeholder=\"Name\" onChange={this.updatetoggle}/>\n                    </label>\n\n\n                  </div>\n                </div>\n              </div>\n            )\n    });\n\n    return (\n      <div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            <i>commandOnlyToggles</i>\n          </div>\n          <div className=\"three_table_cel\">\n            <Switch onChange={(checked) => {this.updateCheckbox(checked,\"commandOnlyToggles\")}} checked={this.props.attributes.commandOnlyToggles} />\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the states.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            Add a toggle\n          </div>\n          <div className=\"three_table_cel\">\n            <button type=\"button\" className=\"add_attribute_button\" onClick={ this.addToggle }>Add</button>\n          </div>\n        </div>\n\n        {toggles}\n\n      </div>\n    );\n  }\n}\n\nexport default Toggles\n","import React from 'react';\nimport Switch from \"react-switch\";\n\nclass Modes extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n    this.updateMode = this.updateMode.bind(this);\n    this.addMode = this.addMode.bind(this);\n  }\n\n\n  updateCheckbox(checked, attribute){\n    this.props.update('attributes/' + attribute,checked);\n  }\n\n  updateMode(event){\n    const id = event.target.id.split('_')\n    const mode_id = id[1]\n    var temp_availableModes = this.props.attributes.availableModes\n\n    if(id[0] === 'lang'){\n      temp_availableModes[mode_id].name_values[0].lang = event.target.value;\n    } else if (id[0] === 'names'){\n      temp_availableModes[mode_id].name_values[0].name_synonym = event.target.value.split(',');\n      temp_availableModes[mode_id].name = event.target.value.split(',')[0]\n    } else if (id[0] === 'settings'){\n      var values = event.target.value.split(',')\n      var settings = []\n      for ( var i = 0; i < values.length; i ++){\n        settings.push({\n          setting_name: values[i],\n            setting_values: [{\n              setting_synonym: [values[i]],\n              lang: this.props.attributes.availableModes[mode_id].name_values[0].lang\n             }]\n        })\n      }\n      temp_availableModes[mode_id].settings = settings\n    }\n    this.props.update('attributes/availableModes', temp_availableModes);\n  }\n\n  addMode(){\n    var temp_availableModes = this.props.attributes.availableModes\n    temp_availableModes.push({\n      \"name\": \"\",\n      \"name_values\": [\n        {\n          \"name_synonym\": [\"\"],\n          \"lang\": \"en\"\n        }\n      ],\n      \"settings\": [\n        {\n          \"setting_name\": \"\",\n            \"setting_values\": [{\n              \"setting_synonym\": [\"\"],\n              \"lang\": \"en\"\n             }]\n        }\n      ]\n    });\n    this.props.update('attributes/availableModes', temp_availableModes);\n  }\n\n  render() {\n\n    const names_box = {\n      width: '150px'\n    }\n\n    const settings_box = {\n      width: '230px'\n    }\n\n\n    const modes = this.props.attributes.availableModes.map((mode, i) => {\n      const settings = mode.settings.map((setting,i) => {return setting.setting_name});\n\n      return (\n              <div key={i}>\n                <div className=\"two_table_row\">\n                  <div className=\"two_table_cel\">\n                  </div>\n                  <div className=\"two_table_cel\">\n                    <label>\n                      <span>Languaje: </span>\n                      <select name=\"type\" id={\"lang_\" + i} value={mode.name_values[0].lang} onChange={this.updateMode}>\n                        <option value=\"es\">es</option>\n                        <option value=\"en\">en</option>\n                      </select>\n                    </label>\n                    <label>\n                      <span>Mode name: </span>\n                      <input type=\"text\" id={\"names_\" + i} style={names_box} defaultValue={mode.name_values[0].name_synonym} placeholder=\"Mode name\" onChange={this.updateMode}/>\n                    </label>\n                    <label>\n                      <span>Mode settings: </span>\n                      <input type=\"text\" id={\"settings_\" + i} style={settings_box} defaultValue={settings} placeholder=\"Separated by commas\" onChange={this.updateMode}/>\n                    </label>\n                  </div>\n                </div>\n\n\n              </div>\n\n              )\n    });\n\n    return (\n      <div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            <i>commandOnlyModes</i>\n          </div>\n          <div className=\"three_table_cel\">\n            <Switch onChange={(checked) => {this.updateCheckbox(checked,\"commandOnlyModes\")}} checked={this.props.attributes.commandOnlyModes} />\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the modes.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            Add a mode\n          </div>\n          <div className=\"three_table_cel\">\n            <button type=\"button\" className=\"add_attribute_button\" onClick={ this.addMode }>Add</button>\n          </div>\n        </div>\n\n        {modes}\n\n      </div>\n    );\n  }\n}\n\nexport default Modes\n","import React from 'react';\nimport Switch from \"react-switch\";\n\nclass HumiditySetting extends React.Component {\n  constructor(props) {\n    super(props);\n    this.update = this.update.bind(this);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n  }\n\n  update(event){\n    this.props.update('attributes/' + event.target.id,event.target.value);\n  }\n\n  updateCheckbox(checked, attribute){\n    this.props.update('attributes/' + attribute,checked);\n  }\n\n  render() {\n    return (\n      <div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            Minimum humidity\n          </div>\n          <div className=\"three_table_cel\">\n            <input type=\"number\" id=\"humiditySetpointRange/minPercent\" defaultValue={ this.props.attributes.humiditySetpointRange ? this.props.attributes.humiditySetpointRange.minPercent : 0} min=\"0\" max=\"100\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Minimum humidity level as percentage.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            Maximum humidity\n          </div>\n          <div className=\"three_table_cel\">\n            <input type=\"number\" id=\"humiditySetpointRange/maxPercent\" defaultValue={this.props.attributes.humiditySetpointRange ? this.props.attributes.humiditySetpointRange.maxPercent : 0} min=\"0\" max=\"100\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Maximum humidity level as percentage.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            <i>commandOnlyHumiditySetting</i>\n          </div>\n          <div className=\"three_table_cel\">\n            <Switch onChange={(checked) => {this.updateCheckbox(checked,\"commandOnlyHumiditySetting\")}} checked={this.props.attributes.commandOnlyHumiditySetting} />\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the humidity.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            <i>queryOnlyHumiditySetting</i>\n          </div>\n          <div className=\"three_table_cel\">\n            <Switch onChange={(checked) => {this.updateCheckbox(checked,\"queryOnlyHumiditySetting\")}} checked={this.props.attributes.queryOnlyHumiditySetting} />\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Google shouldn't change the device humidity.</span>\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default HumiditySetting\n","import React from 'react';\nimport Switch from \"react-switch\";\n\nclass OpenClose extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n  }\n\n\n  updateCheckbox(checked, attribute){\n    this.props.update('attributes/' + attribute,checked);\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            <i>discreteOnlyOpenClose</i>\n          </div>\n          <div className=\"three_table_cel\">\n            <Switch onChange={(checked) => {this.updateCheckbox(checked,\"discreteOnlyOpenClose\")}} checked={this.props.attributes.discreteOnlyOpenClose} />\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if the device must either be fully open or fully closed.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            <i>commandOnlyOpenClose</i>\n          </div>\n          <div className=\"three_table_cel\">\n            <Switch onChange={(checked) => {this.updateCheckbox(checked,\"commandOnlyOpenClose\")}} checked={this.props.attributes.commandOnlyOpenClose} />\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the state.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            <i>queryOnlyOpenClose</i>\n          </div>\n          <div className=\"three_table_cel\">\n            <Switch onChange={(checked) => {this.updateCheckbox(checked,\"queryOnlyOpenClose\")}} checked={this.props.attributes.queryOnlyOpenClose} />\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Google shouldn't change the device state.</span>\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default OpenClose\n","import React from 'react';\nimport Switch from \"react-switch\";\n\nclass Rotation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.update = this.update.bind(this);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n  }\n\n  update(event){\n    this.props.update('attributes/' + event.target.id,event.target.value);\n  }\n\n  updateCheckbox(checked, attribute){\n    this.props.update('attributes/' + attribute,checked);\n  }\n\n  render() {\n    return (\n      <div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            Minimum rotation\n          </div>\n          <div className=\"three_table_cel\">\n            <input type=\"number\" id=\"rotationDegreesRange/rotationDegreesMin\" defaultValue={ this.props.attributes.rotationDegreesRange ? this.props.attributes.rotationDegreesRange.rotationDegreesMin : 0} min=\"0\" max=\"100\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Minimum rotation degrees that a device can rotate.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            Maximum rotation\n          </div>\n          <div className=\"three_table_cel\">\n            <input type=\"number\" id=\"rotationDegreesRange/rotationDegreesMax\" defaultValue={this.props.attributes.rotationDegreesRange ? this.props.attributes.rotationDegreesRange.rotationDegreesMax : 0} min=\"0\" max=\"100\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Maximum rotation degrees that a device can rotate.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            <i>commandOnlyRotation</i>\n          </div>\n          <div className=\"three_table_cel\">\n            <Switch onChange={(checked) => {this.updateCheckbox(checked,\"commandOnlyRotation\")}} checked={this.props.attributes.commandOnlyRotation} />\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the device.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            <i>supportsContinuousRotation</i>\n          </div>\n          <div className=\"three_table_cel\">\n            <Switch onChange={(checked) => {this.updateCheckbox(checked,\"supportsContinuousRotation\")}} checked={this.props.attributes.supportsContinuousRotation} />\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if the device supports continuous rotation.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            <i>supportsDegrees</i>\n          </div>\n          <div className=\"three_table_cel\">\n            <Switch onChange={(checked) => {this.updateCheckbox(checked,\"supportsDegrees\")}} checked={this.props.attributes.supportsDegrees} />\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if the device allows rotation by degree.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            <i>supportsPercent</i>\n          </div>\n          <div className=\"three_table_cel\">\n            <Switch onChange={(checked) => {this.updateCheckbox(checked,\"supportsPercent\")}} checked={this.props.attributes.supportsPercent} />\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if device allows rotation by percent.</span>\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default Rotation\n","import React from 'react';\n\nclass Fill extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateLevels = this.updateLevels.bind(this);\n    this.addLevel = this.addLevel.bind(this);\n  }\n\n  updateLevels(event){\n    const id = event.target.id.split('_')\n    const level_id = id[1]\n    //Process the attribute and value depending of the attribute\n    const level_attribute = id[0] === 'lang' ? id[0] : 'level_synonym';\n    const value = id[0] === 'lang' ? event.target.value : event.target.value.split(',')\n    //Update the temporal data and update it\n    var temp_availableFillLevels = this.props.attributes.availableFillLevels\n    temp_availableFillLevels.levels[level_id].level_values[0][level_attribute] = value\n    if (id[0] === 'names') temp_availableFillLevels.levels[level_id].level_name = value[0]\n    this.props.update('attributes/availableFillLevels', temp_availableFillLevels);\n  }\n\n  addLevel(){\n    var temp_availableFillLevels = this.props.attributes.availableFillLevels\n    temp_availableFillLevels.levels.push({\n      \"level_name\": \"\",\n      \"level_values\": [\n        {\n          \"level_synonym\": [\"\"],\n          \"lang\": \"en\"\n        }\n      ]\n    });\n    this.props.update('attributes/availableFillLevels', temp_availableFillLevels);\n  }\n\n  render() {\n\n    const names_box = {\n      width: '150px'\n    }\n\n    const levels = this.props.attributes.availableFillLevels.levels.map((level, i) => {\n      return (\n              <div key={i}>\n                <div className=\"two_table_row\" key={i}>\n                  <div className=\"two_table_cel\">\n                  </div>\n                  <div className=\"two_table_cel\">\n                    <label>\n                      <span>Languaje: </span>\n                      <select name=\"type\" id={\"lang_\" + i} value={level.level_values[0].lang} onChange={this.updateLevels}>\n                        <option value=\"es\">es</option>\n                        <option value=\"en\">en</option>\n                      </select>\n                    </label>\n                    <label>\n                      <span>Fill level name: </span>\n                      <input type=\"text\" id={\"names_\" + i} style={names_box} defaultValue={level.level_values[0].level_synonym} placeholder=\"Fill level name\" onChange={this.updateLevels}/>\n                    </label>\n                  </div>\n                </div>\n              </div>\n              )\n    });\n\n    return (\n      <div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            Add a level\n          </div>\n          <div className=\"three_table_cel\">\n            <button type=\"button\" className=\"add_attribute_button\" onClick={ this.addLevel }>Add</button>\n          </div>\n        </div>\n\n        {levels}\n\n      </div>\n    );\n  }\n}\n\nexport default Fill\n","import React from 'react';\n\nclass ArmDisarm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateSecurityLevel = this.updateSecurityLevel.bind(this);\n    this.addSecurityLevel = this.addSecurityLevel.bind(this);\n  }\n\n  updateSecurityLevel(event){\n    const id = event.target.id.split('_')\n    const level_id = id[1]\n    //Process the attribute and value depending of the attribute\n    const level_attribute = id[0] === 'lang' ? id[0] : 'level_synonym';\n    const value = id[0] === 'lang' ? event.target.value : event.target.value.split(',')\n    //Update the temporal data and update it\n    var temp_availableArmLevels = this.props.attributes.availableArmLevels\n    temp_availableArmLevels.levels[level_id].level_values[0][level_attribute] = value\n    if (id[0] === 'names') temp_availableArmLevels.levels[level_id].level_name = value[0]\n    this.props.update('attributes/availableArmLevels', temp_availableArmLevels);\n  }\n\n  addSecurityLevel(){\n    var temp_availableArmLevels = this.props.attributes.availableArmLevels\n    temp_availableArmLevels.levels.push({\n      \"level_name\": \"\",\n      \"level_values\": [\n        {\n          \"level_synonym\": [\"\"],\n          \"lang\": \"en\"\n        }\n      ]\n    });\n    this.props.update('attributes/availableArmLevels', temp_availableArmLevels);\n  }\n\n  render() {\n\n    const names_box = {\n      marginLeft: '20px',\n      width: '150px'\n    }\n\n    const levels = this.props.attributes.availableArmLevels.levels.map((level, i) => {\n      return (\n              <div key={i}>\n                <div className=\"two_table_row\" key={i}>\n                  <div className=\"two_table_cel\">\n                  </div>\n                  <div className=\"two_table_cel\">\n                    <label>\n                      <span>Languaje: </span>\n                      <select name=\"type\" id={\"lang_\" + i} value={level.level_values[0].lang} onChange={this.updateSecurityLevel}>\n                        <option value=\"es\">es</option>\n                        <option value=\"en\">en</option>\n                      </select>\n                    </label>\n                    <label>\n                      <span>Level name: </span>\n                      <input type=\"text\" id={\"names_\" + i} style={names_box} defaultValue={level.level_values[0].level_synonym} placeholder=\"Security level name\" onChange={this.updateSecurityLevel}/>\n                    </label>\n                  </div>\n                </div>\n              </div>\n              )\n    });\n\n    return (\n      <div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            Add a security level\n          </div>\n          <div className=\"three_table_cel\">\n            <button type=\"button\" className=\"add_attribute_button\" onClick={ this.addSecurityLevel }>Add</button>\n          </div>\n        </div>\n\n        {levels}\n\n      </div>\n    );\n  }\n}\n\nexport default ArmDisarm\n","import React from 'react';\nimport Switch from \"react-switch\";\n\nclass StartStop extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n    this.updateArray = this.updateArray.bind(this);\n  }\n\n\n  updateCheckbox(checked, attribute){\n    this.props.update('attributes/' + attribute,checked);\n  }\n\n  updateArray(event){\n    this.props.update('attributes/' + event.target.id,event.target.value.split(','));\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            <i>pausable</i>\n          </div>\n          <div className=\"three_table_cel\">\n            <Switch onChange={(checked) => {this.updateCheckbox(checked,\"pausable\")}} checked={this.props.attributes.pausable} />\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if the device can be paused.</span>\n          </div>\n        </div>\n\n        <div className=\"two_table_row\">\n          <div className=\"two_table_cel align_right\">\n            Zones\n          </div>\n          <div className=\"two_table_cel\">\n            <input type=\"text\" id=\"availableThermostatModes\" defaultValue={this.props.attributes.availableZones} onChange={this.updateArray} className=\"text_input\"/>\n          </div>\n        </div>\n\n        <div className=\"two_table_row\">\n          <div className=\"two_table_cel\">\n\n          </div>\n          <div className=\"two_table_cel\">\n            <span className=\"attribute_advise\">Supported zones names separeted by commas.</span>\n          </div>\n        </div>\n\n\n      </div>\n    );\n  }\n}\n\nexport default StartStop\n","import React from 'react';\nimport Switch from \"react-switch\";\n\nclass Timer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n    this.update = this.update.bind(this);\n  }\n\n\n  updateCheckbox(checked, attribute){\n    this.props.update('attributes/' + attribute,checked);\n  }\n\n  update(event){\n    this.props.update('attributes/' + event.target.id,event.target.value);\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            <i>commandOnlyTimer</i>\n          </div>\n          <div className=\"three_table_cel\">\n            <Switch onChange={(checked) => {this.updateCheckbox(checked,\"commandOnlyTimer\")}} checked={this.props.attributes.commandOnlyTimer} />\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the state.</span>\n          </div>\n        </div>\n\n        <div className=\"two_table_row\">\n          <div className=\"two_table_cel align_right\">\n            Max time\n          </div>\n          <div className=\"two_table_cel\">\n            <input type=\"text\" id=\"maxTimerLimitSec\" defaultValue={this.props.attributes.maxTimerLimitSec} onChange={this.update} className=\"text_input\"/>\n          </div>\n        </div>\n\n        <div className=\"two_table_row\">\n          <div className=\"two_table_cel\">\n\n          </div>\n          <div className=\"two_table_cel\">\n            <span className=\"attribute_advise\">Indicates the longest timer setting in seconds available on the device.</span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Timer\n","import React from 'react';\nimport Switch from \"react-switch\";\n\nclass TemperatureControl extends React.Component {\n  constructor(props) {\n    super(props);\n    this.update = this.update.bind(this);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n  }\n\n  update(event){\n    this.props.update('attributes/' + event.target.id,event.target.value);\n  }\n\n  updateCheckbox(checked, attribute){\n    this.props.update('attributes/' + attribute,checked);\n  }\n\n  render() {\n\n\n    return (\n      <div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            <i>commandOnlyTemperatureControl</i>\n          </div>\n          <div className=\"three_table_cel\">\n            <Switch onChange={(checked) => {this.updateCheckbox(checked,\"commandOnlyTemperatureControl\")}} checked={this.props.attributes.commandOnlyTemperatureControl} />\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the temperature.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            <i>queryOnlyTemperatureControl</i>\n          </div>\n          <div className=\"three_table_cel\">\n            <Switch onChange={(checked) => {this.updateCheckbox(checked,\"queryOnlyTemperatureControl\")}} checked={this.props.attributes.queryOnlyTemperatureControl} />\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Google shouldn't change the device temperature settings.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            Minimum temperature\n          </div>\n          <div className=\"three_table_cel\">\n            <input type=\"number\" id=\"temperatureRange/minThresholdCelsius\" defaultValue={ this.props.attributes.temperatureRange ? this.props.attributes.temperatureRange.minThresholdCelsius : 0} min=\"0\" max=\"400\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Minimum temperature (in Celsius) supported by the device.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            Maximum temperature\n          </div>\n          <div className=\"three_table_cel\">\n            <input type=\"number\" id=\"temperatureRange/maxThresholdCelsius\" defaultValue={this.props.attributes.temperatureRange ? this.props.attributes.temperatureRange.maxThresholdCelsius : 0} min=\"0\" max=\"400\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Maximum temperature (in Celsius) supported by the device.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            Step\n          </div>\n          <div className=\"three_table_cel\">\n            <input type=\"number\" id=\"temperatureStepCelsius\" defaultValue={this.props.attributes.temperatureStepCelsius} min=\"0\" max=\"400\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Specifies the relative temperature step.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            Units\n          </div>\n          <div className=\"three_table_cel\">\n            <select name=\"type\" id=\"temperatureUnitForUX\" className=\"table_input\" value={this.props.attributes.temperatureUnitForUX} onChange={this.update}>\n              <option value=\"C\">Celsius</option>\n              <option value=\"F\">Fahrenheit</option>\n            </select>\n          </div>\n        </div>\n\n\n\n      </div>\n    );\n  }\n}\n\nexport default TemperatureControl\n","import React from 'react';\n\nclass Cook extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateMode = this.updateMode.bind(this);\n    this.addMode = this.addMode.bind(this);\n    this.updatePreset = this.updatePreset.bind(this);\n    this.addPreset = this.addPreset.bind(this);\n  }\n\n  updateMode(event){\n    const id = event.target.id.split('_')\n    const mode_id = id[1]\n    var temp_supportedCookingModes = this.props.attributes.supportedCookingModes\n\n    if (event.target.value === 'delete'){\n      temp_supportedCookingModes.splice(mode_id, 1)\n    } else if (event.target.value !== 'select') {\n      temp_supportedCookingModes[mode_id] = event.target.value;\n    }\n\n    this.props.update('attributes/supportedCookingModes', temp_supportedCookingModes);\n  }\n\n  addMode(){\n    var temp_supportedCookingModes = this.props.attributes.supportedCookingModes\n    temp_supportedCookingModes.push(\"\");\n    this.props.update('attributes/supportedCookingModes', temp_supportedCookingModes);\n  }\n\n  updatePreset(event){\n    const id = event.target.id.split('_')\n    const preset_id = id[1]\n    var temp_foodPresets = this.props.attributes.foodPresets\n\n    if(id[0] === 'lang'){\n      temp_foodPresets[preset_id].food_synonyms[0].lang = event.target.value;\n    } else if (id[0] === 'names'){\n      temp_foodPresets[preset_id].food_synonyms[0].synonym = event.target.value.split(',');\n      temp_foodPresets[preset_id].food_preset_name = event.target.value.split(',')[0]\n    } else if (id[0] === 'units'){\n      temp_foodPresets[preset_id].supported_units[0] = event.target.value;\n    }\n    this.props.update('attributes/foodPresets', temp_foodPresets);\n  }\n\n  addPreset(){\n    var temp_foodPresets = this.props.attributes.foodPresets\n    temp_foodPresets.push({\n      \"food_preset_name\": \"\",\n      \"supported_units\": [\"\"],\n      \"food_synonyms\": [{\n        \"synonym\": [\"\"],\n        \"language\": \"en\"\n      }]\n    });\n    this.props.update('attributes/foodPresets', temp_foodPresets);\n  }\n\n  render() {\n\n    const names_box = {\n      width: '150px'\n    }\n\n    const modes = this.props.attributes.supportedCookingModes.map((mode, i) => {\n\n      return (\n              <div key={i}>\n                <div className=\"two_table_row\">\n                  <div className=\"two_table_cel\">\n                  </div>\n                  <div className=\"two_table_cel\">\n                    <label>\n                      <span>Mode: </span>\n                      <select name=\"type\" id={\"mode_\" + i} value={mode} onChange={this.updateMode}>\n                        <option value=\"select\">Select a mode</option>\n                        <option value=\"delete\">Delete this mode</option>\n                        <option value=\"UNKNOWN_COOKING_MODE\">UNKNOWN_COOKING_MODE</option>\n                        <option value=\"BAKE\">BAKE</option>\n                        <option value=\"BEAT\">BEAT</option>\n                        <option value=\"BLEND\">BLEND</option>\n                        <option value=\"BOIL\">BOIL</option>\n                        <option value=\"BREW\">BREW</option>\n                        <option value=\"BROIL\">BROIL</option>\n                        <option value=\"CONVECTION_BAKE\">CONVECTION_BAKE</option>\n                        <option value=\"COOK\">COOK</option>\n                        <option value=\"DEFROST\">DEFROST</option>\n                        <option value=\"DEHYDRATE\">DEHYDRATE</option>\n                        <option value=\"FERMENT\">FERMENT</option>\n                        <option value=\"FRY\">FRY</option>\n                        <option value=\"KNEAD\">KNEAD</option>\n                        <option value=\"MICROWAVE\">MICROWAVE</option>\n                        <option value=\"PRESSURE_COOK\">PRESSURE_COOK</option>\n                        <option value=\"PUREE\">PUREE</option>\n                        <option value=\"ROAST\">ROAST</option>\n                        <option value=\"SAUTE\">SAUTE</option>\n                        <option value=\"SLOW_COOK\">SLOW_COOK</option>\n                        <option value=\"SOUS_VIDE\">SOUS_VIDE</option>\n                        <option value=\"STEAM\">STEAM</option>\n                        <option value=\"STEW\">STEW</option>\n                        <option value=\"WARM\">WARM</option>\n                        <option value=\"WHIP\">WHIP</option>\n                      </select>\n                    </label>\n                  </div>\n                </div>\n              </div>\n\n              )\n    });\n\n    const presets = this.props.attributes.foodPresets.map((preset, i) => {\n\n      return (\n              <div key={i}>\n                <div className=\"two_table_row\">\n                  <div className=\"two_table_cel\">\n                  </div>\n                  <div className=\"two_table_cel\">\n                    <label>\n                      <span>Language: </span>\n                      <select name=\"type\" id={\"lang_\" + i} value={preset.food_synonyms[0].lang} onChange={this.updatePreset}>\n                        <option value=\"es\">es</option>\n                        <option value=\"en\">en</option>\n                      </select>\n                    </label>\n                    <label style={names_box}>\n                      <span>Preset name: </span>\n                      <input type=\"text\" id={\"names_\" + i} defaultValue={preset.food_synonyms[0].synonym} placeholder=\"Preset name\" onChange={this.updatePreset}/>\n                    </label>\n                    <label>\n                      <span>Units: </span>\n                      <select name=\"type\" id={\"units_\" + i} value={preset.supported_units[0]} onChange={this.updatePreset}>\n                        <option value=\"NO_UNITS\">No units</option>\n                        <option value=\"UNKNOWN_UNITS\">Unkown</option>\n                        <option value=\"CENTIMETERS\">Centimeters</option>\n                        <option value=\"CUPS\">Cups</option>\n                        <option value=\"DECILITERS\">Deciliters</option>\n                        <option value=\"FEET\">Feet</option>\n                        <option value=\"FLUID_OUNCES\">Fluid ounces</option>\n                        <option value=\"GALLONS\">Gallons</option>\n                        <option value=\"GRAMS\">Grams</option>\n                        <option value=\"INCHES\">Inches</option>\n                        <option value=\"KILOGRAMS\">Kilograms</option>\n                        <option value=\"LITERS\">Liters</option>\n                        <option value=\"METERS\">Meters</option>\n                        <option value=\"MILLIGRAMS\">Miligrams</option>\n                        <option value=\"MILLILITERS\">Mililiters</option>\n                        <option value=\"MILLIMETERS\">Milimeters</option>\n                        <option value=\"OUNCES\">Ounces</option>\n                        <option value=\"PINCH\">Pinch</option>\n                        <option value=\"PINTS\">Pints</option>\n                        <option value=\"PORTION\">Portion</option>\n                        <option value=\"POUNDS\">Pounds</option>\n                        <option value=\"QUARTS\">Quarts</option>\n                        <option value=\"TABLESPOONS\">Tablespoons</option>\n                        <option value=\"TEASPOONS\">Teaspoons</option>\n                      </select>\n                    </label>\n                  </div>\n                </div>\n              </div>\n              )\n    });\n\n    return (\n      <div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            Add a cooking mode\n          </div>\n          <div className=\"three_table_cel\">\n            <button type=\"button\" className=\"add_attribute_button\" onClick={ this.addMode }>Add</button>\n          </div>\n        </div>\n\n        {modes}\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            Add a preset\n          </div>\n          <div className=\"three_table_cel\">\n            <button type=\"button\" className=\"add_attribute_button\" onClick={ this.addPreset }>Add</button>\n          </div>\n        </div>\n\n        {presets}\n\n      </div>\n    );\n  }\n}\n\nexport default Cook\n","import React from 'react';\n\nclass SensorState extends React.Component {\n  constructor(props) {\n    super(props);\n    this.update = this.update.bind(this);\n  }\n\n  update(event){\n    const value = event.target.value;\n    var sensor = {\n      name: value\n    }\n\n    switch (value) {\n      default:\n        sensor['descriptiveCapabilities'] = {\n          availableStates: ['fair','good','healthy','moderate','poor','severe','unhealthy','unhealthy for sensitive groups','very poor','very unhealthy','unknown'],\n        }\n        sensor['numericCapabilities']= { rawValueUnit: \"AQI\" }\n        break;\n      case 'AirQuality':\n        sensor['descriptiveCapabilities'] = {\n          availableStates: ['fair','good','healthy','moderate','poor','severe','unhealthy','unhealthy for sensitive groups','very poor','very unhealthy','unknown'],\n        }\n        sensor['numericCapabilities']= { rawValueUnit: \"AQI\" }\n        break;\n      case 'CarbonDioxideLevel':\n        sensor['descriptiveCapabilities'] = {\n          numericCapabilities: { rawValueUnit: \"PARTS_PER_MILLION\" }\n        }\n        break;\n      case 'CarbonMonoxideLevel':\n        sensor['descriptiveCapabilities'] = {\n          availableStates: ['carbon monoxide detected','high','no carbon monoxide detected','unknown']\n        }\n        sensor['numericCapabilities']= { rawValueUnit: \"PARTS_PER_MILLION\" }\n        break;\n      case 'FilterCleanliness':\n        sensor['descriptiveCapabilities'] = {\n          availableStates: ['clean','dirty','needs replacement','unknown']\n        }\n        break;\n      case 'FilterLifeTime':\n        sensor['descriptiveCapabilities'] = {\n          availableStates: ['good','new','replace soon','replace now','unknown']\n        }\n        sensor['numericCapabilities']= { rawValueUnit: \"PERCENTAGE\" }\n        break;\n      case 'HEPAFilterLifeTime':\n        sensor['numericCapabilities']= { rawValueUnit: \"PERCENTAGE\" }\n        break;\n      case 'Max2FilterLifeTime':\n        sensor['numericCapabilities']= { rawValueUnit: \"PERCENTAGE\" }\n        break;\n      case 'PM2.5':\n        sensor['numericCapabilities']= { rawValueUnit: \"MICROGRAMS_PER_CUBIC_METER\" }\n        break;\n      case 'PM10':\n        sensor['numericCapabilities']= { rawValueUnit: \"MICROGRAMS_PER_CUBIC_METER\" }\n        break;\n      case 'PreFilterLifeTime':\n        sensor['numericCapabilities']= { rawValueUnit: \"PERCENTAGE\" }\n        break;\n      case 'SmokeLevel':\n        sensor['descriptiveCapabilities'] = {\n          availableStates: ['smoke detected','high','no smoke detected','unknown']\n        }\n        sensor['numericCapabilities']= { rawValueUnit: \"PARTS_PER_MILLION\" }\n        break;\n      case 'WaterLeak':\n        sensor['descriptiveCapabilities'] = {\n          availableStates: ['leak','no leak','unknown']\n        }\n        break;\n      case 'RainDetection':\n        sensor['descriptiveCapabilities'] = {\n          availableStates: ['rain detected','no rain detected','unknown']\n        }\n        break;\n      case 'VolatileOrganicCompounds':\n        sensor['numericCapabilities']= { rawValueUnit: \"PARTS_PER_MILLION\" }\n        break;\n    }\n\n    var sensorStatesSupported = []\n    sensorStatesSupported.push(sensor);\n    this.props.update('attributes/' + event.target.id,sensorStatesSupported);\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            Sensor type\n          </div>\n          <div className=\"three_table_cel\">\n            <select name=\"type\" id=\"sensorStatesSupported\" className=\"table_input\" value={this.props.attributes.sensorStatesSupported[0].name} onChange={this.update}>\n              <option value=\"\">Select</option>\n              <option value=\"AirQuality\">Air Quality</option>\n              <option value=\"CarbonDioxideLevel\">Carbon Dioxide Level</option>\n              <option value=\"CarbonMonoxideLevel\">Carbon Monoxide Level</option>\n              <option value=\"FilterCleanliness\">Filter Clean liness</option>\n              <option value=\"FilterLifeTime\">Filter Life Time</option>\n              <option value=\"HEPAFilterLifeTime\">HEPA Filter Life Time</option>\n              <option value=\"Max2FilterLifeTime\">Max2 Filter Life Time</option>\n              <option value=\"PM2.5\">PM2.5</option>\n              <option value=\"PM10\">PM10</option>\n              <option value=\"PreFilterLifeTime\">PreFilter Life Time</option>\n              <option value=\"SmokeLevel\">Smoke Level</option>\n              <option value=\"WaterLeak\">Water Leak</option>\n              <option value=\"RainDetection\">Rain Detection</option>\n              <option value=\"VolatileOrganicCompounds\">Volatile Organic Compounds</option>\n            </select>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\"></span>\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default SensorState\n","import React from 'react';\nimport Switch from \"react-switch\";\nimport Text from '../editor/Text'\nimport Scene from '../editor/traits/Scene'\nimport OnOff from '../editor/traits/OnOff'\nimport Brightness from '../editor/traits/Brightness'\nimport FanSpeed from '../editor/traits/FanSpeed'\nimport ColorSetting from '../editor/traits/ColorSetting'\nimport TemperatureSetting from '../editor/traits/TemperatureSetting'\nimport Toggles from '../editor/traits/Toggles'\nimport Modes from '../editor/traits/Modes'\nimport HumiditySetting from '../editor/traits/HumiditySetting'\nimport OpenClose from '../editor/traits/OpenClose'\nimport Rotation from '../editor/traits/Rotation'\nimport Fill from '../editor/traits/Fill'\nimport ArmDisarm from '../editor/traits/ArmDisarm'\nimport StartStop from '../editor/traits/StartStop'\nimport Timer from '../editor/traits/Timer'\nimport TemperatureControl from '../editor/traits/TemperatureControl'\nimport Cook from '../editor/traits/Cook'\nimport SensorState from '../editor/traits/SensorState'\nimport getCookieValue from '../../functions'\nimport { root, deviceReference } from '../../constants'\n\nimport './Editor.css';\n\nclass Editor extends React.Component {\n  constructor(props) {\n    super(props);\n    const id = window.location.pathname.split('/')[3];\n    var create = false;\n    if (id === \"\") create = true;\n    this.state = {\n      id: id,\n      create: create,\n      device: {\n        attributes: {},\n        deviceInfo: {},\n        id: \"\",\n        name: {\n          defaultNames: [],\n          nicknames: [],\n          name: \"\"\n        },\n        traits: [],\n        type: \"\"\n      },\n      status: {\n        online: true\n      },\n      posible_traits: [],\n      save_status: \"\"\n    }\n    this.updateNames = this.updateNames.bind(this);\n    this.update = this.update.bind(this);\n    this.updateId = this.updateId.bind(this);\n    this.updateType = this.updateType.bind(this);\n    this.updateTraits = this.updateTraits.bind(this);\n    this.save = this.save.bind(this);\n    this.delete = this.delete.bind(this);\n    this.renderAttrinutes = this.renderAttrinutes.bind(this);\n  }\n\n  componentDidMount() {\n    if (!this.state.create){\n      var http = new XMLHttpRequest();\n      http.onload = function (e) {\n        if (http.readyState === 4) {\n          if (http.status === 200) {\n            var data = JSON.parse(http.responseText);\n            this.setState({\n               device: data,\n               posible_traits: deviceReference.devices[data.type].traits\n             });\n          } else {\n            console.error(http.statusText);\n          }\n        }\n      }.bind(this);\n      http.open(\"GET\", root + \"api/devices/get/\" + this.state.id + \"/\");\n      http.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n      http.send();\n    }\n  }\n\n  updateNames(dumy_key, value){\n    var names = value.split(',');\n    var temp_device = this.state.device\n    temp_device.name = {\n      defaultNames: names,\n      nicknames: names,\n      name: names[0]\n    }\n    this.setState({\n      device: temp_device\n    })\n  }\n\n  update(key, value){\n    var temp_device = this.state.device\n    var keys = key.split('/');\n    if (keys.length === 1)\n      temp_device[key] = value\n    else if (keys.length === 2)\n      temp_device[keys[0]][keys[1]] = value\n    else if (keys.length === 3)\n      temp_device[keys[0]][keys[1]][keys[2]] = value\n    this.setState({\n      device: temp_device\n    })\n  }\n\n  updateId(event){\n    this.update('id',event.target.value)\n  }\n\n  updateType(event){\n    this.update('type',event.target.value)\n    this.setState({\n       posible_traits: deviceReference.devices[event.target.value].traits\n     });\n  }\n\n  updateTraits(checked, trait){\n    var temp_device = this.state.device\n    var temp_status = this.state.status\n    if (checked) {\n      if (this.state.device.traits.includes(trait) === false){\n        //Push the trait to the device\n        temp_device.traits.push(trait)\n        //Set the default values\n        var attributes = deviceReference.traits[trait].attributes;\n        Object.keys(attributes).forEach((attribute, i) => {\n          temp_device.attributes[attribute] = attributes[attribute].default\n        });\n        //Set the default status params\n        var params = deviceReference.traits[trait].params;\n        params.forEach((param, i) => {\n          temp_status[param] = deviceReference.params[param].default\n        });\n      }\n    } else {\n      if (this.state.device.traits.includes(trait) === true){\n        temp_device.traits = temp_device.traits.filter(function(value, index, arr){ return value !== trait;});\n      }\n    }\n    this.setState({\n      device: temp_device\n    })\n  }\n\n  save(){\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      if (http.readyState === 4) {\n        if (http.status === 200) {\n          JSON.parse(http.responseText);\n          this.setState({\n             save_status: \"Saved correctly.\"\n           });\n           if (this.state.create) {\n             window.location.href = '/devices'\n           }\n        } else {\n          console.error(http.statusText);\n          this.setState({\n             save_status: \"Error, the changes haven't been saved.\"\n           });\n        }\n        setTimeout(function(){\n          this.setState({\n             save_status: \"\"\n           });\n        }.bind(this), 5000)\n      }\n    }.bind(this);\n    var payload = {\n      \"device\": this.state.device\n    }\n    if (this.state.create){\n      http.open(\"POST\", root + \"api/devices/create/\");\n      payload.status = this.state.status\n    } else {\n      http.open(\"POST\", root + \"api/devices/update/\");\n    }\n    http.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\n    http.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    http.send(JSON.stringify(payload));\n  }\n\n  delete(){\n    if(window.confirm('Do you want to delete the device?')){\n      var http = new XMLHttpRequest();\n      http.onload = function (e) {\n        if (http.readyState === 4) {\n          if (http.status === 200) {\n            window.location.href = \"/devices/\"\n          } else {\n            console.error(http.statusText);\n            this.setState({\n               save_status: \"Error, the device hasn't been deleted.\"\n             });\n          }\n          setTimeout(function(){\n            this.setState({\n               save_status: \"\"\n             });\n          }.bind(this), 5000)\n        }\n      }.bind(this);\n      http.open(\"GET\", root + \"api/devices/delete/\" + this.state.device.id + \"/\");\n      http.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n      http.send();\n    } else {\n      this.setState({\n         save_status: \"Ok. The device is save.\"\n       });\n    }\n  }\n\n  renderAttrinutes(trait){\n    if (this.state.device.traits.includes(trait)){\n      if (trait === 'action.devices.traits.Scene')\n        return <Scene sceneReversible={this.state.device.attributes.sceneReversible} update={this.update}/>\n      else if (trait === 'action.devices.traits.OnOff')\n        return <OnOff attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.Brightness')\n        return <Brightness commandOnlyBrightness={this.state.device.attributes.commandOnlyBrightness} update={this.update}/>\n      else if (trait === 'action.devices.traits.ColorSetting')\n        return <ColorSetting attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.FanSpeed')\n        return <FanSpeed attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.TemperatureSetting')\n        return <TemperatureSetting attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.Toggles')\n        return <Toggles attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.Modes')\n        return <Modes attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.HumiditySetting')\n        return <HumiditySetting attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.OpenClose')\n        return <OpenClose attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.Rotation')\n        return <Rotation attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.Fill')\n        return <Fill attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.ArmDisarm')\n        return <ArmDisarm attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.StartStop')\n        return <StartStop attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.Timer')\n        return <Timer attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.TemperatureControl')\n        return <TemperatureControl attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.Cook')\n        return <Cook attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.SensorState')\n        return <SensorState attributes={this.state.device.attributes} update={this.update}/>\n    }\n  }\n\n  render() {\n\n    const deleteButton = {\n      backgroundColor: 'red'\n    }\n\n    const deleteButtonDisabled = {\n      backgroundColor: 'red',\n      opacity: '0.2'\n    }\n\n    const types = Object.keys(deviceReference.devices).map((type) => {\n      return <option key={type} value={type}>{deviceReference.devices[type].name}</option>\n    })\n\n    const nicknames = this.state.device.name.nicknames.map((name) => {\n      return name\n    });\n\n    const traits = this.state.posible_traits.map((trait) =>\n      <div key={trait}>\n        <hr className=\"separator\"/>\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n            <b>{deviceReference.traits[trait].name}</b>\n          </div>\n          <div className=\"three_table_cel\">\n            <Switch onChange={(checked) => {this.updateTraits(checked,trait)}} checked={this.state.device.traits.includes(trait)} />\n          </div>\n          <div className=\"three_table_cel\">\n            Read Google's <a href={\"https://developers.google.com/assistant/smarthome/traits/\" + trait.split('.')[3].toLowerCase()} target=\"blanck\">documentation</a>\n          </div>\n        </div>\n        {this.renderAttrinutes(trait)}\n      </div>\n    );\n\n    return (\n      <div>\n\n        <div className=\"page_block_container\">\n          <h2>Global settings</h2>\n          <div className=\"advise\">\n            <span>General settings of the device.</span>\n            <hr/>\n          </div>\n          <div className=\"page_block_content_container\">\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">\n                Device ID*\n              </div>\n              <div className=\"two_table_cel\">\n                <input type=\"text\" className=\"two_input\" id=\"id\" defaultValue={this.state.device.id} onChange={this.updateId} disabled={ this.state.create ? false : true }/>\n              </div>\n            </div>\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">\n                Device Type*\n              </div>\n              <div className=\"two_table_cel\">\n                <select name=\"type\" className=\"two_input\" id=\"type\" value={this.state.device.type} onChange={this.updateType} disabled={ this.state.create ? false : true }>\n                  <option value=\"default\">Select a device</option>\n                  {types}\n                </select>\n              </div>\n            </div>\n            <Text name=\"Nick names*\" data=\"nicknames\" value={nicknames} update={this.updateNames}/>\n            <Text name=\"Hardware version\" data=\"deviceInfo/hwVersion\" value={this.state.device.deviceInfo ? this.state.device.deviceInfo.hwVersion : ''} update={this.update}/>\n            <Text name=\"Software version\" data=\"deviceInfo/swVersion\" value={this.state.device.deviceInfo ? this.state.device.deviceInfo.swVersion : ''} update={this.update}/>\n            <Text name=\"Manufacturer\" data=\"deviceInfo/manufacturer\" value={this.state.device.deviceInfo ? this.state.device.deviceInfo.manufacturer : ''} update={this.update}/>\n            <Text name=\"Model\" data=\"deviceInfo/model\" value={this.state.device.deviceInfo ? this.state.device.deviceInfo.model : ''} update={this.update}/>\n            <div className=\"advise\">\n              <span>Nick names must be separeted by <i>,</i> commas.</span><br/>\n              <span>* data is required.</span>\n            </div>\n            <hr/>\n            <h2>Traits</h2>\n            <div className=\"advise\">\n              <span>The traits define what the device can do.</span>\n            </div>\n            {traits}\n            <hr/>\n            <div className=\"two_table_cel\">\n              <button type=\"button\" style={ this.state.create ? deleteButtonDisabled : deleteButton } onClick={ this.delete } disabled={ this.state.create ? true : false}>Delete</button>\n              <button type=\"button\" onClick={ this.save }>Save</button>\n              <span>{this.state.save_status}</span>\n            </div>\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default Editor\n","import React from 'react';\nimport ReactJson from 'react-json-view'\nimport getCookieValue from '../../functions'\nimport { root } from '../../constants'\n\nclass Editor extends React.Component {\n  constructor(props) {\n    super(props);\n    const id = window.location.pathname.split('/')[3];\n    this.state = {\n      id: id,\n      device: {\n        attributes: {},\n        deviceInfo: {},\n        id: \"\",\n        name: {\n          defaultnames: [],\n          nicknames: [],\n          name: \"\"\n        },\n        traits: [],\n        type: \"\"\n      },\n      status: {\n        online: true\n      }\n    }\n  }\n\n  componentDidMount() {\n    var dev = new XMLHttpRequest();\n    dev.onload = function (e) {\n      if (dev.readyState === 4) {\n        if (dev.status === 200) {\n          var data = JSON.parse(dev.responseText);\n          this.setState({\n             device: data\n           });\n        } else {\n          console.error(dev.statusText);\n        }\n      }\n    }.bind(this);\n    dev.open(\"GET\", root + \"api/devices/get/\" + this.state.id + \"/\");\n    dev.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    dev.send();\n\n    var sta = new XMLHttpRequest();\n    sta.onload = function (e) {\n      if (sta.readyState === 4) {\n        if (sta.status === 200) {\n          var data = JSON.parse(sta.responseText);\n          this.setState({\n             status: data\n           });\n        } else {\n          console.error(sta.statusText);\n        }\n      }\n    }.bind(this);\n    sta.open(\"GET\", root + \"api/status/get/\" + this.state.id + \"/\");\n    sta.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    sta.send();\n  }\n\n\n\n  render() {\n\n    const json_viewer = {\n      textAlign: 'left',\n    }\n\n    return (\n      <div>\n\n        <div className=\"page_block_container\">\n          <h2>Device definition</h2>\n          <div className=\"advise\">\n            <span>General settings of the device.</span>\n            <hr/>\n          </div>\n          <div style={json_viewer}>\n            <ReactJson src={this.state.device} />\n          </div>\n        </div>\n\n        <div className=\"page_block_container\">\n          <h2>Device status</h2>\n          <div className=\"advise\">\n            <span>Status of the device.</span>\n            <hr/>\n          </div>\n          <div style={json_viewer}>\n            <ReactJson src={this.state.status} />\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default Editor\n","import React from 'react';\nimport ReactJson from 'react-json-view'\nimport getCookieValue from '../../functions'\nimport { root, deviceReference } from '../../constants'\n\nimport './Connecting.css';\n\nclass Connecting extends React.Component {\n  constructor(props) {\n    super(props);\n    const id = window.location.pathname.split('/')[3]\n    this.state = {\n      id: id,\n      traits: [],\n      params: [],\n      commands: []\n    }\n  }\n\n  componentDidMount() {\n    var dev = new XMLHttpRequest();\n    dev.onload = function (e) {\n      if (dev.readyState === 4) {\n        if (dev.status === 200) {\n          const data = JSON.parse(dev.responseText);\n          const traits = data.traits;\n          var commands = [];\n          var params = []\n          traits.forEach((trait) => {\n            params = params.concat(deviceReference.traits[trait].params);\n            commands = commands.concat(deviceReference.traits[trait].commands);\n          });\n          this.setState({\n             traits: traits,\n             params: params,\n             commands: commands\n           });\n        } else {\n          console.error(dev.statusText)\n        }\n      }\n    }.bind(this);\n    dev.open(\"GET\", root + \"api/devices/get/\" + this.state.id + \"/\");\n    dev.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    dev.send();\n  }\n\n  render() {\n\n    const params = this.state.params.map((param, i) => {\n      var type = deviceReference.params[param].type\n      if (type === 'list')\n        type = 'string'\n\n      var topic = 'None - Controlled only by the device'\n      if (deviceReference.params[param].commanded)\n        topic = 'device/' + this.state.id + '/' + param\n\n      return (\n        <div key={i} className=\"param_table_row\">\n          <div className=\"param_table_cel\">{param}</div>\n          <div className=\"param_table_cel\">{topic}</div>\n          <div className=\"param_table_cel\">{type}</div>\n        </div>\n      )\n    })\n\n    const commands = this.state.commands.map((command, i) => {\n      return (\n        <div key={i} className=\"command_table_row\">\n          <div className=\"command_table_cel\">{command.command}</div>\n          <div className=\"command_table_cel\">{'device/' + this.state.id + '/command'}</div>\n          <div className=\"command_table_cel\">{command.description}</div>\n        </div>\n      )\n    })\n\n    var example = {\"id\":\"light001\",\"param\":\"brightness\",\"value\":\"80\",\"intent\":\"execute\"}\n    var advise = {\n      textAlign: 'left'\n    }\n\n    return (\n      <div>\n\n        <div className=\"page_block_container\">\n          <h2>Params</h2>\n          <div className=\"advise\">\n            <p>Params are data interchanged between Google and the device and stored in Homeware database. </p>\n            <p>If the param has got a notification topic, Google Home can control it. A notification will be sent in this MQTT topic when Google change a param.</p>\n            <p>If the param hasn't got a notification topic, the device should update the param value when necessary.</p>\n            <hr/>\n          </div>\n          <div className=\"param_table_row param_table_header\">\n            <div className=\"param_table_cel\"><b>Param</b></div>\n            <div className=\"param_table_cel\"><b>Notifications topic</b></div>\n            <div className=\"param_table_cel\"><b>Type</b></div>\n          </div>\n          {params}\n          <div className=\"advise\" style={advise}>\n            <hr/>\n            <p>The device can change the value of any param sending an execute request to device/control topic as follow</p>\n            <ReactJson src={example}/>\n          </div>\n        </div>\n\n        <div className=\"page_block_container\">\n          <h2>Commands</h2>\n          <div className=\"advise\">\n            <p>Commands are directs orders from Google to the device. Commands are not stored in Homeware's database.</p>\n            <hr/>\n          </div>\n          <div className=\"command_table_row command_table_header\">\n            <div className=\"command_table_cel\"><b>Command</b></div>\n            <div className=\"command_table_cel\"><b>Notifications topic</b></div>\n            <div className=\"command_table_cel\"><b>Description</b></div>\n          </div>\n          {commands}\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default Connecting\n","import React from 'react';\nimport getCookieValue from '../../functions'\nimport { root } from '../../constants'\n\nimport './Tasks.css';\n\nclass Tasks extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      devices: [],\n      tasks: []\n    }\n    this.loadData = this.loadData.bind(this);\n    this.openManager = this.openManager.bind(this);\n    this.newTask = this.newTask.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  loadData(){\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      if (http.readyState === 4) {\n        if (http.status === 200) {\n          var data = JSON.parse(http.responseText);\n          this.setState({\n             devices: data.devices,\n             tasks: data.tasks\n           });\n        } else {\n          console.error(http.statusText);\n        }\n      }\n    }.bind(this);\n    http.open(\"GET\", root + \"api/global/get/\");\n    http.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    http.send();\n  }\n\n  openManager(event){\n    window.location.href = '/tasks/manager/' +  event.target.id.split('_')[1]\n  }\n\n  newTask(){\n    window.location.href = '/tasks/manager/'\n  }\n\n  render() {\n\n    const tasks = this.state.tasks.map((task, i) => {\n      return(\n        <div key={i} className=\"task_card\">\n          <h2 className=\"task_card_title\" id={ 'task_' + i } onClick={ this.openManager }>{ task.title }</h2>\n          <hr className=\"task_card_divider\"/>\n          <p>{ task.description }</p>\n        </div>\n      )\n    });\n\n    return (\n      <div>\n        <div className=\"page_title_container\">\n          <h2>Tasks</h2>\n        </div>\n\n        <div className=\"page_cards_container\">\n          {tasks}\n        </div>\n\n        <div className=\"page_buttons_containter\">\n          <button type=\"button\" onClick={ this.newTask }>New</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Tasks\n","import React from 'react';\nimport Triggers from './Triggers'\n\nimport '../pages/Manager.css';\n\nclass Logic extends React.Component {\n  constructor(props) {\n    super(props);\n    this.delete = this.delete.bind(this);\n    this.addOr = this.addOr.bind(this);\n    this.addAnd = this.addAnd.bind(this);\n    this.openTriggerAssistant = this.openTriggerAssistant.bind(this);\n  }\n\n  delete() {\n    this.props.delete(this.props.id);\n  }\n\n  addOr() {\n    this.props.addTriggerLogic('or',this.props.id)\n  }\n\n  addAnd() {\n    this.props.addTriggerLogic('and',this.props.id)\n  }\n\n  openTriggerAssistant() {\n    this.props.openTriggerAssistant(this.props.id)\n  }\n\n  render() {\n\n    const num_operations = this.props.triggers[this.props.id].operation.length-1;\n    const operations = this.props.triggers[this.props.id].operation.map((op, i) => {\n      return (\n        <div key={op + i }>\n          <Triggers id={op} triggers={this.props.triggers} devices={this.props.devices} delete={this.props.delete} addTriggerLogic={this.props.addTriggerLogic}  openTriggerAssistant={this.props.openTriggerAssistant}/>\n          {i < num_operations ? <h2 className=\"trigger_logic_title\">{this.props.triggers[this.props.id].type}</h2> : '' }\n        </div>\n      );\n    });\n\n    return (\n      <div className=\"trigger_logic_container\">\n          {operations}\n          <div className=\"trigger_logic_buttons_container\">\n            <button type=\"button\" className=\"trigger_logic_button\" onClick={ this.addOr }>Or</button>\n            <button type=\"button\" className=\"trigger_logic_button\" onClick={ this.addAnd }>And</button>\n            <button type=\"button\" className=\"trigger_logic_button\" onClick={ this.openTriggerAssistant }>Trigger</button>\n            <button type=\"button\" className=\"trigger_logic_button red_button\" onClick={ this.delete }>Delete</button>\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default Logic\n","import React from 'react';\nimport { deviceReference } from '../../constants'\n\nimport '../pages/Manager.css';\n\nclass Trigger extends React.Component {\n  constructor(props) {\n    super(props);\n    this.delete = this.delete.bind(this);\n    this.renderTriggerText = this.renderTriggerText.bind(this);\n  }\n\n  delete() {\n    this.props.delete(this.props.id);\n  }\n\n  renderTriggerText() {\n    const week = ['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday']\n    const device_triggers = ['d2b','d2i','d2l','d2s']\n\n    const type = this.props.triggers[this.props.id].type;\n    const operation = this.props.triggers[this.props.id].operation.split(':');\n    if (device_triggers.includes(type)) {\n      return this.props.devices[operation[0]] + ' (' + (deviceReference.params[operation[1]] ? deviceReference.params[operation[1]].name : operation[1]) + ') ' +  operation[2] + ' ' +  operation[3];\n    } else if (type === 'd2d') {\n      return this.props.devices[operation[0]] + ' (' + (deviceReference.params[operation[1]] ? deviceReference.params[operation[1]].name : operation[1]) + ') ' +  operation[2] + ' ' +  this.props.devices[operation[3]] + ' (' + (deviceReference.params[operation[4]].name ? deviceReference.params[operation[4]].name : operation[4]) + ') ';\n    } else if (type === 'd2c') {\n      return this.props.devices[operation[0]] + ' (' + (deviceReference.params[operation[1]] ? deviceReference.params[operation[1]].name : operation[1]) + ') ' +  operation[2] + ' ' +  operation[3];\n    } else if (type === 'time') {\n\n      var days = '';\n      for( var i = 0; i < operation[2].length; i++){\n        days += week[operation[2][i]];\n        if (i !== operation[2].length - 1)\n          days += ', ';\n      }\n      return operation[0] + ':'  + operation[1] + ' on ' + days\n\n    } else {\n      return this.props.triggers[this.props.id].operation\n    }\n  }\n\n  render() {\n\n    return (\n      <div className=\"trigger_device_container\">\n        <span>{this.renderTriggerText()}</span>\n        <img src=\"/global/bin_icon.png\" alt=\"Delete icon\" className=\"trigger_delete\" onClick={this.delete}/>\n      </div>\n    );\n  }\n}\n\nexport default Trigger\n","import React from 'react';\nimport Logic from './Logic'\nimport Trigger from './Trigger'\n\nclass Triggers extends React.Component {\n  constructor(props) {\n    super(props);\n    this.addOr = this.addOr.bind(this);\n    this.addAnd = this.addAnd.bind(this);\n    this.openTriggerAssistant = this.openTriggerAssistant.bind(this);\n  }\n\n  addOr() {\n    this.props.addTriggerLogic('or','triggers')\n  }\n\n  addAnd() {\n    this.props.addTriggerLogic('and','triggers')\n  }\n\n  openTriggerAssistant() {\n    this.props.openTriggerAssistant('triggers')\n  }\n\n  render() {\n\n    if (this.props.triggers.trigger) {\n      var operation = this.props.triggers[this.props.id]\n      const device_triggers = ['d2b','d2d','d2i','d2l','time','d2c']\n\n      if (operation.type === 'or'){\n        return <Logic id={this.props.id} triggers={this.props.triggers} devices={this.props.devices} delete={this.props.delete} addTriggerLogic={this.props.addTriggerLogic} openTriggerAssistant={this.props.openTriggerAssistant}/>\n      } else if (operation.type === 'and'){\n        return <Logic id={this.props.id} triggers={this.props.triggers} devices={this.props.devices} delete={this.props.delete} addTriggerLogic={this.props.addTriggerLogic} openTriggerAssistant={this.props.openTriggerAssistant}/>\n      } else if (device_triggers.includes(operation.type)){\n        return <Trigger id={this.props.id} triggers={this.props.triggers} devices={this.props.devices} delete={this.props.delete}/>\n      }\n    } else {\n      return (\n        <div>\n        <button type=\"button\" className=\"trigger_logic_button\" onClick={ this.addOr }>Or</button>\n        <button type=\"button\" className=\"trigger_logic_button\" onClick={ this.addAnd }>And</button>\n        <button type=\"button\" className=\"trigger_logic_button\" onClick={ this.openTriggerAssistant }>Trigger</button>\n        </div>\n      );\n    }\n\n  }\n}\n\nexport default Triggers\n","import React from 'react';\n\nimport '../pages/Manager.css';\n\nclass Assistant extends React.Component {\n  constructor(props) {\n    super(props);\n    this.addTriggerOperation = this.addTriggerOperation.bind(this);\n  }\n\n  addTriggerOperation(){\n    const hour = document.getElementById('hour').value;\n    const minute = document.getElementById('minute').value;\n    var week = '';\n\n    if (document.getElementById('monday').checked)\n      week += '1'\n    if (document.getElementById('tuesday').checked)\n      week += '2'\n    if (document.getElementById('wednesday').checked)\n      week += '3'\n    if (document.getElementById('thursday').checked)\n      week += '4'\n    if (document.getElementById('friday').checked)\n      week += '5'\n    if (document.getElementById('saturday').checked)\n      week += '6'\n    if (document.getElementById('sunday').checked)\n      week += '0'\n\n    const value = hour + ':' + minute + ':' + week;\n    this.props.addTriggerOperation('time',value);\n    this.props.closeTriggerAssistant();\n  }\n\n  render() {\n\n    return (\n      <div className=\"trigger_assistant_container\">\n        <h2 className=\"trigger_assistant_title\">Triggered by time</h2>\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n            Hour*\n          </div>\n          <div className=\"three_table_cel\">\n            <input type=\"number\" className=\"\" id=\"hour\" min=\"0\" max=\"23\"/>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"advise\">24h format</span>\n          </div>\n        </div>\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n            Minute*\n          </div>\n          <div className=\"three_table_cel\">\n            <input type=\"number\" className=\"\" id=\"minute\" min=\"0\" max=\"59\"/>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"advise\"></span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n            Week*\n          </div>\n          <div className=\"three_table_cel\">\n            Sunday\n          </div>\n          <div className=\"three_table_cel\">\n            <input type=\"checkbox\" id=\"sunday\"/>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n          </div>\n          <div className=\"three_table_cel\">\n            Monday\n          </div>\n          <div className=\"three_table_cel\">\n            <input type=\"checkbox\" id=\"monday\"/>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n          </div>\n          <div className=\"three_table_cel\">\n            Tuesday\n          </div>\n          <div className=\"three_table_cel\">\n            <input type=\"checkbox\" id=\"tuesday\"/>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n          </div>\n          <div className=\"three_table_cel\">\n            Wednesday\n          </div>\n          <div className=\"three_table_cel\">\n            <input type=\"checkbox\" id=\"wednesday\"/>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n          </div>\n          <div className=\"three_table_cel\">\n            Thursday\n          </div>\n          <div className=\"three_table_cel\">\n            <input type=\"checkbox\" id=\"thursday\"/>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n          </div>\n          <div className=\"three_table_cel\">\n            Friday\n          </div>\n          <div className=\"three_table_cel\">\n            <input type=\"checkbox\" id=\"friday\"/>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n          </div>\n          <div className=\"three_table_cel\">\n            Saturday\n          </div>\n          <div className=\"three_table_cel\">\n            <input type=\"checkbox\" id=\"saturday\"/>\n          </div>\n        </div>\n\n\n\n\n\n        <div className=\"trigger_assisstant_buttons_container\">\n          <button type=\"button\" className=\"trigger_assistant_button\" onClick={ this.addTriggerOperation }>Save</button>\n          <button type=\"button\" className=\"trigger_assistant_button red_button\" onClick={ this.props.closeTriggerAssistant }>Cancel</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Assistant\n","import React from 'react';\nimport { deviceReference } from '../../constants'\n\nimport '../pages/Manager.css';\n\nclass Device extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      device: \"\"\n    }\n    this.updateDevice = this.updateDevice.bind(this);\n    this.updateParam = this.updateParam.bind(this);\n    this.addTriggerOperation = this.addTriggerOperation.bind(this);\n    this.typeConversion = this.typeConversion.bind(this);\n  }\n\n  updateDevice(event) {\n    this.setState({\n      device: event.target.value\n    });\n  }\n\n  updateParam(event) {\n    this.setState({\n      param: event.target.value\n    });\n  }\n\n  addTriggerOperation(){\n    const device = document.getElementById('device').value;\n    const param = document.getElementById('param').value;\n    const comparator = document.getElementById('comparator').value;\n    const value = document.getElementById('value').value;\n\n\n    const operation = device + ':' + param + ':' + comparator + ':' + value;\n    this.props.addTriggerOperation(this.typeConversion(deviceReference.params[this.state.param].type),operation);\n    this.props.closeTriggerAssistant();\n  }\n\n  typeConversion(origen) {\n    const type = {\n      int: 'd2i',\n      list: 'd2l',\n      bool: 'd2b',\n      string: 'd2s',\n      color: 'd2c'\n    }\n    return type[origen]\n  }\n\n  render() {\n\n    const devices = Object.keys(this.props.devices).map((device) => {\n      return <option key={device} value={device}>{this.props.devices[device]}</option>\n    })\n\n    const params = this.state.device === \"\" ? '' : Object.keys(this.props.status[this.state.device]).map((param) => {\n      return <option key={param} value={param}>{ deviceReference.params[param] ? deviceReference.params[param].name : param + ' - Not supported yet' }</option>\n    })\n\n    var value = '';\n    if (deviceReference.params[this.state.param]){\n      const type = this.typeConversion(deviceReference.params[this.state.param].type);\n      if(type === 'd2i'){\n        value = (\n          <div className=\"two_table_row\">\n            <div className=\"two_table_cel\">\n              Value*\n            </div>\n            <div className=\"two_table_cel\">\n              <input type=\"number\" className=\"\" id=\"value\"/>\n            </div>\n          </div>\n        )\n      } else if(type === 'd2s'){\n        value = (\n          <div className=\"two_table_row\">\n            <div className=\"two_table_cel\">\n              Value*\n            </div>\n            <div className=\"two_table_cel\">\n              <input type=\"text\" className=\"\" id=\"value\"/>\n            </div>\n          </div>\n        )\n      } else if(type === 'd2b' || type === 'd2l'){\n\n        const options = deviceReference.params[this.state.param].select.map((option) => {\n          return <option key={option} value={option}>{option}</option>\n        })\n\n        value = (\n          <div className=\"two_table_row\">\n            <div className=\"two_table_cel\">\n              Value*\n            </div>\n            <div className=\"two_table_cel\">\n              <select name=\"type\" className=\"two_input\" id=\"value\">\n                {options}\n              </select>\n            </div>\n          </div>\n        )\n      }\n\n    }\n\n    return (\n      <div className=\"trigger_assistant_container\">\n        <h2 className=\"trigger_assistant_title\">Triggered by a device</h2>\n\n        <div className=\"two_table_row\">\n          <div className=\"two_table_cel\">\n            Device*\n          </div>\n          <div className=\"two_table_cel\">\n            <select name=\"type\" className=\"two_input\" id=\"device\" onChange={this.updateDevice}>\n              <option value=\"\">Select a device</option>\n              {devices}\n            </select>\n          </div>\n        </div>\n        <div className=\"two_table_row\">\n          <div className=\"two_table_cel\">\n            Param*\n          </div>\n          <div className=\"two_table_cel\">\n            <select name=\"type\" className=\"two_input\" id=\"param\" onChange={this.updateParam}>\n              <option value=\"\">Select a param</option>\n              {params}\n            </select>\n          </div>\n        </div>\n        <div className=\"two_table_row\">\n          <div className=\"two_table_cel\">\n            Comparator*\n          </div>\n          <div className=\"two_table_cel\">\n            <select name=\"type\" className=\"two_input\" id=\"comparator\">\n              <option>=</option>\n              <option>&lt;</option>\n              <option>&gt;</option>\n              <option>&lt;=</option>\n              <option>&gt;=</option>\n            </select>\n          </div>\n        </div>\n\n        {value}\n\n        <div className=\"trigger_assisstant_buttons_container\">\n          <button type=\"button\" className=\"trigger_assistant_button\" onClick={ this.addTriggerOperation }>Save</button>\n          <button type=\"button\" className=\"trigger_assistant_button red_button\" onClick={ this.props.closeTriggerAssistant }>Cancel</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Device\n","import React from 'react';\nimport { deviceReference } from '../../constants'\n\nimport '../pages/Manager.css';\n\nclass DeviceToDevice extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      device_a: \"\",\n      device_b: \"\"\n    }\n    this.updateDependencies = this.updateDependencies.bind(this);\n    this.addTriggerOperation = this.addTriggerOperation.bind(this);\n  }\n\n  updateDependencies(event) {\n    var state = this.state;\n    state[event.target.id] = event.target.value;\n    this.setState(state);\n  }\n\n\n  addTriggerOperation(){\n    const device_a = document.getElementById('device_a').value;\n    const param_a = document.getElementById('param_a').value;\n    const comparator = document.getElementById('comparator').value;\n    const device_b = document.getElementById('device_b').value;\n    const param_b = document.getElementById('param_b').value;\n\n    const operation = device_a + ':' + param_a + ':' + comparator + ':' + device_b + ':' + param_b;\n    this.props.addTriggerOperation('d2d',operation);\n    this.props.closeTriggerAssistant();\n  }\n\n  render() {\n\n    const devices = Object.keys(this.props.devices).map((device) => {\n      return <option key={device} value={device}>{this.props.devices[device]}</option>\n    })\n\n    const params_a = this.state.device_a === \"\" ? '' : Object.keys(this.props.status[this.state.device_a]).map((param) => {\n      return <option key={param} value={param}>{ deviceReference.params[param] ? deviceReference.params[param].name : param + ' - Not supported yet' }</option>\n    })\n\n    const params_b = this.state.device_b === \"\" ? '' : Object.keys(this.props.status[this.state.device_b]).map((param) => {\n      return <option key={param} value={param}>{ deviceReference.params[param] ? deviceReference.params[param].name : param + ' - Not supported yet' }</option>\n    })\n\n    return (\n      <div className=\"trigger_assistant_container\">\n        <h2 className=\"trigger_assistant_title\">Compare two devices</h2>\n\n        <div className=\"two_table_row\">\n          <div className=\"two_table_cel\">\n            Device A*\n          </div>\n          <div className=\"two_table_cel\">\n            <select name=\"type\" className=\"two_input\" id=\"device_a\" onChange={this.updateDependencies}>\n              <option value=\"\">Select a device</option>\n              {devices}\n            </select>\n          </div>\n        </div>\n        <div className=\"two_table_row\">\n          <div className=\"two_table_cel\">\n            Param A*\n          </div>\n          <div className=\"two_table_cel\">\n            <select name=\"type\" className=\"two_input\" id=\"param_a\" onChange={this.updateDependencies}>\n              <option value=\"\">Select a param</option>\n              {params_a}\n            </select>\n          </div>\n        </div>\n\n        <div className=\"two_table_row\">\n          <div className=\"two_table_cel\">\n            Comparator*\n          </div>\n          <div className=\"two_table_cel\">\n            <select name=\"type\" className=\"two_input\" id=\"comparator\">\n              <option>=</option>\n              <option>&lt;</option>\n              <option>&gt;</option>\n              <option>&lt;=</option>\n              <option>&gt;=</option>\n            </select>\n          </div>\n        </div>\n\n        <div className=\"two_table_row\">\n          <div className=\"two_table_cel\">\n            Device B*\n          </div>\n          <div className=\"two_table_cel\">\n            <select name=\"type\" className=\"two_input\" id=\"device_b\" onChange={this.updateDependencies}>\n              <option value=\"\">Select a device</option>\n              {devices}\n            </select>\n          </div>\n        </div>\n        <div className=\"two_table_row\">\n          <div className=\"two_table_cel\">\n            Param B*\n          </div>\n          <div className=\"two_table_cel\">\n            <select name=\"type\" className=\"two_input\" id=\"param_b\" onChange={this.updateDependencies}>\n              <option value=\"\">Select a param</option>\n              {params_b}\n            </select>\n          </div>\n        </div>\n\n        <div className=\"trigger_assisstant_buttons_container\">\n          <button type=\"button\" className=\"trigger_assistant_button\" onClick={ this.addTriggerOperation }>Save</button>\n          <button type=\"button\" className=\"trigger_assistant_button red_button\" onClick={ this.props.closeTriggerAssistant }>Cancel</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default DeviceToDevice\n","import React from 'react';\nimport Time from './Time'\nimport Device from './Device'\nimport DeviceToDevice from './DeviceToDevice'\n\nimport '../pages/Manager.css';\n\nclass Assistant extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      type: ''\n    }\n    this.timeTigger = this.timeTigger.bind(this);\n    this.deiceTrigger = this.deiceTrigger.bind(this);\n    this.deviceToDeviceTrigger = this.deviceToDeviceTrigger.bind(this);\n  }\n\n  timeTigger() {\n    this.setState({\n      type: 'time'\n    });\n  }\n\n  deiceTrigger() {\n    this.setState({\n      type: 'device'\n    });\n  }\n\n  deviceToDeviceTrigger() {\n    this.setState({\n      type: 'device2device'\n    });\n  }\n\n  render() {\n\n    if (this.state.type === '')\n      return (\n        <div className=\"trigger_assistant_container\">\n          <h2 className=\"trigger_assistant_title\">Add a new trigger</h2>\n          <div className=\"trigger_assisstant_buttons_container\">\n            <button type=\"button\" className=\"trigger_assistant_button\" onClick={ this.timeTigger }>Time</button>\n            <button type=\"button\" className=\"trigger_assistant_button\" onClick={ this.deiceTrigger }>Device</button>\n            <button type=\"button\" className=\"trigger_assistant_button\" onClick={ this.deviceToDeviceTrigger }>Device to device</button>\n            <button type=\"button\" className=\"trigger_assistant_button red_button\" onClick={ this.props.closeTriggerAssistant }>Cancel</button>\n          </div>\n        </div>\n      );\n    else if (this.state.type === 'time')\n      return <Time closeTriggerAssistant={this.props.closeTriggerAssistant} addTriggerOperation={this.props.addTriggerOperation}/>\n    else if (this.state.type === 'device')\n      return <Device devices={this.props.devices} status={this.props.status} closeTriggerAssistant={this.props.closeTriggerAssistant} addTriggerOperation={this.props.addTriggerOperation}/>\n    else if (this.state.type === 'device2device')\n      return <DeviceToDevice devices={this.props.devices} status={this.props.status} closeTriggerAssistant={this.props.closeTriggerAssistant} addTriggerOperation={this.props.addTriggerOperation}/>\n  }\n}\n\nexport default Assistant\n","import React from 'react';\nimport { deviceReference } from '../../constants'\n\nimport '../pages/Manager.css';\n\nclass Target extends React.Component {\n  constructor(props) {\n    super(props);\n    this.delete = this.delete.bind(this);\n  }\n\n  delete() {\n    this.props.delete(this.props.id);\n  }\n\n  render() {\n\n    const container = {\n        marginBottom: '10px'\n    }\n\n    return (\n      <div className=\"trigger_device_container\" style={container}>\n        <span>{ (this.props.devices[this.props.target.device] ? this.props.devices[this.props.target.device] : this.props.target.device)\n        + ' (' + (deviceReference.params[this.props.target.param] ? deviceReference.params[this.props.target.param].name : this.props.target.param)\n        + ') = ' + this.props.target.value}</span>\n        <img src=\"/global/bin_icon.png\" alt=\"Delete icon\" className=\"trigger_delete\" onClick={this.delete}/>\n      </div>\n    );\n  }\n}\n\nexport default Target\n","import React from 'react';\nimport { deviceReference } from '../../constants'\n\nimport '../pages/Manager.css';\n\nclass Device extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      device: \"\"\n    }\n    this.updateDevice = this.updateDevice.bind(this);\n    this.updateParam = this.updateParam.bind(this);\n    this.addTarget = this.addTarget.bind(this);\n    this.typeConversion = this.typeConversion.bind(this);\n  }\n\n  updateDevice(event) {\n    this.setState({\n      device: event.target.value\n    });\n  }\n\n  updateParam(event) {\n    this.setState({\n      param: event.target.value\n    });\n  }\n\n  addTarget(){\n    const device = document.getElementById('device').value;\n    const param = document.getElementById('param').value;\n    const value = document.getElementById('value').value;\n\n    const target = {\n      device: device,\n      param: param,\n      value: value\n    }\n    this.props.addTarget(target);\n    document.getElementById('device').value = '';\n    document.getElementById('param').value = '';\n    this.setState({\n      param: ''\n    });\n  }\n\n  typeConversion(origen) {\n    const type = {\n      int: 'd2i',\n      list: 'd2l',\n      bool: 'd2b',\n      string: 'd2s',\n      color: 'd2c'\n    }\n    return type[origen]\n  }\n\n  render() {\n\n    const devices = Object.keys(this.props.devices).map((device) => {\n      return <option key={device} value={device}>{this.props.devices[device]}</option>\n    })\n\n    const params = this.state.device === \"\" ? '' : Object.keys(this.props.status[this.state.device]).map((param) => {\n      return <option key={param} value={param}>{ deviceReference.params[param] ? deviceReference.params[param].name : param + ' - Not supported yet' }</option>\n    })\n\n    var value = '';\n    if (deviceReference.params[this.state.param]){\n      const type = this.typeConversion(deviceReference.params[this.state.param].type);\n      if(type === 'd2i'){\n        value = (\n          <div className=\"two_table_row\">\n            <div className=\"two_table_cel\">\n              Value*\n            </div>\n            <div className=\"two_table_cel\">\n              <input type=\"number\" className=\"\" id=\"value\"/>\n            </div>\n          </div>\n        )\n      } else if(type === 'd2s'){\n        value = (\n          <div className=\"two_table_row\">\n            <div className=\"two_table_cel\">\n              Value*\n            </div>\n            <div className=\"two_table_cel\">\n              <input type=\"text\" className=\"\" id=\"value\"/>\n            </div>\n          </div>\n        )\n      } else if(type === 'd2b' || type === 'd2l'){\n\n        const options = deviceReference.params[this.state.param].select.map((option) => {\n          return <option key={option} value={option}>{option}</option>\n        })\n\n        value = (\n          <div className=\"two_table_row\">\n            <div className=\"two_table_cel\">\n              Value*\n            </div>\n            <div className=\"two_table_cel\">\n              <select name=\"type\" className=\"two_input\" id=\"value\">\n                {options}\n              </select>\n            </div>\n          </div>\n        )\n      }\n\n    }\n\n    return (\n      <div className=\"trigger_assistant_container\">\n        <h2 className=\"trigger_assistant_title\">New target</h2>\n\n        <div className=\"two_table_row\">\n          <div className=\"two_table_cel\">\n            Device*\n          </div>\n          <div className=\"two_table_cel\">\n            <select name=\"type\" className=\"two_input\" id=\"device\" onChange={this.updateDevice}>\n              <option value=\"\">Select a device</option>\n              {devices}\n            </select>\n          </div>\n        </div>\n        <div className=\"two_table_row\">\n          <div className=\"two_table_cel\">\n            Param*\n          </div>\n          <div className=\"two_table_cel\">\n            <select name=\"type\" className=\"two_input\" id=\"param\" onChange={this.updateParam}>\n              <option value=\"\">Select a param</option>\n              {params}\n            </select>\n          </div>\n        </div>\n\n        {value}\n\n        <div className=\"trigger_assisstant_buttons_container\">\n          <button type=\"button\" className=\"trigger_assistant_button\" onClick={ this.addTarget }>Add</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Device\n","import React from 'react';\nimport Triggers from '../manager/Triggers.js'\nimport Assistant from '../manager/Assistant.js'\nimport Target from '../manager/Target.js'\nimport DeviceTarget from '../manager/DeviceTarget.js'\nimport getCookieValue from '../../functions'\nimport { root } from '../../constants'\n\nimport './Manager.css';\n\nclass Manager extends React.Component {\n  constructor(props) {\n    super(props);\n    const id = window.location.pathname.split('/')[3];\n    var create = false;\n    if (id === \"\") create = true;\n    this.state = {\n      id: id,\n      create: create,\n      save_status: \"\",\n      trigger_assistant_parent: 0,\n      task: {\n        title: '',\n        description: '',\n        triggers: {},\n        target: []\n      },\n      devices: [],\n      status: {}\n    }\n    this.update = this.update.bind(this);\n    this.save = this.save.bind(this);\n    this.delete = this.delete.bind(this);\n    this.deleteTrigger = this.deleteTrigger.bind(this);\n    this.addTriggerLogic = this.addTriggerLogic.bind(this);\n    this.openTriggerAssistant = this.openTriggerAssistant.bind(this);\n    this.addTriggerOperation = this.addTriggerOperation.bind(this);\n    this.closeTriggerAssistant = this.closeTriggerAssistant.bind(this);\n    this.addTarget = this.addTarget.bind(this);\n  }\n\n  componentDidMount() {\n    // Load devices data\n    var dev = new XMLHttpRequest();\n    dev.onload = function (e) {\n      if (dev.readyState === 4) {\n        if (dev.status === 200) {\n          var data = JSON.parse(dev.responseText);\n          var devices_names = {}\n          data.devices.forEach((device) => {\n            devices_names[device.id] = device.name.name\n          })\n          this.setState({\n             devices: devices_names,\n             status:  data.status\n           });\n        } else {\n          console.error(dev.statusText);\n        }\n      }\n    }.bind(this);\n    dev.open(\"GET\", root + \"api/global/get/\");\n    dev.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    dev.send();\n\n    // Load task if neeeded\n    if (!this.state.create){\n      var tas = new XMLHttpRequest();\n      tas.onload = function (e) {\n        if (tas.readyState === 4) {\n          if (tas.status === 200) {\n            var data = JSON.parse(tas.responseText);\n            console.log(data);\n            this.setState({\n               task: data\n             });\n          } else {\n            console.error(tas.statusText);\n          }\n        }\n      }.bind(this);\n      tas.open(\"GET\", root + \"api/tasks/get/\" + this.state.id + \"/\");\n      tas.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n      tas.send();\n    }\n  }\n\n  update(event){\n    var task = this.state.task;\n    task[event.target.id] = event.target.value\n    this.setState({\n      task: task\n    })\n  }\n\n  save(){\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      if (http.readyState === 4) {\n        if (http.status === 200) {\n          JSON.parse(http.responseText);\n           if (this.state.create){\n             window.location.href = \"/tasks\"\n           } else {\n             this.setState({\n                save_status: \"Saved correctly.\"\n              });\n           }\n        } else {\n          console.error(http.statusText);\n          this.setState({\n             save_status: \"Error, the changes haven't been saved.\"\n           });\n        }\n        setTimeout(function(){\n          this.setState({\n             save_status: \"\"\n           });\n        }.bind(this), 5000)\n      }\n    }.bind(this);\n    var payload = {\n      \"task\": this.state.task\n    }\n    if (this.state.create){\n      http.open(\"POST\", root + \"api/tasks/create/\");\n    } else {\n      http.open(\"POST\", root + \"api/tasks/update/\");\n      payload['id'] = this.state.id;\n    }\n    http.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\n    http.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    http.send(JSON.stringify(payload));\n  }\n\n  delete(){\n    if(window.confirm('Do you want to delete the task?')){\n      var http = new XMLHttpRequest();\n      http.onload = function (e) {\n        if (http.readyState === 4) {\n          if (http.status === 200) {\n            window.location.href = \"/tasks/\"\n          } else {\n            console.error(http.statusText);\n            this.setState({\n               save_status: \"Error, the device hasn't been deleted.\"\n             });\n          }\n          setTimeout(function(){\n            this.setState({\n               save_status: \"\"\n             });\n          }.bind(this), 5000)\n        }\n      }.bind(this);\n      http.open(\"GET\", root + \"api/tasks/delete/\" + this.state.id + \"/\");\n      http.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n      http.send();\n    } else {\n      this.setState({\n         save_status: \"Ok. The device is save.\"\n       });\n    }\n  }\n\n  deleteTrigger(id) {\n    // Get the task\n    var task = this.state.task;\n    var triggers = task.triggers;\n    // Get the the parent id\n    const parent = triggers[id].parent\n    if (parent !== 'triggers') {\n      // Delete from the parent\n      const index = triggers[parent].operation.indexOf(id);\n      triggers[parent].operation.splice(index,1)\n      // Delete the trigger\n      delete triggers[id];\n      task.triggers = triggers;\n    } else {\n      task.triggers = {};\n    }\n    this.setState({\n      task: task\n    });\n  }\n\n  addTriggerLogic(type, parent) {\n    // Get the triggers\n    var task = this.state.task;\n    if (parent !== 'triggers') {\n      // Get the timestamp\n      const ts = Date.now();\n      // Compose and create the logic trigger\n      task.triggers[ts] = {\n        operation: [],\n        parent: parent,\n        type: type\n      };\n      // Register the trigger in the parent\n      task.triggers[parent].operation.push(ts);\n    } else {\n      task.triggers['trigger'] = {\n        operation: [],\n        parent: 'triggers',\n        type: type\n      };\n    }\n    // Update the component state\n    this.setState({\n      task: task\n    });\n  }\n\n  openTriggerAssistant(parent) {\n    this.setState({\n      trigger_assistant_parent: parent\n    });\n  }\n\n  addTriggerOperation(type, operation) {\n    // Get the triggers\n    var task = this.state.task;\n    const parent = this.state.trigger_assistant_parent;\n    if (parent !== 'triggers') {\n      // Get the timestamp\n      const ts = Date.now();\n      // Compose and create the logic trigger\n      task.triggers[ts] = {\n        operation: operation,\n        parent: parent,\n        type: type\n      };\n      // Register the trigger in the parent\n      task.triggers[parent].operation.push(ts);\n    } else {\n      task.triggers['trigger'] = {\n        operation: operation,\n        parent: 'triggers',\n        type: type\n      };\n    }\n    // Update the component state\n    this.setState({\n      task: task\n    });\n  }\n\n  closeTriggerAssistant() {\n    this.setState({\n      trigger_assistant_parent: 0\n    });\n  }\n\n  addTarget(target) {\n    var task = this.state.task;\n    task.target.push(target);\n    this.setState({\n      task: task\n    });\n  }\n\n  render() {\n\n    const button = {\n      width: '200px'\n    }\n\n    const deleteButton = {\n      backgroundColor: 'red'\n    }\n\n    const deleteButtonDisabled = {\n      backgroundColor: 'red',\n      opacity: '0.2'\n    }\n\n    const separator = {\n      width: '70%'\n    }\n\n    const targets = this.state.task.target.map((target, i) => {\n      return <Target key={i} target={target} devices={this.state.devices}/>\n    })\n\n    return (\n      <div className=\"page_block_container\">\n        <h2>Task</h2>\n        <hr style={separator}/>\n        <div className=\"page_block_content_container\">\n          <div className=\"two_table_row\">\n            <div className=\"two_table_cel\">\n              Name*\n            </div>\n            <div className=\"two_table_cel\">\n              <input type=\"text\" className=\"two_input\" id=\"title\" defaultValue={this.state.task.title} onChange={this.update}/>\n            </div>\n          </div>\n          <div className=\"two_table_row\">\n            <div className=\"two_table_cel\">\n              Description*\n            </div>\n            <div className=\"two_table_cel\">\n              <input type=\"text\" className=\"two_input\" id=\"description\" defaultValue={this.state.task.description} onChange={this.update}/>\n            </div>\n          </div>\n          <hr/>\n          <h2>Triggers</h2>\n          <div className=\"advise\">\n            <span></span>\n          </div>\n          {\n            this.state.trigger_assistant_parent !== 0\n            ?\n            <Assistant devices={this.state.devices} status={this.state.status} closeTriggerAssistant={this.closeTriggerAssistant} addTriggerOperation={this.addTriggerOperation}/>\n            :\n            <Triggers id=\"trigger\" triggers={this.state.task.triggers} devices={this.state.devices} delete={this.deleteTrigger} addTriggerLogic={this.addTriggerLogic} openTriggerAssistant={this.openTriggerAssistant}/>\n          }\n          <hr/>\n          <h2>Targets</h2>\n          <div className=\"advise\">\n            <span></span>\n          </div>\n          {targets}\n          <DeviceTarget devices={this.state.devices} status={this.state.status} addTarget={this.addTarget}/>\n\n          <hr/>\n          <div className=\"two_table_cel\">\n            <button type=\"button\" style={ this.state.create ? deleteButtonDisabled : deleteButton } onClick={ this.delete } disabled={ this.state.create ? true : false}>Delete</button>\n            <button type=\"button\" onClick={ this.save }>Save</button>\n            <span>{this.state.save_status}</span>\n          </div>\n        </div>\n      </div>\n  );\n  }\n}\n\nexport default Manager\n","import React from 'react';\nimport Switch from \"react-switch\";\nimport getCookieValue from '../../functions'\nimport { root } from '../../constants'\n\nclass Settings extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      settings: {\n        google: {},\n        ddns: {},\n        mqtt: {},\n        apikey: \"\"\n      },\n      save_status: \"\",\n      url: {\n        auth: \"\",\n        token: \"\",\n        fulfillment: \"\"\n      }\n    }\n    this.update = this.update.bind(this);\n    this.enableDdnsProvider = this.enableDdnsProvider.bind(this);\n    this.save = this.save.bind(this);\n  }\n\n  componentDidMount() {\n    if (!this.state.create){\n      var http = new XMLHttpRequest();\n      http.onload = function (e) {\n        if (http.readyState === 4) {\n          if (http.status === 200) {\n            var data = JSON.parse(http.responseText);\n            this.setState({\n               settings: data,\n               url: {\n                 auth: \"https://\" + data.ddns.hostname + \"/auth/\",\n                 token: \"https://\" + data.ddns.hostname + \"/token/\",\n                 fulfillment: \"https://\" + data.ddns.hostname + \"/smarthome/\"\n               }\n             });\n          } else {\n            console.error(http.statusText);\n          }\n        }\n      }.bind(this);\n      http.open(\"GET\", root + \"api/settings/get/\");\n      http.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n      http.send();\n    }\n  }\n\n  update(event){\n    // this.props.update('attributes/' + event.target.id,event.target.value);\n    const id = event.target.id.split(\"/\");\n    var settings = this.state.settings;\n    if (id.length === 1){\n      settings[id[0]] = event.target.value;\n    } else if (id.length === 2){\n      settings[id[0]][id[1]] = event.target.value;\n    }\n    this.setState({\n       settings: settings\n     });\n  }\n\n  enableDdnsProvider(checked){\n    var settings = this.state.settings;\n    settings.ddns.enabled = checked;\n    this.setState({\n       settings: settings\n     });\n  }\n\n  save(){\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      if (http.readyState === 4) {\n        if (http.status === 200) {\n          JSON.parse(http.responseText);\n          this.setState({\n             save_status: \"Saved correctly.\"\n           });\n        } else {\n          this.setState({\n             save_status: \"Error, the changes haven't been saved.\"\n           });\n        }\n        setTimeout(function(){\n          this.setState({\n             save_status: \"\"\n           });\n        }.bind(this), 5000)\n      }\n    }.bind(this);\n    http.open(\"POST\", root + \"api/settings/update/\");\n    http.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\n    http.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    http.send(JSON.stringify(this.state.settings));\n  }\n\n  render() {\n\n    return (\n      <div>\n        <div className=\"page_block_container\">\n          <h2>Actions on Google</h2>\n          <hr/>\n          <div className=\"page_block_content_container\">\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">\n                Client ID\n              </div>\n              <div className=\"two_table_cel\">\n                <input type=\"text\" className=\"two_input\" id=\"google/client_id\" defaultValue={this.state.settings.google.client_id} onChange={this.update}/>\n              </div>\n            </div>\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">\n                Client Secret\n              </div>\n              <div className=\"two_table_cel\">\n                <input type=\"text\" className=\"two_input\" id=\"google/client_secret\" defaultValue={this.state.settings.google.client_secret} onChange={this.update}/>\n              </div>\n            </div>\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">\n                Authorization URL\n              </div>\n              <div className=\"two_table_cel\">\n                <input type=\"text\" className=\"two_input\" defaultValue={this.state.url.auth} disabled/>\n              </div>\n            </div>\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">\n                Token URL\n              </div>\n              <div className=\"two_table_cel\">\n                <input type=\"text\" className=\"two_input\" defaultValue={this.state.url.token} disabled/>\n              </div>\n            </div>\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">\n                Fulfillment URL\n              </div>\n              <div className=\"two_table_cel\">\n                <input type=\"text\" className=\"two_input\" defaultValue={this.state.url.fulfillment} disabled/>\n              </div>\n            </div>\n          </div>\n          <div className=\"page_block_buttons_container\">\n            <button type=\"button\" onClick={ this.save }>Save</button>\n            <span>{this.state.save_status}</span>\n          </div>\n          <div className=\"advise\">\n            <span>Actions on Google settings. It is used to authenticate with Google. If you change it here, you must change it on the Actions Console &#62; Develop &#62; Account Linking.</span>\n          </div>\n        </div>\n\n\n        <div className=\"page_block_container\">\n          <h2>MQTT</h2>\n          <hr/>\n          <div className=\"page_block_content_container\">\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">\n                User\n              </div>\n              <div className=\"two_table_cel\">\n                <input type=\"text\" className=\"two_input\" id=\"mqtt/user\" defaultValue={this.state.settings.mqtt.user} onChange={this.update}/>\n              </div>\n            </div>\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">\n                Password\n              </div>\n              <div className=\"two_table_cel\">\n                <input type=\"text\" className=\"two_input\" id=\"mqtt/password\" defaultValue={this.state.settings.mqtt.password} onChange={this.update}/>\n              </div>\n            </div>\n          </div>\n          <div className=\"page_block_buttons_container\">\n            <button type=\"button\" onClick={ this.save }>Save</button>\n            <span>{this.state.save_status}</span>\n          </div>\n          <div className=\"advise\">\n            <span>Important. You must configure the username and password into Mosquitto manually from a terminal. This is only for telling Homeware its credentials. Clear both if you don't use credentials.</span>\n          </div>\n        </div>\n\n        <div className=\"page_block_container\">\n          <h2>DDNS provider</h2>\n          <hr/>\n          <div className=\"page_block_content_container\">\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">\n                Status:\n              </div>\n              <div className=\"two_table_cel\">\n                { this.state.settings.ddns.status }\n              </div>\n            </div>\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">\n                IP and time:\n              </div>\n              <div className=\"two_table_cel\">\n                { this.state.settings.ddns.ip + \" updated at \" + this.state.settings.ddns.last}\n              </div>\n            </div>\n          </div>\n          <hr/>\n          <div className=\"page_block_content_container\">\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">\n                Enable\n              </div>\n              <div className=\"two_table_cel\">\n                <Switch onChange={this.enableDdnsProvider} checked={this.state.settings.ddns.enabled} />\n              </div>\n            </div>\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">\n                Provider\n              </div>\n              <div className=\"two_table_cel\">\n                <select name=\"type\" className=\"settings_select\" id=\"ddns/provider\" value={this.state.settings.ddns.provider} onChange={this.update}>\n                  <option value=\"noip\">Noip</option>\n                </select>\n              </div>\n            </div>\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">\n                Username\n              </div>\n              <div className=\"two_table_cel\">\n                <input type=\"text\" className=\"two_input\" id=\"ddns/username\" defaultValue={this.state.settings.ddns.username} onChange={this.update}/>\n              </div>\n            </div>\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">\n                Password\n              </div>\n              <div className=\"two_table_cel\">\n                <input type=\"text\" className=\"two_input\" id=\"ddns/password\" defaultValue={this.state.settings.ddns.password} onChange={this.update}/>\n              </div>\n            </div>\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">\n                Hostname\n              </div>\n              <div className=\"two_table_cel\">\n                <input type=\"text\" className=\"two_input\" id=\"ddns/hostname\" defaultValue={this.state.settings.ddns.hostname} onChange={this.update}/>\n              </div>\n            </div>\n          </div>\n          <div className=\"page_block_buttons_container\">\n            <button type=\"button\" onClick={ this.save }>Save</button>\n            <span>{this.state.save_status}</span>\n          </div>\n          <div className=\"advise\">\n            <span>Set up the access data to the DDNS provider account. Open an issue on Github if you want a DDNS provider that is not listed.</span>\n          </div>\n        </div>\n\n\n      </div>\n    );\n  }\n}\n\nexport default Settings\n","import React from 'react';\n\nfunction Component(props) {\n\n  const component = {\n    marginTop: '5px',\n    width: '100%',\n    display: 'grid',\n    gridTemplateColumns: '70% 30%'\n  }\n\n  const textContainer = {\n    textAlign: 'left',\n    paddingTop: '4px'\n  }\n\n  const labelContainer = {\n    textAlign: 'right',\n    paddingTop: '4px'\n  }\n\n  const text = {\n    fontSize: '18px'\n  }\n\n  const running = {\n    fontSize: '12px',\n    fontWeight: 'bold',\n    color: 'white',\n    backgroundColor: 'green',\n    padding: '5px',\n    paddingLeft: '10px',\n    paddingRight: '10px',\n    borderRadius: '5px'\n  }\n\n  const stopped = {\n    fontSize: '12px',\n    fontWeight: 'bold',\n    color: 'white',\n    backgroundColor: 'red',\n    padding: '5px',\n    paddingLeft: '10px',\n    paddingRight: '10px',\n    borderRadius: '5px'\n  }\n\n  return (\n    <div style={ component }>\n      <div style={ textContainer }>\n        <span style={ text }>{ props.title }</span>\n      </div>\n      <div style={ labelContainer }>\n        <span style={ props.status === 'Running' ? running : stopped }>{ props.status }</span>\n      </div>\n    </div>\n  );\n}\n\nexport default Component\n","import React from 'react';\nimport getCookieValue from '../../functions'\nimport { root } from '../../constants'\nimport Component from '../system/Component.js'\nconst ReactMarkdown = require('react-markdown')\n\n\nclass System extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      components: [],\n      git: {\n        version: '',\n        description: '',\n        code: 0\n      },\n      version: '',\n      upgrading: false,\n      show_system_message: false,\n      system_message: ''\n    }\n\n    this.loadComponents = this.loadComponents.bind(this);\n    this.upgrade = this.upgrade.bind(this);\n    this.areYouAwake = this.areYouAwake.bind(this);\n    this.restart = this.restart.bind(this);\n    this.reboot = this.reboot.bind(this);\n    this.shutdown = this.shutdown.bind(this);\n  }\n\n  componentDidMount() {\n\n    this.loadComponents();\n    setInterval(this.loadComponents,3000)\n\n    var vers = new XMLHttpRequest();\n    vers.onload = function (e) {\n      if (vers.readyState === 4) {\n        if (vers.status === 200) {\n          var version = JSON.parse(vers.responseText);\n          this.setState({ version: version.version });\n        } else {\n          console.error(vers.statusText);\n        }\n      }\n    }.bind(this);\n    vers.open(\"GET\", root + \"api/global/version/\");\n    vers.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    vers.send();\n\n    var git = new XMLHttpRequest();\n    git.onload = function (e) {\n      if (git.readyState === 4) {\n        if (git.status === 200) {\n          const latestRelease = JSON.parse(git.responseText);\n          const description = latestRelease.body\n          this.setState({ git: {\n            version: latestRelease.tag_name,\n            description: description,\n            code: 200\n            }\n          });\n        } else if (git.status === 403) {\n          this.setState({ git: {\n            version: 'GitHub rate limit exceeded. You have reloaded so many times. It will reset after some time.',\n            code: 403\n            }\n          });\n        } else {\n          console.error(git.statusText);\n        }\n      }\n    }.bind(this);\n    git.open(\"GET\", 'https://api.github.com/repos/kikeelectronico/Homeware-LAN/releases/latest');\n    git.send();\n  }\n\n  loadComponents() {\n    var comp = new XMLHttpRequest();\n    comp.onload = function (e) {\n      if (comp.readyState === 4) {\n        if (comp.status === 200) {\n          var response = JSON.parse(comp.responseText);\n          var components = []\n          var keys = Object.keys(response);\n          for (var i = 0; i < keys.length; i++) {\n            components.push(response[keys[i]])\n          }\n\n          this.setState({ components: components });\n        } else {\n          console.error(comp.statusText);\n        }\n      }\n    }.bind(this);\n    comp.open(\"GET\", root + \"api/system/status/\");\n    comp.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    comp.send();\n  }\n\n  upgrade(){\n    if(window.confirm('Are you sure?')){\n      window.open(root + \"files/buckup/homeware/\" + getCookieValue('token'))\n      this.setState({\n        show_system_message: true,\n        system_message: 'Upgrading the system. It will take a couple of minutes and then you will be redirected to the home page.'\n      });\n      window.setTimeout(function() {\n        var upg = new XMLHttpRequest();\n        upg.onload = function (e) {\n          if (upg.readyState === 4) {\n            if (upg.status === 200) {\n              this.areYouAwake();\n            } else {\n              console.error(upg.statusText);\n            }\n          }\n        }.bind(this)\n        upg.open(\"GET\", root + \"api/system/upgrade/\");\n        upg.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n        upg.send();\n      }.bind(this),2000);\n    }\n  }\n\n  areYouAwake(){\n    var awa = new XMLHttpRequest();\n    awa.onload = function (e) {\n      if (awa.readyState === 4) {\n        if (awa.status === 200) {\n          window.location.href = '/'\n        } else {\n          console.error(awa.statusText);\n          setTimeout(this.areYouAwake,2000);\n        }\n      }\n    }.bind(this)\n    awa.open(\"GET\", root + \"test/\");\n    awa.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    awa.send();\n  }\n\n  restart(){\n    this.setState({\n      show_system_message: true,\n      system_message: 'Restarting Homeware. It will take a couple of minutes and then you will be redirected to the home page.'\n    });\n    var res = new XMLHttpRequest();\n    res.onload = function (e) {\n      if (res.readyState === 4) {\n        setTimeout(this.areYouAwake,2000);\n      }\n    }.bind(this)\n    res.open(\"GET\", root + \"api/system/restart\");\n    res.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    res.send();\n  }\n\n  reboot(){\n    this.setState({\n      show_system_message: true,\n      system_message: 'Rebooting the system. It will take a couple of minutes and then you will be redirected to the home page.'\n    });\n    var reb = new XMLHttpRequest();\n    reb.onload = function (e) {\n      if (reb.readyState === 4) {\n        setTimeout(this.areYouAwake,2000);\n      }\n    }.bind(this)\n    reb.open(\"GET\", root + \"api/system/reboot\");\n    reb.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    reb.send();\n  }\n\n  shutdown(){\n    this.setState({\n      show_system_message: true,\n      system_message: 'The system will be shut down, you will lose the connection with Homeware.'\n    });\n    var shu = new XMLHttpRequest();\n    shu.onload = function (e) {\n      if (shu.readyState === 4) {\n        setTimeout(this.areYouAwake,2000);\n      }\n    }.bind(this)\n    shu.open(\"GET\", root + \"api/system/shutdown\");\n    shu.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    shu.send();\n  }\n\n  render() {\n\n    const upgrade_button = {\n      width: '200px'\n    }\n\n    const git_description = {\n      marginTop: '20px',\n      marginLeft: '10%',\n      width: '80%',\n      paddingLeft: '20px',\n      paddingRight: '20px',\n      paddingTop: '20px',\n      paddingBottom: '20px',\n      borderRadius: '20px',\n      border: '1px solid #aaa',\n      textAlign: 'left'\n    }\n\n    const red_text = {\n      color: 'red'\n    }\n\n    const components = this.state.components.map((component) =>\n      <Component title={ component.title } status={ component.status } enable={ component.enable } key={ component.title }/>\n    );\n\n    return (\n      <div>\n        {\n          this.state.show_system_message\n          ?\n            <div className=\"page_block_container\">\n              <h2>System message</h2>\n              <hr/>\n              <div className=\"page_block_content_container\">\n                { this.state.system_message }\n              </div>\n            </div>\n          :\n          <div>\n            <div className=\"page_block_container\">\n              <h2>System status</h2>\n              <hr/>\n              <div className=\"page_block_content_container\">\n                { components }\n              </div>\n              <div className=\"advise\">\n                <span>These are the core elements of Homeware-LAN. All must be running.</span>\n              </div>\n            </div>\n\n            <div className=\"page_block_container\">\n              <h2>Version</h2>\n              <hr/>\n              <div className=\"page_block_content_container\">\n                <b>System version:</b> { this.state.version }\n                {\n                  this.state.version !== this.state.git.version\n                  ?\n                  <div>\n                    <b>New version:</b> { this.state.git.version}\n                    <div style={ git_description }>\n                      <ReactMarkdown source={this.state.git.description} />\n                      <button type=\"button\" style={ upgrade_button } onClick={ this.upgrade }>Upgrade</button>\n                    </div>\n                  </div>\n                  :\n                  ' - The system is up to date.'\n                }\n\n              </div>\n              <div className=\"advise\">\n                <span>Verify if there is any code update and upgrade if necessary.</span>\n              </div>\n            </div>\n\n            <div className=\"page_block_container\">\n              <h2>Power</h2>\n              <hr/>\n              <div className=\"page_block_buttons_container\">\n                <button type=\"button\" onClick={ this.restart }>Restart Homeware</button>\n                <button type=\"button\" onClick={ this.reboot }>Reboot System</button>\n                <button type=\"button\" onClick={ this.shutdown }>Shutdown System</button>\n              </div>\n              <div className=\"advise\">\n                <span>Control the device and restart the Homeware-LAN installation.</span>\n              </div>\n            </div>\n          </div>\n        }\n\n      </div>\n    );\n  }\n}\n\nexport default System\n","import React from 'react';\nimport getCookieValue from '../../functions'\nimport { root } from '../../constants'\n\nclass Backup extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    }\n  }\n\n  backup(){\n    window.location = root + \"files/buckup/homeware/\" + getCookieValue('token')\n  }\n\n  render() {\n\n    const button = {\n      width: '200px'\n    }\n\n    const restore_url = root + \"files/restore/file/\" + getCookieValue('token') + \"/\";\n\n    return (\n      <div>\n\n\n        <div className=\"page_block_container\">\n          <h2>Backup</h2>\n          <hr/>\n          <div className=\"page_block_content_container\">\n              <button type=\"button\" style={ button } onClick={ this.backup }>Backup</button>\n          </div>\n          <div className=\"advise\">\n            <span>Download a backup file.</span>\n          </div>\n        </div>\n\n        <div className=\"page_block_container\">\n          <h2>Restore</h2>\n          <hr/>\n          <div className=\"page_block_content_container\">\n            <form method=\"post\" encType=\"multipart/form-data\" action={ restore_url }>\n              <input type=\"file\" name=\"file\"/>\n              <button type=\"submit\" style={ button } onClick={ this.restart }>Restore</button>\n              </form>\n          </div>\n          <div className=\"advise\">\n            <span>Restore a backup file.</span>\n          </div>\n        </div>\n\n\n      </div>\n    );\n  }\n}\n\nexport default Backup\n","import React from 'react';\nimport getCookieValue from '../../functions'\nimport { root } from '../../constants'\n\nclass Access extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {\n        apikey: ''\n      }\n    }\n  }\n\n  componentDidMount() {\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      if (http.readyState === 4) {\n        if (http.status === 200) {\n          var data = JSON.parse(http.responseText);\n          this.setState({ data: data });\n        } else {\n          console.error(http.statusText);\n        }\n      }\n    }.bind(this);\n    http.open(\"GET\", root + \"api/access/get/\");\n    http.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    http.send();\n  }\n\n  generateAPIKey(){\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      if (http.readyState === 4) {\n        if (http.status === 200) {\n          // var data = JSON.parse(http.responseText);\n          window.location.href = \"/access\"\n        } else {\n          console.error(http.statusText);\n        }\n      }\n    };\n    http.open(\"GET\", root + \"api/settings/apikey/\");\n    http.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    http.send();\n  }\n\n  render() {\n\n    return (\n      <div>\n        <div className=\"page_block_container\">\n          <h2>API key</h2>\n          <hr/>\n          <div className=\"page_block_content_container\">\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">\n                API Key\n              </div>\n              <div className=\"two_table_cel\">\n                <input type=\"text\" className=\"two_input\" id=\"apikey\" value={ this.state.data.apikey } disabled/>\n              </div>\n            </div>\n          </div>\n          <div className=\"page_block_buttons_container\">\n            <button type=\"button\" onClick={ this.generateAPIKey }>Generate</button>\n\n          </div>\n          <div className=\"advise\">\n            <span>The API Key gives you access to the Homeware's API. Please do not generate an API Key if you are not sure of what you are doing.</span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Access\n","import React from 'react';\nimport getCookieValue from '../../functions'\nimport { root } from '../../constants'\n\nclass Logs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      page: 1\n    }\n\n    this.previousPage = this.previousPage.bind(this);\n    this.nextPage = this.nextPage.bind(this);\n    this.downloadLog = this.downloadLog.bind(this);\n  }\n\n  componentDidMount() {\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      if (http.readyState === 4) {\n        if (http.status === 200) {\n          var data = JSON.parse(http.responseText);\n          this.setState({ data: data });\n        } else {\n          console.error(http.statusText);\n        }\n      }\n    }.bind(this);\n    http.open(\"GET\", root + \"api/log/get/\");\n    http.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    http.send();\n  }\n\n  previousPage() {\n    if (this.state.page > 1)\n      this.setState({ page: this.state.page - 1 });\n  }\n\n  nextPage() {\n    if (this.state.page < this.state.data.length/10-1)\n      this.setState({ page: this.state.page + 1 });\n  }\n\n  downloadLog() {\n    window.location = root + \"files/log/homeware/\" + getCookieValue('token')\n  }\n\n  render() {\n\n    const line = {\n      width: '80%',\n      marginLeft: '8%',\n      marginTop: '10px',\n      borderBottom: '1px solid #eee',\n      paddingLeft: '20px',\n      paddingBottom: '10px',\n      paddingRight: '20px',\n      textAlign: 'left'\n    }\n\n    const yellow = {\n      color: 'orange'\n    }\n\n    const red = {\n      color: 'red'\n    }\n\n    const homeware_lan_log_data = this.state.data.reverse().slice(0, this.state.page * 10);\n    const homeware_lan_log = homeware_lan_log_data.map((register, i) =>\n      <div style={ line } key={ i }>\n        { register.severity === 'Log' ? <b>{ register.severity }</b> : '' }\n        { register.severity === 'Warning' ? <b style={ yellow }>{ register.severity }</b> : '' }\n        { register.severity === 'Alert' ? <b style={ red }>{ register.severity }</b> : '' }\n         - { register.time }<br/>\n        { register.message }\n      </div>\n    );\n\n    return (\n      <div>\n        <div className=\"page_block_container\">\n          <h2>Homeware-LAN log</h2>\n          <hr/>\n          <div>\n            { homeware_lan_log }\n          </div>\n          <div className=\"page_block_buttons_container\">\n            <button type=\"button\" onClick={ this.nextPage }>Load more</button>\n            <button type=\"button\" onClick={ this.downloadLog }>Download</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Logs\n","import React from 'react';\nimport { root } from '../../constants'\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      enable_message: false,\n      message: ''\n    }\n    this.login = this.login.bind(this);\n    this.grantAccess = this.grantAccess.bind(this);\n  }\n\n  login() {\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      var response = JSON.parse(http.responseText);\n      if(response['status'] === 'in'){\n        document.cookie = \"user=\" + response['user'] + \"; path=/\";\n        document.cookie = \"token=\" + response['token'] + \"; path=/\";\n        window.location = '/';\n      } else if (response['status'] === 'fail'){\n        this.setState({\n          enable_message: true,\n          message: 'Incorrect User or Password'\n        })\n        setTimeout(function(){\n          this.setState({\n             enable_message: false\n           });\n        }.bind(this), 5000)\n      }\n    }.bind(this);\n    http.open(\"GET\", root + \"api/user/login/\");\n    http.setRequestHeader('user', document.getElementById('user').value)\n    http.setRequestHeader('pass', document.getElementById('password').value)\n    http.send();\n  }\n\n  grantAccess() {\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      if (http.responseText !== 'fail')\n        window.location = http.responseText;\n      else {\n        this.setState({\n          enable_message: true,\n          message: 'Incorrect User or Password'\n        })\n        setTimeout(function(){\n          this.setState({\n             enable_message: false\n           });\n        }.bind(this), 5000)\n      }\n    }.bind(this);\n    http.open(\"GET\", root + \"api/user/googleSync/\");\n    http.setRequestHeader('user', document.getElementById('user').value)\n    http.setRequestHeader('pass', document.getElementById('password').value)\n    http.send();\n  }\n\n  render() {\n\n    const form_container = {\n      margin: '20%',\n    }\n\n    const element = {\n      margin: '10px'\n    }\n\n    var message = '';\n    if (this.state.enable_message){\n      message = <div className=\"alert_message\"> { this.state.message } </div>\n    }\n\n    return (\n      <div style={ form_container }>\n        { window.location.href.includes('google') ? <p>Google request access to Homeware-Lan</p> : '' }\n        <br/>\n        <span style={ element }>Username</span>\n        <input type=\"text\" name=\"user\" id=\"user\"/>\n        <span style={ element }>Password</span>\n        <input type=\"password\" name=\"password\" id=\"password\"/>\n        <button type=\"button\" style={ element } onClick={ !window.location.href.includes('google') ? this.login : this.grantAccess }>{ !window.location.href.includes('google') ? <span>Login</span> : <span>Grant access</span> }</button>\n        <br/>\n        { message }\n      </div>\n    );\n  }\n}\n\nexport default Login\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport getCookieValue from './functions'\nimport { root } from './constants'\n\nimport Menu from './components/web/Menu'\nimport Devices from './components/pages/Devices'\nimport Editor from './components/pages/Editor'\nimport Info from './components/pages/Info'\nimport Connecting from './components/pages/Connecting'\nimport Tasks from './components/pages/Tasks'\nimport Manager from './components/pages/Manager'\nimport Settings from './components/pages/Settings'\nimport System from './components/pages/System'\nimport Backup from './components/pages/Backup'\nimport Access from './components/pages/Access'\nimport Logs from './components/pages/Logs'\nimport Login from './components/pages/Login'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      session: false,\n      version: ''\n    }\n    this.logout = this.logout.bind(this);\n    this.menu = this.menu.bind(this);\n  }\n\n  componentDidMount() {\n    if (!window.location.href.includes('assistant')) {\n      var http = new XMLHttpRequest();\n      http.onload = function (e) {\n        if (http.readyState === 4) {\n          if (http.status === 200) {\n            var data = JSON.parse(http.responseText);\n            if (data.status !== 'in' && !window.location.href.includes('login'))\n              window.location.href = '/login/'\n            else if (data.status === 'in')\n              this.setState({\n                session: true\n              });\n          } else {\n            console.error(http.statusText);\n          }\n        }\n      }.bind(this);\n      http.open(\"GET\", root + \"api/user/validateToken/\");\n      http.setRequestHeader('token', getCookieValue('token'))\n      http.setRequestHeader('user', getCookieValue('user'))\n      http.send();\n\n      var vers = new XMLHttpRequest();\n      vers.onload = function (e) {\n        if (vers.readyState === 4) {\n          if (vers.status === 200) {\n            var version = JSON.parse(vers.responseText);\n            this.setState({ version: version.version });\n          } else {\n            console.error(vers.statusText);\n          }\n        }\n      }.bind(this);\n      vers.open(\"GET\", root + \"api/global/version/\");\n      vers.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n      vers.send();\n    }\n  }\n\n  logout() {\n    document.cookie = \"user=; path=/\";\n    document.cookie = \"token=; path=/\";\n    this.setState({\n      session: false\n    });\n    window.location.href = '/'\n  }\n\n  menu() {\n    document.getElementById('menuIcon').classList.toggle(\"change_menu_icon\");\n    document.getElementById('menu').classList.toggle(\"menu_show_up\");\n  }\n\n  render() {\n\n    if (!this.state.session && !window.location.href.includes('login'))\n      return ''\n    else if (window.location.href.includes('login'))\n      return (\n        <div className=\"Clear_app\">\n          <Login/>\n        </div>\n      );\n    else\n      return (\n        <Router>\n          <div className=\"App\">\n            <div className=\"upper-menu\">\n              <div className=\"menu_icon_container\" id=\"menuIcon\" onClick={this.menu}>\n                <div className=\"menu_icon_bar_1\"></div>\n                <div className=\"menu_icon_bar_2\"></div>\n                <div className=\"menu_icon_bar_3\"></div>\n              </div>\n              <div className=\"uppper_menu_title\">\n                <h1>Homeware-LAN</h1>\n              </div>\n            </div>\n            <div className=\"main-app\">\n              <div className=\"menu\" id=\"menu\">\n                <div>\n                  <Menu image=\"/menu/devices_icon.png\" title=\"Devices\" href=\"/devices\"/>\n                  <Menu image=\"/menu/tasks_icon.png\" title=\"Tasks\" href=\"/tasks\"/>\n                  <Menu image=\"/menu/settings_icon.png\" title=\"Settings\" href=\"/settings\"/>\n                  <Menu image=\"/menu/status_icon.png\" title=\"System\" href=\"/system\"/>\n                  <Menu image=\"/menu/backup_icon.png\" title=\"Backup\" href=\"/backup\"/>\n                  <Menu image=\"/menu/access_icon.png\" title=\"Access\" href=\"/access\"/>\n                  <Menu image=\"/menu/logs_icon.png\" title=\"Logs\" href=\"/logs\"/>\n                  <hr/>\n                  <Menu image=\"/menu/repo_icon.png\" title=\"Repo\" href=\"https://github.com/kikeelectronico/Homeware-LAN\"/>\n                  <Menu image=\"/menu/help_icon.png\" title=\"How to\" href=\"https://github.com/kikeelectronico/Homeware-LAN/wiki\"/>\n                  <hr/>\n                  <Menu image=\"/menu/logout_icon.png\" title=\"Logout\" exec={ this.logout }/>\n                </div>\n                <div className=\"menu-data\">\n                  <p>Version: { this.state.version }</p>\n                </div>\n              </div>\n              <div className=\"page\">\n                <Route exact={ true } path=\"/\" component={ Devices }/>\n                <Route exact={ true } path=\"/devices\" component={ Devices }/>\n                <Route path=\"/devices/editor\" component={ Editor }/>\n                <Route path=\"/devices/info\" component={ Info }/>\n                <Route path=\"/devices/connecting\" component={ Connecting }/>\n                <Route exact={ true } path=\"/tasks\" component={ Tasks }/>\n                <Route path=\"/tasks/manager\" component={ Manager }/>\n                <Route path=\"/settings\" component={ Settings }/>\n                <Route path=\"/system\" component={ System }/>\n                <Route path=\"/backup\" component={ Backup }/>\n                <Route path=\"/access\" component={ Access }/>\n                <Route path=\"/logs\" component={ Logs }/>\n              </div>\n            </div>\n          </div>\n        </Router>\n      );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}