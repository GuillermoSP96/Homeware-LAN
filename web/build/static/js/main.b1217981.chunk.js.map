{"version":3,"sources":["functions.js","constants.js","components/assistant/Welcome.js","components/assistant/User.js","components/assistant/Domain.js","components/assistant/Confignginx.js","components/assistant/Change2domain.js","components/assistant/Changed2domain.js","components/assistant/Ssl.js","components/assistant/Google.js","components/assistant/Initialize.js","components/web/Menu.js","components/devices/traits/OnOff.js","components/devices/aux/Information.js","components/devices/aux/Edit.js","components/devices/Light.js","components/devices/Outlet.js","components/devices/traits/TemperatureSetting.js","components/devices/AcUnit.js","components/devices/AirFreshener.js","components/devices/AirPurifier.js","components/devices/Bed.js","components/devices/Fan.js","components/devices/Fireplace.js","components/devices/Radiator.js","components/devices/Switch.js","components/devices/Thermostat.js","components/devices/AirCooler.js","components/devices/Bathtub.js","components/devices/Awing.js","components/devices/Blinds.js","components/devices/Closet.js","components/devices/Curtain.js","components/devices/Door.js","components/devices/Drawer.js","components/devices/Garage.js","components/devices/Pergola.js","components/devices/Shutter.js","components/devices/Valve.js","components/devices/Window.js","components/devices/Lock.js","components/devices/Gate.js","components/devices/Heater.js","components/devices/Hood.js","components/devices/SecuritySystem.js","components/devices/Blender.js","components/devices/Global.js","components/devices/Scene.js","components/pages/Devices.js","components/editor/Text.js","components/editor/traits/Scene.js","components/editor/traits/OnOff.js","components/editor/traits/Brightness.js","components/editor/traits/FanSpeed.js","components/editor/traits/ColorSetting.js","components/editor/traits/TemperatureSetting.js","components/editor/traits/Toggles.js","components/editor/traits/Modes.js","components/editor/traits/HumiditySetting.js","components/editor/traits/OpenClose.js","components/editor/traits/Rotation.js","components/editor/traits/Fill.js","components/editor/traits/ArmDisarm.js","components/editor/traits/StartStop.js","components/editor/traits/Timer.js","components/editor/traits/TemperatureControl.js","components/editor/traits/Cook.js","components/pages/Editor.js","components/pages/Info.js","components/pages/Tasks.js","components/manager/Logic.js","components/manager/Trigger.js","components/manager/Triggers.js","components/manager/Time.js","components/manager/Device.js","components/manager/DeviceToDevice.js","components/manager/Assistant.js","components/manager/Target.js","components/manager/DeviceTarget.js","components/pages/Manager.js","components/pages/Settings.js","components/system/Component.js","components/pages/System.js","components/pages/Backup.js","components/pages/Access.js","components/pages/Logs.js","components/pages/Login.js","App.js","serviceWorker.js","index.js"],"names":["getCookieValue","cname","name","ca","decodeURIComponent","document","cookie","split","i","length","c","charAt","substring","indexOf","root","window","location","href","includes","deviceReference","traits","attributes","commandOnlyOnOff","type","default","queryOnlyOnOff","param","on","commandOnlyBrightness","brightness","colorModel","commandOnlyColorSetting","colorTemperatureRange","temperatureMinK","temperatureMaxK","content","color","spectrumRgb","temperatureK","spectrumRGB","spectrumHSV","hue","saturation","availableThermostatModes","thermostatTemperatureRange","minThresholdCelsius","maxThresholdCelsius","thermostatTemperatureUnit","bufferRangeCelsius","commandOnlyTemperatureSetting","queryOnlyTemperatureSetting","thermostatMode","thermostatTemperatureSetpoint","thermostatTemperatureAmbient","thermostatTemperatureSetpointHigh","thermostatTemperatureSetpointLow","thermostatHumidityAmbient","discreteOnlyOpenClose","openDirection","commandOnlyOpenClose","queryOnlyOpenClose","openPercent","openState","commandOnlyRotation","supportsContinuousRotation","supportsDegrees","supportsPercent","rotationDegreesRange","rotationDegreesMin","rotationDegreesMax","rotationPercent","rotationDegrees","isLocked","isJammed","sceneReversible","deactivate","isDocked","availableToggles","commandOnlyToggles","availableZones","pausable","isRunning","isPaused","activeZones","maxTimerLimitSec","commandOnlyTimer","timerRemainingSec","timerPaused","temperatureStepCelsius","temperatureUnitForUX","queryOnlyTemperatureControl","commandOnlyTemperatureControl","temperatureRange","temperatureSetpointCelsius","temperatureAmbientCelsius","availableFanSpeeds","speeds","ordered","reversible","commandOnlyFanSpeed","currentFanSpeedSetting","availableArmLevels","levels","isArmed","currentArmLevel","exitAllowance","availableFillLevels","isFilled","currentFillLevel","lang","currentStatusReport","humiditySetpointRange","minPercent","maxPercent","commandOnlyHumiditySetting","queryOnlyHumiditySetting","humiditySetpointPercent","humidityAmbientPercent","foodPresets","supportedCookingModes","currentCookingMode","currentFoodPreset","currentFoodQuantity","currentFoodUnit","availableModes","commandOnlyModes","devices","params","select","online","isRunnin","Welcome","props","next","bind","className","onClick","this","React","Component","User","state","enable_next","enable_message","message","set","http","XMLHttpRequest","onload","e","readyState","status","setState","responseText","console","error","statusText","setTimeout","url","hostname","open","setRequestHeader","send","JSON","stringify","getElementById","value","alert","element","margin","style","id","Domain","target","Confignginx","Change2domain","onreadystatechange","log","data","parse","code","placeholder","Changed2domain","Ssl","Google","Initialize","xmlHttp","Menu","marginTop","display","gridTemplateColumns","src","image","alt","width","paddingTop","fontSize","cursor","exec","title","OnOff","toggle","reload","float","marginLeft","Information","go","Edit","Light","device","Object","keys","toString","color_strip","height","borderRadius","backgroundColor","opacity","paddingLeft","Outlet","TemperatureSetting","up","down","update","temperature","marginRight","AcUnit","AirFreshener","AirPurifier","Bed","Fan","Fireplace","Radiator","Switch","Thermostat","AirCooler","Bathtub","Awing","Blinds","Closet","Curtain","Door","Drawer","Garage","Pergola","Shutter","Valve","Window","Lock","Gate","Heater","Hood","SecuritySystem","Blender","Global","Scene","Devices","loadData","newDevice","setInterval","map","key","Text","event","defaultValue","onChange","updateCheckbox","checked","defaultChecked","Brightness","FanSpeed","updateFanSpeeds","addFanSpeed","speed_id","speed_attribute","temp_availableFanSpeeds","speed_values","speed_name","push","names_box","speed","speed_synonym","supportsFanSpeedPercent","ColorSetting","min","max","updateMode","addMode","mode_id","temp_availableThermostatModes","splice","join","modes","mode","Toggles","updatetoggle","addToggle","toggle_id","toggle_attribute","temp_availableToggles","name_values","toggles","name_synonym","Modes","temp_availableModes","values","settings","setting_name","setting_values","setting_synonym","settings_box","setting","HumiditySetting","OpenClose","Rotation","Fill","updateLevels","addLevel","level_id","level_attribute","temp_availableFillLevels","level_values","level_name","level","level_synonym","ArmDisarm","updateSecurityLevel","addSecurityLevel","temp_availableArmLevels","StartStop","updateArray","Timer","TemperatureControl","Cook","updatePreset","addPreset","temp_supportedCookingModes","preset_id","temp_foodPresets","food_synonyms","synonym","food_preset_name","supported_units","presets","preset","Editor","pathname","create","deviceInfo","defaultnames","nicknames","posible_traits","save_status","updateNames","updateId","updateType","updateTraits","save","delete","renderAttrinutes","dumy_key","names","temp_device","temp_status","forEach","attribute","filter","index","arr","payload","confirm","trait","types","toLowerCase","disabled","hwVersion","swVersion","manufacturer","model","dev","sta","json_viewer","textAlign","Tasks","tasks","openManager","newTask","task","description","Logic","addOr","addAnd","openTriggerAssistant","addTriggerLogic","num_operations","triggers","operation","operations","op","Trigger","renderTriggerText","week","days","Triggers","trigger","Assistant","addTriggerOperation","hour","minute","closeTriggerAssistant","Device","updateDevice","updateParam","typeConversion","origen","int","list","bool","string","options","option","DeviceToDevice","device_a","device_b","updateDependencies","params_a","params_b","timeTigger","deiceTrigger","deviceToDeviceTrigger","Time","Target","marginBottom","addTarget","Manager","trigger_assistant_parent","deleteTrigger","devices_names","tas","parent","ts","Date","now","targets","DeviceTarget","Settings","google","ddns","mqtt","apikey","auth","token","fulfillment","client_id","client_secret","user","password","ip","last","enabled","provider","username","fontWeight","padding","paddingRight","ReactMarkdown","require","System","components","git","version","upgrading","loadComponents","upgrade","areYouAwake","vers","latestRelease","body","tag_name","comp","response","conn","git_description","paddingBottom","border","component","enable","source","restart","reboot","shutdown","Backup","button","restore_url","backup","method","encType","action","Access","generateAPIKey","Logs","page","previousPage","nextPage","downloadLog","line","borderBottom","yellow","red","homeware_lan_log","reverse","slice","register","severity","time","Login","login","grantAccess","App","session","logout","exact","path","Info","Boolean","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.b1217981.chunk.js","sourcesContent":["function getCookieValue(cname) {\n  var name = cname + \"=\";\n  var decodedCookie = decodeURIComponent(document.cookie);\n  var ca = decodedCookie.split(';');\n  for(var i = 0; i <ca.length; i++) {\n    var c = ca[i];\n    while (c.charAt(0) === ' ') {\n      c = c.substring(1);\n    }\n    if (c.indexOf(name) === 0) {\n      return c.substring(name.length, c.length);\n    }\n  }\n  return \"\";\n}\n\nexport default getCookieValue;\n","var root = window.location.href.includes('localhost') ? \"http://homeware.local/\" : \"/\"\n\nconst deviceReference = {\n  traits: {\n    \"action.devices.traits.OnOff\": {\n      name: 'Power control',\n      attributes: {\n        commandOnlyOnOff: {\n          type: \"bool\",\n          default: false\n        },\n        queryOnlyOnOff: {\n          type: \"bool\",\n          default: false\n        }\n      },\n      param:{\n        on: {\n          type: \"bool\",\n          default: true\n        }\n      }\n    },\n    \"action.devices.traits.Brightness\": {\n      name: 'Brightness',\n      attributes: {\n        commandOnlyBrightness: {\n          type: \"bool\",\n          default: false\n        }\n      },\n      param:{\n        brightness: {\n          type: \"int\",\n          default: 100\n        }\n      }\n    },\n    \"action.devices.traits.ColorSetting\": {\n      name: 'Color setting',\n      attributes: {\n        colorModel: {\n          type: \"string\",\n          default: \"rgb\"\n        },\n        commandOnlyColorSetting: {\n            type: \"bool\",\n            default: false\n        },\n        colorTemperatureRange: {\n          type: \"object\",\n          default: {\n            temperatureMinK: 4000,\n            temperatureMaxK: 4200\n          },\n          content: {\n            temperatureMinK: {\n              type: \"int\",\n              default: 4000\n            },\n            temperatureMaxK: {\n              type: \"int\",\n              default: 4200\n            }\n          }\n        }\n      },\n      param:{\n        color: {\n          type: \"object\",\n          default: {\n            spectrumRgb: 16711935\n          },\n          content: {\n            temperatureK: {\n              type: \"int\",\n              default: 4000\n            },\n            spectrumRGB: {\n              type: \"int\",\n              default: 255\n            },\n            spectrumHSV:{\n              type: \"object\",\n              content: {\n                hue: {\n                  type: \"float\"\n                },\n                saturation: {\n                  type: \"float\"\n                },\n                default: {\n                  type: \"float\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"action.devices.traits.TemperatureSetting\": {\n      name: 'Temperature Settings',\n      attributes: {\n        availableThermostatModes: {\n          type: \"select\",\n          default: \"off,heat,cool\"\n        },\n        thermostatTemperatureRange: {\n          type: \"object\",\n          default: {\n            minThresholdCelsius: 18,\n            maxThresholdCelsius: 34\n          }\n        },\n        thermostatTemperatureUnit: {\n          type: \"string\",\n          default: \"C\"\n        },\n        bufferRangeCelsius: {\n          type: \"int\",\n          default: 2\n        },\n        commandOnlyTemperatureSetting: {\n          type: \"bool\",\n          default: false\n        },\n        queryOnlyTemperatureSetting: {\n          type: \"bool\",\n          default: false\n        }\n      },\n      param:{\n        thermostatMode: {\n          type: \"string\",\n          default: \"off\"\n        },\n        thermostatTemperatureSetpoint: {\n          type: \"int\",\n          default: 20\n        },\n        thermostatTemperatureAmbient: {\n          type: \"int\",\n          default: 22\n        },\n        thermostatTemperatureSetpointHigh: {\n          type: \"int\",\n          default: 28\n        },\n        thermostatTemperatureSetpointLow: {\n          type: \"int\",\n          default: 18\n        },\n        thermostatHumidityAmbient: {\n          type: \"int\",\n          default: 80\n        }\n      }\n    },\n    \"action.devices.traits.OpenClose\": {\n      name: 'Open or close',\n      attributes: {\n        discreteOnlyOpenClose: {\n          type: \"bool\",\n          default: false\n        },\n        openDirection: {\n          type: \"array\",\n          default: [\"UP\",\"DOWN\",\"LEFT\",\"RIGHT\",\"IN\",\"OUT\"]\n        },\n        commandOnlyOpenClose: {\n          type: \"bool\",\n          default: false\n        },\n        queryOnlyOpenClose: {\n          type: \"bool\",\n          default: false\n        }\n      },\n      param:{\n        openPercent: {\n          type: \"int\",\n          default: 0\n        },\n        openState: {\n          type: \"object\",\n          default: {\n            openPercent: 0,\n            openDirection: \"UP\"\n          },\n          content: {\n            openPercent:{\n              type: \"int\",\n              default: 0\n            },\n            openDirection:{\n              type: \"int\",\n              default: \"down\"\n            }\n          }\n        }\n      }\n    },\n    \"action.devices.traits.Rotation\": {\n      name: 'Rotation',\n      attributes: {\n        commandOnlyRotation: {\n          type: \"bool\",\n          default: false\n        },\n        supportsContinuousRotation: {\n          type: \"bool\",\n          default: false\n        },\n        supportsDegrees: {\n          type: \"bool\",\n          default: false\n        },\n        supportsPercent: {\n          type: \"bool\",\n          default: false\n        },\n        rotationDegreesRange: {\n          type: \"object\",\n          default: {\n            rotationDegreesMin: 0,\n            rotationDegreesMax: 0\n          },\n          content: {\n            rotationDegreesMin: {\n              type: \"int\"\n            },\n            rotationDegreesMax: {\n              type: \"int\"\n            }\n          }\n        }\n      },\n      param:{\n        rotationPercent: {\n          type: \"int\",\n          default: 0\n        },\n        rotationDegrees: {\n          type: \"int\",\n          default: 0\n        }\n      }\n    },\n    \"action.devices.traits.LockUnlock\": {\n      name: 'Lock or unlock',\n      attributes: {},\n      param:{\n        isLocked: {\n          type: \"bool\",\n          default: false\n        },\n        isJammed: {\n          type: \"bool\",\n          default: false\n        }\n      }\n    },\n    \"action.devices.traits.Scene\": {\n      name: 'Scene',\n      attributes: {\n        sceneReversible: {\n          type: \"bool\",\n          default: true\n        }\n      },\n      param:{\n        deactivate: {\n          type: \"bool\",\n          default: true\n        }\n      }\n    },\n    \"action.devices.traits.Dock\": {\n      name: 'Dock',\n      attributes: {},\n      param:{\n        isDocked: {\n          type: \"bool\",\n          default: false\n        }\n      }\n    },\n    \"action.devices.traits.Toggles\": {\n      name: 'Toogles',\n      attributes: {\n        availableToggles: {\n          type: \"strigifyedObject\",\n          default: []\n        },\n        commandOnlyToggles: {\n          type: \"bool\",\n          default: false\n        }\n      },\n      param: {\n      }\n    },\n    \"action.devices.traits.StartStop\": {\n      name: 'Start and stop',\n      attributes: {\n        availableZones: {\n          type: \"array\",\n          default: []\n        },\n        pausable: {\n          type: \"bool\",\n          default: false\n        }\n      },\n      param: {\n        isRunning: {\n          type: \"bool\",\n          default: false\n        },\n        isPaused: {\n          type: \"bool\",\n          default: false\n        },\n        activeZones: ~{\n          type: \"array\",\n          default: []\n        }\n      }\n    },\n    \"action.devices.traits.Timer\": {\n      name: 'Timer',\n      attributes: {\n        maxTimerLimitSec: {\n          type: \"int\",\n          default: 1000\n        },\n        commandOnlyTimer: {\n          type: \"bool\",\n          default: false\n        }\n      },\n      param: {\n        timerRemainingSec: {\n          type: \"int\",\n          default: -1\n        },\n        timerPaused: {\n          type: \"bool\",\n          default: false\n        }\n      }\n    },\n    \"action.devices.traits.TemperatureControl\": {\n      name: 'Temperature control',\n      attributes: {\n        temperatureStepCelsius: {\n          type: \"int\",\n          default: 5\n        },\n        temperatureUnitForUX: {\n          type: \"string\",\n          default: \"C\"\n        },\n        queryOnlyTemperatureControl: {\n          type: \"bool\",\n          default: false\n        },\n        commandOnlyTemperatureControl: {\n          type: \"bool\",\n          default: false\n        },\n        temperatureRange: {\n          type: \"object\",\n          default: {\n            minThresholdCelsius: 0,\n            maxThresholdCelsius: 150\n          },\n          content: {\n            minThresholdCelsius: {\n              type: \"int\"\n            },\n            maxThresholdCelsius: {\n              type: \"int\"\n            }\n          }\n        }\n      },\n      param: {\n        temperatureSetpointCelsius: {\n          type: \"int\",\n          default: 20\n        },\n        temperatureAmbientCelsius: {\n          type: \"int\",\n          default: 20\n        }\n      }\n    },\n    \"action.devices.traits.FanSpeed\": {\n      name: 'Fan Speed',\n      attributes: {\n        availableFanSpeeds: {\n          type: \"strigifyedObject\",\n          default: {\n            speeds: [],\n            ordered: true\n          }\n        },\n        reversible: {\n          type: \"bool\",\n          default: true\n        },\n        commandOnlyFanSpeed: {\n          type: \"bool\",\n          default: true\n        }\n      },\n      param: {\n        currentFanSpeedSetting: {\n          type: \"string\",\n          default: \"\"\n        }\n      }\n    },\n    \"action.devices.traits.ArmDisarm\": {\n      name: 'Arm or disarm',\n      attributes: {\n        availableArmLevels: {\n          type: \"strigifyedObject\",\n          default: {\n            levels: [],\n            ordered: true\n          }\n        }\n      },\n      param: {\n        isArmed: {\n          type: \"bool\",\n          default: false\n        },\n        currentArmLevel: {\n          type: \"string\",\n          default: \"\"\n        },\n        exitAllowance: {\n          type: \"int\",\n          default: 20\n        }\n      }\n    },\n    \"action.devices.traits.Fill\": {\n      name: 'Fill',\n      attributes: {\n        availableFillLevels: {\n          type: \"strigifyedObject\",\n          default: {\n            levels: [],\n            ordered: true\n          }\n        }\n      },\n      param: {\n        isFilled: {\n          type: \"bool\",\n          default: false\n        },\n        currentFillLevel: {\n          type: \"string\",\n          default: \"\"\n        }\n      }\n    },\n    \"action.devices.traits.RunCycle\": {\n      name: 'RunCycle',\n      attributes: {},\n      param: {\n        lang: 'en'\n      }\n    },\n    \"action.devices.traits.StatusReport\": {\n      name: 'Status report',\n      attributes: {},\n      param: {\n        currentStatusReport: {\n          type: 'object',\n          default: {}\n        }\n      }\n    },\n    \"action.devices.traits.HumiditySetting\": {\n      name: 'Humidity setting',\n      attributes: {\n        humiditySetpointRange: {\n          type: \"object\",\n          default: {\n            minPercent: 0,\n            maxPercent: 100\n          },\n          content: {\n            minPercent: {\n              type: \"int\"\n            },\n            maxPercent: {\n              type: \"int\"\n            }\n          }\n        },\n        commandOnlyHumiditySetting: {\n          type: \"bool\",\n          default: false\n        },\n        queryOnlyHumiditySetting: {\n          type: \"bool\",\n          default: false\n        }\n      },\n      param: {\n        humiditySetpointPercent: {\n          type: \"int\",\n          default: 30\n        },\n        humidityAmbientPercent: {\n          type: \"int\",\n          default: 20\n        }\n      }\n    },\n    \"action.devices.traits.Cook\": {\n      name: 'Cooking',\n      attributes: {\n        foodPresets: {\n          type: \"strigifyedObject\",\n          default: []\n        },\n        supportedCookingModes: {\n          type: \"selectToArray\",\n          default: []\n        }\n      },\n      param: {\n        currentCookingMode: {\n          type: \"string\",\n          default: \"\"\n        },\n        currentFoodPreset: {\n          type: \"string\",\n          default: \"\"\n        },\n        currentFoodQuantity: {\n          type: \"int\",\n          default: 0\n        },\n        currentFoodUnit: {\n          type: \"string\",\n          default: \"\"\n        }\n      }\n    },\n    \"action.devices.traits.Modes\": {\n      name: 'Modes',\n      attributes: {\n        availableModes: {\n          type: \"strigifyedObject\",\n          default: []\n        },\n        commandOnlyModes: {\n          type: \"bool\",\n          default: false\n        }\n      },\n      param: {\n      }\n    },\n    \"action.devices.traits.Locator\": {\n      name: 'Locator',\n      attributes: {\n      },\n      param: {\n      }\n    }\n  },\n  devices: {\n    \"action.devices.types.AC_UNIT\": {\n      name: \"AC unit\",\n      traits: [\n        \"action.devices.traits.FanSpeed\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.TemperatureSetting\"\n      ]\n    },\n    \"action.devices.types.AIRCOOLER\": {\n      name: \"Air cooler\",\n      traits: [\n        \"action.devices.traits.FanSpeed\",\n        \"action.devices.traits.HumiditySetting\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.TemperatureSetting\"\n      ]\n    },\n    \"action.devices.types.AIRFRESHENER\": {\n      name: \"Air freshener\",\n      traits: [\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.AIRPURIFIER\": {\n      name: \"Air purifier\",\n      traits: [\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.FanSpeed\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.AWNING\": {\n      name: \"Awing\",\n      traits: [\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OpenClose\"\n      ]\n    },\n    \"action.devices.types.BATHTUB\": {\n      name: \"Bathtub\",\n      traits: [\n        \"action.devices.traits.Fill\",\n        \"action.devices.traits.OnOff\"\n      ]\n    },\n    \"action.devices.types.BED\": {\n      name: \"Bed\",\n      traits: [\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.BLINDS\": {\n      name: \"Blinds\",\n      traits: [\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OpenClose\"\n      ]\n    },\n    \"action.devices.types.BLENDER\": {\n      name: \"Blender\",\n      traits: [\n        \"action.devices.traits.Cook\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Timer\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.BOILER\": {\n      name: \"Boiler\",\n      traits: [\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.TemperatureControl\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.CLOSET\": {\n      name: \"Closet\",\n      traits: [\n        \"action.devices.traits.OpenClose\"\n      ]\n    },\n    \"action.devices.types.COFFE_MAKER\": {\n      name: \"Coffe maker\",\n      traits: [\n        \"action.devices.traits.Cook\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.TemperatureControl\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.COOKTOP\": {\n      name: \"Cooktop\",\n      traits: [\n        \"action.devices.traits.Cook\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Timer\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.CURTAIN\": {\n      name: \"Curtain\",\n      traits: [\n        \"action.devices.traits.OpenClose\"\n      ]\n    },\n    \"action.devices.types.DEHUMIDIFIER\": {\n      name: \"Dehumidifier\",\n      traits: [\n        \"action.devices.traits.FanSpeed\",\n        \"action.devices.traits.HumiditySetting\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.RunCycle\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.DEHYDRATOR\": {\n      name: \"Dehydrator\",\n      traits: [\n        \"action.devices.traits.Cook\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Timer\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.DISHWASHER\": {\n      name: \"Dishwasher\",\n      traits: [\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.Toggles\",\n        \"action.devices.traits.RunCycle\"\n      ]\n    },\n    \"action.devices.types.DOOR\": {\n      name: \"Door\",\n      traits: [\n        \"action.devices.traits.OpenClose\"\n      ]\n    },\n    \"action.devices.types.DRAWER\": {\n      name: \"Drawer\",\n      traits: [\n        \"action.devices.traits.OpenClose\"\n      ]\n    },\n    \"action.devices.types.DRYER\": {\n      name: \"Dryer\",\n      traits: [\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.Toggles\",\n        \"action.devices.traits.RunCycle\"\n      ]\n    },\n    \"action.devices.types.FAN\": {\n      name: \"Fan\",\n      traits: [\n        \"action.devices.traits.FanSpeed\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.FIREPLACE\": {\n      name: \"Fireplace\",\n      traits: [\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.FRYER\": {\n      name: \"Fryer\",\n      traits: [\n        \"action.devices.traits.Cook\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Timer\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.GARAGE\": {\n      name: \"Garage\",\n      traits: [\n        \"action.devices.traits.OpenClose\"\n      ]\n    },\n    \"action.devices.types.GATE\": {\n      name: \"Gate\",\n      traits: [\n        \"action.devices.traits.OpenClose\"\n      ]\n    },\n    \"action.devices.types.GRILL\": {\n      name: \"Grill\",\n      traits: [\n        \"action.devices.traits.Cook\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Timer\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.HEATER\": {\n      name: \"Heater\",\n      traits: [\n        \"action.devices.traits.FanSpeed\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.TemperatureSetting\",\n      ]\n    },\n    \"action.devices.types.HOOD\": {\n      name: \"Hood\",\n      traits: [\n        \"action.devices.traits.FanSpeed\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.HUMIDIFIER\": {\n      name: \"Humidifier\",\n      traits: [\n        \"action.devices.traits.FanSpeed\",\n        \"action.devices.traits.HumiditySetting\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.KETTLE\": {\n      name: \"Kettle\",\n      traits: [\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.TemperatureControl\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.LIGHT\": {\n      name: \"Light\",\n      traits: [\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.Brightness\",\n        \"action.devices.traits.ColorSetting\"\n      ]\n    },\n    \"action.devices.types.LOCK\": {\n      name: \"Lock\",\n      traits: [\n        \"action.devices.traits.LockUnlock\"\n      ]\n    },\n    \"action.devices.types.MICROWAVE\": {\n      name: \"Microwave\",\n      traits: [\n        \"action.devices.traits.Cook\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Timer\",\n        \"action.devices.traits.Toggles\"\n      ],\n    },\n    \"action.devices.types.MULTICOOKER\": {\n      name: \"Multicooker\",\n      traits: [\n        \"action.devices.traits.Cook\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Timer\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.MOP\": {\n      name: \"Mop\",\n      traits: [\n        \"action.devices.traits.Dock\",\n        \"action.devices.traits.Locator\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.RunCycle\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.MOWER\": {\n      name: \"Mower\",\n      traits: [\n        \"action.devices.traits.Dock\",\n        \"action.devices.traits.Locator\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.RunCycle\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.OUTLET\": {\n      name: \"Outlet\",\n      traits: [\n        \"action.devices.traits.OnOff\"\n      ]\n    },\n    \"action.devices.types.OVEN\": {\n      name: \"Oven\",\n      traits: [\n        \"action.devices.traits.Cook\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.TemperatureControl\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.PERGOLA\": {\n      name: \"Pergola\",\n      traits: [\n        \"action.devices.traits.OpenClose\",\n        \"action.devices.traits.Rotation\"\n      ]\n    },\n    \"action.devices.types.PRESSURECOOKER\": {\n      name: \"Pressure cooker\",\n      traits: [\n        \"action.devices.traits.Cook\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Timer\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.RADIATOR\": {\n      name: \"Radiator\",\n      traits: [\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.REFRIGERATOR\": {\n      name: \"Refrigerator\",\n      traits: [\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.TemperatureControl\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.SECURITYSYSTEM\": {\n      name: \"Security system\",\n      traits: [\n        \"action.devices.traits.ArmDisarm\",\n        \"action.devices.traits.StatusReport\"\n      ]\n    },\n    \"action.devices.types.SHOWER\": {\n      name: \"Shower\",\n      traits: [\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.TemperatureControl\"\n      ]\n    },\n    \"action.devices.types.SHUTTER\": {\n      name: \"Shutter\",\n      traits: [\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OpenClose\",\n        \"action.devices.traits.Rotation\"\n      ]\n    },\n    \"action.devices.types.SOUSVIDE\": {\n      name: \"Sous vide\",\n      traits: [\n        \"action.devices.traits.Cook\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Timer\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.SPRINKLER\": {\n      name: \"Sprinkler\",\n      traits: [\n        \"action.devices.traits.StartStop\"\n      ]\n    },\n    \"action.devices.types.STANDMIXER\": {\n      name: \"Stand mixer\",\n      traits: [\n        \"action.devices.traits.Cook\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.SWITCH\": {\n      name: \"Switch\",\n      traits: [\n        \"action.devices.traits.OnOff\"\n      ]\n    },\n    \"action.devices.types.THERMOSTAT\": {\n      name: \"Thermostat\",\n      traits: [\n        \"action.devices.traits.TemperatureSetting\"\n      ]\n    },\n    \"action.devices.types.VACUUM\": {\n      name: \"Vacum\",\n      traits: [\n        \"action.devices.traits.Dock\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.VALVE\": {\n      name: \"Valve\",\n      traits: [\n        \"action.devices.traits.OpenClose\"\n      ]\n    },\n    \"action.devices.types.WASHER\": {\n      name: \"Washer\",\n      traits: [\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.RunCycle\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.WATERHEATER\": {\n      name: \"Water heater\",\n      traits: [\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.TemperatureControl\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.WINDOW\": {\n      name: \"Window\",\n      traits: [\n        \"action.devices.traits.LockUnlock\",\n        \"action.devices.traits.OpenClose\"\n      ]\n    },\n    \"action.devices.types.SCENE\": {\n      name: \"Scene\",\n      traits: [\n        \"action.devices.traits.Scene\"\n      ]\n    },\n    \"action.devices.types.YOGURTMAKER\": {\n      name: \"Yogurt maker\",\n      traits: [\n        \"action.devices.traits.Cook\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Timer\",\n        \"action.devices.traits.Toggles\"\n      ]\n    }\n  },\n  params: {\n    thermostatTemperatureAmbient: {\n      type: \"int\",\n      name: 'Ambient temperature'\n    },\n    thermostatTemperatureSetpoint: {\n      type: \"int\",\n      name: 'Temperature set point'\n    },\n    thermostatHumidityAmbient: {\n      type: \"int\",\n      name: 'Ambient humidity'\n    },\n    thermostatMode: {\n      type: \"list\",\n      select: [\"cool\",\"heat\",\"off\",\"on\",\"heatcool\",\"auto\",\"fan-only\",\"purifier\",\"eco\",\"dry\"],\n      name: 'Mode'\n    },\n    on: {\n      type: \"bool\",\n      select: [\"true\",\"false\"],\n      name: 'Power'\n    },\n    deactivate: {\n      type: \"bool\",\n      select: [\"true\",\"false\"],\n      name: 'Deactivate'\n    },\n    brightness: {\n      type: \"int\",\n      name: 'Brightness'\n    },\n    online: {\n      type: \"bool\",\n      select: [\"true\",\"false\"],\n      name: 'Online'\n    },\n    color: {\n      type: \"color\",\n      name: 'Color'\n    },\n    thermostatTemperatureSetpointHigh: {\n      type: \"int\",\n      name: 'Hight set point in heatcool mode'\n    },\n    thermostatTemperatureSetpointLow: {\n      type: \"int\",\n      name: 'Low set point in heatcool mode'\n    },\n    openPercent: {\n      type: \"int\",\n      name: 'Open percentage'\n    },\n    rotationPercent: {\n      type: \"d2i\",\n      name: 'Rotation percentage'\n    },\n    rotationDegrees: {\n      type: \"int\",\n      name: 'Ration degrees'\n    },\n    isLocked: {\n      type: \"bool\",\n      name: 'Is locked'\n    },\n    isJammed: {\n      type: \"bool\",\n      name: 'Is jammed'\n    },\n    isDocked: {\n      type: \"bool\",\n      name: 'Is docked'\n    },\n    isRunnin: {\n      type: \"bool\",\n      name: 'Is running'\n    },\n    isPaused: {\n      type: \"bool\",\n      name: 'Is paused'\n    },\n    timerRemainingSec: {\n      type: \"int\",\n      name: 'Remaining time [seconds]'\n    },\n    timerPaused: {\n      type: \"bool\",\n      name: 'Is paused'\n    },\n    temperatureSetpointCelsius: {\n      type: \"int\",\n      name: 'Set point'\n    },\n    temperatureAmbientCelsius: {\n      type: \"int\",\n      name: 'Ambient'\n    },\n    currentFanSpeedSetting: {\n      type: \"string\",\n      name: 'Fan speed setting'\n    },\n    isArmed: {\n      type: \"bool\",\n      name: 'Is armed'\n    },\n    exitAllowance: {\n      type: \"int\",\n      name: 'Time to leave'\n    },\n    isFilled: {\n      type: \"bool\",\n      name: 'Is filled'\n    },\n    humiditySetpointPercent: {\n      type: \"int\",\n      name: 'Humidity set point'\n    },\n    humidityAmbientPercent: {\n      type: \"int\",\n      name: 'Ambient humidity'\n    },\n    currentArmLevel: {\n      type: \"string\",\n      name: 'Current security level'\n    },\n    currentFillLevel: {\n      type: \"string\",\n      name: 'Current fill levell'\n    },\n    currentCookingMode: {\n      type: \"string\",\n      name: 'Current cooking mode'\n    },\n    currentFoodPreset: {\n      type: \"string\",\n      name: 'Current food preset'\n    },\n    currentFoodQuantity: {\n      type: \"int\",\n      name: 'Current food quantity'\n    },\n    currentFoodUnit: {\n      type: \"string\",\n      name: 'Current food unit'\n    },\n  }\n}\n\nexport { root, deviceReference }\n","import React from 'react';\n\nimport './Assistant.css';\n\nclass Welcome extends React.Component {\n  constructor(props) {\n    super(props);\n    this.next = this.next.bind(this);\n  }\n\n\n  next() {\n    window.location.href = '/assistant/user/';\n  }\n\n  render() {\n\n    return (\n      <div className=\"assistant_container\">\n        <h1>Homeware configuration assistant</h1><br/>\n        <p>Follow this assistant in order to configure your Homeware installation.</p>\n        <br/>\n        <button type=\"button\" onClick={this.next}>Next</button>\n      </div>\n    );\n\n\n  }\n}\n\nexport default Welcome\n","import React from 'react';\n\nclass User extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      enable_next: false,\n      enable_message: false,\n      message: ''\n    }\n    this.set = this.set.bind(this);\n    this.next = this.next.bind(this);\n  }\n\n  set() {\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      if (http.readyState === 4) {\n        if (http.status === 200) {\n          this.setState({\n            enable_next: true,\n            enable_message: true,\n            message: http.responseText\n          });\n          console.error(http.responseText);\n        } else {\n          console.error(http.statusText);\n          this.setState({\n            enable_message: true,\n            message: 'Some error has occurred'\n          });\n        }\n        setTimeout(function(){\n          this.setState({\n            enable_message: false,\n            message: ''\n          });\n        }.bind(this), 5000)\n      }\n    }.bind(this);\n    var url = 'http://' + window.location.hostname + ':5001/api/user/set/';\n    http.open( \"POST\", url, true );\n    http.setRequestHeader(\"Content-type\", \"application/json\");\n    http.send(JSON.stringify({\n      'user': document.getElementById('user').value,\n      'pass': document.getElementById('password').value\n    }));\n  }\n\n  next() {\n    if (this.state.enable_next)\n      window.location.href = '/assistant/domain/';\n    else\n      alert('You must create an user')\n  }\n\n  render() {\n\n    const element = {\n      margin: '10px'\n    }\n\n    var message = '';\n    if (this.state.enable_message){\n      message = <div className=\"alert_message\"> { this.state.message } </div>\n    }\n\n    return (\n      <div className=\"assistant_container\">\n        <h1>Homeware configuration assistant - User</h1>\n        <p>In order to keep your Homeware installation secure you must create an user and a password.</p>\n        <br/>\n        { message }\n        <span style={ element }>Username</span>\n        <input type=\"text\" name=\"user\" id=\"user\"/>\n        <span style={ element }>Password</span>\n        <input type=\"password\" name=\"password\" id=\"password\"/>\n        <button type=\"button\" onClick={this.set}>Create</button>\n        <br/>\n        <br/>\n        <button type=\"button\" onClick={this.next}>Next</button>\n      </div>\n    );\n\n\n  }\n}\n\nexport default User\n","import React from 'react';\n\nclass Domain extends React.Component {\n  constructor(props) {\n    super(props);\n    this.next = this.next.bind(this);\n  }\n\n\n  next() {\n    window.location.href = '/assistant/confignginx/';\n  }\n\n  render() {\n\n    return (\n      <div className=\"assistant_container\">\n        <h1>Homeware configuration assistant - Domain</h1>\n        <p>You must get a domain and point it to your WAN IP.</p>\n        <div className=\"assistant_text\">\n\n          <p>There are two possibilities:</p>\n            <ul>\n              <li>Use a static IP and a DNS</li>\n              <li>Use a dinamic IP and a DDNS</li>\n            </ul>\n          <p>If you have a static WAN IP, you probably know how to configure your domain name</p>\n          <p>If you have a dinamic IP, you should use a DDNS provider</p>\n          <p>The process depend on the provider you choose. For example, you can use <a href='https://my.noip.com' target='blanck'>no-ip</a> as the provider:</p>\n          <ul>\n            <li>Create an account in no-ip.</li>\n            <li>Go to <i>Dynamic DNS</i> and create a new <i>Hostname</i>.\n                <ul>\n                  <li>Choose a unique <i>Hostname</i>.</li>\n                  <li>Select <i>DNS Host (A)</i>.</li>\n                  <li>Fill the <i>IPv4 Address</i> with your WAN/public IP. You can get it from <a href='https://www.whatismyip.com/what-is-my-public-ip-address/' target='blanck'>WhatsMyIp</a>.</li>\n                </ul>\n            </li>\n            <li>When the installation will be completed you must configure the DDNS data from the <i>Settings</i> section on Homeware.</li>\n          </ul>\n        </div>\n        <button type=\"button\" onClick={this.next}>Next</button>\n\n      </div>\n    );\n\n\n  }\n}\n\nexport default Domain\n","import React from 'react';\n\nclass Confignginx extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      enable_next: false,\n      enable_message: false,\n      message: ''\n    }\n    this.set = this.set.bind(this);\n    this.next = this.next.bind(this);\n  }\n\n  set() {\n\n  }\n\n  next() {\n    window.location.href = '/assistant/change2domain/';\n  }\n\n  render() {\n\n    var message = '';\n    if (this.state.enable_message){\n      message = <div className=\"alert_message\"> { this.state.message } </div>\n    }\n\n    return (\n      <div className=\"assistant_container\">\n        <h1>Homeware configuration assistant - Configuration of Nginx</h1>\n        <p>Configure Nginx with the initial settings</p>\n        { message }\n        <br/>\n        <div className=\"assistant_text\">\n          <p>Open a terminal on your Raspberry Pi or connect to the Raspberry Pi using SSH and run:</p>\n          <br/>\n          <span className=\"code\">$ cd /usr/share/Homeware-LAN/bash</span><br/><br/><br/>\n          <span className=\"code\">$ sudo sh confignginx.sh your.domain.com</span>\n        </div>\n        <br/>\n        <br/>\n        <button type=\"button\" onClick={this.next}>Next</button>\n      </div>\n    );\n\n\n  }\n}\n\nexport default Confignginx\n","import React from 'react';\n\nclass Change2domain extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      enable_next: false,\n      enable_message: false,\n      message: ''\n    }\n    this.set = this.set.bind(this);\n  }\n\n  set() {\n    var http = new XMLHttpRequest();\n    http.onreadystatechange = function() {\n      console.log(http.status)\n      if (http.status === 200) {\n        var data = JSON.parse(http.responseText);\n        console.log(data);\n        if (data.code === 200 )\n          window.location.href = 'http://' + document.getElementById('domain').value + '/assistant/changed2domain/';\n        else\n          this.setState({\n            enable_message: true,\n            message: data.error\n          });\n      } else {\n        console.error(http.statusText);\n        this.setState({\n          enable_message: true,\n          message: 'Some error has occurred'\n        });\n      }\n    }.bind(this);\n    var url = 'http://' + window.location.hostname + ':5001/api/settings/domain/' + document.getElementById('domain').value;\n    http.open( \"GET\", url, true );\n    http.send( null );\n  }\n\n  render() {\n\n    var message = '';\n    if (this.state.enable_message){\n      message = <div className=\"alert_message\"> { this.state.message } </div>\n    }\n\n    return (\n      <div className=\"assistant_container\">\n      <h1>Homeware configuration assistant - Change to domain</h1><br/>\n      <p>Open your router config web page, look for <i>Port Forwarding</i> and create the following rules.</p>\n        { message }\n        <div className=\"assistant_text\">\n        <ul>\n          <li>80 port:\n            <ul>\n              <li>Protocol: TCP</li>\n              <li>WAN start port: 80</li>\n              <li>WAN end port: 80</li>\n              <li>LAN start port: 80</li>\n              <li>LAN end port: 80</li>\n              <li>LAN host IP: The Raspberry Pi IP</li>\n            </ul>\n          </li>\n          <li>443 port:\n            <ul>\n              <li>Protocol: TCP</li>\n              <li>WAN start port: 443</li>\n              <li>WAN end port: 443</li>\n              <li>LAN start port: 443</li>\n              <li>LAN end port: 443</li>\n              <li>LAN host IP: The Raspberry Pi IP</li>\n            </ul>\n          </li>\n        </ul>\n        <p>Now we must change to your domain.</p>\n        <input type=\"text\" id=\"domain\" placeholder=\"Your domain\"/>\n        <button type=\"button\" onClick={this.set}>Next</button>\n        </div>\n      </div>\n    );\n\n\n  }\n}\n\nexport default Change2domain\n","import React from 'react';\n\nimport './Assistant.css';\n\nclass Changed2domain extends React.Component {\n  constructor(props) {\n    super(props);\n    this.next = this.next.bind(this);\n  }\n\n\n  next() {\n    window.location.href = '/assistant/ssl/';\n  }\n\n  render() {\n\n    return (\n      <div className=\"assistant_container\">\n      <h1>Homeware configuration assistant - Change to domain</h1>\n      <p>Congrats, now you are accessing your Homeware from the Internet. See the URL in the top bar :-) </p>\n        <br/>\n        <button type=\"button\" onClick={this.next}>Next</button>\n      </div>\n    );\n\n\n  }\n}\n\nexport default Changed2domain\n","import React from 'react';\n\nimport './Assistant.css';\n\nclass Ssl extends React.Component {\n  constructor(props) {\n    super(props);\n    this.next = this.next.bind(this);\n  }\n\n\n  next() {\n    window.location.href = '/assistant/google/';\n  }\n\n  render() {\n\n    return (\n      <div className=\"assistant_container\">\n        <h1>Homeware configuration assistant - SSL certificate</h1>\n        <p>Google needs to comunicate with the Raspberry Pi via HTTPS, so we need a SSL certicate for Homeware.</p>\n        <br/>\n        <div className=\"assistant_text\">\n        <p>Open a terminal on your Raspberry Pi or connect to the Raspberry Pi using SSH and run:</p>\n        <br/>\n        <span className=\"code\">$ sudo certbot --nginx</span><br/><br/>\n        <p>Follow the Certbot instructions. When Certbot ask you about redirecting http to https, enable it.</p>\n        </div>\n        <br/>\n        <br/>\n        <button type=\"button\" onClick={this.next}>Next</button>\n      </div>\n    );\n\n\n  }\n}\n\nexport default Ssl\n","import React from 'react';\n\nimport './Assistant.css';\n\nclass Google extends React.Component {\n  constructor(props) {\n    super(props);\n    this.next = this.next.bind(this);\n  }\n\n\n  next() {\n    window.location.href = '/assistant/initialize/';\n  }\n\n  render() {\n\n    return (\n      <div className=\"assistant_container\">\n      <h1>Homeware configuration assistant - Google</h1>\n      <p>Google needs to know where Homeware is.</p>\n        <br/>\n        <div className=\"assistant_text\">\n          <p>Follow the instructions on this wiki <a href=\"https://github.com/kikeelectronico/Homeware-LAN/wiki/Connect-Homeware-LAN-with-Google\" target=\"blanck\">https://github.com/kikeelectronico/Homeware-LAN/wiki/Connect-Homeware-LAN-with-Google</a>.</p>\n          <p>During the process you will use the following Client Information. You will be able to change it from the <i>Settings</i> page in the future.</p>\n          <span id=\"actionOnGoogleData\">\n            <b>Client ID:</b> 123<br/>\n            <b>Client Secret:</b> 456<br/>\n            <b>Authorization URL:</b> https://&lt;your.domain.com&gt;/auth/<br/>\n            <b>Token URL:</b> https://&lt;your.domain.com&gt;/token/<br/>\n            <b>Fulfillment URL:</b> https://&lt;your.domain.com&gt;/smarthome/<br/>\n          </span>\n        </div>\n        <br/>\n        <br/>\n        <button type=\"button\" onClick={this.next}>Next</button>\n      </div>\n    );\n\n\n  }\n}\n\nexport default Google\n","import React from 'react';\n\nimport './Assistant.css';\n\nclass Initialize extends React.Component {\n  constructor(props) {\n    super(props);\n\n    var xmlHttp = new XMLHttpRequest();\n    xmlHttp.onreadystatechange = function() {\n      console.log(xmlHttp.responseText)\n    }\n    var url = 'http://' + window.location.hostname + ':5001/api/settings/setAssistantDone/';\n    xmlHttp.open( \"GET\", url, true );\n    xmlHttp.send( null );\n\n    setTimeout(function(){window.location.href = '/'}, 3000);\n  }\n\n  render() {\n\n    return (\n      <div className=\"assistant_container\">\n        <h1>Homeware configuration assistant - Last touches</h1>\n        <p>Homeware is giving it self the last touches.</p>\n      </div>\n    );\n\n\n  }\n}\n\nexport default Initialize\n","import React from 'react';\n\nfunction Menu(props) {\n\n  const menu = {\n    marginTop: '5px',\n    display: 'grid',\n    gridTemplateColumns: '40px auto'\n  }\n\n  const image = {\n    width: '30px'\n  }\n\n  const textContainer = {\n    paddingTop: '4px'\n  }\n\n  const text = {\n    fontSize: '18px',\n    cursor: 'pointer'\n  }\n\n  function go (){\n    window.location.href = props.href;\n  }\n\n  return (\n    <div style={ menu }>\n      <div>\n        <img src={ props.image } alt={ props.image } style={ image }/>\n      </div>\n      <div style={ textContainer }>\n        <span style={ text } onClick={ props.exec ? props.exec : go}>{ props.title }</span>\n      </div>\n    </div>\n  );\n}\n\nexport default Menu\n","import React from 'react';\nimport getCookieValue from '../../../functions'\nimport { root } from '../../../constants'\n\nclass OnOff extends React.Component {\n  constructor(props) {\n    super(props);\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle(){\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      if (http.readyState === 4) {\n        if (http.status === 200) {\n          this.props.reload();\n        } else {\n          console.error(http.statusText);\n        }\n      }\n    }.bind(this)\n    http.open(\"POST\", root + \"api/status/update/\");\n    http.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\n    http.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    http.send(JSON.stringify({\n      \"id\": this.props.id,\n      \"param\": \"on\",\n      \"value\": !this.props.on\n    }));\n  }\n\n  render() {\n\n    const container = {\n      float: 'left',\n      marginLeft: '5px'\n    }\n\n    const image = {\n      width: '30px'\n    }\n\n    return (\n      <div style={container}>\n        <img src={ this.props.on ? '/devices/onoff_on_true.png' : '/devices/onoff_on_false.png'} onClick={ this.toggle } alt={ this.props.image } style={ image }/>\n      </div>\n    );\n  }\n}\n\nexport default OnOff\n","import React from 'react';\n\nclass Information extends React.Component {\n  constructor(props) {\n    super(props);\n    this.go = this.go.bind(this);\n  }\n\n  go(){\n    window.location.href = \"/devices/info/\" + this.props.id + \"/\"\n  }\n\n  render() {\n\n    const container = {\n      float: 'left',\n      marginLeft: '5px'\n    }\n\n    const image = {\n      width: '30px'\n    }\n\n    return (\n      <div style={container}>\n        <img src=\"/devices/information.png\" onClick={ this.go } alt={ this.props.image } style={ image }/>\n      </div>\n    );\n  }\n}\n\nexport default Information\n","import React from 'react';\n\nclass Edit extends React.Component {\n  constructor(props) {\n    super(props);\n    this.go = this.go.bind(this);\n  }\n\n  go(){\n    window.location.href = \"/devices/editor/\" + this.props.id + \"/\"\n  }\n\n  render() {\n\n    const container = {\n      float: 'left',\n      marginLeft: '5px'\n    }\n\n    const image = {\n      width: '30px'\n    }\n\n    return (\n      <div style={container}>\n        <img src=\"/devices/edit.png\" onClick={ this.go } alt={ this.props.image } style={ image }/>\n      </div>\n    );\n  }\n}\n\nexport default Edit\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass Light extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    var color = 'yellow';\n    if (this.props.device.traits.includes(\"action.devices.traits.ColorSetting\")){\n      if (Object.keys(this.props.status.color).includes(\"spectrumRgb\"))\n        color = \"#\" + this.props.status.color.spectrumRgb.toString(16);\n      else\n        color = \"#\" + this.props.status.color.spectrumRGB.toString(16);\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: color,\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Light\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass Outlet extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'blue',\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Outlet\n","import React from 'react';\nimport getCookieValue from '../../../functions'\nimport { root } from '../../../constants'\n\nclass TemperatureSetting extends React.Component {\n  constructor(props) {\n    super(props);\n    this.up = this.up.bind(this);\n    this.down = this.down.bind(this);\n    this.update = this.update.bind(this);\n  }\n\n  up(){\n    var temperature = this.props.status.thermostatTemperatureSetpoint + 1;\n    this.update(temperature)\n  }\n\n  down(){\n    var temperature = this.props.status.thermostatTemperatureSetpoint - 1;\n    this.update(temperature)\n  }\n\n  update(temperature){\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      if (http.readyState === 4) {\n        if (http.status === 200) {\n          this.props.reload();\n        } else {\n          console.error(http.statusText);\n        }\n      }\n    }.bind(this)\n    http.open(\"POST\", root + \"api/status/update/\");\n    http.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\n    http.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    http.send(JSON.stringify({\n      \"id\": this.props.id,\n      \"param\": \"thermostatTemperatureSetpoint\",\n      \"value\": temperature\n    }));\n  }\n\n  render() {\n\n    const container = {\n      float: 'left',\n      marginLeft: '5px'\n    }\n\n    const image = {\n      width: '30px'\n    }\n\n    const temperature = {\n      fontSize: '30px',\n      marginLeft: '5px',\n      marginRight: '5px',\n      color: '#777'\n    }\n\n    return (\n      <div style={container}>\n        <img src='/devices/arrow_down.png' onClick={ this.down } alt='Arrow up' style={ image }/>\n        <span style={temperature}>{this.props.status.thermostatTemperatureSetpoint}</span>\n        <img src='/devices/arrow_up.png' onClick={ this.up } alt='Arrow down' style={ image }/>\n      </div>\n    );\n  }\n}\n\nexport default TemperatureSetting\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport TemperatureSetting from './traits/TemperatureSetting'\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass AcUnit extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    var color = 'yellow';\n    if (this.props.status.thermostatMode === 'off')\n      color = \"#666\";\n    else if (this.props.status.thermostatMode === 'heat')\n      color = \"red\";\n    else if (this.props.status.thermostatMode === 'cool')\n      color = \"lightblue\";\n    else if (this.props.status.thermostatMode === 'on')\n      color = \"yellow\";\n    else if (this.props.status.thermostatMode === 'heatcool')\n      color = \"#DC97FF\";\n    else if (this.props.status.thermostatMode === 'auto')\n      color = \"#EE357E\";\n    else if (this.props.status.thermostatMode === 'fan-only')\n      color = \"blue\";\n    else if (this.props.status.thermostatMode === 'purifier')\n      color = \"#F3882E\";\n    else if (this.props.status.thermostatMode === 'eco')\n      color = \"green\";\n    else if (this.props.status.thermostatMode === 'dry')\n      color = \"#753500\";\n\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: color,\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <TemperatureSetting id={ this.props.device.id } status={this.props.status} on={ this.props.status } reload={ this.props.reload }/>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AcUnit\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass AirFreshener extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'yellow',\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AirFreshener\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass AirPurifier extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'yellow',\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AirPurifier\n","import React from 'react';\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass Bed extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Bed\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass Fan extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'yellow',\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Fan\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass Fireplace extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'yellow',\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Fireplace\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass Radiator extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'yellow',\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Radiator\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass Switch extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'yellow',\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Switch\n","import React from 'react';\nimport TemperatureSetting from './traits/TemperatureSetting'\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass Thermostat extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    var color = 'yellow';\n    if (this.props.status.thermostatMode === 'off')\n      color = \"#666\";\n    else if (this.props.status.thermostatMode === 'heat')\n      color = \"red\";\n    else if (this.props.status.thermostatMode === 'cool')\n      color = \"lightblue\";\n    else if (this.props.status.thermostatMode === 'on')\n      color = \"yellow\";\n    else if (this.props.status.thermostatMode === 'heatcool')\n      color = \"#DC97FF\";\n    else if (this.props.status.thermostatMode === 'auto')\n      color = \"#EE357E\";\n    else if (this.props.status.thermostatMode === 'fan-only')\n      color = \"blue\";\n    else if (this.props.status.thermostatMode === 'purifier')\n      color = \"#F3882E\";\n    else if (this.props.status.thermostatMode === 'eco')\n      color = \"green\";\n    else if (this.props.status.thermostatMode === 'dry')\n      color = \"#753500\";\n\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: color\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <TemperatureSetting id={ this.props.device.id } status={this.props.status} on={ this.props.status } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Thermostat\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass AirCooler extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    var color = 'yellow';\n    if (this.props.device.traits.includes(\"action.devices.traits.ColorSetting\")){\n      color = \"#\" + this.props.status.color.spectrumRgb.toString(16);\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: color,\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AirCooler\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass Bathtub extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    var color = 'yellow';\n    if (this.props.device.traits.includes(\"action.devices.traits.ColorSetting\")){\n      color = \"#\" + this.props.status.color.spectrumRgb.toString(16);\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: color,\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Bathtub\n","import React from 'react';\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass Awing extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Awing\n","import React from 'react';\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass Blinds extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Blinds\n","import React from 'react';\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass Closet extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Closet\n","import React from 'react';\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass Curtain extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Curtain\n","import React from 'react';\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass Door extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Door\n","import React from 'react';\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass Drawer extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Drawer\n","import React from 'react';\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass Garage extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Garage\n","import React from 'react';\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass Pergola extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Pergola\n","import React from 'react';\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass Shutter extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Shutter\n","import React from 'react';\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass Valve extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Valve\n","import React from 'react';\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass Window extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Window\n","import React from 'react';\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass Lock extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Lock\n","import React from 'react';\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass Gate extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Gate\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass Heater extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    var color = 'yellow';\n    if (this.props.device.traits.includes(\"action.devices.traits.ColorSetting\")){\n      color = \"#\" + this.props.status.color.spectrumRgb.toString(16);\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: color,\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Heater\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass Hood extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    var color = 'yellow';\n    if (this.props.device.traits.includes(\"action.devices.traits.ColorSetting\")){\n      color = \"#\" + this.props.status.color.spectrumRgb.toString(16);\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: color,\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Hood\n","import React from 'react';\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass SecuritySystem extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SecuritySystem\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass Blender extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    var color = 'yellow';\n    if (this.props.device.traits.includes(\"action.devices.traits.ColorSetting\")){\n      color = \"#\" + this.props.status.color.spectrumRgb.toString(16);\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: color,\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Blender\n","import React from 'react';\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass Global extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    var color = 'white';\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: color\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Global\n","import React from 'react';\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass Scene extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    var color = 'white';\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: color\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">Scene: { this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Scene\n","import React from 'react';\nimport Light from '../devices/Light'\nimport Outlet from '../devices/Outlet'\nimport AcUnit from '../devices/AcUnit'\nimport AirFreshener from '../devices/AirFreshener'\nimport AirPurifier from '../devices/AirPurifier'\nimport Bed from '../devices/Bed'\nimport Fan from '../devices/Fan'\nimport Fireplace from '../devices/Fireplace'\nimport Radiator from '../devices/Radiator'\nimport Switch from '../devices/Switch'\nimport Thermostat from '../devices/Thermostat'\nimport AirCooler from '../devices/AirCooler'\nimport Bathtub from '../devices/Bathtub'\nimport Awing from '../devices/Awing'\nimport Blinds from '../devices/Blinds'\nimport Closet from '../devices/Closet'\nimport Curtain from '../devices/Curtain'\nimport Door from '../devices/Door'\nimport Drawer from '../devices/Drawer'\nimport Garage from '../devices/Garage'\nimport Pergola from '../devices/Pergola'\nimport Shutter from '../devices/Shutter'\nimport Valve from '../devices/Valve'\nimport Window from '../devices/Window'\nimport Lock from '../devices/Lock'\nimport Gate from '../devices/Gate'\nimport Heater from '../devices/Heater'\nimport Hood from '../devices/Hood'\nimport SecuritySystem from '../devices/SecuritySystem'\nimport Blender from '../devices/Blender'\nimport Global from '../devices/Global'\nimport Scene from '../devices/Scene'\nimport getCookieValue from '../../functions'\nimport { root } from '../../constants'\n\nimport './Devices.css';\n\nclass Devices extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {},\n      devices: []\n    }\n    this.loadData = this.loadData.bind(this);\n    this.newDevice = this.newDevice.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadData();\n    setInterval(this.loadData,3000);\n  }\n\n  loadData(){\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      if (http.readyState === 4) {\n        if (http.status === 200) {\n          var data = JSON.parse(http.responseText);\n          this.setState({\n             data: data,\n             devices: data.devices\n           });\n        } else {\n          console.error(http.statusText);\n        }\n      }\n    }.bind(this);\n    http.open(\"GET\", root + \"api/global/get/\");\n    http.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    http.send();\n  }\n\n  newDevice(){\n    window.location.href = '/devices/editor/'\n  }\n\n  render() {\n\n    const devices = this.state.devices.map((device) => {\n      if(device.type === 'action.devices.types.LIGHT')\n        return <Light key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.OUTLET')\n        return <Outlet key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.AC_UNIT')\n        return <AcUnit key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.AIRFRESHENER')\n        return <AirFreshener key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.AIRPURIFIER')\n        return <AirPurifier key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.BED')\n        return <Bed key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.FAN')\n        return <Fan key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.FIREPLACE')\n        return <Fireplace key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.RADIATOR')\n        return <Radiator key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.SWITCH')\n        return <Switch key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.THERMOSTAT')\n        return <Thermostat key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.AIRCOOLER')\n        return <AirCooler key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.BATHTUB')\n        return <Bathtub key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.AWING')\n        return <Awing key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.AIRCOOLER')\n        return <AirCooler key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.BLINDS')\n        return <Blinds key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.CLOSET')\n        return <Closet key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.CURTAIN')\n        return <Curtain key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.DOOR')\n        return <Door key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.DRAWER')\n        return <Drawer key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.GARAGE')\n        return <Garage key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.GATE')\n        return <Gate key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.PERGOLA')\n        return <Pergola key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.SHUTTER')\n        return <Shutter key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.VALVE')\n        return <Valve key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.WINDOW')\n        return <Window key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.LOCK')\n        return <Lock key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.HEATER')\n        return <Heater key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.HOOD')\n        return <Hood key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.SECURITYSYSTEM')\n        return <SecuritySystem key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.BLENDER')\n        return <Blender key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.SCENE')\n        return <Scene key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else\n        return <Global key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n    });\n\n    return (\n      <div>\n        <div className=\"page_title_container\">\n          <h2>Devices and scences</h2>\n        </div>\n\n        <div className=\"page_cards_container\">\n          { devices }\n        </div>\n\n        <div className=\"page_buttons_containter\">\n          <button type=\"button\" onClick={ this.newDevice }>New</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Devices\n","import React from 'react';\n\nimport '../pages/Editor.css';\n\nclass Text extends React.Component {\n  constructor(props) {\n    super(props);\n    this.update = this.update.bind(this);\n  }\n\n\n  update(event){\n    this.props.update(this.props.data,event.target.value);\n  }\n\n  render() {\n    return (\n      <div className=\"two_table_row\">\n        <div className=\"two_table_cel\">\n          {this.props.name}\n        </div>\n        <div className=\"two_table_cel\">\n          <input type=\"text\" className=\"two_input\" id={this.props.data} defaultValue={this.props.value} onChange={this.update}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Text\n","import React from 'react';\n\nclass Scene extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n  }\n\n\n  updateCheckbox(event){\n    this.props.update('attributes/' + event.target.id,event.target.checked);\n  }\n\n  render() {\n\n\n    return (\n      <div>\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n\n          </div>\n          <div className=\"three_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"sceneReversible\" defaultChecked={this.props.sceneReversible} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>sceneReversible</i></span>\n            </label>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if the scene can be desabled.</span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Scene\n","import React from 'react';\n\nclass OnOff extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n  }\n\n\n  updateCheckbox(event){\n    this.props.update('attributes/' + event.target.id,event.target.checked);\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n\n          </div>\n          <div className=\"three_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"commandOnlyOnOff\" defaultChecked={this.props.attributes.commandOnlyOnOff} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>commandOnlyOnOff</i></span>\n            </label>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the state.</span>\n          </div>\n        </div>\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n          </div>\n          <div className=\"three_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"queryOnlyOnOff\" defaultChecked={this.props.attributes.queryOnlyOnOff} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>queryOnlyOnOff</i></span>\n            </label>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Google shouldn't change the device state.</span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default OnOff\n","import React from 'react';\n\nclass Brightness extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n  }\n\n\n  updateCheckbox(event){\n    this.props.update('attributes/' + event.target.id,event.target.checked);\n  }\n\n  render() {\n\n\n    return (\n      <div>\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n\n          </div>\n          <div className=\"three_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"commandOnlyBrightness\" defaultChecked={this.props.commandOnlyBrightness} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>commandOnlyBrightness</i></span>\n            </label>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the brightness.</span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Brightness\n","import React from 'react';\n\nclass FanSpeed extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n    this.updateFanSpeeds = this.updateFanSpeeds.bind(this);\n    this.addFanSpeed = this.addFanSpeed.bind(this);\n  }\n\n\n  updateCheckbox(event){\n    this.props.update('attributes/' + event.target.id,event.target.checked);\n  }\n\n  updateFanSpeeds(event){\n    const id = event.target.id.split('_')\n    const speed_id = id[1]\n    //Process the attribute and value depending of the attribute\n    const speed_attribute = id[0] === 'lang' ? id[0] : 'speed_synonym';\n    const value = id[0] === 'lang' ? event.target.value : event.target.value.split(',')\n    //Update the temporal data and update it\n    var temp_availableFanSpeeds = this.props.attributes.availableFanSpeeds\n    temp_availableFanSpeeds.speeds[speed_id].speed_values[0][speed_attribute] = value\n    if (id[0] === 'names') temp_availableFanSpeeds.speeds[speed_id].speed_name = value[0]\n    this.props.update('attributes/availableFanSpeeds', temp_availableFanSpeeds);\n  }\n\n  addFanSpeed(){\n    var temp_availableFanSpeeds = this.props.attributes.availableFanSpeeds\n    temp_availableFanSpeeds.speeds.push({\n      \"speed_name\": \"\",\n      \"speed_values\": [\n        {\n          \"speed_synonym\": [\"\"],\n          \"lang\": \"en\"\n        }\n      ]\n    });\n    this.props.update('attributes/availableFanSpeeds', temp_availableFanSpeeds);\n  }\n\n  render() {\n\n    const names_box = {\n      width: '150px'\n    }\n\n    const speeds = this.props.attributes.availableFanSpeeds.speeds.map((speed, i) => {\n      return (\n              <div key={i}>\n                <div className=\"two_table_row\" key={i}>\n                  <div className=\"two_table_cel\">\n                  </div>\n                  <div className=\"two_table_cel\">\n                    <label>\n                      <span>Languaje: </span>\n                      <select name=\"type\" id={\"lang_\" + i} value={speed.speed_values[0].lang} onChange={this.updateFanSpeeds}>\n                        <option value=\"es\">es</option>\n                        <option value=\"en\">en</option>\n                      </select>\n                    </label>\n                    <label>\n                      <span>Speed name: </span>\n                      <input type=\"text\" id={\"names_\" + i} style={names_box} defaultValue={speed.speed_values[0].speed_synonym} placeholder=\"Speed name\" onChange={this.updateFanSpeeds}/>\n                    </label>\n                  </div>\n                </div>\n              </div>\n              )\n    });\n\n    return (\n      <div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n\n          </div>\n          <div className=\"three_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"reversible\" defaultChecked={this.props.attributes.reversible} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>reversible</i></span>\n            </label>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if the fan supports blowing in both directions.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n          </div>\n          <div className=\"three_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"supportsFanSpeedPercent\" defaultChecked={this.props.attributes.supportsFanSpeedPercent} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>supportsFanSpeedPercent</i></span>\n            </label>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if the speed can be controlled with a number from 0 to 100.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n          </div>\n          <div className=\"three_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"commandOnlyFanSpeed\" defaultChecked={this.props.attributes.commandOnlyFanSpeed} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>commandOnlyFanSpeed</i></span>\n            </label>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the fan speed.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n          </div>\n          <div className=\"three_table_cel\">\n            Add a speed <button type=\"button\" className=\"add_attribute_button\" onClick={ this.addFanSpeed }>Add</button>\n          </div>\n        </div>\n\n        {speeds}\n\n      </div>\n    );\n  }\n}\n\nexport default FanSpeed\n","import React from 'react';\n\nclass ColorSetting extends React.Component {\n  constructor(props) {\n    super(props);\n    this.update = this.update.bind(this);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n  }\n\n  update(event){\n    this.props.update('attributes/' + event.target.id,event.target.value);\n  }\n\n  updateCheckbox(event){\n    this.props.update('attributes/' + event.target.id,event.target.checked);\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n\n          </div>\n          <div className=\"three_table_cel\">\n            <select name=\"type\" id=\"colorModel\" className=\"table_input\" value={this.props.attributes.colorModel} onChange={this.update}>\n              <option value=\"\">Select</option>\n              <option value=\"rgb\">RGB light</option>\n              <option value=\"hsv\">HSV light</option>\n              <option value=\"\">Color temperature</option>\n            </select>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\"></span>\n          </div>\n        </div>\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n\n          </div>\n          <div className=\"three_table_cel\">\n            Minimum temperature: <input type=\"number\" id=\"colorTemperatureRange/temperatureMinK\" defaultValue={ this.props.attributes.colorTemperatureRange ? this.props.attributes.colorTemperatureRange.temperatureMinK : 0} min=\"0\" max=\"10000\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Minimum color temperature (in Kelvin) supported by the device.</span>\n          </div>\n        </div>\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n\n          </div>\n          <div className=\"three_table_cel\">\n            Maximum temperature: <input type=\"number\" id=\"colorTemperatureRange/temperatureMaxK\" defaultValue={this.props.attributes.colorTemperatureRange ? this.props.attributes.colorTemperatureRange.temperatureMaxK : 0} min=\"0\" max=\"10000\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Maximum color temperature (in Kelvin) supported by the device.</span>\n          </div>\n        </div>\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n\n          </div>\n          <div className=\"three_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"commandOnlyColorSetting\" defaultChecked={this.props.attributes.commandOnlyColorSetting} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>commandOnlyColorSetting</i></span>\n            </label>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the color.</span>\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default ColorSetting\n","import React from 'react';\n\nclass TemperatureSetting extends React.Component {\n  constructor(props) {\n    super(props);\n    this.update = this.update.bind(this);\n    this.updateMode = this.updateMode.bind(this);\n    this.addMode = this.addMode.bind(this);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n  }\n\n  update(event){\n    this.props.update('attributes/' + event.target.id,event.target.value);\n  }\n\n  updateMode(event){\n    const id = event.target.id.split('_')\n    const mode_id = id[1]\n    var temp_availableThermostatModes = this.props.attributes.availableThermostatModes.split(',')\n\n    if (event.target.value === 'delete'){\n      temp_availableThermostatModes.splice(mode_id, 1)\n    } else if (event.target.value !== 'select') {\n      temp_availableThermostatModes[mode_id] = event.target.value;\n    }\n\n    this.props.update('attributes/availableThermostatModes', temp_availableThermostatModes.join(','));\n  }\n\n  addMode(){\n    var temp_availableThermostatModes = this.props.attributes.availableThermostatModes\n    temp_availableThermostatModes += \",\"\n    this.props.update('attributes/availableThermostatModes', temp_availableThermostatModes);\n  }\n\n  updateCheckbox(event){\n    this.props.update('attributes/' + event.target.id,event.target.checked);\n  }\n\n\n  render() {\n\n    const modes = this.props.attributes.availableThermostatModes.split(',').map((mode, i) => {\n\n      return (\n          <div key={i}>\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">\n              </div>\n              <div className=\"two_table_cel\">\n                <label>\n                  <span>Mode: </span>\n                  <select name=\"type\" id={\"mode_\" + i} value={mode} onChange={this.updateMode}>\n                    <option value=\"select\">Select a mode</option>\n                    <option value=\"delete\">Delete this mode</option>\n                    <option value=\"off\">Off</option>\n                    <option value=\"heat\">Heat</option>\n                    <option value=\"cool\">Cool</option>\n                    <option value=\"on\">On</option>\n                    <option value=\"heatcool\">Heatcool</option>\n                    <option value=\"auto\">Auto</option>\n                    <option value=\"fan-only\">Fan only</option>\n                    <option value=\"purifier\">Purifier</option>\n                    <option value=\"eco\">Eco</option>\n                    <option value=\"dry\">Dry</option>\n                  </select>\n                </label>\n              </div>\n            </div>\n          </div>\n\n          )\n    });\n\n    return (\n      <div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n          </div>\n          <div className=\"three_table_cel\">\n            Add a thermostat mode <button type=\"button\" className=\"add_attribute_button\" onClick={ this.addMode }>Add</button>\n          </div>\n        </div>\n\n        {modes}\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n\n          </div>\n          <div className=\"three_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"commandOnlyTemperatureSetting\" defaultChecked={this.props.attributes.commandOnlyTemperatureSetting} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>commandOnlyTemperatureSetting</i></span>\n            </label>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the temperature.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n          </div>\n          <div className=\"three_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"queryOnlyTemperatureSetting\" defaultChecked={this.props.attributes.queryOnlyTemperatureSetting} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>queryOnlyTemperatureSetting</i></span>\n            </label>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Google shouldn't change the device temperature settings.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n\n          </div>\n          <div className=\"three_table_cel\">\n            Minimum temperature: <input type=\"number\" id=\"thermostatTemperatureRange/minThresholdCelsius\" defaultValue={ this.props.attributes.thermostatTemperatureRange ? this.props.attributes.thermostatTemperatureRange.minThresholdCelsius : 0} min=\"0\" max=\"50\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Minimum temperature (in Celsius) supported by the device.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n\n          </div>\n          <div className=\"three_table_cel\">\n            Maximum temperature: <input type=\"number\" id=\"thermostatTemperatureRange/maxThresholdCelsius\" defaultValue={this.props.attributes.thermostatTemperatureRange ? this.props.attributes.thermostatTemperatureRange.maxThresholdCelsius : 0} min=\"0\" max=\"50\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Maximum temperature (in Celsius) supported by the device.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n\n          </div>\n          <div className=\"three_table_cel\">\n            Range: <input type=\"number\" id=\"bufferRangeCelsius\" defaultValue={this.props.attributes.bufferRangeCelsius} min=\"0\" max=\"50\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Specifies the minimum offset between heat-cool setpoints in Celsius.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n\n          </div>\n          <div className=\"three_table_cel\">\n            <select name=\"type\" id=\"thermostatTemperatureUnit\" className=\"table_input\" value={this.props.attributes.thermostatTemperatureUnit} onChange={this.update}>\n              <option value=\"C\">Celsius</option>\n              <option value=\"F\">Fahrenheit</option>\n            </select>\n          </div>\n        </div>\n\n\n\n      </div>\n    );\n  }\n}\n\nexport default TemperatureSetting\n","import React from 'react';\n\nclass Toggles extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n    this.updatetoggle = this.updatetoggle.bind(this);\n    this.addToggle = this.addToggle.bind(this);\n  }\n\n\n  updateCheckbox(event){\n    this.props.update('attributes/' + event.target.id,event.target.checked);\n  }\n\n  updatetoggle(event){\n    const id = event.target.id.split('_')\n    const toggle_id = id[1]\n    //Process the attribute and value depending of the attribute\n    const toggle_attribute = id[0] === 'lang' ? id[0] : 'name_synonym';\n    const value = id[0] === 'lang' ? event.target.value : event.target.value.split(',')\n    //Update the temporal data and update it\n    var temp_availableToggles = this.props.attributes.availableToggles\n    temp_availableToggles[toggle_id].name_values[0][toggle_attribute] = value\n    if (id[0] === 'names') temp_availableToggles[toggle_id].name = value[0]\n    this.props.update('attributes/availableToggles', temp_availableToggles);\n  }\n\n  addToggle(){\n    var temp_availableToggles = this.props.attributes.availableToggles\n    temp_availableToggles.push({\n      \"name\": \"\",\n      \"name_values\": [\n        {\n          \"name_synonym\": [\"\"],\n          \"lang\": \"en\"\n        }\n      ]\n    });\n    this.props.update('attributes/availableToggles', temp_availableToggles);\n  }\n\n  render() {\n\n    const names_box = {\n      marginLeft: '20px',\n      width: '150px'\n    }\n\n    const toggles = this.props.attributes.availableToggles.map((toggle, i) => {\n      return (\n              <div key={i}>\n                <div className=\"two_table_row\">\n                  <div className=\"two_table_cel\">\n                  </div>\n                  <div className=\"two_table_cel\">\n                    <label>\n                      <span>Languaje: </span>\n                      <select name=\"type\" id={\"lang_\" + i} value={toggle.name_values[0].lang} placeholder=\"Name for the toggle\" onChange={this.updatetoggle}>\n                        <option value=\"es\">es</option>\n                        <option value=\"en\">en</option>\n                      </select>\n                    </label>\n                    <label>\n                      <span>Name: </span>\n                      <input type=\"text\" id={\"names_\" + i} style={names_box} defaultValue={toggle.name_values[0].name_synonym} placeholder=\"Name\" onChange={this.updatetoggle}/>\n                    </label>\n\n\n                  </div>\n                </div>\n              </div>\n            )\n    });\n\n    return (\n      <div>\n\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n\n          </div>\n          <div className=\"attribute_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"commandOnlyToggles\" defaultChecked={this.props.attributes.reversible} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>commandOnlyToggles</i></span>\n            </label>\n          </div>\n          <div className=\"attribute_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the states.</span>\n          </div>\n        </div>\n\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n          </div>\n          <div className=\"attribute_table_cel\">\n            Add a toggle <button type=\"button\" className=\"add_attribute_button\" onClick={ this.addToggle }>Add</button>\n          </div>\n        </div>\n\n        {toggles}\n\n      </div>\n    );\n  }\n}\n\nexport default Toggles\n","import React from 'react';\n\nclass Modes extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n    this.updateMode = this.updateMode.bind(this);\n    this.addMode = this.addMode.bind(this);\n  }\n\n\n  updateCheckbox(event){\n    this.props.update('attributes/' + event.target.id,event.target.checked);\n  }\n\n  updateMode(event){\n    const id = event.target.id.split('_')\n    const mode_id = id[1]\n    var temp_availableModes = this.props.attributes.availableModes\n\n    if(id[0] === 'lang'){\n      temp_availableModes[mode_id].name_values[0].lang = event.target.value;\n    } else if (id[0] === 'names'){\n      temp_availableModes[mode_id].name_values[0].name_synonym = event.target.value.split(',');\n      temp_availableModes[mode_id].name = event.target.value.split(',')[0]\n    } else if (id[0] === 'settings'){\n      var values = event.target.value.split(',')\n      var settings = []\n      for ( var i = 0; i < values.length; i ++){\n        settings.push({\n          setting_name: values[i],\n            setting_values: [{\n              setting_synonym: [values[i]],\n              lang: this.props.attributes.availableModes[mode_id].name_values[0].lang\n             }]\n        })\n      }\n      temp_availableModes[mode_id].settings = settings\n    }\n    this.props.update('attributes/availableModes', temp_availableModes);\n  }\n\n  addMode(){\n    var temp_availableModes = this.props.attributes.availableModes\n    temp_availableModes.push({\n      \"name\": \"\",\n      \"name_values\": [\n        {\n          \"name_synonym\": [\"\"],\n          \"lang\": \"en\"\n        }\n      ],\n      \"settings\": [\n        {\n          \"setting_name\": \"\",\n            \"setting_values\": [{\n              \"setting_synonym\": [\"\"],\n              \"lang\": \"en\"\n             }]\n        }\n      ]\n    });\n    this.props.update('attributes/availableModes', temp_availableModes);\n  }\n\n  render() {\n\n    const names_box = {\n      width: '150px'\n    }\n\n    const settings_box = {\n      width: '230px'\n    }\n\n\n    const modes = this.props.attributes.availableModes.map((mode, i) => {\n      const settings = mode.settings.map((setting,i) => {return setting.setting_name});\n\n      return (\n              <div key={i}>\n                <div className=\"two_table_row\">\n                  <div className=\"two_table_cel\">\n                  </div>\n                  <div className=\"two_table_cel\">\n                    <label>\n                      <span>Languaje: </span>\n                      <select name=\"type\" id={\"lang_\" + i} value={mode.name_values[0].lang} onChange={this.updateMode}>\n                        <option value=\"es\">es</option>\n                        <option value=\"en\">en</option>\n                      </select>\n                    </label>\n                    <label>\n                      <span>Mode name: </span>\n                      <input type=\"text\" id={\"names_\" + i} style={names_box} defaultValue={mode.name_values[0].name_synonym} placeholder=\"Mode name\" onChange={this.updateMode}/>\n                    </label>\n                    <label>\n                      <span>Mode settings: </span>\n                      <input type=\"text\" id={\"settings_\" + i} style={settings_box} defaultValue={settings} placeholder=\"Separated by commas\" onChange={this.updateMode}/>\n                    </label>\n                  </div>\n                </div>\n\n\n              </div>\n\n              )\n    });\n\n    return (\n      <div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n\n          </div>\n          <div className=\"three_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"commandOnlyModes\" defaultChecked={this.props.attributes.reversible} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>commandOnlyModes</i></span>\n            </label>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the modes.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n          </div>\n          <div className=\"three_table_cel\">\n            Add a mode <button type=\"button\" className=\"add_attribute_button\" onClick={ this.addMode }>Add</button>\n          </div>\n\n        </div>\n\n        {modes}\n\n      </div>\n    );\n  }\n}\n\nexport default Modes\n","import React from 'react';\n\nclass HumiditySetting extends React.Component {\n  constructor(props) {\n    super(props);\n    this.update = this.update.bind(this);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n  }\n\n  update(event){\n    this.props.update('attributes/' + event.target.id,event.target.value);\n  }\n\n  updateCheckbox(event){\n    this.props.update('attributes/' + event.target.id,event.target.checked);\n  }\n\n  render() {\n    return (\n      <div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n\n          </div>\n          <div className=\"three_table_cel\">\n            Minimum humidity <input type=\"number\" id=\"humiditySetpointRange/minPercent\" defaultValue={ this.props.attributes.humiditySetpointRange ? this.props.attributes.humiditySetpointRange.minPercent : 0} min=\"0\" max=\"100\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Minimum humidity level as percentage.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n\n          </div>\n          <div className=\"three_table_cel\">\n            Maximum humidity <input type=\"number\" id=\"humiditySetpointRange/maxPercent\" defaultValue={this.props.attributes.humiditySetpointRange ? this.props.attributes.humiditySetpointRange.maxPercent : 0} min=\"0\" max=\"100\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Maximum humidity level as percentage.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n\n          </div>\n          <div className=\"three_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"commandOnlyHumiditySetting\" defaultChecked={this.props.attributes.commandOnlyHumiditySetting} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>commandOnlyHumiditySetting</i></span>\n            </label>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the humidity.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n\n          </div>\n          <div className=\"three_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"queryOnlyHumiditySetting\" defaultChecked={this.props.attributes.queryOnlyHumiditySetting} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>queryOnlyHumiditySetting</i></span>\n            </label>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Google shouldn't change the device humidity.</span>\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default HumiditySetting\n","import React from 'react';\n\nclass OpenClose extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n  }\n\n\n  updateCheckbox(event){\n    this.props.update('attributes/' + event.target.id,event.target.checked);\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n\n          </div>\n          <div className=\"three_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"discreteOnlyOpenClose\" defaultChecked={this.props.attributes.discreteOnlyOpenClose} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>discreteOnlyOpenClose</i></span>\n            </label>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if the device must either be fully open or fully closed.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n          </div>\n          <div className=\"three_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"commandOnlyOpenClose\" defaultChecked={this.props.attributes.commandOnlyOpenClose} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>commandOnlyOpenClose</i></span>\n            </label>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the state.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n          </div>\n          <div className=\"three_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"queryOnlyOpenClose\" defaultChecked={this.props.attributes.queryOnlyOpenClose} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>queryOnlyOpenClose</i></span>\n            </label>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Google shouldn't change the device state.</span>\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default OpenClose\n","import React from 'react';\n\nclass Rotation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.update = this.update.bind(this);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n  }\n\n  update(event){\n    this.props.update('attributes/' + event.target.id,event.target.value);\n  }\n\n  updateCheckbox(event){\n    this.props.update('attributes/' + event.target.id,event.target.checked);\n  }\n\n  render() {\n    return (\n      <div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n\n          </div>\n          <div className=\"three_table_cel\">\n            Minimum rotation: <input type=\"number\" id=\"rotationDegreesRange/rotationDegreesMin\" defaultValue={ this.props.attributes.rotationDegreesRange ? this.props.attributes.rotationDegreesRange.rotationDegreesMin : 0} min=\"0\" max=\"100\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Minimum rotation degrees that a device can rotate.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n\n          </div>\n          <div className=\"three_table_cel\">\n            Maximum rotation: <input type=\"number\" id=\"rotationDegreesRange/rotationDegreesMax\" defaultValue={this.props.attributes.rotationDegreesRange ? this.props.attributes.rotationDegreesRange.rotationDegreesMax : 0} min=\"0\" max=\"100\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Maximum rotation degrees that a device can rotate.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n\n          </div>\n          <div className=\"three_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"commandOnlyRotation\" defaultChecked={this.props.attributes.commandOnlyRotation} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>commandOnlyRotation</i></span>\n            </label>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the device.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n\n          </div>\n          <div className=\"three_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"supportsContinuousRotation\" defaultChecked={this.props.attributes.supportsContinuousRotation} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>supportsContinuousRotation</i></span>\n            </label>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if the device supports continuous rotation.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n\n          </div>\n          <div className=\"three_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"supportsDegrees\" defaultChecked={this.props.attributes.supportsDegrees} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>supportsDegrees</i></span>\n            </label>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if the device allows rotation by degree.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n\n          </div>\n          <div className=\"three_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"supportsPercent\" defaultChecked={this.props.attributes.supportsPercent} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>supportsPercent</i></span>\n            </label>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if device allows rotation by percent.</span>\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default Rotation\n","import React from 'react';\n\nclass Fill extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateLevels = this.updateLevels.bind(this);\n    this.addLevel = this.addLevel.bind(this);\n  }\n\n  updateLevels(event){\n    const id = event.target.id.split('_')\n    const level_id = id[1]\n    //Process the attribute and value depending of the attribute\n    const level_attribute = id[0] === 'lang' ? id[0] : 'level_synonym';\n    const value = id[0] === 'lang' ? event.target.value : event.target.value.split(',')\n    //Update the temporal data and update it\n    var temp_availableFillLevels = this.props.attributes.availableFillLevels\n    temp_availableFillLevels.levels[level_id].level_values[0][level_attribute] = value\n    if (id[0] === 'names') temp_availableFillLevels.levels[level_id].level_name = value[0]\n    this.props.update('attributes/availableFillLevels', temp_availableFillLevels);\n  }\n\n  addLevel(){\n    var temp_availableFillLevels = this.props.attributes.availableFillLevels\n    temp_availableFillLevels.levels.push({\n      \"level_name\": \"\",\n      \"level_values\": [\n        {\n          \"level_synonym\": [\"\"],\n          \"lang\": \"en\"\n        }\n      ]\n    });\n    this.props.update('attributes/availableFillLevels', temp_availableFillLevels);\n  }\n\n  render() {\n\n    const names_box = {\n      width: '150px'\n    }\n\n    const levels = this.props.attributes.availableFillLevels.levels.map((level, i) => {\n      return (\n              <div key={i}>\n                <div className=\"two_table_row\" key={i}>\n                  <div className=\"two_table_cel\">\n                  </div>\n                  <div className=\"two_table_cel\">\n                    <label>\n                      <span>Languaje: </span>\n                      <select name=\"type\" id={\"lang_\" + i} value={level.level_values[0].lang} onChange={this.updateLevels}>\n                        <option value=\"es\">es</option>\n                        <option value=\"en\">en</option>\n                      </select>\n                    </label>\n                    <label>\n                      <span>Fill level name: </span>\n                      <input type=\"text\" id={\"names_\" + i} style={names_box} defaultValue={level.level_values[0].level_synonym} placeholder=\"Fill level name\" onChange={this.updateLevels}/>\n                    </label>\n                  </div>\n                </div>\n              </div>\n              )\n    });\n\n    return (\n      <div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n          </div>\n          <div className=\"three_table_cel\">\n            Add a level <button type=\"button\" className=\"add_attribute_button\" onClick={ this.addLevel }>Add</button>\n          </div>\n        </div>\n\n        {levels}\n\n      </div>\n    );\n  }\n}\n\nexport default Fill\n","import React from 'react';\n\nclass ArmDisarm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateSecurityLevel = this.updateSecurityLevel.bind(this);\n    this.addSecurityLevel = this.addSecurityLevel.bind(this);\n  }\n\n  updateSecurityLevel(event){\n    const id = event.target.id.split('_')\n    const level_id = id[1]\n    //Process the attribute and value depending of the attribute\n    const level_attribute = id[0] === 'lang' ? id[0] : 'level_synonym';\n    const value = id[0] === 'lang' ? event.target.value : event.target.value.split(',')\n    //Update the temporal data and update it\n    var temp_availableArmLevels = this.props.attributes.availableArmLevels\n    temp_availableArmLevels.levels[level_id].level_values[0][level_attribute] = value\n    if (id[0] === 'names') temp_availableArmLevels.levels[level_id].level_name = value[0]\n    this.props.update('attributes/availableArmLevels', temp_availableArmLevels);\n  }\n\n  addSecurityLevel(){\n    var temp_availableArmLevels = this.props.attributes.availableArmLevels\n    temp_availableArmLevels.levels.push({\n      \"level_name\": \"\",\n      \"level_values\": [\n        {\n          \"level_synonym\": [\"\"],\n          \"lang\": \"en\"\n        }\n      ]\n    });\n    this.props.update('attributes/availableArmLevels', temp_availableArmLevels);\n  }\n\n  render() {\n\n    const names_box = {\n      marginLeft: '20px',\n      width: '150px'\n    }\n\n    const levels = this.props.attributes.availableArmLevels.levels.map((level, i) => {\n      return (\n              <div key={i}>\n                <div className=\"two_table_row\" key={i}>\n                  <div className=\"two_table_cel\">\n                  </div>\n                  <div className=\"two_table_cel\">\n                    <label>\n                      <span>Languaje: </span>\n                      <select name=\"type\" id={\"lang_\" + i} value={level.level_values[0].lang} onChange={this.updateSecurityLevel}>\n                        <option value=\"es\">es</option>\n                        <option value=\"en\">en</option>\n                      </select>\n                    </label>\n                    <label>\n                      <span>Level name: </span>\n                      <input type=\"text\" id={\"names_\" + i} style={names_box} defaultValue={level.level_values[0].speed_synonym} placeholder=\"Security level name\" onChange={this.updateSecurityLevel}/>\n                    </label>\n                  </div>\n                </div>\n              </div>\n              )\n    });\n\n    return (\n      <div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n          </div>\n          <div className=\"three_table_cel\">\n            Add a security level <button type=\"button\" className=\"add_attribute_button\" onClick={ this.addSecurityLevel }>Add</button>\n          </div>\n        </div>\n\n        {levels}\n\n      </div>\n    );\n  }\n}\n\nexport default ArmDisarm\n","import React from 'react';\n\nclass StartStop extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n    this.updateArray = this.updateArray.bind(this);\n  }\n\n\n  updateCheckbox(event){\n    this.props.update('attributes/' + event.target.id,event.target.checked);\n  }\n\n  updateArray(event){\n    this.props.update('attributes/' + event.target.id,event.target.value.split(','));\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n\n          </div>\n          <div className=\"three_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"pausable\" defaultChecked={this.props.attributes.pausable} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>pausable</i></span>\n            </label>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if the device can be paused.</span>\n          </div>\n        </div>\n\n        <div className=\"two_table_row\">\n          <div className=\"two_table_cel\">\n\n          </div>\n          <div className=\"two_table_cel\">\n            Zones: <input type=\"text\" id=\"availableThermostatModes\" defaultValue={this.props.attributes.availableZones} onChange={this.updateArray} className=\"text_input\"/>\n          </div>\n        </div>\n\n        <div className=\"two_table_row\">\n          <div className=\"two_table_cel\">\n\n          </div>\n          <div className=\"two_table_cel\">\n            <span className=\"attribute_advise\">Supported zones names separeted by commas.</span>\n          </div>\n        </div>\n\n\n      </div>\n    );\n  }\n}\n\nexport default StartStop\n","import React from 'react';\n\nclass Timer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n    this.update = this.update.bind(this);\n  }\n\n\n  updateCheckbox(event){\n    this.props.update('attributes/' + event.target.id,event.target.checked);\n  }\n\n  update(event){\n    this.props.update('attributes/' + event.target.id,event.target.value);\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n\n          </div>\n          <div className=\"three_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"commandOnlyTimer\" defaultChecked={this.props.attributes.commandOnlyTimer} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>commandOnlyTimer</i></span>\n            </label>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the state.</span>\n          </div>\n        </div>\n\n        <div className=\"two_table_row\">\n          <div className=\"two_table_cel\">\n\n          </div>\n          <div className=\"two_table_cel\">\n            Max time: <input type=\"text\" id=\"maxTimerLimitSec\" defaultValue={this.props.attributes.maxTimerLimitSec} onChange={this.update} className=\"text_input\"/>\n          </div>\n        </div>\n\n        <div className=\"two_table_row\">\n          <div className=\"two_table_cel\">\n\n          </div>\n          <div className=\"two_table_cel\">\n            <span className=\"attribute_advise\">Indicates the longest timer setting in seconds available on the device.</span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Timer\n","import React from 'react';\n\nclass TemperatureControl extends React.Component {\n  constructor(props) {\n    super(props);\n    this.update = this.update.bind(this);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n  }\n\n  update(event){\n    this.props.update('attributes/' + event.target.id,event.target.value);\n  }\n\n  updateCheckbox(event){\n    this.props.update('attributes/' + event.target.id,event.target.checked);\n  }\n\n  render() {\n\n\n    return (\n      <div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n\n          </div>\n          <div className=\"three_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"commandOnlyTemperatureControl\" defaultChecked={this.props.attributes.commandOnlyTemperatureControl} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>commandOnlyTemperatureControl</i></span>\n            </label>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the temperature.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n          </div>\n          <div className=\"three_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"queryOnlyTemperatureControl\" defaultChecked={this.props.attributes.queryOnlyTemperatureControl} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>queryOnlyTemperatureControl</i></span>\n            </label>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Google shouldn't change the device temperature settings.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n\n          </div>\n          <div className=\"three_table_cel\">\n            Minimum temperature: <input type=\"number\" id=\"temperatureRange/minThresholdCelsius\" defaultValue={ this.props.attributes.temperatureRange ? this.props.attributes.temperatureRange.minThresholdCelsius : 0} min=\"0\" max=\"400\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Minimum temperature (in Celsius) supported by the device.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n\n          </div>\n          <div className=\"three_table_cel\">\n            Maximum temperature: <input type=\"number\" id=\"temperatureRange/maxThresholdCelsius\" defaultValue={this.props.attributes.temperatureRange ? this.props.attributes.temperatureRange.maxThresholdCelsius : 0} min=\"0\" max=\"400\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Maximum temperature (in Celsius) supported by the device.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n\n          </div>\n          <div className=\"three_table_cel\">\n            Step: <input type=\"number\" id=\"temperatureStepCelsius\" defaultValue={this.props.attributes.temperatureStepCelsius} min=\"0\" max=\"400\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Specifies the relative temperature step.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n\n          </div>\n          <div className=\"three_table_cel\">\n            <select name=\"type\" id=\"temperatureUnitForUX\" className=\"table_input\" value={this.props.attributes.temperatureUnitForUX} onChange={this.update}>\n              <option value=\"C\">Celsius</option>\n              <option value=\"F\">Fahrenheit</option>\n            </select>\n          </div>\n        </div>\n\n\n\n      </div>\n    );\n  }\n}\n\nexport default TemperatureControl\n","import React from 'react';\n\nclass Cook extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateMode = this.updateMode.bind(this);\n    this.addMode = this.addMode.bind(this);\n    this.updatePreset = this.updatePreset.bind(this);\n    this.addPreset = this.addPreset.bind(this);\n  }\n\n  updateMode(event){\n    const id = event.target.id.split('_')\n    const mode_id = id[1]\n    var temp_supportedCookingModes = this.props.attributes.supportedCookingModes\n\n    if (event.target.value === 'delete'){\n      temp_supportedCookingModes.splice(mode_id, 1)\n    } else if (event.target.value !== 'select') {\n      temp_supportedCookingModes[mode_id] = event.target.value;\n    }\n\n    this.props.update('attributes/supportedCookingModes', temp_supportedCookingModes);\n  }\n\n  addMode(){\n    var temp_supportedCookingModes = this.props.attributes.supportedCookingModes\n    temp_supportedCookingModes.push(\"\");\n    this.props.update('attributes/supportedCookingModes', temp_supportedCookingModes);\n  }\n\n  updatePreset(event){\n    const id = event.target.id.split('_')\n    const preset_id = id[1]\n    var temp_foodPresets = this.props.attributes.foodPresets\n\n    if(id[0] === 'lang'){\n      temp_foodPresets[preset_id].food_synonyms[0].lang = event.target.value;\n    } else if (id[0] === 'names'){\n      temp_foodPresets[preset_id].food_synonyms[0].synonym = event.target.value.split(',');\n      temp_foodPresets[preset_id].food_preset_name = event.target.value.split(',')[0]\n    } else if (id[0] === 'units'){\n      temp_foodPresets[preset_id].supported_units[0] = event.target.value;\n    }\n    this.props.update('attributes/foodPresets', temp_foodPresets);\n  }\n\n  addPreset(){\n    var temp_foodPresets = this.props.attributes.foodPresets\n    temp_foodPresets.push({\n      \"food_preset_name\": \"\",\n      \"supported_units\": [\"\"],\n      \"food_synonyms\": [{\n        \"synonym\": [\"\"],\n        \"language\": \"en\"\n      }]\n    });\n    this.props.update('attributes/foodPresets', temp_foodPresets);\n  }\n\n  render() {\n\n    const names_box = {\n      width: '150px'\n    }\n\n    const modes = this.props.attributes.supportedCookingModes.map((mode, i) => {\n\n      return (\n              <div key={i}>\n                <div className=\"two_table_row\">\n                  <div className=\"two_table_cel\">\n                  </div>\n                  <div className=\"two_table_cel\">\n                    <label>\n                      <span>Mode: </span>\n                      <select name=\"type\" id={\"mode_\" + i} value={mode} onChange={this.updateMode}>\n                        <option value=\"select\">Select a mode</option>\n                        <option value=\"delete\">Delete this mode</option>\n                        <option value=\"UNKNOWN_COOKING_MODE\">UNKNOWN_COOKING_MODE</option>\n                        <option value=\"BAKE\">BAKE</option>\n                        <option value=\"BEAT\">BEAT</option>\n                        <option value=\"BLEND\">BLEND</option>\n                        <option value=\"BOIL\">BOIL</option>\n                        <option value=\"BREW\">BREW</option>\n                        <option value=\"BROIL\">BROIL</option>\n                        <option value=\"CONVECTION_BAKE\">CONVECTION_BAKE</option>\n                        <option value=\"COOK\">COOK</option>\n                        <option value=\"DEFROST\">DEFROST</option>\n                        <option value=\"DEHYDRATE\">DEHYDRATE</option>\n                        <option value=\"FERMENT\">FERMENT</option>\n                        <option value=\"FRY\">FRY</option>\n                        <option value=\"KNEAD\">KNEAD</option>\n                        <option value=\"MICROWAVE\">MICROWAVE</option>\n                        <option value=\"PRESSURE_COOK\">PRESSURE_COOK</option>\n                        <option value=\"PUREE\">PUREE</option>\n                        <option value=\"ROAST\">ROAST</option>\n                        <option value=\"SAUTE\">SAUTE</option>\n                        <option value=\"SLOW_COOK\">SLOW_COOK</option>\n                        <option value=\"SOUS_VIDE\">SOUS_VIDE</option>\n                        <option value=\"STEAM\">STEAM</option>\n                        <option value=\"STEW\">STEW</option>\n                        <option value=\"WARM\">WARM</option>\n                        <option value=\"WHIP\">WHIP</option>\n                      </select>\n                    </label>\n                  </div>\n                </div>\n              </div>\n\n              )\n    });\n\n    const presets = this.props.attributes.foodPresets.map((preset, i) => {\n\n      return (\n              <div key={i}>\n                <div className=\"two_table_row\">\n                  <div className=\"two_table_cel\">\n                  </div>\n                  <div className=\"two_table_cel\">\n                    <label>\n                      <span>Language: </span>\n                      <select name=\"type\" id={\"lang_\" + i} value={preset.food_synonyms[0].lang} onChange={this.updatePreset}>\n                        <option value=\"es\">es</option>\n                        <option value=\"en\">en</option>\n                      </select>\n                    </label>\n                    <label style={names_box}>\n                      <span>Preset name: </span>\n                      <input type=\"text\" id={\"names_\" + i} defaultValue={preset.food_synonyms[0].synonym} placeholder=\"Preset name\" onChange={this.updatePreset}/>\n                    </label>\n                    <label>\n                      <span>Units: </span>\n                      <select name=\"type\" id={\"units_\" + i} value={preset.supported_units[0]} onChange={this.updatePreset}>\n                        <option value=\"NO_UNITS\">No units</option>\n                        <option value=\"UNKNOWN_UNITS\">Unkown</option>\n                        <option value=\"CENTIMETERS\">Centimeters</option>\n                        <option value=\"CUPS\">Cups</option>\n                        <option value=\"DECILITERS\">Deciliters</option>\n                        <option value=\"FEET\">Feet</option>\n                        <option value=\"FLUID_OUNCES\">Fluid ounces</option>\n                        <option value=\"GALLONS\">Gallons</option>\n                        <option value=\"GRAMS\">Grams</option>\n                        <option value=\"INCHES\">Inches</option>\n                        <option value=\"KILOGRAMS\">Kilograms</option>\n                        <option value=\"LITERS\">Liters</option>\n                        <option value=\"METERS\">Meters</option>\n                        <option value=\"MILLIGRAMS\">Miligrams</option>\n                        <option value=\"MILLILITERS\">Mililiters</option>\n                        <option value=\"MILLIMETERS\">Milimeters</option>\n                        <option value=\"OUNCES\">Ounces</option>\n                        <option value=\"PINCH\">Pinch</option>\n                        <option value=\"PINTS\">Pints</option>\n                        <option value=\"PORTION\">Portion</option>\n                        <option value=\"POUNDS\">Pounds</option>\n                        <option value=\"QUARTS\">Quarts</option>\n                        <option value=\"TABLESPOONS\">Tablespoons</option>\n                        <option value=\"TEASPOONS\">Teaspoons</option>\n                      </select>\n                    </label>\n                  </div>\n                </div>\n              </div>\n              )\n    });\n\n    return (\n      <div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n          </div>\n          <div className=\"three_table_cel\">\n            Add a cooking mode <button type=\"button\" className=\"add_attribute_button\" onClick={ this.addMode }>Add</button>\n          </div>\n        </div>\n\n        {modes}\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n          </div>\n          <div className=\"three_table_cel\">\n            Add a preset <button type=\"button\" className=\"add_attribute_button\" onClick={ this.addPreset }>Add</button>\n          </div>\n        </div>\n\n        {presets}\n\n      </div>\n    );\n  }\n}\n\nexport default Cook\n","import React from 'react';\nimport Text from '../editor/Text'\nimport Scene from '../editor/traits/Scene'\nimport OnOff from '../editor/traits/OnOff'\nimport Brightness from '../editor/traits/Brightness'\nimport FanSpeed from '../editor/traits/FanSpeed'\nimport ColorSetting from '../editor/traits/ColorSetting'\nimport TemperatureSetting from '../editor/traits/TemperatureSetting'\nimport Toggles from '../editor/traits/Toggles'\nimport Modes from '../editor/traits/Modes'\nimport HumiditySetting from '../editor/traits/HumiditySetting'\nimport OpenClose from '../editor/traits/OpenClose'\nimport Rotation from '../editor/traits/Rotation'\nimport Fill from '../editor/traits/Fill'\nimport ArmDisarm from '../editor/traits/ArmDisarm'\nimport StartStop from '../editor/traits/StartStop'\nimport Timer from '../editor/traits/Timer'\nimport TemperatureControl from '../editor/traits/TemperatureControl'\nimport Cook from '../editor/traits/Cook'\nimport getCookieValue from '../../functions'\nimport { root, deviceReference } from '../../constants'\n\nimport './Editor.css';\n\nclass Editor extends React.Component {\n  constructor(props) {\n    super(props);\n    const id = window.location.pathname.split('/')[3];\n    var create = false;\n    if (id === \"\") create = true;\n    this.state = {\n      id: id,\n      create: create,\n      device: {\n        attributes: {},\n        deviceInfo: {},\n        id: \"\",\n        name: {\n          defaultnames: [],\n          nicknames: [],\n          name: \"\"\n        },\n        traits: [],\n        type: \"\"\n      },\n      status: {\n        online: true\n      },\n      posible_traits: [],\n      save_status: \"\"\n    }\n    this.updateNames = this.updateNames.bind(this);\n    this.update = this.update.bind(this);\n    this.updateId = this.updateId.bind(this);\n    this.updateType = this.updateType.bind(this);\n    this.updateTraits = this.updateTraits.bind(this);\n    this.save = this.save.bind(this);\n    this.delete = this.delete.bind(this);\n    this.renderAttrinutes = this.renderAttrinutes.bind(this);\n  }\n\n  componentDidMount() {\n    if (!this.state.create){\n      var http = new XMLHttpRequest();\n      http.onload = function (e) {\n        if (http.readyState === 4) {\n          if (http.status === 200) {\n            var data = JSON.parse(http.responseText);\n            this.setState({\n               device: data,\n               posible_traits: deviceReference.devices[data.type].traits\n             });\n          } else {\n            console.error(http.statusText);\n          }\n        }\n      }.bind(this);\n      http.open(\"GET\", root + \"api/devices/get/\" + this.state.id + \"/\");\n      http.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n      http.send();\n    }\n  }\n\n  updateNames(dumy_key, value){\n    var names = value.split(',');\n    var temp_device = this.state.device\n    temp_device.name = {\n      defaultnames: names,\n      nicknames: names,\n      name: names[0]\n    }\n    this.setState({\n      device: temp_device\n    })\n  }\n\n  update(key, value){\n    var temp_device = this.state.device\n    var keys = key.split('/');\n    if (keys.length === 1)\n      temp_device[key] = value\n    else if (keys.length === 2)\n      temp_device[keys[0]][keys[1]] = value\n    else if (keys.length === 3)\n      temp_device[keys[0]][keys[1]][keys[2]] = value\n    this.setState({\n      device: temp_device\n    })\n  }\n\n  updateId(event){\n    this.update('id',event.target.value)\n  }\n\n  updateType(event){\n    this.update('type',event.target.value)\n    this.setState({\n       posible_traits: deviceReference.devices[event.target.value].traits\n     });\n  }\n\n  updateTraits(event){\n    var temp_device = this.state.device\n    var temp_status = this.state.status\n    if (event.target.checked) {\n      if (this.state.device.traits.includes(event.target.id) === false){\n        //Push the trait to the device\n        temp_device.traits.push(event.target.id)\n        //Set the default values\n        var attributes = deviceReference.traits[event.target.id].attributes;\n        Object.keys(attributes).forEach((attribute, i) => {\n          temp_device.attributes[attribute] = attributes[attribute].default\n        });\n        //Set the default status params\n        var params = deviceReference.traits[event.target.id].param;\n        Object.keys(params).forEach((param, i) => {\n          temp_status[param] = params[param].default\n        });\n      }\n    } else {\n      if (this.state.device.traits.includes(event.target.id) === true){\n        temp_device.traits = temp_device.traits.filter(function(value, index, arr){ return value !== event.target.id;});\n      }\n    }\n    this.setState({\n      device: temp_device\n    })\n  }\n\n  save(){\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      if (http.readyState === 4) {\n        if (http.status === 200) {\n          JSON.parse(http.responseText);\n          this.setState({\n             save_status: \"Saved correctly.\"\n           });\n        } else {\n          console.error(http.statusText);\n          this.setState({\n             save_status: \"Error, the changes haven't been saved.\"\n           });\n        }\n        setTimeout(function(){\n          this.setState({\n             save_status: \"\"\n           });\n        }.bind(this), 5000)\n      }\n    }.bind(this);\n    var payload = {\n      \"device\": this.state.device\n    }\n    if (this.state.create){\n      http.open(\"POST\", root + \"api/devices/create/\");\n      payload.status = this.state.status\n    } else {\n      http.open(\"POST\", root + \"api/devices/update/\");\n    }\n    http.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\n    http.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    http.send(JSON.stringify(payload));\n  }\n\n  delete(){\n    if(window.confirm('Do you want to delete the device?')){\n      var http = new XMLHttpRequest();\n      http.onload = function (e) {\n        if (http.readyState === 4) {\n          if (http.status === 200) {\n            window.location.href = \"/devices/\"\n          } else {\n            console.error(http.statusText);\n            this.setState({\n               save_status: \"Error, the device hasn't been deleted.\"\n             });\n          }\n          setTimeout(function(){\n            this.setState({\n               save_status: \"\"\n             });\n          }.bind(this), 5000)\n        }\n      }.bind(this);\n      http.open(\"GET\", root + \"api/devices/delete/\" + this.state.device.id + \"/\");\n      http.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n      http.send();\n    } else {\n      this.setState({\n         save_status: \"Ok. The device is save.\"\n       });\n    }\n  }\n\n  renderAttrinutes(trait){\n    if (this.state.device.traits.includes(trait)){\n      if (trait === 'action.devices.traits.Scene')\n        return <Scene sceneReversible={this.state.device.attributes.sceneReversible} update={this.update}/>\n      else if (trait === 'action.devices.traits.OnOff')\n        return <OnOff attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.Brightness')\n        return <Brightness commandOnlyBrightness={this.state.device.attributes.commandOnlyBrightness} update={this.update}/>\n      else if (trait === 'action.devices.traits.ColorSetting')\n        return <ColorSetting attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.FanSpeed')\n        return <FanSpeed attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.TemperatureSetting')\n        return <TemperatureSetting attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.Toggles')\n        return <Toggles attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.Modes')\n        return <Modes attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.HumiditySetting')\n        return <HumiditySetting attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.OpenClose')\n        return <OpenClose attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.Rotation')\n        return <Rotation attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.Fill')\n        return <Fill attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.ArmDisarm')\n        return <ArmDisarm attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.StartStop')\n        return <StartStop attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.Timer')\n        return <Timer attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.TemperatureControl')\n        return <TemperatureControl attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.Cook')\n        return <Cook attributes={this.state.device.attributes} update={this.update}/>\n    }\n  }\n\n  render() {\n\n    const deleteButton = {\n      backgroundColor: 'red'\n    }\n\n    const deleteButtonDisabled = {\n      backgroundColor: 'red',\n      opacity: '0.2'\n    }\n\n    const types = Object.keys(deviceReference.devices).map((type) => {\n      return <option key={type} value={type}>{deviceReference.devices[type].name}</option>\n    })\n\n    const nicknames = this.state.device.name.nicknames.map((name) => {\n      return name\n    });\n\n    const traits = this.state.posible_traits.map((trait) =>\n      <div key={trait}>\n        <hr className=\"separator\"/>\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n            {deviceReference.traits[trait].name}\n          </div>\n          <div className=\"three_table_cel\">\n            <label>\n              <input type=\"checkbox\" id={trait} defaultChecked={this.state.device.traits.includes(trait)} onChange={this.updateTraits}/>\n\n            </label>\n          </div>\n          <div className=\"three_table_cel\">\n            Read Google's <a href={\"https://developers.google.com/assistant/smarthome/traits/\" + trait.split('.')[3].toLowerCase()} target=\"blanck\">documentation</a>\n          </div>\n        </div>\n        {this.renderAttrinutes(trait)}\n      </div>\n    );\n\n    return (\n      <div>\n\n        <div className=\"page_block_container\">\n          <h2>Global settings</h2>\n          <div className=\"advise\">\n            <span>General settings of the device.</span>\n            <hr/>\n          </div>\n          <div className=\"two_table_row\">\n            <div className=\"two_table_cel\">\n              Device ID*\n            </div>\n            <div className=\"two_table_cel\">\n              <input type=\"text\" className=\"two_input\" id=\"id\" defaultValue={this.state.device.id} onChange={this.updateId} disabled={ this.state.create ? false : true }/>\n            </div>\n          </div>\n          <div className=\"two_table_row\">\n            <div className=\"two_table_cel\">\n              Device Type*\n            </div>\n            <div className=\"two_table_cel\">\n              <select name=\"type\" className=\"two_input\" id=\"type\" value={this.state.device.type} onChange={this.updateType} disabled={ this.state.create ? false : true }>\n                <option value=\"default\">Select a device</option>\n                {types}\n              </select>\n            </div>\n          </div>\n          <Text name=\"Nick names*\" data=\"nicknames\" value={nicknames} update={this.updateNames}/>\n          <Text name=\"Hardware version\" data=\"deviceInfo/hwVersion\" value={this.state.device.deviceInfo ? this.state.device.deviceInfo.hwVersion : ''} update={this.update}/>\n          <Text name=\"Software version\" data=\"deviceInfo/swVersion\" value={this.state.device.deviceInfo ? this.state.device.deviceInfo.swVersion : ''} update={this.update}/>\n          <Text name=\"Manufacturer\" data=\"deviceInfo/manufacturer\" value={this.state.device.deviceInfo ? this.state.device.deviceInfo.manufacturer : ''} update={this.update}/>\n          <Text name=\"Model\" data=\"deviceInfo/model\" value={this.state.device.deviceInfo ? this.state.device.deviceInfo.model : ''} update={this.update}/>\n          <div className=\"advise\">\n            <span>Nick names must be separeted by <i>,</i> commas.</span><br/>\n            <span>* data is required.</span>\n          </div>\n          <hr/>\n          <h2>Traits</h2>\n          <div className=\"advise\">\n            <span>The traits define what the device can do.</span>\n          </div>\n          {traits}\n          <hr/>\n          <div className=\"two_table_cel\">\n            <button type=\"button\" style={ this.state.create ? deleteButtonDisabled : deleteButton } onClick={ this.delete } disabled={ this.state.create ? true : false}>Delete</button>\n            <button type=\"button\" onClick={ this.save }>Save</button>\n            <span>{this.state.save_status}</span>\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default Editor\n","import React from 'react';\nimport ReactJson from 'react-json-view'\nimport getCookieValue from '../../functions'\nimport { root } from '../../constants'\n\nclass Editor extends React.Component {\n  constructor(props) {\n    super(props);\n    const id = window.location.pathname.split('/')[3];\n    this.state = {\n      id: id,\n      device: {\n        attributes: {},\n        deviceInfo: {},\n        id: \"\",\n        name: {\n          defaultnames: [],\n          nicknames: [],\n          name: \"\"\n        },\n        traits: [],\n        type: \"\"\n      },\n      status: {\n        online: true\n      }\n    }\n  }\n\n  componentDidMount() {\n    var dev = new XMLHttpRequest();\n    dev.onload = function (e) {\n      if (dev.readyState === 4) {\n        if (dev.status === 200) {\n          var data = JSON.parse(dev.responseText);\n          this.setState({\n             device: data\n           });\n        } else {\n          console.error(dev.statusText);\n        }\n      }\n    }.bind(this);\n    dev.open(\"GET\", root + \"api/devices/get/\" + this.state.id + \"/\");\n    dev.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    dev.send();\n\n    var sta = new XMLHttpRequest();\n    sta.onload = function (e) {\n      if (sta.readyState === 4) {\n        if (sta.status === 200) {\n          var data = JSON.parse(sta.responseText);\n          this.setState({\n             status: data\n           });\n        } else {\n          console.error(sta.statusText);\n        }\n      }\n    }.bind(this);\n    sta.open(\"GET\", root + \"api/status/get/\" + this.state.id + \"/\");\n    sta.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    sta.send();\n  }\n\n\n\n  render() {\n\n    const json_viewer = {\n      textAlign: 'left',\n    }\n\n    return (\n      <div>\n\n        <div className=\"page_block_container\">\n          <h2>Device definition</h2>\n          <div className=\"advise\">\n            <span>General settings of the device.</span>\n            <hr/>\n          </div>\n          <div style={json_viewer}>\n            <ReactJson src={this.state.device} />\n          </div>\n        </div>\n\n        <div className=\"page_block_container\">\n          <h2>Device status</h2>\n          <div className=\"advise\">\n            <span>Status of the device.</span>\n            <hr/>\n          </div>\n          <div style={json_viewer}>\n            <ReactJson src={this.state.status} />\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default Editor\n","import React from 'react';\nimport getCookieValue from '../../functions'\nimport { root } from '../../constants'\n\nimport './Tasks.css';\n\nclass Tasks extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      devices: [],\n      tasks: []\n    }\n    this.loadData = this.loadData.bind(this);\n    this.openManager = this.openManager.bind(this);\n    this.newTask = this.newTask.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  loadData(){\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      if (http.readyState === 4) {\n        if (http.status === 200) {\n          var data = JSON.parse(http.responseText);\n          this.setState({\n             devices: data.devices,\n             tasks: data.tasks\n           });\n        } else {\n          console.error(http.statusText);\n        }\n      }\n    }.bind(this);\n    http.open(\"GET\", root + \"api/global/get/\");\n    http.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    http.send();\n  }\n\n  openManager(event){\n    window.location.href = '/tasks/manager/' +  event.target.id.split('_')[1]\n  }\n\n  newTask(){\n    window.location.href = '/tasks/manager/'\n  }\n\n  render() {\n\n    const tasks = this.state.tasks.map((task, i) => {\n      return(\n        <div key={i} className=\"task_card\">\n          <h2 className=\"task_card_title\" id={ 'task_' + i } onClick={ this.openManager }>{ task.title }</h2>\n          <hr className=\"task_card_divider\"/>\n          <p>{ task.description }</p>\n        </div>\n      )\n    });\n\n    return (\n      <div>\n        <div className=\"page_title_container\">\n          <h2>Tasks</h2>\n        </div>\n\n        <div className=\"page_cards_container\">\n          {tasks}\n        </div>\n\n        <div className=\"page_buttons_containter\">\n          <button type=\"button\" onClick={ this.newTask }>New</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Tasks\n","import React from 'react';\nimport Triggers from './Triggers'\n\nimport '../pages/Manager.css';\n\nclass Logic extends React.Component {\n  constructor(props) {\n    super(props);\n    this.delete = this.delete.bind(this);\n    this.addOr = this.addOr.bind(this);\n    this.addAnd = this.addAnd.bind(this);\n    this.openTriggerAssistant = this.openTriggerAssistant.bind(this);\n  }\n\n  delete() {\n    this.props.delete(this.props.id);\n  }\n\n  addOr() {\n    this.props.addTriggerLogic('or',this.props.id)\n  }\n\n  addAnd() {\n    this.props.addTriggerLogic('and',this.props.id)\n  }\n\n  openTriggerAssistant() {\n    this.props.openTriggerAssistant(this.props.id)\n  }\n\n  render() {\n\n    const num_operations = this.props.triggers[this.props.id].operation.length-1;\n    const operations = this.props.triggers[this.props.id].operation.map((op, i) => {\n      return (\n        <div key={op + i }>\n          <Triggers id={op} triggers={this.props.triggers} devices={this.props.devices} delete={this.props.delete} addTriggerLogic={this.props.addTriggerLogic}  openTriggerAssistant={this.props.openTriggerAssistant}/>\n          {i < num_operations ? <h2 className=\"trigger_logic_title\">{this.props.triggers[this.props.id].type}</h2> : '' }\n        </div>\n      );\n    });\n\n    return (\n      <div className=\"trigger_logic_container\">\n          {operations}\n          <div className=\"trigger_logic_buttons_container\">\n            <button type=\"button\" className=\"trigger_logic_button\" onClick={ this.addOr }>Or</button>\n            <button type=\"button\" className=\"trigger_logic_button\" onClick={ this.addAnd }>And</button>\n            <button type=\"button\" className=\"trigger_logic_button\" onClick={ this.openTriggerAssistant }>Trigger</button>\n            <button type=\"button\" className=\"trigger_logic_button red_button\" onClick={ this.delete }>Delete</button>\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default Logic\n","import React from 'react';\nimport { deviceReference } from '../../constants'\n\nimport '../pages/Manager.css';\n\nclass Trigger extends React.Component {\n  constructor(props) {\n    super(props);\n    this.delete = this.delete.bind(this);\n    this.renderTriggerText = this.renderTriggerText.bind(this);\n  }\n\n  delete() {\n    this.props.delete(this.props.id);\n  }\n\n  renderTriggerText() {\n    const week = ['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday']\n    const device_triggers = ['d2b','d2i','d2l','d2s']\n\n    const type = this.props.triggers[this.props.id].type;\n    const operation = this.props.triggers[this.props.id].operation.split(':');\n    if (device_triggers.includes(type)) {\n      return this.props.devices[operation[0]] + ' (' + (deviceReference.params[operation[1]] ? deviceReference.params[operation[1]].name : operation[1]) + ') ' +  operation[2] + ' ' +  operation[3];\n    } else if (type === 'd2d') {\n      return this.props.devices[operation[0]] + ' (' + (deviceReference.params[operation[1]] ? deviceReference.params[operation[1]].name : operation[1]) + ') ' +  operation[2] + ' ' +  this.props.devices[operation[3]] + ' (' + (deviceReference.params[operation[4]].name ? deviceReference.params[operation[4]].name : operation[4]) + ') ';\n    } else if (type === 'd2c') {\n      return this.props.devices[operation[0]] + ' (' + (deviceReference.params[operation[1]] ? deviceReference.params[operation[1]].name : operation[1]) + ') ' +  operation[2] + ' ' +  operation[3];\n    } else if (type === 'time') {\n\n      var days = '';\n      for( var i = 0; i < operation[2].length; i++){\n        days += week[operation[2][i]];\n        if (i !== operation[2].length - 1)\n          days += ', ';\n      }\n      return operation[0] + ':'  + operation[1] + ' on ' + days\n\n    } else {\n      return this.props.triggers[this.props.id].operation\n    }\n  }\n\n  render() {\n\n    return (\n      <div className=\"trigger_device_container\">\n        <span>{this.renderTriggerText()}</span>\n        <img src=\"/global/bin_icon.png\" alt=\"Delete icon\" className=\"trigger_delete\" onClick={this.delete}/>\n      </div>\n    );\n  }\n}\n\nexport default Trigger\n","import React from 'react';\nimport Logic from './Logic'\nimport Trigger from './Trigger'\n\nclass Triggers extends React.Component {\n  constructor(props) {\n    super(props);\n    this.addOr = this.addOr.bind(this);\n    this.addAnd = this.addAnd.bind(this);\n    this.openTriggerAssistant = this.openTriggerAssistant.bind(this);\n  }\n\n  addOr() {\n    this.props.addTriggerLogic('or','triggers')\n  }\n\n  addAnd() {\n    this.props.addTriggerLogic('and','triggers')\n  }\n\n  openTriggerAssistant() {\n    this.props.openTriggerAssistant('triggers')\n  }\n\n  render() {\n\n    if (this.props.triggers.trigger) {\n      var operation = this.props.triggers[this.props.id]\n      const device_triggers = ['d2b','d2d','d2i','d2l','time','d2c']\n\n      if (operation.type === 'or'){\n        return <Logic id={this.props.id} triggers={this.props.triggers} devices={this.props.devices} delete={this.props.delete} addTriggerLogic={this.props.addTriggerLogic} openTriggerAssistant={this.props.openTriggerAssistant}/>\n      } else if (operation.type === 'and'){\n        return <Logic id={this.props.id} triggers={this.props.triggers} devices={this.props.devices} delete={this.props.delete} addTriggerLogic={this.props.addTriggerLogic} openTriggerAssistant={this.props.openTriggerAssistant}/>\n      } else if (device_triggers.includes(operation.type)){\n        return <Trigger id={this.props.id} triggers={this.props.triggers} devices={this.props.devices} delete={this.props.delete}/>\n      }\n    } else {\n      return (\n        <div>\n        <button type=\"button\" className=\"trigger_logic_button\" onClick={ this.addOr }>Or</button>\n        <button type=\"button\" className=\"trigger_logic_button\" onClick={ this.addAnd }>And</button>\n        <button type=\"button\" className=\"trigger_logic_button\" onClick={ this.openTriggerAssistant }>Trigger</button>\n        </div>\n      );\n    }\n\n  }\n}\n\nexport default Triggers\n","import React from 'react';\n\nimport '../pages/Manager.css';\n\nclass Assistant extends React.Component {\n  constructor(props) {\n    super(props);\n    this.addTriggerOperation = this.addTriggerOperation.bind(this);\n  }\n\n  addTriggerOperation(){\n    const hour = document.getElementById('hour').value;\n    const minute = document.getElementById('minute').value;\n    var week = '';\n\n    if (document.getElementById('monday').checked)\n      week += '1'\n    if (document.getElementById('tuesday').checked)\n      week += '2'\n    if (document.getElementById('wednesday').checked)\n      week += '3'\n    if (document.getElementById('thursday').checked)\n      week += '4'\n    if (document.getElementById('friday').checked)\n      week += '5'\n    if (document.getElementById('saturday').checked)\n      week += '6'\n    if (document.getElementById('sunday').checked)\n      week += '0'\n\n    const value = hour + ':' + minute + ':' + week;\n    this.props.addTriggerOperation('time',value);\n    this.props.closeTriggerAssistant();\n  }\n\n  render() {\n\n    return (\n      <div className=\"trigger_assistant_container\">\n        <h2 className=\"trigger_assistant_title\">Triggered by time</h2>\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n            Hour*\n          </div>\n          <div className=\"three_table_cel\">\n            <input type=\"number\" className=\"\" id=\"hour\" min=\"0\" max=\"23\"/>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"advise\">24h format</span>\n          </div>\n        </div>\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n            Minute*\n          </div>\n          <div className=\"three_table_cel\">\n            <input type=\"number\" className=\"\" id=\"minute\" min=\"0\" max=\"59\"/>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"advise\"></span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n            Week*\n          </div>\n          <div className=\"three_table_cel\">\n            Sunday\n          </div>\n          <div className=\"three_table_cel\">\n            <input type=\"checkbox\" id=\"sunday\"/>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n          </div>\n          <div className=\"three_table_cel\">\n            Monday\n          </div>\n          <div className=\"three_table_cel\">\n            <input type=\"checkbox\" id=\"monday\"/>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n          </div>\n          <div className=\"three_table_cel\">\n            Tuesday\n          </div>\n          <div className=\"three_table_cel\">\n            <input type=\"checkbox\" id=\"tuesday\"/>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n          </div>\n          <div className=\"three_table_cel\">\n            Wednesday\n          </div>\n          <div className=\"three_table_cel\">\n            <input type=\"checkbox\" id=\"wednesday\"/>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n          </div>\n          <div className=\"three_table_cel\">\n            Thursday\n          </div>\n          <div className=\"three_table_cel\">\n            <input type=\"checkbox\" id=\"thursday\"/>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n          </div>\n          <div className=\"three_table_cel\">\n            Friday\n          </div>\n          <div className=\"three_table_cel\">\n            <input type=\"checkbox\" id=\"friday\"/>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n          </div>\n          <div className=\"three_table_cel\">\n            Saturday\n          </div>\n          <div className=\"three_table_cel\">\n            <input type=\"checkbox\" id=\"saturday\"/>\n          </div>\n        </div>\n\n\n\n\n\n        <div className=\"trigger_assisstant_buttons_container\">\n          <button type=\"button\" className=\"trigger_assistant_button\" onClick={ this.addTriggerOperation }>Save</button>\n          <button type=\"button\" className=\"trigger_assistant_button red_button\" onClick={ this.props.closeTriggerAssistant }>Cancel</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Assistant\n","import React from 'react';\nimport { deviceReference } from '../../constants'\n\nimport '../pages/Manager.css';\n\nclass Device extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      device: \"\"\n    }\n    this.updateDevice = this.updateDevice.bind(this);\n    this.updateParam = this.updateParam.bind(this);\n    this.addTriggerOperation = this.addTriggerOperation.bind(this);\n    this.typeConversion = this.typeConversion.bind(this);\n  }\n\n  updateDevice(event) {\n    this.setState({\n      device: event.target.value\n    });\n  }\n\n  updateParam(event) {\n    this.setState({\n      param: event.target.value\n    });\n  }\n\n  addTriggerOperation(){\n    const device = document.getElementById('device').value;\n    const param = document.getElementById('param').value;\n    const comparator = document.getElementById('comparator').value;\n    const value = document.getElementById('value').value;\n\n\n    const operation = device + ':' + param + ':' + comparator + ':' + value;\n    this.props.addTriggerOperation(this.typeConversion(deviceReference.params[this.state.param].type),operation);\n    this.props.closeTriggerAssistant();\n  }\n\n  typeConversion(origen) {\n    const type = {\n      int: 'd2i',\n      list: 'd2l',\n      bool: 'd2b',\n      string: 'd2s',\n      color: 'd2c'\n    }\n    return type[origen]\n  }\n\n  render() {\n\n    const devices = Object.keys(this.props.devices).map((device) => {\n      return <option key={device} value={device}>{this.props.devices[device]}</option>\n    })\n\n    const params = this.state.device === \"\" ? '' : Object.keys(this.props.status[this.state.device]).map((param) => {\n      return <option key={param} value={param}>{ deviceReference.params[param] ? deviceReference.params[param].name : param + ' - Not supported yet' }</option>\n    })\n\n    var value = '';\n    if (deviceReference.params[this.state.param]){\n      const type = this.typeConversion(deviceReference.params[this.state.param].type);\n      if(type === 'd2i'){\n        value = (\n          <div className=\"two_table_row\">\n            <div className=\"two_table_cel\">\n              Value*\n            </div>\n            <div className=\"two_table_cel\">\n              <input type=\"number\" className=\"\" id=\"value\"/>\n            </div>\n          </div>\n        )\n      } else if(type === 'd2s'){\n        value = (\n          <div className=\"two_table_row\">\n            <div className=\"two_table_cel\">\n              Value*\n            </div>\n            <div className=\"two_table_cel\">\n              <input type=\"text\" className=\"\" id=\"value\"/>\n            </div>\n          </div>\n        )\n      } else if(type === 'd2b' || type === 'd2l'){\n\n        const options = deviceReference.params[this.state.param].select.map((option) => {\n          return <option key={option} value={option}>{option}</option>\n        })\n\n        value = (\n          <div className=\"two_table_row\">\n            <div className=\"two_table_cel\">\n              Value*\n            </div>\n            <div className=\"two_table_cel\">\n              <select name=\"type\" className=\"two_input\" id=\"value\">\n                {options}\n              </select>\n            </div>\n          </div>\n        )\n      }\n\n    }\n\n    return (\n      <div className=\"trigger_assistant_container\">\n        <h2 className=\"trigger_assistant_title\">Triggered by a device</h2>\n\n        <div className=\"two_table_row\">\n          <div className=\"two_table_cel\">\n            Device*\n          </div>\n          <div className=\"two_table_cel\">\n            <select name=\"type\" className=\"two_input\" id=\"device\" onChange={this.updateDevice}>\n              <option value=\"\">Select a device</option>\n              {devices}\n            </select>\n          </div>\n        </div>\n        <div className=\"two_table_row\">\n          <div className=\"two_table_cel\">\n            Param*\n          </div>\n          <div className=\"two_table_cel\">\n            <select name=\"type\" className=\"two_input\" id=\"param\" onChange={this.updateParam}>\n              <option value=\"\">Select a param</option>\n              {params}\n            </select>\n          </div>\n        </div>\n        <div className=\"two_table_row\">\n          <div className=\"two_table_cel\">\n            Comparator*\n          </div>\n          <div className=\"two_table_cel\">\n            <select name=\"type\" className=\"two_input\" id=\"comparator\">\n              <option>=</option>\n              <option>&lt;</option>\n              <option>&gt;</option>\n              <option>&lt;=</option>\n              <option>&gt;=</option>\n            </select>\n          </div>\n        </div>\n\n        {value}\n\n        <div className=\"trigger_assisstant_buttons_container\">\n          <button type=\"button\" className=\"trigger_assistant_button\" onClick={ this.addTriggerOperation }>Save</button>\n          <button type=\"button\" className=\"trigger_assistant_button red_button\" onClick={ this.props.closeTriggerAssistant }>Cancel</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Device\n","import React from 'react';\nimport { deviceReference } from '../../constants'\n\nimport '../pages/Manager.css';\n\nclass DeviceToDevice extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      device_a: \"\",\n      device_b: \"\"\n    }\n    this.updateDependencies = this.updateDependencies.bind(this);\n    this.addTriggerOperation = this.addTriggerOperation.bind(this);\n  }\n\n  updateDependencies(event) {\n    var state = this.state;\n    state[event.target.id] = event.target.value;\n    this.setState(state);\n  }\n\n\n  addTriggerOperation(){\n    const device_a = document.getElementById('device_a').value;\n    const param_a = document.getElementById('param_a').value;\n    const comparator = document.getElementById('comparator').value;\n    const device_b = document.getElementById('device_b').value;\n    const param_b = document.getElementById('param_b').value;\n\n    const operation = device_a + ':' + param_a + ':' + comparator + ':' + device_b + ':' + param_b;\n    this.props.addTriggerOperation('d2d',operation);\n    this.props.closeTriggerAssistant();\n  }\n\n  render() {\n\n    const devices = Object.keys(this.props.devices).map((device) => {\n      return <option key={device} value={device}>{this.props.devices[device]}</option>\n    })\n\n    const params_a = this.state.device_a === \"\" ? '' : Object.keys(this.props.status[this.state.device_a]).map((param) => {\n      return <option key={param} value={param}>{ deviceReference.params[param] ? deviceReference.params[param].name : param + ' - Not supported yet' }</option>\n    })\n\n    const params_b = this.state.device_b === \"\" ? '' : Object.keys(this.props.status[this.state.device_b]).map((param) => {\n      return <option key={param} value={param}>{ deviceReference.params[param] ? deviceReference.params[param].name : param + ' - Not supported yet' }</option>\n    })\n\n    return (\n      <div className=\"trigger_assistant_container\">\n        <h2 className=\"trigger_assistant_title\">Compare two devices</h2>\n\n        <div className=\"two_table_row\">\n          <div className=\"two_table_cel\">\n            Device A*\n          </div>\n          <div className=\"two_table_cel\">\n            <select name=\"type\" className=\"two_input\" id=\"device_a\" onChange={this.updateDependencies}>\n              <option value=\"\">Select a device</option>\n              {devices}\n            </select>\n          </div>\n        </div>\n        <div className=\"two_table_row\">\n          <div className=\"two_table_cel\">\n            Param A*\n          </div>\n          <div className=\"two_table_cel\">\n            <select name=\"type\" className=\"two_input\" id=\"param_a\" onChange={this.updateDependencies}>\n              <option value=\"\">Select a param</option>\n              {params_a}\n            </select>\n          </div>\n        </div>\n\n        <div className=\"two_table_row\">\n          <div className=\"two_table_cel\">\n            Comparator*\n          </div>\n          <div className=\"two_table_cel\">\n            <select name=\"type\" className=\"two_input\" id=\"comparator\">\n              <option>=</option>\n              <option>&lt;</option>\n              <option>&gt;</option>\n              <option>&lt;=</option>\n              <option>&gt;=</option>\n            </select>\n          </div>\n        </div>\n\n        <div className=\"two_table_row\">\n          <div className=\"two_table_cel\">\n            Device B*\n          </div>\n          <div className=\"two_table_cel\">\n            <select name=\"type\" className=\"two_input\" id=\"device_b\" onChange={this.updateDependencies}>\n              <option value=\"\">Select a device</option>\n              {devices}\n            </select>\n          </div>\n        </div>\n        <div className=\"two_table_row\">\n          <div className=\"two_table_cel\">\n            Param B*\n          </div>\n          <div className=\"two_table_cel\">\n            <select name=\"type\" className=\"two_input\" id=\"param_b\" onChange={this.updateDependencies}>\n              <option value=\"\">Select a param</option>\n              {params_b}\n            </select>\n          </div>\n        </div>\n\n        <div className=\"trigger_assisstant_buttons_container\">\n          <button type=\"button\" className=\"trigger_assistant_button\" onClick={ this.addTriggerOperation }>Save</button>\n          <button type=\"button\" className=\"trigger_assistant_button red_button\" onClick={ this.props.closeTriggerAssistant }>Cancel</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default DeviceToDevice\n","import React from 'react';\nimport Time from './Time'\nimport Device from './Device'\nimport DeviceToDevice from './DeviceToDevice'\n\nimport '../pages/Manager.css';\n\nclass Assistant extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      type: ''\n    }\n    this.timeTigger = this.timeTigger.bind(this);\n    this.deiceTrigger = this.deiceTrigger.bind(this);\n    this.deviceToDeviceTrigger = this.deviceToDeviceTrigger.bind(this);\n  }\n\n  timeTigger() {\n    this.setState({\n      type: 'time'\n    });\n  }\n\n  deiceTrigger() {\n    this.setState({\n      type: 'device'\n    });\n  }\n\n  deviceToDeviceTrigger() {\n    this.setState({\n      type: 'device2device'\n    });\n  }\n\n  render() {\n\n    if (this.state.type === '')\n      return (\n        <div className=\"trigger_assistant_container\">\n          <h2 className=\"trigger_assistant_title\">Add a new trigger</h2>\n          <div className=\"trigger_assisstant_buttons_container\">\n            <button type=\"button\" className=\"trigger_assistant_button\" onClick={ this.timeTigger }>Time</button>\n            <button type=\"button\" className=\"trigger_assistant_button\" onClick={ this.deiceTrigger }>Device</button>\n            <button type=\"button\" className=\"trigger_assistant_button\" onClick={ this.deviceToDeviceTrigger }>Device to device</button>\n            <button type=\"button\" className=\"trigger_assistant_button red_button\" onClick={ this.props.closeTriggerAssistant }>Cancel</button>\n          </div>\n        </div>\n      );\n    else if (this.state.type === 'time')\n      return <Time closeTriggerAssistant={this.props.closeTriggerAssistant} addTriggerOperation={this.props.addTriggerOperation}/>\n    else if (this.state.type === 'device')\n      return <Device devices={this.props.devices} status={this.props.status} closeTriggerAssistant={this.props.closeTriggerAssistant} addTriggerOperation={this.props.addTriggerOperation}/>\n    else if (this.state.type === 'device2device')\n      return <DeviceToDevice devices={this.props.devices} status={this.props.status} closeTriggerAssistant={this.props.closeTriggerAssistant} addTriggerOperation={this.props.addTriggerOperation}/>\n  }\n}\n\nexport default Assistant\n","import React from 'react';\nimport { deviceReference } from '../../constants'\n\nimport '../pages/Manager.css';\n\nclass Target extends React.Component {\n  constructor(props) {\n    super(props);\n    this.delete = this.delete.bind(this);\n  }\n\n  delete() {\n    this.props.delete(this.props.id);\n  }\n\n  render() {\n\n    const container = {\n        marginBottom: '10px'\n    }\n\n    return (\n      <div className=\"trigger_device_container\" style={container}>\n        <span>{ (this.props.devices[this.props.target.device] ? this.props.devices[this.props.target.device] : this.props.target.device)\n        + ' (' + (deviceReference.params[this.props.target.param] ? deviceReference.params[this.props.target.param].name : this.props.target.param)\n        + ') = ' + this.props.target.value}</span>\n        <img src=\"/global/bin_icon.png\" alt=\"Delete icon\" className=\"trigger_delete\" onClick={this.delete}/>\n      </div>\n    );\n  }\n}\n\nexport default Target\n","import React from 'react';\nimport { deviceReference } from '../../constants'\n\nimport '../pages/Manager.css';\n\nclass Device extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      device: \"\"\n    }\n    this.updateDevice = this.updateDevice.bind(this);\n    this.updateParam = this.updateParam.bind(this);\n    this.addTarget = this.addTarget.bind(this);\n    this.typeConversion = this.typeConversion.bind(this);\n  }\n\n  updateDevice(event) {\n    this.setState({\n      device: event.target.value\n    });\n  }\n\n  updateParam(event) {\n    this.setState({\n      param: event.target.value\n    });\n  }\n\n  addTarget(){\n    const device = document.getElementById('device').value;\n    const param = document.getElementById('param').value;\n    const value = document.getElementById('value').value;\n\n    const target = {\n      device: device,\n      param: param,\n      value: value\n    }\n    this.props.addTarget(target);\n    document.getElementById('device').value = '';\n    document.getElementById('param').value = '';\n    this.setState({\n      param: ''\n    });\n  }\n\n  typeConversion(origen) {\n    const type = {\n      int: 'd2i',\n      list: 'd2l',\n      bool: 'd2b',\n      string: 'd2s',\n      color: 'd2c'\n    }\n    return type[origen]\n  }\n\n  render() {\n\n    const devices = Object.keys(this.props.devices).map((device) => {\n      return <option key={device} value={device}>{this.props.devices[device]}</option>\n    })\n\n    const params = this.state.device === \"\" ? '' : Object.keys(this.props.status[this.state.device]).map((param) => {\n      return <option key={param} value={param}>{ deviceReference.params[param] ? deviceReference.params[param].name : param + ' - Not supported yet' }</option>\n    })\n\n    var value = '';\n    if (deviceReference.params[this.state.param]){\n      const type = this.typeConversion(deviceReference.params[this.state.param].type);\n      if(type === 'd2i'){\n        value = (\n          <div className=\"two_table_row\">\n            <div className=\"two_table_cel\">\n              Value*\n            </div>\n            <div className=\"two_table_cel\">\n              <input type=\"number\" className=\"\" id=\"value\"/>\n            </div>\n          </div>\n        )\n      } else if(type === 'd2s'){\n        value = (\n          <div className=\"two_table_row\">\n            <div className=\"two_table_cel\">\n              Value*\n            </div>\n            <div className=\"two_table_cel\">\n              <input type=\"text\" className=\"\" id=\"value\"/>\n            </div>\n          </div>\n        )\n      } else if(type === 'd2b' || type === 'd2l'){\n\n        const options = deviceReference.params[this.state.param].select.map((option) => {\n          return <option key={option} value={option}>{option}</option>\n        })\n\n        value = (\n          <div className=\"two_table_row\">\n            <div className=\"two_table_cel\">\n              Value*\n            </div>\n            <div className=\"two_table_cel\">\n              <select name=\"type\" className=\"two_input\" id=\"value\">\n                {options}\n              </select>\n            </div>\n          </div>\n        )\n      }\n\n    }\n\n    return (\n      <div className=\"trigger_assistant_container\">\n        <h2 className=\"trigger_assistant_title\">New target</h2>\n\n        <div className=\"two_table_row\">\n          <div className=\"two_table_cel\">\n            Device*\n          </div>\n          <div className=\"two_table_cel\">\n            <select name=\"type\" className=\"two_input\" id=\"device\" onChange={this.updateDevice}>\n              <option value=\"\">Select a device</option>\n              {devices}\n            </select>\n          </div>\n        </div>\n        <div className=\"two_table_row\">\n          <div className=\"two_table_cel\">\n            Param*\n          </div>\n          <div className=\"two_table_cel\">\n            <select name=\"type\" className=\"two_input\" id=\"param\" onChange={this.updateParam}>\n              <option value=\"\">Select a param</option>\n              {params}\n            </select>\n          </div>\n        </div>\n\n        {value}\n\n        <div className=\"trigger_assisstant_buttons_container\">\n          <button type=\"button\" className=\"trigger_assistant_button\" onClick={ this.addTarget }>Add</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Device\n","import React from 'react';\nimport Triggers from '../manager/Triggers.js'\nimport Assistant from '../manager/Assistant.js'\nimport Target from '../manager/Target.js'\nimport DeviceTarget from '../manager/DeviceTarget.js'\nimport getCookieValue from '../../functions'\nimport { root } from '../../constants'\n\nimport './Manager.css';\n\nclass Manager extends React.Component {\n  constructor(props) {\n    super(props);\n    const id = window.location.pathname.split('/')[3];\n    var create = false;\n    if (id === \"\") create = true;\n    this.state = {\n      id: id,\n      create: create,\n      save_status: \"\",\n      trigger_assistant_parent: 0,\n      task: {\n        title: '',\n        description: '',\n        triggers: {},\n        target: []\n      },\n      devices: [],\n      status: {}\n    }\n    this.update = this.update.bind(this);\n    this.save = this.save.bind(this);\n    this.delete = this.delete.bind(this);\n    this.deleteTrigger = this.deleteTrigger.bind(this);\n    this.addTriggerLogic = this.addTriggerLogic.bind(this);\n    this.openTriggerAssistant = this.openTriggerAssistant.bind(this);\n    this.addTriggerOperation = this.addTriggerOperation.bind(this);\n    this.closeTriggerAssistant = this.closeTriggerAssistant.bind(this);\n    this.addTarget = this.addTarget.bind(this);\n  }\n\n  componentDidMount() {\n    // Load devices data\n    var dev = new XMLHttpRequest();\n    dev.onload = function (e) {\n      if (dev.readyState === 4) {\n        if (dev.status === 200) {\n          var data = JSON.parse(dev.responseText);\n          var devices_names = {}\n          data.devices.forEach((device) => {\n            devices_names[device.id] = device.name.name\n          })\n          this.setState({\n             devices: devices_names,\n             status:  data.status\n           });\n        } else {\n          console.error(dev.statusText);\n        }\n      }\n    }.bind(this);\n    dev.open(\"GET\", root + \"api/global/get/\");\n    dev.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    dev.send();\n\n    // Load task if neeeded\n    if (!this.state.create){\n      var tas = new XMLHttpRequest();\n      tas.onload = function (e) {\n        if (tas.readyState === 4) {\n          if (tas.status === 200) {\n            var data = JSON.parse(tas.responseText);\n            console.log(data);\n            this.setState({\n               task: data\n             });\n          } else {\n            console.error(tas.statusText);\n          }\n        }\n      }.bind(this);\n      tas.open(\"GET\", root + \"api/tasks/get/\" + this.state.id + \"/\");\n      tas.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n      tas.send();\n    }\n  }\n\n  update(event){\n    var task = this.state.task;\n    task[event.target.id] = event.target.value\n    this.setState({\n      task: task\n    })\n  }\n\n  save(){\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      if (http.readyState === 4) {\n        if (http.status === 200) {\n          JSON.parse(http.responseText);\n          this.setState({\n             save_status: \"Saved correctly.\"\n           });\n        } else {\n          console.error(http.statusText);\n          this.setState({\n             save_status: \"Error, the changes haven't been saved.\"\n           });\n        }\n        setTimeout(function(){\n          this.setState({\n             save_status: \"\"\n           });\n        }.bind(this), 5000)\n      }\n    }.bind(this);\n    var payload = {\n      \"task\": this.state.task\n    }\n    if (this.state.create){\n      http.open(\"POST\", root + \"api/tasks/create/\");\n    } else {\n      http.open(\"POST\", root + \"api/tasks/update/\");\n      payload['id'] = this.state.id;\n    }\n    http.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\n    http.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    http.send(JSON.stringify(payload));\n  }\n\n  delete(){\n    if(window.confirm('Do you want to delete the device?')){\n      var http = new XMLHttpRequest();\n      http.onload = function (e) {\n        if (http.readyState === 4) {\n          if (http.status === 200) {\n            window.location.href = \"/tasks/\"\n          } else {\n            console.error(http.statusText);\n            this.setState({\n               save_status: \"Error, the device hasn't been deleted.\"\n             });\n          }\n          setTimeout(function(){\n            this.setState({\n               save_status: \"\"\n             });\n          }.bind(this), 5000)\n        }\n      }.bind(this);\n      http.open(\"GET\", root + \"api/tasks/delete/\" + this.state.id + \"/\");\n      http.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n      http.send();\n    } else {\n      this.setState({\n         save_status: \"Ok. The device is save.\"\n       });\n    }\n  }\n\n  deleteTrigger(id) {\n    // Get the task\n    var task = this.state.task;\n    var triggers = task.triggers;\n    // Get the the parent id\n    const parent = triggers[id].parent\n    if (parent !== 'triggers') {\n      // Delete from the parent\n      const index = triggers[parent].operation.indexOf(id);\n      triggers[parent].operation.splice(index,1)\n      // Delete the trigger\n      delete triggers[id];\n      task.triggers = triggers;\n    } else {\n      task.triggers = {};\n    }\n    this.setState({\n      task: task\n    });\n  }\n\n  addTriggerLogic(type, parent) {\n    // Get the triggers\n    var task = this.state.task;\n    if (parent !== 'triggers') {\n      // Get the timestamp\n      const ts = Date.now();\n      // Compose and create the logic trigger\n      task.triggers[ts] = {\n        operation: [],\n        parent: parent,\n        type: type\n      };\n      // Register the trigger in the parent\n      task.triggers[parent].operation.push(ts);\n    } else {\n      task.triggers['trigger'] = {\n        operation: [],\n        parent: 'triggers',\n        type: type\n      };\n    }\n    // Update the component state\n    this.setState({\n      task: task\n    });\n  }\n\n  openTriggerAssistant(parent) {\n    this.setState({\n      trigger_assistant_parent: parent\n    });\n  }\n\n  addTriggerOperation(type, operation) {\n    // Get the triggers\n    var task = this.state.task;\n    const parent = this.state.trigger_assistant_parent;\n    if (parent !== 'triggers') {\n      // Get the timestamp\n      const ts = Date.now();\n      // Compose and create the logic trigger\n      task.triggers[ts] = {\n        operation: operation,\n        parent: parent,\n        type: type\n      };\n      // Register the trigger in the parent\n      task.triggers[parent].operation.push(ts);\n    } else {\n      task.triggers['trigger'] = {\n        operation: operation,\n        parent: 'triggers',\n        type: type\n      };\n    }\n    // Update the component state\n    this.setState({\n      task: task\n    });\n  }\n\n  closeTriggerAssistant() {\n    this.setState({\n      trigger_assistant_parent: 0\n    });\n  }\n\n  addTarget(target) {\n    var task = this.state.task;\n    task.target.push(target);\n    this.setState({\n      task: task\n    });\n  }\n\n  render() {\n\n    const button = {\n      width: '200px'\n    }\n\n    const deleteButton = {\n      backgroundColor: 'red'\n    }\n\n    const deleteButtonDisabled = {\n      backgroundColor: 'red',\n      opacity: '0.2'\n    }\n\n    const separator = {\n      width: '70%'\n    }\n\n    const targets = this.state.task.target.map((target, i) => {\n      return <Target key={i} target={target} devices={this.state.devices}/>\n    })\n\n    return (\n      <div>\n\n      <div className=\"page_block_container\">\n        <h2>Task</h2>\n        <hr style={separator}/>\n        <div className=\"two_table_row\">\n          <div className=\"two_table_cel\">\n            Name*\n          </div>\n          <div className=\"two_table_cel\">\n            <input type=\"text\" className=\"two_input\" id=\"title\" defaultValue={this.state.task.title} onChange={this.update}/>\n          </div>\n        </div>\n        <div className=\"two_table_row\">\n          <div className=\"two_table_cel\">\n            Description*\n          </div>\n          <div className=\"two_table_cel\">\n            <input type=\"text\" className=\"two_input\" id=\"description\" defaultValue={this.state.task.description} onChange={this.update}/>\n          </div>\n        </div>\n        <hr/>\n        <h2>Triggers</h2>\n        <div className=\"advise\">\n          <span></span>\n        </div>\n        {\n          this.state.trigger_assistant_parent !== 0\n          ?\n          <Assistant devices={this.state.devices} status={this.state.status} closeTriggerAssistant={this.closeTriggerAssistant} addTriggerOperation={this.addTriggerOperation}/>\n          :\n          <Triggers id=\"trigger\" triggers={this.state.task.triggers} devices={this.state.devices} delete={this.deleteTrigger} addTriggerLogic={this.addTriggerLogic} openTriggerAssistant={this.openTriggerAssistant}/>\n        }\n        <hr/>\n        <h2>Targets</h2>\n        <div className=\"advise\">\n          <span></span>\n        </div>\n        {targets}\n        <DeviceTarget devices={this.state.devices} status={this.state.status} addTarget={this.addTarget}/>\n\n        <hr/>\n        <div className=\"two_table_cel\">\n          <button type=\"button\" style={ this.state.create ? deleteButtonDisabled : deleteButton } onClick={ this.delete } disabled={ this.state.create ? true : false}>Delete</button>\n          <button type=\"button\" onClick={ this.save }>Save</button>\n          <span>{this.state.save_status}</span>\n        </div>\n      </div>\n\n    </div>\n  );\n  }\n}\n\nexport default Manager\n","import React from 'react';\nimport getCookieValue from '../../functions'\nimport { root } from '../../constants'\n\nclass Settings extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      settings: {\n        google: {},\n        ddns: {},\n        mqtt: {},\n        apikey: \"\"\n      },\n      save_status: \"\",\n      url: {\n        auth: \"\",\n        token: \"\",\n        fulfillment: \"\"\n      }\n    }\n    this.update = this.update.bind(this);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n    this.save = this.save.bind(this);\n  }\n\n  componentDidMount() {\n    if (!this.state.create){\n      var http = new XMLHttpRequest();\n      http.onload = function (e) {\n        if (http.readyState === 4) {\n          if (http.status === 200) {\n            var data = JSON.parse(http.responseText);\n            this.setState({\n               settings: data,\n               url: {\n                 auth: \"https://\" + data.ddns.hostname + \"/auth/\",\n                 token: \"https://\" + data.ddns.hostname + \"/token/\",\n                 fulfillment: \"https://\" + data.ddns.hostname + \"/smarthome/\"\n               }\n             });\n          } else {\n            console.error(http.statusText);\n          }\n        }\n      }.bind(this);\n      http.open(\"GET\", root + \"api/settings/get/\");\n      http.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n      http.send();\n    }\n  }\n\n  update(event){\n    // this.props.update('attributes/' + event.target.id,event.target.value);\n    const id = event.target.id.split(\"/\");\n    var settings = this.state.settings;\n    if (id.length === 1){\n      settings[id[0]] = event.target.value;\n    } else if (id.length === 2){\n      settings[id[0]][id[1]] = event.target.value;\n    }\n    this.setState({\n       settings: settings\n     });\n  }\n\n  updateCheckbox(event){\n    // this.props.update('attributes/' + event.target.id,event.target.value);\n    const id = event.target.id.split(\"/\");\n    var settings = this.state.settings;\n    if (id.length === 1){\n      settings[id[0]] = event.target.checked;\n    } else if (id.length === 2){\n      settings[id[0]][id[1]] = event.target.checked;\n    }\n    this.setState({\n       settings: settings\n     });\n  }\n\n  save(){\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      if (http.readyState === 4) {\n        if (http.status === 200) {\n          JSON.parse(http.responseText);\n          this.setState({\n             save_status: \"Saved correctly.\"\n           });\n        } else {\n          this.setState({\n             save_status: \"Error, the changes haven't been saved.\"\n           });\n        }\n        setTimeout(function(){\n          this.setState({\n             save_status: \"\"\n           });\n        }.bind(this), 5000)\n      }\n    }.bind(this);\n    http.open(\"POST\", root + \"api/settings/update/\");\n    http.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\n    http.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    http.send(JSON.stringify(this.state.settings));\n  }\n\n  render() {\n\n    return (\n      <div>\n        <div className=\"page_block_container\">\n          <h2>Actions on Google</h2>\n          <hr/>\n          <div className=\"page_block_content_container\">\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">\n                Client ID\n              </div>\n              <div className=\"two_table_cel\">\n                <input type=\"text\" className=\"two_input\" id=\"google/client_id\" defaultValue={this.state.settings.google.client_id} onChange={this.update}/>\n              </div>\n              <div className=\"two_table_cel\">\n                <span className=\"advise\"></span>\n              </div>\n            </div>\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">\n                Client Secret\n              </div>\n              <div className=\"two_table_cel\">\n                <input type=\"text\" className=\"two_input\" id=\"google/client_secret\" defaultValue={this.state.settings.google.client_secret} onChange={this.update}/>\n              </div>\n              <div className=\"two_table_cel\">\n                <span className=\"advise\"></span>\n              </div>\n            </div>\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">\n                Authorization URL\n              </div>\n              <div className=\"two_table_cel\">\n                <input type=\"text\" className=\"two_input\" defaultValue={this.state.url.auth} disabled/>\n              </div>\n              <div className=\"two_table_cel\">\n                <span className=\"advise\"></span>\n              </div>\n            </div>\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">\n                Token URL\n              </div>\n              <div className=\"two_table_cel\">\n                <input type=\"text\" className=\"two_input\" defaultValue={this.state.url.token} disabled/>\n              </div>\n              <div className=\"two_table_cel\">\n                <span className=\"advise\"></span>\n              </div>\n            </div>\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">\n                Fulfillment URL\n              </div>\n              <div className=\"two_table_cel\">\n                <input type=\"text\" className=\"two_input\" defaultValue={this.state.url.fulfillment} disabled/>\n              </div>\n              <div className=\"two_table_cel\">\n                <span className=\"advise\"></span>\n              </div>\n            </div>\n          </div>\n          <div className=\"page_block_buttons_container\">\n            <button type=\"button\" onClick={ this.save }>Save</button>\n            <span>{this.state.save_status}</span>\n          </div>\n          <div className=\"advise\">\n            <span>Actions on Google settings. It is used to authenticate with Google. If you change it here, you must change it on the Actions Console &#62; Develop &#62; Account Linking.</span>\n          </div>\n        </div>\n\n\n        <div className=\"page_block_container\">\n          <h2>MQTT</h2>\n          <hr/>\n          <div className=\"page_block_content_container\">\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">\n                User\n              </div>\n              <div className=\"two_table_cel\">\n                <input type=\"text\" className=\"two_input\" id=\"mqtt/user\" defaultValue={this.state.settings.mqtt.user} onChange={this.update}/>\n              </div>\n            </div>\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">\n                Password\n              </div>\n              <div className=\"two_table_cel\">\n                <input type=\"text\" className=\"two_input\" id=\"mqtt/password\" defaultValue={this.state.settings.mqtt.password} onChange={this.update}/>\n              </div>\n            </div>\n          </div>\n          <div className=\"page_block_buttons_container\">\n            <button type=\"button\" onClick={ this.save }>Save</button>\n            <span>{this.state.save_status}</span>\n          </div>\n          <div className=\"advise\">\n            <span>Important. You must configure the username and password into Mosquitto manually from a terminal. This is only for telling Homeware its credentials. Clear both if you don't use credentials.</span>\n          </div>\n        </div>\n\n        <div className=\"page_block_container\">\n          <h2>DDNS provider</h2>\n          <hr/>\n          <div className=\"page_block_content_container\">\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">\n                Status:\n              </div>\n              <div className=\"two_table_cel\">\n                { this.state.settings.ddns.status }\n              </div>\n            </div>\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">\n                IP and time:\n              </div>\n              <div className=\"two_table_cel\">\n                { this.state.settings.ddns.ip + \" updated at \" + this.state.settings.ddns.last}\n              </div>\n            </div>\n          </div>\n          <hr/>\n          <div className=\"page_block_content_container\">\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">\n                Enable\n              </div>\n              <div className=\"two_table_cel\">\n                <input type=\"checkbox\" id=\"ddns/enabled\" defaultChecked={this.state.settings.ddns.enabled} onChange={this.updateCheckbox}/>\n              </div>\n            </div>\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">\n                Provider\n              </div>\n              <div className=\"two_table_cel\">\n                <select name=\"type\" className=\"settings_select\" id=\"ddns/provider\" value={this.state.settings.ddns.provider} onChange={this.update}>\n                  <option value=\"noip\">Noip</option>\n                </select>\n              </div>\n            </div>\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">\n                Username\n              </div>\n              <div className=\"two_table_cel\">\n                <input type=\"text\" className=\"two_input\" id=\"ddns/username\" defaultValue={this.state.settings.ddns.username} onChange={this.update}/>\n              </div>\n            </div>\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">\n                Password\n              </div>\n              <div className=\"two_table_cel\">\n                <input type=\"text\" className=\"two_input\" id=\"ddns/password\" defaultValue={this.state.settings.ddns.password} onChange={this.update}/>\n              </div>\n            </div>\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">\n                Hostname\n              </div>\n              <div className=\"two_table_cel\">\n                <input type=\"text\" className=\"two_input\" id=\"ddns/hostname\" defaultValue={this.state.settings.ddns.hostname} onChange={this.update}/>\n              </div>\n            </div>\n          </div>\n          <div className=\"page_block_buttons_container\">\n            <button type=\"button\" onClick={ this.save }>Save</button>\n            <span>{this.state.save_status}</span>\n          </div>\n          <div className=\"advise\">\n            <span>Set up the access data to the DDNS provider account. Open an issue on Github if you want a DDNS provider that is not listed.</span>\n          </div>\n        </div>\n\n\n      </div>\n    );\n  }\n}\n\nexport default Settings\n","import React from 'react';\n\nfunction Component(props) {\n\n  const component = {\n    marginTop: '5px',\n    width: '100%',\n    display: 'grid',\n    gridTemplateColumns: '70% 30%'\n  }\n\n  const textContainer = {\n    textAlign: 'left',\n    paddingTop: '4px'\n  }\n\n  const labelContainer = {\n    textAlign: 'right',\n    paddingTop: '4px'\n  }\n\n  const text = {\n    fontSize: '18px'\n  }\n\n  const running = {\n    fontSize: '12px',\n    fontWeight: 'bold',\n    color: 'white',\n    backgroundColor: 'green',\n    padding: '5px',\n    paddingLeft: '10px',\n    paddingRight: '10px',\n    borderRadius: '5px'\n  }\n\n  const stopped = {\n    fontSize: '12px',\n    fontWeight: 'bold',\n    color: 'white',\n    backgroundColor: 'red',\n    padding: '5px',\n    paddingLeft: '10px',\n    paddingRight: '10px',\n    borderRadius: '5px'\n  }\n\n  return (\n    <div style={ component }>\n      <div style={ textContainer }>\n        <span style={ text }>{ props.title }</span>\n      </div>\n      <div style={ labelContainer }>\n        <span style={ props.status === 'Running' ? running : stopped }>{ props.status }</span>\n      </div>\n    </div>\n  );\n}\n\nexport default Component\n","import React from 'react';\nimport getCookieValue from '../../functions'\nimport { root } from '../../constants'\nimport Component from '../system/Component.js'\nconst ReactMarkdown = require('react-markdown')\n\n\nclass System extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      components: [],\n      git: {\n        version: '',\n        description: '',\n        code: 0\n      },\n      version: '',\n      upgrading: false\n    }\n\n    this.loadComponents = this.loadComponents.bind(this);\n    this.upgrade = this.upgrade.bind(this);\n    this.areYouAwake = this.areYouAwake.bind(this);\n  }\n\n  componentDidMount() {\n\n    this.loadComponents();\n    setInterval(this.loadComponents,3000)\n\n    var vers = new XMLHttpRequest();\n    vers.onload = function (e) {\n      if (vers.readyState === 4) {\n        if (vers.status === 200) {\n          var version = JSON.parse(vers.responseText);\n          this.setState({ version: version.version });\n        } else {\n          console.error(vers.statusText);\n        }\n      }\n    }.bind(this);\n    vers.open(\"GET\", root + \"api/global/version/\");\n    vers.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    vers.send();\n\n    var git = new XMLHttpRequest();\n    git.onload = function (e) {\n      if (git.readyState === 4) {\n        if (git.status === 200) {\n          const latestRelease = JSON.parse(git.responseText);\n          const description = latestRelease.body\n          this.setState({ git: {\n            version: latestRelease.tag_name,\n            description: description,\n            code: 200\n            }\n          });\n        } else if (git.status === 403) {\n          this.setState({ git: {\n            version: 'GitHub rate limit exceeded. You have reloaded so many times. It will reset after some time.',\n            code: 403\n            }\n          });\n        } else {\n          console.error(git.statusText);\n        }\n      }\n    }.bind(this);\n    git.open(\"GET\", 'https://api.github.com/repos/kikeelectronico/Homeware-LAN/releases/latest');\n    git.send();\n  }\n\n  loadComponents() {\n    var comp = new XMLHttpRequest();\n    comp.onload = function (e) {\n      if (comp.readyState === 4) {\n        if (comp.status === 200) {\n          var response = JSON.parse(comp.responseText);\n          var components = []\n          var keys = Object.keys(response);\n          for (var i = 0; i < keys.length; i++) {\n            components.push(response[keys[i]])\n          }\n\n          this.setState({ components: components });\n        } else {\n          console.error(comp.statusText);\n        }\n      }\n    }.bind(this);\n    comp.open(\"GET\", root + \"api/system/status/\");\n    comp.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    comp.send();\n  }\n\n  upgrade(){\n    if(window.confirm('Are you sure?')){\n      window.open(root + \"files/buckup/homeware/\" + getCookieValue('token'))\n      this.setState({\n        upgrading: true\n      });\n\n      var conn = new XMLHttpRequest();\n      conn.onload = function (e) {\n        if (conn.readyState === 4) {\n          if (conn.status === 200) {\n            this.areYouAwake();\n          } else {\n            console.error(conn.statusText);\n          }\n        }\n      }.bind(this)\n      conn.open(\"GET\", root + \"api/system/upgrade/\");\n      conn.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n      conn.send();\n    }\n  }\n\n  areYouAwake(){\n    var conn = new XMLHttpRequest();\n    conn.onload = function (e) {\n      if (conn.readyState === 4) {\n        if (conn.status === 200) {\n          window.location.href = '/'\n        } else {\n          console.error(conn.statusText);\n          setTimeout(this.areYouAwake,2000);\n        }\n      }\n    }.bind(this)\n    conn.open(\"GET\", root + \"test/\");\n    conn.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    conn.send();\n  }\n\n  restart(){\n    alert('WIP');\n  }\n\n  reboot(){\n    alert('WIP');\n  }\n\n  shutdown(){\n    alert('WIP');\n  }\n\n  render() {\n\n    const upgrade_button = {\n      width: '200px'\n    }\n\n    const git_description = {\n      marginTop: '20px',\n      marginLeft: '10%',\n      width: '80%',\n      paddingLeft: '20px',\n      paddingRight: '20px',\n      paddingTop: '20px',\n      paddingBottom: '20px',\n      borderRadius: '20px',\n      border: '1px solid #aaa'\n    }\n\n    const red_text = {\n      color: 'red'\n    }\n\n    const components = this.state.components.map((component) =>\n      <Component title={ component.title } status={ component.status } enable={ component.enable } key={ component.title }/>\n    );\n\n    var upgrade = '';\n    if(this.state.version !== this.state.git.version && this.state.git.code === 200 && !this.state.upgrading){\n      upgrade = <div><b>New version:</b> { this.state.git.version} <div style={ git_description }> <ReactMarkdown source={this.state.git.description} /> <button type=\"button\" style={ upgrade_button } onClick={ this.upgrade }>Upgrade</button></div> </div>\n    } else if(this.state.git.code === 403 && !this.state.upgrading){\n      upgrade = <div><b>New version:</b> { this.state.git.version}</div>\n    } else if (this.state.upgrading) {\n      upgrade = <div style={ git_description }><b style={ red_text }>Upgrading</b>. It will take a couple of minutes. You will be redirected to the homepage once finished.</div>\n    }\n\n\n    return (\n      <div>\n        <div className=\"page_block_container\">\n          <h2>System status</h2>\n          <hr/>\n          <div className=\"page_block_content_container\">\n            { components }\n          </div>\n          <div className=\"advise\">\n            <span>These are the core elements of Homeware-LAN. All must be running.</span>\n          </div>\n        </div>\n\n        <div className=\"page_block_container\">\n          <h2>Plugins</h2>\n          <hr/>\n          <div className=\"page_block_content_container\">\n            WIP\n          </div>\n          <div className=\"advise\">\n            <span></span>\n          </div>\n        </div>\n\n        <div className=\"page_block_container\">\n          <h2>Version</h2>\n          <hr/>\n          <div className=\"page_block_content_container\">\n            <b>System version:</b> { this.state.version }\n            { upgrade }\n          </div>\n          <div className=\"advise\">\n            <span>Verify if there is any code update and upgrade the software if an update is available.</span>\n          </div>\n        </div>\n\n        <div className=\"page_block_container\">\n          <h2>Power</h2>\n          <hr/>\n          <div className=\"page_block_buttons_container\">\n            <button type=\"button\" onClick={ this.restart }>Restart Homeware</button>\n            <button type=\"button\" onClick={ this.reboot }>Reboot System</button>\n            <button type=\"button\" onClick={ this.shutdown }>Shutdown System</button>\n          </div>\n          <div className=\"advise\">\n            <span>Control the device and restart the Homeware-LAN installation.</span>\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default System\n","import React from 'react';\nimport getCookieValue from '../../functions'\nimport { root } from '../../constants'\n\nclass Backup extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    }\n  }\n\n  backup(){\n    window.location = root + \"files/buckup/homeware/\" + getCookieValue('token')\n  }\n\n  render() {\n\n    const button = {\n      width: '200px'\n    }\n\n    const restore_url = root + \"files/restore/file/\" + getCookieValue('token') + \"/\";\n\n    return (\n      <div>\n\n\n        <div className=\"page_block_container\">\n          <h2>Backup</h2>\n          <hr/>\n          <div className=\"page_block_content_container\">\n              <button type=\"button\" style={ button } onClick={ this.backup }>Backup</button>\n          </div>\n          <div className=\"advise\">\n            <span>Download a backup file.</span>\n          </div>\n        </div>\n\n        <div className=\"page_block_container\">\n          <h2>Restore</h2>\n          <hr/>\n          <div className=\"page_block_content_container\">\n            <form method=\"post\" encType=\"multipart/form-data\" action={ restore_url }>\n              <input type=\"file\" name=\"file\"/>\n              <button type=\"submit\" style={ button } onClick={ this.restart }>Restore</button>\n              </form>\n          </div>\n          <div className=\"advise\">\n            <span>Restore a backup file.</span>\n          </div>\n        </div>\n\n\n      </div>\n    );\n  }\n}\n\nexport default Backup\n","import React from 'react';\nimport getCookieValue from '../../functions'\nimport { root } from '../../constants'\n\nclass Access extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {\n        apikey: ''\n      }\n    }\n  }\n\n  componentDidMount() {\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      if (http.readyState === 4) {\n        if (http.status === 200) {\n          var data = JSON.parse(http.responseText);\n          this.setState({ data: data });\n        } else {\n          console.error(http.statusText);\n        }\n      }\n    }.bind(this);\n    http.open(\"GET\", root + \"api/access/get/\");\n    http.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    http.send();\n  }\n\n  generateAPIKey(){\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      if (http.readyState === 4) {\n        if (http.status === 200) {\n          // var data = JSON.parse(http.responseText);\n          window.location.href = \"/access\"\n        } else {\n          console.error(http.statusText);\n        }\n      }\n    };\n    http.open(\"GET\", root + \"api/settings/apikey/\");\n    http.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    http.send();\n  }\n\n  render() {\n\n    return (\n      <div>\n        <div className=\"page_block_container\">\n          <h2>API key</h2>\n          <hr/>\n          <div className=\"page_block_content_container\">\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">\n                API Key\n              </div>\n              <div className=\"two_table_cel\">\n                <input type=\"text\" className=\"two_input\" id=\"apikey\" value={ this.state.data.apikey } disabled/>\n              </div>\n            </div>\n          </div>\n          <div className=\"page_block_buttons_container\">\n            <button type=\"button\" onClick={ this.generateAPIKey }>Generate</button>\n\n          </div>\n          <div className=\"advise\">\n            <span>The API Key gives you access to the Homeware's API. Please do not generate an API Key if you are not sure of what you are doing.</span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Access\n","import React from 'react';\nimport getCookieValue from '../../functions'\nimport { root } from '../../constants'\n\nclass Logs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      page: 1\n    }\n\n    this.previousPage = this.previousPage.bind(this);\n    this.nextPage = this.nextPage.bind(this);\n    this.downloadLog = this.downloadLog.bind(this);\n  }\n\n  componentDidMount() {\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      if (http.readyState === 4) {\n        if (http.status === 200) {\n          var data = JSON.parse(http.responseText);\n          this.setState({ data: data });\n        } else {\n          console.error(http.statusText);\n        }\n      }\n    }.bind(this);\n    http.open(\"GET\", root + \"api/log/get/\");\n    http.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    http.send();\n  }\n\n  previousPage() {\n    if (this.state.page > 1)\n      this.setState({ page: this.state.page - 1 });\n  }\n\n  nextPage() {\n    if (this.state.page < this.state.data.length/10-1)\n      this.setState({ page: this.state.page + 1 });\n  }\n\n  downloadLog() {\n    window.location = root + \"files/log/homeware/\" + getCookieValue('token')\n  }\n\n  render() {\n\n    const line = {\n      width: '80%',\n      marginLeft: '8%',\n      marginTop: '10px',\n      borderBottom: '1px solid #eee',\n      paddingLeft: '20px',\n      paddingBottom: '10px',\n      paddingRight: '20px',\n      textAlign: 'left'\n    }\n\n    const yellow = {\n      color: 'orange'\n    }\n\n    const red = {\n      color: 'red'\n    }\n\n    const homeware_lan_log_data = this.state.data.reverse().slice(0, this.state.page * 10);\n    const homeware_lan_log = homeware_lan_log_data.map((register, i) =>\n      <div style={ line } key={ i }>\n        { register.severity === 'Log' ? <b>{ register.severity }</b> : '' }\n        { register.severity === 'Warning' ? <b style={ yellow }>{ register.severity }</b> : '' }\n        { register.severity === 'Alert' ? <b style={ red }>{ register.severity }</b> : '' }\n         - { register.time }<br/>\n        { register.message }\n      </div>\n    );\n\n    return (\n      <div>\n        <div className=\"page_block_container\">\n          <h2>Homeware-LAN log</h2>\n          <hr/>\n          <div>\n            { homeware_lan_log }\n          </div>\n          <div className=\"page_block_buttons_container\">\n            <button type=\"button\" onClick={ this.nextPage }>Load more</button>\n            <button type=\"button\" onClick={ this.downloadLog }>Download</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Logs\n","import React from 'react';\nimport { root } from '../../constants'\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      enable_message: false,\n      message: ''\n    }\n    this.login = this.login.bind(this);\n    this.grantAccess = this.grantAccess.bind(this);\n  }\n\n  login() {\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      var response = JSON.parse(http.responseText);\n      if(response['status'] === 'in'){\n        document.cookie = \"user=\" + response['user'] + \"; path=/\";\n        document.cookie = \"token=\" + response['token'] + \"; path=/\";\n        window.location = '/';\n      } else if (response['status'] === 'fail'){\n        this.setState({\n          enable_message: true,\n          message: 'Incorrect User or Password'\n        })\n        setTimeout(function(){\n          this.setState({\n             enable_message: false\n           });\n        }.bind(this), 5000)\n      }\n    }.bind(this);\n    http.open(\"GET\", root + \"api/user/login/\");\n    http.setRequestHeader('user', document.getElementById('user').value)\n    http.setRequestHeader('pass', document.getElementById('password').value)\n    http.send();\n  }\n\n  grantAccess() {\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      if (http.responseText !== 'fail')\n        window.location = http.responseText;\n      else {\n        this.setState({\n          enable_message: true,\n          message: 'Incorrect User or Password'\n        })\n        setTimeout(function(){\n          this.setState({\n             enable_message: false\n           });\n        }.bind(this), 5000)\n      }\n    }.bind(this);\n    http.open(\"GET\", root + \"api/user/googleSync/\");\n    http.setRequestHeader('user', document.getElementById('user').value)\n    http.setRequestHeader('pass', document.getElementById('password').value)\n    http.send();\n  }\n\n  render() {\n\n    const form_container = {\n      margin: '20%',\n    }\n\n    const element = {\n      margin: '10px'\n    }\n\n    var message = '';\n    if (this.state.enable_message){\n      message = <div className=\"alert_message\"> { this.state.message } </div>\n    }\n\n    return (\n      <div style={ form_container }>\n        { window.location.href.includes('google') ? <p>Google request access to Homeware-Lan</p> : '' }\n        <br/>\n        <span style={ element }>Username</span>\n        <input type=\"text\" name=\"user\" id=\"user\"/>\n        <span style={ element }>Password</span>\n        <input type=\"password\" name=\"password\" id=\"password\"/>\n        <button type=\"button\" style={ element } onClick={ !window.location.href.includes('google') ? this.login : this.grantAccess }>{ !window.location.href.includes('google') ? <span>Login</span> : <span>Grant access</span> }</button>\n        <br/>\n        { message }\n      </div>\n    );\n  }\n}\n\nexport default Login\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport getCookieValue from './functions'\nimport { root } from './constants'\n\nimport Welcome from './components/assistant/Welcome'\nimport User from './components/assistant/User'\nimport Domain from './components/assistant/Domain'\nimport Confignginx from './components/assistant/Confignginx'\nimport Change2domain from './components/assistant/Change2domain'\nimport Changed2domain from './components/assistant/Changed2domain'\nimport Ssl from './components/assistant/Ssl'\nimport Google from './components/assistant/Google'\nimport Initialize from './components/assistant/Initialize'\n\nimport Menu from './components/web/Menu'\nimport Devices from './components/pages/Devices'\nimport Editor from './components/pages/Editor'\nimport Info from './components/pages/Info'\nimport Tasks from './components/pages/Tasks'\nimport Manager from './components/pages/Manager'\nimport Settings from './components/pages/Settings'\nimport System from './components/pages/System'\nimport Backup from './components/pages/Backup'\nimport Access from './components/pages/Access'\nimport Logs from './components/pages/Logs'\nimport Login from './components/pages/Login'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      session: false,\n      version: ''\n    }\n    this.logout = this.logout.bind(this);\n  }\n\n  componentDidMount() {\n    if (!window.location.href.includes('assistant')) {\n      var http = new XMLHttpRequest();\n      http.onload = function (e) {\n        if (http.readyState === 4) {\n          if (http.status === 200) {\n            var data = JSON.parse(http.responseText);\n            if (data.status !== 'in' && !window.location.href.includes('login'))\n              window.location.href = '/login/'\n            else if (data.status === 'in')\n              this.setState({\n                session: true\n              });\n          } else {\n            console.error(http.statusText);\n          }\n        }\n      }.bind(this);\n      http.open(\"GET\", root + \"api/user/validateToken/\");\n      http.setRequestHeader('token', getCookieValue('token'))\n      http.setRequestHeader('user', getCookieValue('user'))\n      http.send();\n\n      var vers = new XMLHttpRequest();\n      vers.onload = function (e) {\n        if (vers.readyState === 4) {\n          if (vers.status === 200) {\n            var version = JSON.parse(vers.responseText);\n            this.setState({ version: version.version });\n          } else {\n            console.error(vers.statusText);\n          }\n        }\n      }.bind(this);\n      vers.open(\"GET\", root + \"api/global/version/\");\n      vers.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n      vers.send();\n    }\n  }\n\n  logout() {\n    document.cookie = \"user=; path=/\";\n    document.cookie = \"token=; path=/\";\n    this.setState({\n      session: false\n    });\n    window.location.href = '/'\n  }\n\n  render() {\n\n    if (!this.state.session && !window.location.href.includes('assistant') && !window.location.href.includes('login'))\n      return ''\n    else if (window.location.href.includes('login'))\n      return (\n        <div className=\"Clear_app\">\n          <Login/>\n        </div>\n      );\n    else if (window.location.href.includes('assistant'))\n      return (\n        <Router>\n          <div className=\"Clear_app\">\n            <Route exact={ true } path=\"/assistant/\" component={ Welcome }/>\n            <Route exact={ true } path=\"/assistant/welcome/\" component={ Welcome }/>\n            <Route exact={ true } path=\"/assistant/user\" component={ User }/>\n            <Route exact={ true } path=\"/assistant/domain\" component={ Domain }/>\n            <Route exact={ true } path=\"/assistant/confignginx\" component={ Confignginx }/>\n            <Route exact={ true } path=\"/assistant/change2domain\" component={ Change2domain }/>\n            <Route exact={ true } path=\"/assistant/changed2domain\" component={ Changed2domain }/>\n            <Route exact={ true } path=\"/assistant/ssl\" component={ Ssl }/>\n            <Route exact={ true } path=\"/assistant/google\" component={ Google }/>\n            <Route exact={ true } path=\"/assistant/initialize\" component={ Initialize }/>\n          </div>\n        </Router>\n      );\n    else\n      return (\n        <Router>\n          <div className=\"App\">\n            <div className=\"upper-menu\">\n              Homeware-LAN\n            </div>\n            <div className=\"main-app\">\n              <div className=\"menu\">\n                <div>\n                  <Menu image=\"/menu/devices_icon.png\" title=\"Devices\" href=\"/devices\"/>\n                  <Menu image=\"/menu/tasks_icon.png\" title=\"Tasks\" href=\"/tasks\"/>\n                  <Menu image=\"/menu/settings_icon.png\" title=\"Settings\" href=\"/settings\"/>\n                  <Menu image=\"/menu/status_icon.png\" title=\"System\" href=\"/system\"/>\n                  <Menu image=\"/menu/backup_icon.png\" title=\"Backup\" href=\"/backup\"/>\n                  <Menu image=\"/menu/access_icon.png\" title=\"Access\" href=\"/access\"/>\n                  <Menu image=\"/menu/logs_icon.png\" title=\"Logs\" href=\"/logs\"/>\n                  <hr/>\n                  <Menu image=\"/menu/repo_icon.png\" title=\"Repo\" href=\"/\"/>\n                  <Menu image=\"/menu/help_icon.png\" title=\"How to\" href=\"/\"/>\n                  <hr/>\n                  <Menu image=\"/menu/logout_icon.png\" title=\"Logout\" exec={ this.logout }/>\n                </div>\n                <div className=\"menu-data\">\n                  <p>Version: { this.state.version }</p>\n                </div>\n              </div>\n              <div className=\"page\">\n                <Route exact={ true } path=\"/\" component={ Devices }/>\n                <Route exact={ true } path=\"/devices\" component={ Devices }/>\n                <Route path=\"/devices/editor\" component={ Editor }/>\n                <Route path=\"/devices/info\" component={ Info }/>\n                <Route exact={ true } path=\"/tasks\" component={ Tasks }/>\n                <Route path=\"/tasks/manager\" component={ Manager }/>\n                <Route path=\"/settings\" component={ Settings }/>\n                <Route path=\"/system\" component={ System }/>\n                <Route path=\"/backup\" component={ Backup }/>\n                <Route path=\"/access\" component={ Access }/>\n                <Route path=\"/logs\" component={ Logs }/>\n              </div>\n            </div>\n          </div>\n        </Router>\n      );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}