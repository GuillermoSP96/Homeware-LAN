{"version":3,"sources":["functions.js","constants.js","components/assistant/Welcome.js","components/assistant/User.js","components/assistant/Domain.js","components/assistant/Confignginx.js","components/assistant/Change2domain.js","components/assistant/Changed2domain.js","components/assistant/Ssl.js","components/assistant/Google.js","components/assistant/Initialize.js","components/web/Menu.js","components/devices/traits/OnOff.js","components/devices/aux/Information.js","components/devices/aux/Edit.js","components/devices/Light.js","components/devices/Outlet.js","components/devices/traits/TemperatureSetting.js","components/devices/AcUnit.js","components/devices/AirFreshener.js","components/devices/AirPurifier.js","components/devices/Bed.js","components/devices/Fan.js","components/devices/Fireplace.js","components/devices/Radiator.js","components/devices/Switch.js","components/devices/Thermostat.js","components/devices/AirCooler.js","components/devices/Bathtub.js","components/devices/Awing.js","components/devices/Blinds.js","components/devices/Closet.js","components/devices/Curtain.js","components/devices/Door.js","components/devices/Drawer.js","components/devices/Garage.js","components/devices/Pergola.js","components/devices/Shutter.js","components/devices/Valve.js","components/devices/Window.js","components/devices/Lock.js","components/devices/Gate.js","components/devices/Heater.js","components/devices/Hood.js","components/devices/SecuritySystem.js","components/devices/Blender.js","components/devices/Global.js","components/pages/Devices.js","components/editor/Text.js","components/editor/traits/Scene.js","components/editor/traits/OnOff.js","components/editor/traits/Brightness.js","components/editor/traits/FanSpeed.js","components/editor/traits/ColorSetting.js","components/editor/traits/TemperatureSetting.js","components/editor/traits/Toggles.js","components/editor/traits/Modes.js","components/editor/traits/HumiditySetting.js","components/editor/traits/OpenClose.js","components/editor/traits/Rotation.js","components/editor/traits/Fill.js","components/editor/traits/ArmDisarm.js","components/editor/traits/StartStop.js","components/editor/traits/Timer.js","components/editor/traits/TemperatureControl.js","components/editor/traits/Cook.js","components/pages/Editor.js","components/pages/Settings.js","components/system/Component.js","components/pages/System.js","components/pages/Backup.js","components/pages/Access.js","components/pages/Logs.js","components/pages/Login.js","App.js","serviceWorker.js","index.js"],"names":["getCookieValue","cname","name","ca","decodeURIComponent","document","cookie","split","i","length","c","charAt","substring","indexOf","deviceReference","devices","attributes","commandOnlyOnOff","type","default","queryOnlyOnOff","param","on","manual","commandOnlyBrightness","brightness","colorModel","commandOnlyColorSetting","colorTemperatureRange","temperatureMinK","temperatureMaxK","content","color","spectrumRgb","temperatureK","spectrumRGB","spectrumHSV","hue","saturation","availableThermostatModes","thermostatTemperatureRange","minThresholdCelsius","maxThresholdCelsius","thermostatTemperatureUnit","bufferRangeCelsius","commandOnlyTemperatureSetting","queryOnlyTemperatureSetting","thermostatMode","thermostatTemperatureSetpoint","thermostatTemperatureAmbient","thermostatTemperatureSetpointHigh","thermostatTemperatureSetpointLow","thermostatHumidityAmbient","discreteOnlyOpenClose","openDirection","commandOnlyOpenClose","queryOnlyOpenClose","openPercent","openState","commandOnlyRotation","supportsContinuousRotation","supportsDegrees","supportsPercent","rotationDegreesRange","rotationDegreesMin","rotationDegreesMax","rotationPercent","rotationDegrees","isLocked","isJammed","sceneReversible","deactivate","isDocked","availableToggles","commandOnlyToggles","availableZones","pausable","isRunning","isPaused","activeZones","maxTimerLimitSec","commandOnlyTimer","timerRemainingSec","timerPaused","temperatureStepCelsius","temperatureUnitForUX","queryOnlyTemperatureControl","commandOnlyTemperatureControl","temperatureRange","temperatureSetpointCelsius","temperatureAmbientCelsius","availableFanSpeeds","speeds","ordered","reversible","commandOnlyFanSpeed","currentFanSpeedSetting","availableArmLevels","levels","isArmed","currentArmLevel","exitAllowance","availableFillLevels","isFilled","currentFillLevel","lang","currentStatusReport","humiditySetpointRange","minPercent","maxPercent","commandOnlyHumiditySetting","queryOnlyHumiditySetting","humiditySetpointPercent","humidityAmbientPercent","foodPresets","supportedCookingModes","currentCookingMode","currentFoodPreset","currentFoodQuantity","currentFoodUnit","availableModes","commandOnlyModes","devicesCoolNames","Welcome","props","next","bind","window","location","href","className","onClick","this","React","Component","User","state","enable_next","enable_message","message","set","http","XMLHttpRequest","onload","e","readyState","status","setState","responseText","console","error","statusText","setTimeout","url","hostname","open","setRequestHeader","send","JSON","stringify","getElementById","value","alert","element","margin","style","id","Domain","target","Confignginx","Change2domain","onreadystatechange","log","data","parse","code","placeholder","Changed2domain","Ssl","Google","Initialize","xmlHttp","Menu","marginTop","display","gridTemplateColumns","src","image","alt","width","paddingTop","fontSize","cursor","exec","title","OnOff","toggle","reload","root","float","marginLeft","Information","go","Edit","Light","device","traits","includes","Object","keys","toString","color_strip","height","borderRadius","backgroundColor","opacity","marginBottom","paddingLeft","Outlet","TemperatureSetting","up","down","update","temperature","marginRight","AcUnit","AirFreshener","AirPurifier","Bed","Fan","Fireplace","Radiator","Switch","Thermostat","AirCooler","Bathtub","Awing","Blinds","Closet","Curtain","Door","Drawer","Garage","Pergola","Shutter","Valve","Window","Lock","Gate","Heater","Hood","SecuritySystem","Blender","Global","Devices","loadData","newDevice","map","key","paddingBottom","paddingRight","Text","event","defaultValue","onChange","Scene","updateCheckbox","checked","defaultChecked","Brightness","FanSpeed","updateFanSpeeds","addFanSpeed","speed_id","speed_attribute","temp_availableFanSpeeds","speed_values","speed_name","push","names_box","speed","speed_synonym","supportsFanSpeedPercent","ColorSetting","min","max","updateMode","addMode","mode_id","temp_availableThermostatModes","splice","join","modes","mode","Toggles","updatetoggle","addToggle","toggle_id","toggle_attribute","temp_availableToggles","name_values","toggles","name_synonym","Modes","temp_availableModes","values","settings","setting_name","setting_values","setting_synonym","settings_box","setting","HumiditySetting","OpenClose","Rotation","Fill","updateLevels","addLevel","level_id","level_attribute","temp_availableFillLevels","level_values","level_name","level","level_synonym","ArmDisarm","updateSecurityLevel","addSecurityLevel","temp_availableArmLevels","StartStop","updateArray","Timer","TemperatureControl","Cook","updatePreset","addPreset","temp_supportedCookingModes","preset_id","temp_foodPresets","food_synonyms","synonym","food_preset_name","supported_units","presets","preset","Editor","pathname","create","deviceInfo","defaultnames","nicknames","online","posible_traits","save_status","updateNames","updateId","updateType","updateTraits","save","delete","renderAttrinutes","dumy_key","names","temp_device","temp_status","forEach","attribute","params","filter","index","arr","payload","confirm","trait","separator","types","traitsCoolNames","toLowerCase","disabled","hwVersion","swVersion","manufacturer","model","Settings","google","ddns","mqtt","apikey","auth","token","fulfillment","container","sub_container","textAlign","button","client_id","client_secret","user","password","enabled","provider","username","textContainer","fontWeight","padding","enable","ReactMarkdown","require","System","components","git","version","description","comp","response","vers","latestRelease","body","tag_name","data_container","component","upgrader","border","source","upgrade","gridGap","restart","reboot","shutdown","Backup","restore_url","backup","method","encType","action","Access","form_colum","generateAPIKey","Logs","page","previousPage","nextPage","downloadLog","line","borderBottom","yellow","red","sus","homeware_lan_log","reverse","slice","register","time","severity","Login","login","grantAccess","App","session","logout","exact","path","Boolean","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.43dddf40.chunk.js","sourcesContent":["function getCookieValue(cname) {\n  var name = cname + \"=\";\n  var decodedCookie = decodeURIComponent(document.cookie);\n  var ca = decodedCookie.split(';');\n  for(var i = 0; i <ca.length; i++) {\n    var c = ca[i];\n    while (c.charAt(0) === ' ') {\n      c = c.substring(1);\n    }\n    if (c.indexOf(name) === 0) {\n      return c.substring(name.length, c.length);\n    }\n  }\n  return \"\";\n}\n\nexport default getCookieValue;\n","var root = \"/\"\n\nconst deviceReference = {\n  devices: {\n    \"action.devices.types.AC_UNIT\": [\n      \"action.devices.traits.FanSpeed\",\n      \"action.devices.traits.OnOff\",\n      \"action.devices.traits.TemperatureSetting\"\n    ],\n    \"action.devices.types.AIRCOOLER\": [\n      \"action.devices.traits.FanSpeed\",\n      \"action.devices.traits.HumiditySetting\",\n      \"action.devices.traits.OnOff\",\n      \"action.devices.traits.TemperatureSetting\"\n    ],\n    \"action.devices.types.AIRFRESHENER\": [\n      \"action.devices.traits.Modes\",\n      \"action.devices.traits.OnOff\",\n      \"action.devices.traits.Toggles\"\n    ],\n    \"action.devices.types.AIRPURIFIER\": [\n      \"action.devices.traits.OnOff\",\n      \"action.devices.traits.FanSpeed\",\n      \"action.devices.traits.Modes\",\n      \"action.devices.traits.Toggles\"\n    ],\n    \"action.devices.types.AWNING\": [\n      \"action.devices.traits.Modes\",\n      \"action.devices.traits.OpenClose\"\n    ],\n    \"action.devices.types.BATHTUB\": [\n      \"action.devices.traits.Fill\",\n      \"action.devices.traits.OnOff\"\n    ],\n    \"action.devices.types.BED\": [\n      \"action.devices.traits.Modes\",\n      \"action.devices.traits.Scene\",\n      \"action.devices.traits.Toggles\"\n    ],\n    \"action.devices.types.BLENDER\": [\n      \"action.devices.traits.Cook\",\n      \"action.devices.traits.Modes\",\n      \"action.devices.traits.OnOff\",\n      \"action.devices.traits.StartStop\",\n      \"action.devices.traits.Timer\",\n      \"action.devices.traits.Toggles\"\n    ],\n    \"action.devices.types.BLINDS\": [\n      \"action.devices.traits.Modes\",\n      \"action.devices.traits.OpenClose\"\n    ],\n    \"action.devices.types.BOILER\": [\n      \"action.devices.traits.Modes\",\n      \"action.devices.traits.TemperatureControl\",\n      \"action.devices.traits.OnOff\",\n      \"action.devices.traits.Toggles\"\n    ],\n    \"action.devices.types.CLOSET\": [\n      \"action.devices.traits.OpenClose\"\n    ],\n    \"action.devices.types.COFFE_MAKER\": [\n      \"action.devices.traits.Cook\",\n      \"action.devices.traits.Modes\",\n      \"action.devices.traits.OnOff\",\n      \"action.devices.traits.TemperatureControl\",\n      \"action.devices.traits.Toggles\"\n    ],\n    \"action.devices.types.COOKTOP\": [\n      \"action.devices.traits.Cook\",\n      \"action.devices.traits.Modes\",\n      \"action.devices.traits.OnOff\",\n      \"action.devices.traits.StartStop\",\n      \"action.devices.traits.Timer\",\n      \"action.devices.traits.Toggles\"\n    ],\n    \"action.devices.types.CURTAIN\": [\n      \"action.devices.traits.OpenClose\"\n    ],\n    \"action.devices.types.DEHUMIDIFIER\": [\n      \"action.devices.traits.FanSpeed\",\n      \"action.devices.traits.HumiditySetting\",\n      \"action.devices.traits.Modes\",\n      \"action.devices.traits.OnOff\",\n      \"action.devices.traits.RunCycle\",\n      \"action.devices.traits.StartStop\",\n      \"action.devices.traits.Toggles\"\n    ],\n    \"action.devices.types.DEHYDRATOR\": [\n      \"action.devices.traits.Cook\",\n      \"action.devices.traits.Modes\",\n      \"action.devices.traits.OnOff\",\n      \"action.devices.traits.StartStop\",\n      \"action.devices.traits.Timer\",\n      \"action.devices.traits.Toggles\"\n    ],\n    \"action.devices.types.DISHWASHER\": [\n      \"action.devices.traits.OnOff\",\n      \"action.devices.traits.StartStop\",\n      \"action.devices.traits.Modes\",\n      \"action.devices.traits.Toggles\",\n      \"action.devices.traits.RunCycle\"\n    ],\n    \"action.devices.types.DOOR\": [\n      \"action.devices.traits.OpenClose\"\n    ],\n    \"action.devices.types.DRAWER\": [\n      \"action.devices.traits.OpenClose\"\n    ],\n    \"action.devices.types.DRYER\": [\n      \"action.devices.traits.OnOff\",\n      \"action.devices.traits.StartStop\",\n      \"action.devices.traits.Modes\",\n      \"action.devices.traits.Toggles\",\n      \"action.devices.traits.RunCycle\"\n    ],\n    \"action.devices.types.FAN\": [\n      \"action.devices.traits.FanSpeed\",\n      \"action.devices.traits.Modes\",\n      \"action.devices.traits.OnOff\",\n      \"action.devices.traits.Toggles\"\n    ],\n    \"action.devices.types.FIREPLACE\": [\n      \"action.devices.traits.Modes\",\n      \"action.devices.traits.OnOff\",\n      \"action.devices.traits.Toggles\"\n    ],\n    \"action.devices.types.FRYER\": [\n      \"action.devices.traits.Cook\",\n      \"action.devices.traits.Modes\",\n      \"action.devices.traits.OnOff\",\n      \"action.devices.traits.StartStop\",\n      \"action.devices.traits.Timer\",\n      \"action.devices.traits.Toggles\"\n    ],\n    \"action.devices.types.GARAGE\": [\n      \"action.devices.traits.OpenClose\"\n    ],\n    \"action.devices.types.GATE\": [\n      \"action.devices.traits.OpenClose\"\n    ],\n    \"action.devices.types.GRILL\": [\n      \"action.devices.traits.Cook\",\n      \"action.devices.traits.Modes\",\n      \"action.devices.traits.OnOff\",\n      \"action.devices.traits.StartStop\",\n      \"action.devices.traits.Timer\",\n      \"action.devices.traits.Toggles\"\n    ],\n    \"action.devices.types.HEATER\": [\n      \"action.devices.traits.FanSpeed\",\n      \"action.devices.traits.Modes\",\n      \"action.devices.traits.OnOff\",\n      \"action.devices.traits.TemperatureSetting\",\n      \"action.devices.traits.Toggles\"\n    ],\n    \"action.devices.types.HOOD\": [\n      \"action.devices.traits.FanSpeed\",\n      \"action.devices.traits.Modes\",\n      \"action.devices.traits.OnOff\",\n      \"action.devices.traits.Toggles\"\n    ],\n    \"action.devices.types.HUMIDIFIER\": [\n      \"action.devices.traits.FanSpeed\",\n      \"action.devices.traits.HumiditySetting\",\n      \"action.devices.traits.Modes\",\n      \"action.devices.traits.OnOff\",\n      \"action.devices.traits.StartStop\",\n      \"action.devices.traits.Toggles\"\n    ],\n    \"action.devices.types.KETTLE\": [\n      \"action.devices.traits.Modes\",\n      \"action.devices.traits.OnOff\",\n      \"action.devices.traits.TemperatureControl\",\n      \"action.devices.traits.Toggles\"\n    ],\n    \"action.devices.types.LIGHT\": [\n      \"action.devices.traits.OnOff\",\n      \"action.devices.traits.Brightness\",\n      \"action.devices.traits.ColorSetting\"\n    ],\n    \"action.devices.types.LOCK\": [\n      \"action.devices.traits.LockUnlock\"\n    ],\n    \"action.devices.types.MOP\": [\n      \"action.devices.traits.Dock\",\n      \"action.devices.traits.Locator\",\n      \"action.devices.traits.Modes\",\n      \"action.devices.traits.OnOff\",\n      \"action.devices.traits.RunCycle\",\n      \"action.devices.traits.StartStop\",\n      \"action.devices.traits.Toggles\"\n    ],\n    \"action.devices.types.MOWER\": [\n      \"action.devices.traits.Dock\",\n      \"action.devices.traits.Locator\",\n      \"action.devices.traits.Modes\",\n      \"action.devices.traits.OnOff\",\n      \"action.devices.traits.RunCycle\",\n      \"action.devices.traits.StartStop\",\n      \"action.devices.traits.Toggles\"\n    ],\n    \"action.devices.types.MICROWAVE\": [\n      \"action.devices.traits.Cook\",\n      \"action.devices.traits.Modes\",\n      \"action.devices.traits.OnOff\",\n      \"action.devices.traits.StartStop\",\n      \"action.devices.traits.Timer\",\n      \"action.devices.traits.Toggles\"\n    ],\n    \"action.devices.types.MULTICOOKER\": [\n      \"action.devices.traits.Cook\",\n      \"action.devices.traits.Modes\",\n      \"action.devices.traits.OnOff\",\n      \"action.devices.traits.StartStop\",\n      \"action.devices.traits.Timer\",\n      \"action.devices.traits.Toggles\"\n    ],\n    \"action.devices.types.OUTLET\": [\n      \"action.devices.traits.OnOff\"\n    ],\n    \"action.devices.types.OVEN\": [\n      \"action.devices.traits.Cook\",\n      \"action.devices.traits.Modes\",\n      \"action.devices.traits.OnOff\",\n      \"action.devices.traits.StartStop\",\n      \"action.devices.traits.TemperatureControl\",\n      \"action.devices.traits.Toggles\"\n    ],\n    \"action.devices.types.PERGOLA\": [\n      \"action.devices.traits.OpenClose\",\n      \"action.devices.traits.Rotation\"\n    ],\n    \"action.devices.types.PRESSURECOOKER\": [\n      \"action.devices.traits.Cook\",\n      \"action.devices.traits.Modes\",\n      \"action.devices.traits.OnOff\",\n      \"action.devices.traits.StartStop\",\n      \"action.devices.traits.Timer\",\n      \"action.devices.traits.Toggles\"\n    ],\n    \"action.devices.types.RADIATOR\": [\n      \"action.devices.traits.Modes\",\n      \"action.devices.traits.OnOff\",\n      \"action.devices.traits.Toggles\"\n    ],\n    \"action.devices.types.REFRIGERATOR\": [\n      \"action.devices.traits.Modes\",\n      \"action.devices.traits.OnOff\",\n      \"action.devices.traits.TemperatureControl\",\n      \"action.devices.traits.Toggles\"\n    ],\n    \"action.devices.types.SCENE\": [\n      \"action.devices.traits.Scene\"\n    ],\n    \"action.devices.types.SECURITYSYSTEM\": [\n      \"action.devices.traits.ArmDisarm\",\n      \"action.devices.traits.StatusReport\"\n    ],\n    \"action.devices.types.SHUTTER\": [\n      \"action.devices.traits.Modes\",\n      \"action.devices.traits.OpenClose\",\n      \"action.devices.traits.Rotation\"\n    ],\n    \"action.devices.types.SHOWER\": [\n      \"action.devices.traits.Modes\",\n      \"action.devices.traits.OnOff\",\n      \"action.devices.traits.StartStop\",\n      \"action.devices.traits.TemperatureControl\"\n    ],\n    \"action.devices.types.SOUSVIDE\": [\n      \"action.devices.traits.Cook\",\n      \"action.devices.traits.Modes\",\n      \"action.devices.traits.OnOff\",\n      \"action.devices.traits.StartStop\",\n      \"action.devices.traits.Timer\",\n      \"action.devices.traits.Toggles\"\n    ],\n    \"action.devices.types.SPRINKLER\": [\n      \"action.devices.traits.StartStop\"\n    ],\n    \"action.devices.types.STANDMIXER\": [\n      \"action.devices.traits.Cook\",\n      \"action.devices.traits.Modes\",\n      \"action.devices.traits.OnOff\",\n      \"action.devices.traits.StartStop\",\n      \"action.devices.traits.Toggles\"\n    ],\n    \"action.devices.types.SWITCH\": [\n      \"action.devices.traits.OnOff\"\n    ],\n    \"action.devices.types.THERMOSTAT\": [\n      \"action.devices.traits.TemperatureSetting\"\n    ],\n    \"action.devices.types.VACUUM\": [\n      \"action.devices.traits.Dock\",\n      \"action.devices.traits.Modes\",\n      \"action.devices.traits.OnOff\",\n      \"action.devices.traits.StartStop\",\n      \"action.devices.traits.Toggles\"\n    ],\n    \"action.devices.types.VALVE\": [\n      \"action.devices.traits.OpenClose\"\n    ],\n    \"action.devices.types.WASHER\": [\n      \"action.devices.traits.Modes\",\n      \"action.devices.traits.OnOff\",\n      \"action.devices.traits.RunCycle\",\n      \"action.devices.traits.StartStop\",\n      \"action.devices.traits.Toggles\"\n    ],\n    \"action.devices.types.WATERHEATER\": [\n      \"action.devices.traits.Modes\",\n      \"action.devices.traits.OnOff\",\n      \"action.devices.traits.TemperatureControl\",\n      \"action.devices.traits.Toggles\"\n    ],\n    \"action.devices.types.WINDOW\": [\n      \"action.devices.traits.LockUnlock\",\n      \"action.devices.traits.OpenClose\"\n    ],\n    \"action.devices.types.YOGURTMAKER\": [\n      \"action.devices.traits.Cook\",\n      \"action.devices.traits.Modes\",\n      \"action.devices.traits.OnOff\",\n      \"action.devices.traits.StartStop\",\n      \"action.devices.traits.Timer\",\n      \"action.devices.traits.Toggles\"\n    ]\n  },\n  \"traits\": {\n    \"action.devices.traits.OnOff\": {\n      attributes: {\n        commandOnlyOnOff: {\n          type: \"bool\",\n          default: false\n        },\n        queryOnlyOnOff: {\n          type: \"bool\",\n          default: false\n        }\n      },\n      param:{\n        on: {\n          type: \"bool\",\n          default: true,\n          manual: false\n        }\n      }\n    },\n    \"action.devices.traits.Brightness\": {\n      attributes: {\n        commandOnlyBrightness: {\n          type: \"bool\",\n          default: false\n        }\n      },\n      param:{\n        brightness: {\n          type: \"int\",\n          default: 100,\n          manual: false\n        }\n      }\n    },\n    \"action.devices.traits.ColorSetting\": {\n      attributes: {\n        colorModel: {\n          type: \"string\",\n          default: \"rgb\",\n          manual: false\n        },\n        commandOnlyColorSetting: {\n            type: \"bool\",\n            default: false,\n            manual: false\n        },\n        colorTemperatureRange: {\n          type: \"object\",\n          manual: false,\n          default: {\n            temperatureMinK: 4000,\n            temperatureMaxK: 4200\n          },\n          content: {\n            temperatureMinK: {\n              type: \"int\",\n              default: 4000\n            },\n            temperatureMaxK: {\n              type: \"int\",\n              default: 4200\n            }\n          }\n        }\n      },\n      param:{\n        color: {\n          type: \"object\",\n          manual: false,\n          default: {\n            spectrumRgb: 16711935\n          },\n          content: {\n            temperatureK: {\n              type: \"int\",\n              default: 4000\n            },\n            spectrumRGB: {\n              type: \"int\",\n              default: 255\n            },\n            spectrumHSV:{\n              type: \"object\",\n              content: {\n                hue: {\n                  type: \"float\"\n                },\n                saturation: {\n                  type: \"float\"\n                },\n                default: {\n                  type: \"float\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"action.devices.traits.TemperatureSetting\": {\n      attributes: {\n        availableThermostatModes: {\n          type: \"select\",\n          default: \"off,heat,cool\"\n        },\n        thermostatTemperatureRange: {\n          type: \"object\",\n          default: {\n            minThresholdCelsius: 18,\n            maxThresholdCelsius: 34\n          }\n        },\n        thermostatTemperatureUnit: {\n          type: \"string\",\n          default: \"C\"\n        },\n        bufferRangeCelsius: {\n          type: \"int\",\n          default: 2\n        },\n        commandOnlyTemperatureSetting: {\n          type: \"bool\",\n          default: false\n        },\n        queryOnlyTemperatureSetting: {\n          type: \"bool\",\n          default: false\n        }\n      },\n      param:{\n        thermostatMode: {\n          type: \"string\",\n          default: \"off\",\n          manual: false\n        },\n        thermostatTemperatureSetpoint: {\n          type: \"int\",\n          default: 20,\n          manual: false\n        },\n        thermostatTemperatureAmbient: {\n          type: \"int\",\n          default: 22,\n          manual: false\n        },\n        thermostatTemperatureSetpointHigh: {\n          type: \"int\",\n          default: 28,\n          manual: false\n        },\n        thermostatTemperatureSetpointLow: {\n          type: \"int\",\n          default: 18,\n          manual: false\n        },\n        thermostatHumidityAmbient: {\n          type: \"int\",\n          default: 80,\n          manual: false\n        }\n      }\n    },\n    \"action.devices.traits.OpenClose\": {\n      attributes: {\n        discreteOnlyOpenClose: {\n          type: \"bool\",\n          default: false\n        },\n        openDirection: {\n          type: \"array\",\n          default: [\"UP\",\"DOWN\",\"LEFT\",\"RIGHT\",\"IN\",\"OUT\"]\n        },\n        commandOnlyOpenClose: {\n          type: \"bool\",\n          default: false\n        },\n        queryOnlyOpenClose: {\n          type: \"bool\",\n          default: false\n        }\n      },\n      param:{\n        openPercent: {\n          type: \"int\",\n          default: 0\n        },\n        openState: {\n          type: \"object\",\n          manual: false,\n          default: {\n            openPercent: 0,\n            openDirection: \"UP\"\n          },\n          content: {\n            openPercent:{\n              type: \"int\",\n              default: 0\n            },\n            openDirection:{\n              type: \"int\",\n              default: \"down\"\n            }\n          }\n        }\n      }\n    },\n    \"action.devices.traits.Rotation\": {\n      attributes: {\n        commandOnlyRotation: {\n          type: \"bool\",\n          default: false\n        },\n        supportsContinuousRotation: {\n          type: \"bool\",\n          default: false\n        },\n        supportsDegrees: {\n          type: \"bool\",\n          default: false\n        },\n        supportsPercent: {\n          type: \"bool\",\n          default: false\n        },\n        rotationDegreesRange: {\n          type: \"object\",\n          default: {\n            rotationDegreesMin: 0,\n            rotationDegreesMax: 0\n          },\n          content: {\n            rotationDegreesMin: {\n              type: \"int\"\n            },\n            rotationDegreesMax: {\n              type: \"int\"\n            }\n          }\n        }\n      },\n      param:{\n        rotationPercent: {\n          type: \"int\",\n          manual: false,\n          default: 0\n        },\n        rotationDegrees: {\n          type: \"int\",\n          manual: false,\n          default: 0\n        }\n      }\n    },\n    \"action.devices.traits.LockUnlock\": {\n      attributes: {},\n      param:{\n        isLocked: {\n          type: \"bool\",\n          default: false,\n          manual: false\n        },\n        isJammed: {\n          type: \"bool\",\n          default: false,\n          manual: false\n        }\n      }\n    },\n    \"action.devices.traits.Scene\": {\n      attributes: {\n        sceneReversible: {\n          type: \"bool\",\n          default: true\n        }\n      },\n      param:{\n        deactivate: {\n          type: \"bool\",\n          default: true,\n          manual: false\n        }\n      }\n    },\n    \"action.devices.traits.Dock\": {\n      attributes: {},\n      param:{\n        isDocked: {\n          type: \"bool\",\n          default: false,\n          manual: false\n        }\n      }\n    },\n    \"action.devices.traits.Toggles\": {\n      attributes: {\n        availableToggles: {\n          type: \"strigifyedObject\",\n          default: []\n        },\n        commandOnlyToggles: {\n          type: \"bool\",\n          default: false\n        }\n      },\n      param: {\n      }\n    },\n    \"action.devices.traits.StartStop\": {\n      attributes: {\n        availableZones: {\n          type: \"array\",\n          default: []\n        },\n        pausable: {\n          type: \"bool\",\n          default: false\n        }\n      },\n      param: {\n        isRunning: {\n          type: \"bool\",\n          manual: false,\n          default: false\n        },\n        isPaused: {\n          type: \"bool\",\n          manual: false,\n          default: false\n        },\n        activeZones: ~{\n          type: \"array\",\n          default: []\n        }\n      }\n    },\n    \"action.devices.traits.Timer\": {\n      attributes: {\n        maxTimerLimitSec: {\n          type: \"int\",\n          default: 1000\n        },\n        commandOnlyTimer: {\n          type: \"bool\",\n          default: false\n        }\n      },\n      param: {\n        timerRemainingSec: {\n          type: \"int\",\n          manual: false,\n          default: -1\n        },\n        timerPaused: {\n          type: \"bool\",\n          manual: false,\n          default: false\n        }\n      }\n    },\n    \"action.devices.traits.TemperatureControl\": {\n      attributes: {\n        temperatureStepCelsius: {\n          type: \"int\",\n          default: 5\n        },\n        temperatureUnitForUX: {\n          type: \"string\",\n          default: \"C\"\n        },\n        queryOnlyTemperatureControl: {\n          type: \"bool\",\n          default: false\n        },\n        commandOnlyTemperatureControl: {\n          type: \"bool\",\n          default: false\n        },\n        temperatureRange: {\n          type: \"object\",\n          default: {\n            minThresholdCelsius: 0,\n            maxThresholdCelsius: 150\n          },\n          content: {\n            minThresholdCelsius: {\n              type: \"int\"\n            },\n            maxThresholdCelsius: {\n              type: \"int\"\n            }\n          }\n        }\n      },\n      param: {\n        temperatureSetpointCelsius: {\n          type: \"int\",\n          manual: false,\n          default: 20\n        },\n        temperatureAmbientCelsius: {\n          type: \"int\",\n          manual: false,\n          default: 20\n        }\n      }\n    },\n    \"action.devices.traits.FanSpeed\": {\n      attributes: {\n        availableFanSpeeds: {\n          type: \"strigifyedObject\",\n          default: {\n            speeds: [],\n            ordered: true\n          }\n        },\n        reversible: {\n          type: \"bool\",\n          default: true\n        },\n        commandOnlyFanSpeed: {\n          type: \"bool\",\n          default: true\n        }\n      },\n      param: {\n        currentFanSpeedSetting: {\n          type: \"string\",\n          manual: false,\n          default: \"\"\n        }\n      }\n    },\n    \"action.devices.traits.ArmDisarm\": {\n      attributes: {\n        availableArmLevels: {\n          type: \"strigifyedObject\",\n          default: {\n            levels: [],\n            ordered: true\n          }\n        }\n      },\n      param: {\n        isArmed: {\n          type: \"bool\",\n          manual: false,\n          default: false\n        },\n        currentArmLevel: {\n          type: \"string\",\n          manual: false,\n          default: \"\"\n        },\n        exitAllowance: {\n          type: \"int\",\n          manual: false,\n          default: 20\n        }\n      }\n    },\n    \"action.devices.traits.Fill\": {\n      attributes: {\n        availableFillLevels: {\n          type: \"strigifyedObject\",\n          default: {\n            levels: [],\n            ordered: true\n          }\n        }\n      },\n      param: {\n        isFilled: {\n          type: \"bool\",\n          manual: false,\n          default: false\n        },\n        currentFillLevel: {\n          type: \"string\",\n          manual: false,\n          default: \"\"\n        }\n      }\n    },\n    \"action.devices.traits.RunCycle\": {\n      attributes: {},\n      param: {\n        lang: 'en'\n      }\n    },\n    \"action.devices.traits.StatusReport\": {\n      attributes: {},\n      param: {\n        currentStatusReport: {\n          type: 'object',\n          default: {}\n        }\n      }\n    },\n    \"action.devices.traits.HumiditySetting\": {\n      attributes: {\n        humiditySetpointRange: {\n          type: \"object\",\n          default: {\n            minPercent: 0,\n            maxPercent: 100\n          },\n          content: {\n            minPercent: {\n              type: \"int\"\n            },\n            maxPercent: {\n              type: \"int\"\n            }\n          }\n        },\n        commandOnlyHumiditySetting: {\n          type: \"bool\",\n          default: false\n        },\n        queryOnlyHumiditySetting: {\n          type: \"bool\",\n          default: false\n        }\n      },\n      param: {\n        humiditySetpointPercent: {\n          type: \"int\",\n          manual: false,\n          default: 30\n        },\n        humidityAmbientPercent: {\n          type: \"int\",\n          manual: false,\n          default: 20\n        }\n      }\n    },\n    \"action.devices.traits.Cook\": {\n      attributes: {\n        foodPresets: {\n          type: \"strigifyedObject\",\n          default: []\n        },\n        supportedCookingModes: {\n          type: \"selectToArray\",\n          default: []\n        }\n      },\n      param: {\n        currentCookingMode: {\n          type: \"string\",\n          manual: false,\n          default: \"\"\n        },\n        currentFoodPreset: {\n          type: \"string\",\n          manual: false,\n          default: \"\"\n        },\n        currentFoodQuantity: {\n          type: \"int\",\n          manual: false,\n          default: 0\n        },\n        currentFoodUnit: {\n          type: \"string\",\n          manual: false,\n          default: \"\"\n        }\n      }\n    },\n    \"action.devices.traits.Modes\": {\n      attributes: {\n        availableModes: {\n          type: \"strigifyedObject\",\n          default: []\n        },\n        commandOnlyModes: {\n          type: \"bool\",\n          default: false\n        }\n      },\n      param: {\n      }\n    },\n    \"action.devices.traits.Locator\": {\n      attributes: {\n      },\n      param: {\n      }\n    }\n  },\n  devicesCoolNames: {\n    \"action.devices.types.AC_UNIT\": \"AC unit\",\n    \"action.devices.types.AIRCOOLER\": \"Air cooler\",\n    \"action.devices.types.AIRFRESHENER\": \"Air freshener\",\n    \"action.devices.types.AIRPURIFIER\": \"Air purifier\",\n    \"action.devices.types.AWNING\": \"Awing\",\n    \"action.devices.types.BATHTUB\": \"Bathtub\",\n    \"action.devices.types.BED\": \"Bed\",\n    \"action.devices.types.BLENDER\": \"Blender (WIP - Do not use)\",\n    \"action.devices.types.BLINDS\": \"Blinds\",\n    \"action.devices.types.BOILER\": \"Boiler (WIP - Do not use)\",\n    \"action.devices.types.CAMERA\": \"Camera (WIP - Do not use)\",\n    \"action.devices.types.CLOSET\": \"Closet\",\n    \"action.devices.types.COFFE_MAKER\": \"Coffe maker (WIP - Do not use)\",\n    \"action.devices.types.COOKTOP\": \"Cooktop (WIP - Do not use)\",\n    \"action.devices.types.CURTAIN\": \"Curtain\",\n    \"action.devices.types.DEHUMIDIFIER\": \"Dehumidifier (WIP - Do not use)\",\n    \"action.devices.types.DEHYDRATOR\": \"Dehydrator (WIP - Do not use)\",\n    \"action.devices.types.DISHWASHER\": \"Dishwasher (WIP - Do not use)\",\n    \"action.devices.types.DOOR\": \"Door\",\n    \"action.devices.types.DRYER\": \"Dryer (WIP - Do not use)\",\n    \"action.devices.types.DRAWER\": \"Drawer\",\n    \"action.devices.types.FAN\": \"Fan\",\n    \"action.devices.types.FIREPLACE\": \"Fireplace\",\n    \"action.devices.types.FRYER\": \"Fryer (WIP - Do not use)\",\n    \"action.devices.types.GARAGE\": \"Garage\",\n    \"action.devices.types.GATE\": \"Gate\",\n    \"action.devices.types.GRILL\": \"Grill (WIP) (WIP - Do not use)\",\n    \"action.devices.types.HEATER\": \"Heater\",\n    \"action.devices.types.HOOD\": \"Hood\",\n    \"action.devices.types.HUMIDIFIER\": \"Humidifier (WIP - Do not use)\",\n    \"action.devices.types.KETTLE\": \"Kettle (WIP - Do not use)\",\n    \"action.devices.types.LIGHT\": \"Light\",\n    \"action.devices.types.LOCK\": \"Lock\",\n    \"action.devices.types.MICROWAVE\": \"Microwave (WIP - Do not use)\",\n    \"action.devices.types.MULTICOOKER\": \"Multicooker (WIP - Do not use)\",\n    \"action.devices.types.MOP\": \"Mop (WIP - Do not use)\",\n    \"action.devices.types.MOWER\": \"Mower (WIP - Do not use)\",\n    \"action.devices.types.OUTLET\": \"Outlet\",\n    \"action.devices.types.OVEN\": \"Oven (WIP - Do not use)\",\n    \"action.devices.types.PERGOLA\": \"Pergola\",\n    \"action.devices.types.PRESSURECOOKER\": \"Pressure cooker (WIP - Do not use)\",\n    \"action.devices.types.RADIATOR\": \"Radiator\",\n    \"action.devices.types.REFRIGERATOR\": \"Refrigerator (WIP - Do not use)\",\n    \"action.devices.types.SECURITYSYSTEM\": \"Security system\",\n    \"action.devices.types.SHOWER\": \"Shower (WIP - Do not use)\",\n    \"action.devices.types.SOUSVIDE\": \"Sous vide (WIP - Do not use)\",\n    \"action.devices.types.SHUTTER\": \"Shutter\",\n    \"action.devices.types.SPRINKLER\": \"Sprinkler (WIP - Do not use)\",\n    \"action.devices.types.STANDMIXER\": \"Stand mixer (WIP - Do not use)\",\n    \"action.devices.types.SWITCH\": \"Switch\",\n    \"action.devices.types.THERMOSTAT\": \"Thermostat\",\n    \"action.devices.types.VACUUM\": \"Vacum (WIP - Do not use)\",\n    \"action.devices.types.VALVE\": \"Valve\",\n    \"action.devices.types.WASHER\": \"Washer (WIP - Do not use)\",\n    \"action.devices.types.WATERHEATER\": \"Water heater (WIP - Do not use)\",\n    \"action.devices.types.WINDOW\": \"Window\",\n    \"action.devices.types.SCENE\": \"Scene\",\n    \"action.devices.types.YOGURTMAKER\": \"Yogurt maker (WIP - Do not use)\"\n  },\n  \"traitsCoolNames\": {\n    \"action.devices.traits.Toggles\": \"Toggle\",\n    \"action.devices.traits.ArmDisarm\": \"Arm or Disarm\",\n    \"action.devices.traits.CameraStream\": \"Camera stream\",\n    \"action.devices.traits.ColorSetting\": \"Color setting\",\n    \"action.devices.traits.FanSpeed\": \"Fan speed\",\n    \"action.devices.traits.LightEffects\": \"Light effects\",\n    \"action.devices.traits.Modes\": \"Modes\",\n    \"action.devices.traits.OnOff\": \"Switch control\",\n    \"action.devices.traits.OpenClose\": \"Open or Close\",\n    \"action.devices.traits.Rotation\": \"Rotation\",\n    \"action.devices.traits.Scene\": \"Scene\",\n    \"action.devices.traits.StartStop\": \"Start or Stop\",\n    \"action.devices.traits.TemperatureControl\": \"Temperature control\",\n    \"action.devices.traits.TemperatureSetting\": \"Temperature setting\",\n    \"action.devices.traits.Timer\": \"Timer\",\n    \"action.devices.traits.Dock\": \"Dock\",\n    \"action.devices.traits.Locator\": \"Locator\",\n    \"action.devices.traits.RunCycle\": \"Run cycle\",\n    \"action.devices.traits.StatusReport\": \"Status report\",\n    \"action.devices.traits.Brightness\": \"Brightness\",\n    \"action.devices.traits.LockUnlock\": \"Lock or Unlock\",\n    \"action.devices.traits.HumiditySetting\": \"Humidity setting\",\n    \"action.devices.traits.Cook\": \"Cooking\",\n    \"action.devices.traits.Fill\": \"Fill level\"\n  }\n}\n\nexport { root, deviceReference }\n","import React from 'react';\n\nimport './Assistant.css';\n\nclass Welcome extends React.Component {\n  constructor(props) {\n    super(props);\n    this.next = this.next.bind(this);\n  }\n\n\n  next() {\n    window.location.href = '/assistant/user/';\n  }\n\n  render() {\n\n    return (\n      <div className=\"assistant_container\">\n        <h1>Homeware configuration assistant</h1><br/>\n        <p>Follow this assistant in order to configure your Homeware installation.</p>\n        <br/>\n        <button type=\"button\" onClick={this.next}>Next</button>\n      </div>\n    );\n\n\n  }\n}\n\nexport default Welcome\n","import React from 'react';\n\nclass User extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      enable_next: false,\n      enable_message: false,\n      message: ''\n    }\n    this.set = this.set.bind(this);\n    this.next = this.next.bind(this);\n  }\n\n  set() {\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      if (http.readyState === 4) {\n        if (http.status === 200) {\n          this.setState({\n            enable_next: true,\n            enable_message: true,\n            message: http.responseText\n          });\n          console.error(http.responseText);\n        } else {\n          console.error(http.statusText);\n          this.setState({\n            enable_message: true,\n            message: 'Some error has occurred'\n          });\n        }\n        setTimeout(function(){\n          this.setState({\n            enable_message: false,\n            message: ''\n          });\n        }.bind(this), 5000)\n      }\n    }.bind(this);\n    var url = 'http://' + window.location.hostname + ':5001/api/user/set/';\n    http.open( \"POST\", url, true );\n    http.setRequestHeader(\"Content-type\", \"application/json\");\n    http.send(JSON.stringify({\n      'user': document.getElementById('user').value,\n      'pass': document.getElementById('password').value\n    }));\n  }\n\n  next() {\n    if (this.state.enable_next)\n      window.location.href = '/assistant/domain/';\n    else\n      alert('You must create an user')\n  }\n\n  render() {\n\n    const element = {\n      margin: '10px'\n    }\n\n    var message = '';\n    if (this.state.enable_message){\n      message = <div className=\"alert_message\"> { this.state.message } </div>\n    }\n\n    return (\n      <div className=\"assistant_container\">\n        <h1>Homeware configuration assistant - User</h1>\n        <p>In order to keep your Homeware installation secure you must create an user and a password.</p>\n        <br/>\n        { message }\n        <span style={ element }>Username</span>\n        <input type=\"text\" name=\"user\" id=\"user\"/>\n        <span style={ element }>Password</span>\n        <input type=\"password\" name=\"password\" id=\"password\"/>\n        <button type=\"button\" onClick={this.set}>Create</button>\n        <br/>\n        <br/>\n        <button type=\"button\" onClick={this.next}>Next</button>\n      </div>\n    );\n\n\n  }\n}\n\nexport default User\n","import React from 'react';\n\nclass Domain extends React.Component {\n  constructor(props) {\n    super(props);\n    this.next = this.next.bind(this);\n  }\n\n\n  next() {\n    window.location.href = '/assistant/confignginx/';\n  }\n\n  render() {\n\n    return (\n      <div className=\"assistant_container\">\n        <h1>Homeware configuration assistant - Domain</h1>\n        <p>You must get a domain and point it to your WAN IP.</p>\n        <div className=\"assistant_text\">\n\n          <p>There are two possibilities:</p>\n            <ul>\n              <li>Use a static IP and a DNS</li>\n              <li>Use a dinamic IP and a DDNS</li>\n            </ul>\n          <p>If you have a static WAN IP, you probably know how to configure your domain name</p>\n          <p>If you have a dinamic IP, you should use a DDNS provider</p>\n          <p>The process depend on the provider you choose. For example, you can use <a href='https://my.noip.com' target='blanck'>no-ip</a> as the provider:</p>\n          <ul>\n            <li>Create an account in no-ip.</li>\n            <li>Go to <i>Dynamic DNS</i> and create a new <i>Hostname</i>.\n                <ul>\n                  <li>Choose a unique <i>Hostname</i>.</li>\n                  <li>Select <i>DNS Host (A)</i>.</li>\n                  <li>Fill the <i>IPv4 Address</i> with your WAN/public IP. You can get it from <a href='https://www.whatismyip.com/what-is-my-public-ip-address/' target='blanck'>WhatsMyIp</a>.</li>\n                </ul>\n            </li>\n            <li>When the installation will be completed you must configure the DDNS data from the <i>Settings</i> section on Homeware.</li>\n          </ul>\n        </div>\n        <button type=\"button\" onClick={this.next}>Next</button>\n\n      </div>\n    );\n\n\n  }\n}\n\nexport default Domain\n","import React from 'react';\n\nclass Confignginx extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      enable_next: false,\n      enable_message: false,\n      message: ''\n    }\n    this.set = this.set.bind(this);\n    this.next = this.next.bind(this);\n  }\n\n  set() {\n\n  }\n\n  next() {\n    window.location.href = '/assistant/change2domain/';\n  }\n\n  render() {\n\n    var message = '';\n    if (this.state.enable_message){\n      message = <div className=\"alert_message\"> { this.state.message } </div>\n    }\n\n    return (\n      <div className=\"assistant_container\">\n        <h1>Homeware configuration assistant - Configuration of Nginx</h1>\n        <p>Configure Nginx with the initial settings</p>\n        { message }\n        <br/>\n        <div className=\"assistant_text\">\n          <p>Open a terminal on your Raspberry Pi or connect to the Raspberry Pi using SSH and run:</p>\n          <br/>\n          <span className=\"code\">$ cd /usr/share/Homeware-LAN/bash</span><br/><br/><br/>\n          <span className=\"code\">$ sudo sh confignginx.sh your.domain.com</span>\n        </div>\n        <br/>\n        <br/>\n        <button type=\"button\" onClick={this.next}>Next</button>\n      </div>\n    );\n\n\n  }\n}\n\nexport default Confignginx\n","import React from 'react';\n\nclass Change2domain extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      enable_next: false,\n      enable_message: false,\n      message: ''\n    }\n    this.set = this.set.bind(this);\n  }\n\n  set() {\n    var http = new XMLHttpRequest();\n    http.onreadystatechange = function() {\n      console.log(http.status)\n      if (http.status === 200) {\n        var data = JSON.parse(http.responseText);\n        console.log(data);\n        if (data.code == 200 )\n          window.location.href = 'http://' + document.getElementById('domain').value + '/assistant/changed2domain/';\n        else\n          this.setState({\n            enable_message: true,\n            message: data.error\n          });\n      } else {\n        console.error(http.statusText);\n        this.setState({\n          enable_message: true,\n          message: 'Some error has occurred'\n        });\n      }\n    }.bind(this);\n    var url = 'http://' + window.location.hostname + ':5001/api/settings/domain/' + document.getElementById('domain').value;\n    http.open( \"GET\", url, true );\n    http.send( null );\n  }\n\n  render() {\n\n    var message = '';\n    if (this.state.enable_message){\n      message = <div className=\"alert_message\"> { this.state.message } </div>\n    }\n\n    return (\n      <div className=\"assistant_container\">\n      <h1>Homeware configuration assistant - Change to domain</h1><br/>\n      <p>Open your router config web page, look for <i>Port Forwarding</i> and create the following rules.</p>\n        { message }\n        <div className=\"assistant_text\">\n        <ul>\n          <li>80 port:\n            <ul>\n              <li>Protocol: TCP</li>\n              <li>WAN start port: 80</li>\n              <li>WAN end port: 80</li>\n              <li>LAN start port: 80</li>\n              <li>LAN end port: 80</li>\n              <li>LAN host IP: The Raspberry Pi IP</li>\n            </ul>\n          </li>\n          <li>443 port:\n            <ul>\n              <li>Protocol: TCP</li>\n              <li>WAN start port: 443</li>\n              <li>WAN end port: 443</li>\n              <li>LAN start port: 443</li>\n              <li>LAN end port: 443</li>\n              <li>LAN host IP: The Raspberry Pi IP</li>\n            </ul>\n          </li>\n        </ul>\n        <p>Now we must change to your domain.</p>\n        <input type=\"text\" id=\"domain\" placeholder=\"Your domain\"/>\n        <button type=\"button\" onClick={this.set}>Next</button>\n        </div>\n      </div>\n    );\n\n\n  }\n}\n\nexport default Change2domain\n","import React from 'react';\n\nimport './Assistant.css';\n\nclass Changed2domain extends React.Component {\n  constructor(props) {\n    super(props);\n    this.next = this.next.bind(this);\n  }\n\n\n  next() {\n    window.location.href = '/assistant/ssl/';\n  }\n\n  render() {\n\n    return (\n      <div className=\"assistant_container\">\n      <h1>Homeware configuration assistant - Change to domain</h1>\n      <p>Congrats, now you are accessing your Homeware from the Internet. See the URL in the top bar :-) </p>\n        <br/>\n        <button type=\"button\" onClick={this.next}>Next</button>\n      </div>\n    );\n\n\n  }\n}\n\nexport default Changed2domain\n","import React from 'react';\n\nimport './Assistant.css';\n\nclass Ssl extends React.Component {\n  constructor(props) {\n    super(props);\n    this.next = this.next.bind(this);\n  }\n\n\n  next() {\n    window.location.href = '/assistant/google/';\n  }\n\n  render() {\n\n    return (\n      <div className=\"assistant_container\">\n        <h1>Homeware configuration assistant - SSL certificate</h1>\n        <p>Google needs to comunicate with the Raspberry Pi via HTTPS, so we need a SSL certicate for Homeware.</p>\n        <br/>\n        <div className=\"assistant_text\">\n        <p>Open a terminal on your Raspberry Pi or connect to the Raspberry Pi using SSH and run:</p>\n        <br/>\n        <span className=\"code\">$ sudo certbot --nginx</span><br/><br/>\n        <p>Follow the Certbot instructions. When Certbot ask you about redirecting http to https, enable it.</p>\n        </div>\n        <br/>\n        <br/>\n        <button type=\"button\" onClick={this.next}>Next</button>\n      </div>\n    );\n\n\n  }\n}\n\nexport default Ssl\n","import React from 'react';\n\nimport './Assistant.css';\n\nclass Google extends React.Component {\n  constructor(props) {\n    super(props);\n    this.next = this.next.bind(this);\n  }\n\n\n  next() {\n    window.location.href = '/assistant/initialize/';\n  }\n\n  render() {\n\n    return (\n      <div className=\"assistant_container\">\n      <h1>Homeware configuration assistant - Google</h1>\n      <p>Google needs to know where Homeware is.</p>\n        <br/>\n        <div className=\"assistant_text\">\n          <p>Follow the instructions on this wiki <a href=\"https://github.com/kikeelectronico/Homeware-LAN/wiki/Connect-Homeware-LAN-with-Google\" target=\"blanck\">https://github.com/kikeelectronico/Homeware-LAN/wiki/Connect-Homeware-LAN-with-Google</a>.</p>\n          <p>During the process you will use the following Client Information. You will be able to change it from the <i>Settings</i> page in the future.</p>\n          <span id=\"actionOnGoogleData\">\n            <b>Client ID:</b> 123<br/>\n            <b>Client Secret:</b> 456<br/>\n            <b>Authorization URL:</b> https://&lt;your.domain.com&gt;/auth/<br/>\n            <b>Token URL:</b> https://&lt;your.domain.com&gt;/token/<br/>\n            <b>Fulfillment URL:</b> https://&lt;your.domain.com&gt;/smarthome/<br/>\n          </span>\n        </div>\n        <br/>\n        <br/>\n        <button type=\"button\" onClick={this.next}>Next</button>\n      </div>\n    );\n\n\n  }\n}\n\nexport default Google\n","import React from 'react';\n\nimport './Assistant.css';\n\nclass Initialize extends React.Component {\n  constructor(props) {\n    super(props);\n\n    var xmlHttp = new XMLHttpRequest();\n    xmlHttp.onreadystatechange = function() {\n      console.log(xmlHttp.responseText)\n    }\n    var url = 'http://' + window.location.hostname + ':5001/api/settings/setAssistantDone/';\n    xmlHttp.open( \"GET\", url, true );\n    xmlHttp.send( null );\n\n    setTimeout(function(){window.location.href = '/'}, 3000);\n  }\n\n  render() {\n\n    return (\n      <div className=\"assistant_container\">\n        <h1>Homeware configuration assistant - Last touches</h1>\n        <p>Homeware is giving it self the last touches.</p>\n      </div>\n    );\n\n\n  }\n}\n\nexport default Initialize\n","import React from 'react';\n\nfunction Menu(props) {\n\n  const menu = {\n    marginTop: '5px',\n    display: 'grid',\n    gridTemplateColumns: '40px auto'\n  }\n\n  const image = {\n    width: '30px'\n  }\n\n  const textContainer = {\n    paddingTop: '4px'\n  }\n\n  const text = {\n    fontSize: '18px',\n    cursor: 'pointer'\n  }\n\n  function go (){\n    window.location.href = props.href;\n  }\n\n  return (\n    <div style={ menu }>\n      <div>\n        <img src={ props.image } alt={ props.image } style={ image }/>\n      </div>\n      <div style={ textContainer }>\n        <span style={ text } onClick={ props.exec ? props.exec : go}>{ props.title }</span>\n      </div>\n    </div>\n  );\n}\n\nexport default Menu\n","import React from 'react';\nimport getCookieValue from '../../../functions'\nimport { root } from '../../../constants'\n\nclass OnOff extends React.Component {\n  constructor(props) {\n    super(props);\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle(){\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      if (http.readyState === 4) {\n        if (http.status === 200) {\n          console.log(http.responseText)\n          this.props.reload();\n        } else {\n          console.error(http.statusText);\n        }\n      }\n    }.bind(this)\n    http.open(\"POST\", root + \"api/status/update/\");\n    http.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\n    http.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    http.send(JSON.stringify({\n      \"id\": this.props.id,\n      \"param\": \"on\",\n      \"value\": !this.props.on\n    }));\n  }\n\n  render() {\n\n    const container = {\n      float: 'left',\n      marginLeft: '5px'\n    }\n\n    const image = {\n      width: '30px'\n    }\n\n    return (\n      <div style={container}>\n        <img src={ this.props.on ? '/devices/onoff_on_true.png' : '/devices/onoff_on_false.png'} onClick={ this.toggle } alt={ this.props.image } style={ image }/>\n      </div>\n    );\n  }\n}\n\nexport default OnOff\n","import React from 'react';\n\nclass Information extends React.Component {\n  constructor(props) {\n    super(props);\n    this.go = this.go.bind(this);\n  }\n\n  go(){\n    window.location.href = \"/devices/info/\" + this.props.id + \"/\"\n  }\n\n  render() {\n\n    const container = {\n      float: 'left',\n      marginLeft: '5px'\n    }\n\n    const image = {\n      width: '30px'\n    }\n\n    return (\n      <div style={container}>\n        <img src=\"/devices/information.png\" onClick={ this.go } alt={ this.props.image } style={ image }/>\n      </div>\n    );\n  }\n}\n\nexport default Information\n","import React from 'react';\n\nclass Edit extends React.Component {\n  constructor(props) {\n    super(props);\n    this.go = this.go.bind(this);\n  }\n\n  go(){\n    window.location.href = \"/devices/editor/\" + this.props.id + \"/\"\n  }\n\n  render() {\n\n    const container = {\n      float: 'left',\n      marginLeft: '5px'\n    }\n\n    const image = {\n      width: '30px'\n    }\n\n    return (\n      <div style={container}>\n        <img src=\"/devices/edit.png\" onClick={ this.go } alt={ this.props.image } style={ image }/>\n      </div>\n    );\n  }\n}\n\nexport default Edit\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass Light extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    var color = 'yellow';\n    if (this.props.device.traits.includes(\"action.devices.traits.ColorSetting\")){\n      if (Object.keys(this.props.status.color).includes(\"spectrumRgb\"))\n        color = \"#\" + this.props.status.color.spectrumRgb.toString(16);\n      else\n        color = \"#\" + this.props.status.color.spectrumRGB.toString(16);\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: color,\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    const title = {\n      marginTop: '5px',\n      marginBottom: '5px'\n    }\n\n    const devider = {\n      width: '80%'\n    }\n\n    return (\n      <div>\n        <div className=\"device_container\">\n          <div style={ color_strip }></div>\n          <h2 style={ title }>{ this.props.device.name.name }</h2>\n          <hr style={ devider }/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Light\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass Outlet extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'blue',\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    const title = {\n      marginTop: '5px',\n      marginBottom: '5px'\n    }\n\n    const devider = {\n      width: '80%'\n    }\n\n    return (\n      <div>\n        <div className=\"device_container\">\n          <div style={ color_strip }></div>\n          <h2 style={ title }>{ this.props.device.name.name }</h2>\n          <hr style={ devider }/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Outlet\n","import React from 'react';\nimport getCookieValue from '../../../functions'\nimport { root } from '../../../constants'\n\nclass TemperatureSetting extends React.Component {\n  constructor(props) {\n    super(props);\n    this.up = this.up.bind(this);\n    this.down = this.down.bind(this);\n    this.update = this.update.bind(this);\n  }\n\n  up(){\n    var temperature = this.props.status.thermostatTemperatureSetpoint + 1;\n    this.update(temperature)\n  }\n\n  down(){\n    var temperature = this.props.status.thermostatTemperatureSetpoint - 1;\n    this.update(temperature)\n  }\n\n  update(temperature){\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      if (http.readyState === 4) {\n        if (http.status === 200) {\n          console.log(http.responseText)\n          this.props.reload();\n        } else {\n          console.error(http.statusText);\n        }\n      }\n    }.bind(this)\n    http.open(\"POST\", root + \"api/status/update/\");\n    http.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\n    http.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    http.send(JSON.stringify({\n      \"id\": this.props.id,\n      \"param\": \"thermostatTemperatureSetpoint\",\n      \"value\": temperature\n    }));\n  }\n\n  render() {\n\n    const container = {\n      float: 'left',\n      marginLeft: '5px'\n    }\n\n    const image = {\n      width: '30px'\n    }\n\n    const temperature = {\n      fontSize: '30px',\n      marginLeft: '5px',\n      marginRight: '5px',\n      color: '#777'\n    }\n\n    return (\n      <div style={container}>\n        <img src='/devices/arrow_down.png' onClick={ this.down } alt='Arrow up' style={ image }/>\n        <span style={temperature}>{this.props.status.thermostatTemperatureSetpoint}</span>\n        <img src='/devices/arrow_up.png' onClick={ this.up } alt='Arrow down' style={ image }/>\n      </div>\n    );\n  }\n}\n\nexport default TemperatureSetting\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport TemperatureSetting from './traits/TemperatureSetting'\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass AcUnit extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    var color = 'yellow';\n    if (this.props.status.thermostatMode === 'off')\n      color = \"#666\";\n    else if (this.props.status.thermostatMode === 'heat')\n      color = \"red\";\n    else if (this.props.status.thermostatMode === 'cool')\n      color = \"lightblue\";\n    else if (this.props.status.thermostatMode === 'on')\n      color = \"yellow\";\n    else if (this.props.status.thermostatMode === 'heatcool')\n      color = \"#DC97FF\";\n    else if (this.props.status.thermostatMode === 'auto')\n      color = \"#EE357E\";\n    else if (this.props.status.thermostatMode === 'fan-only')\n      color = \"blue\";\n    else if (this.props.status.thermostatMode === 'purifier')\n      color = \"#F3882E\";\n    else if (this.props.status.thermostatMode === 'eco')\n      color = \"green\";\n    else if (this.props.status.thermostatMode === 'dry')\n      color = \"#753500\";\n\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: color,\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    const title = {\n      marginTop: '5px',\n      marginBottom: '5px'\n    }\n\n    const devider = {\n      width: '80%'\n    }\n\n    return (\n      <div>\n        <div className=\"device_container\">\n          <div style={ color_strip }></div>\n          <h2 style={ title }>{ this.props.device.name.name }</h2>\n          <hr style={ devider }/>\n          <div style={traits_container}>\n            <TemperatureSetting id={ this.props.device.id } status={this.props.status} on={ this.props.status } reload={ this.props.reload }/>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AcUnit\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass AirFreshener extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'yellow',\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    const title = {\n      marginTop: '5px',\n      marginBottom: '5px'\n    }\n\n    const devider = {\n      width: '80%'\n    }\n\n    return (\n      <div>\n        <div className=\"device_container\">\n          <div style={ color_strip }></div>\n          <h2 style={ title }>{ this.props.device.name.name }</h2>\n          <hr style={ devider }/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AirFreshener\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass AirPurifier extends React.Component {\n\n  render() {\n    \n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'yellow',\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    const title = {\n      marginTop: '5px',\n      marginBottom: '5px'\n    }\n\n    const devider = {\n      width: '80%'\n    }\n\n    return (\n      <div>\n        <div className=\"device_container\">\n          <div style={ color_strip }></div>\n          <h2 style={ title }>{ this.props.device.name.name }</h2>\n          <hr style={ devider }/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AirPurifier\n","import React from 'react';\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass Bed extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    const title = {\n      marginTop: '5px',\n      marginBottom: '5px'\n    }\n\n    const devider = {\n      width: '80%'\n    }\n\n    return (\n      <div>\n        <div className=\"device_container\">\n          <div style={ color_strip }></div>\n          <h2 style={ title }>{ this.props.device.name.name }</h2>\n          <hr style={ devider }/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Bed\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass Fan extends React.Component {\n\n  render() {\n    \n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'yellow',\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    const title = {\n      marginTop: '5px',\n      marginBottom: '5px'\n    }\n\n    const devider = {\n      width: '80%'\n    }\n\n    return (\n      <div>\n        <div className=\"device_container\">\n          <div style={ color_strip }></div>\n          <h2 style={ title }>{ this.props.device.name.name }</h2>\n          <hr style={ devider }/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Fan\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass Fireplace extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'yellow',\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    const title = {\n      marginTop: '5px',\n      marginBottom: '5px'\n    }\n\n    const devider = {\n      width: '80%'\n    }\n\n    return (\n      <div>\n        <div className=\"device_container\">\n          <div style={ color_strip }></div>\n          <h2 style={ title }>{ this.props.device.name.name }</h2>\n          <hr style={ devider }/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Fireplace\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass Radiator extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'yellow',\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    const title = {\n      marginTop: '5px',\n      marginBottom: '5px'\n    }\n\n    const devider = {\n      width: '80%'\n    }\n\n    return (\n      <div>\n        <div className=\"device_container\">\n          <div style={ color_strip }></div>\n          <h2 style={ title }>{ this.props.device.name.name }</h2>\n          <hr style={ devider }/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Radiator\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass Switch extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'yellow',\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    const title = {\n      marginTop: '5px',\n      marginBottom: '5px'\n    }\n\n    const devider = {\n      width: '80%'\n    }\n\n    return (\n      <div>\n        <div className=\"device_container\">\n          <div style={ color_strip }></div>\n          <h2 style={ title }>{ this.props.device.name.name }</h2>\n          <hr style={ devider }/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Switch\n","import React from 'react';\nimport TemperatureSetting from './traits/TemperatureSetting'\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass Thermostat extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    var color = 'yellow';\n    if (this.props.status.thermostatMode === 'off')\n      color = \"#666\";\n    else if (this.props.status.thermostatMode === 'heat')\n      color = \"red\";\n    else if (this.props.status.thermostatMode === 'cool')\n      color = \"lightblue\";\n    else if (this.props.status.thermostatMode === 'on')\n      color = \"yellow\";\n    else if (this.props.status.thermostatMode === 'heatcool')\n      color = \"#DC97FF\";\n    else if (this.props.status.thermostatMode === 'auto')\n      color = \"#EE357E\";\n    else if (this.props.status.thermostatMode === 'fan-only')\n      color = \"blue\";\n    else if (this.props.status.thermostatMode === 'purifier')\n      color = \"#F3882E\";\n    else if (this.props.status.thermostatMode === 'eco')\n      color = \"green\";\n    else if (this.props.status.thermostatMode === 'dry')\n      color = \"#753500\";\n\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: color\n    }\n\n    const title = {\n      marginTop: '5px',\n      marginBottom: '5px'\n    }\n\n    const devider = {\n      width: '80%'\n    }\n\n    return (\n      <div>\n        <div className=\"device_container\">\n          <div style={ color_strip }></div>\n          <h2 style={ title }>{ this.props.device.name.name }</h2>\n          <hr style={ devider }/>\n          <div style={traits_container}>\n            <TemperatureSetting id={ this.props.device.id } status={this.props.status} on={ this.props.status } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Thermostat\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass AirCooler extends React.Component {\n\n  render() {\n    \n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    var color = 'yellow';\n    if (this.props.device.traits.includes(\"action.devices.traits.ColorSetting\")){\n      color = \"#\" + this.props.status.color.spectrumRgb.toString(16);\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: color,\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    const title = {\n      marginTop: '5px',\n      marginBottom: '5px'\n    }\n\n    const devider = {\n      width: '80%'\n    }\n\n    return (\n      <div>\n        <div className=\"device_container\">\n          <div style={ color_strip }></div>\n          <h2 style={ title }>{ this.props.device.name.name }</h2>\n          <hr style={ devider }/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AirCooler\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass Bathtub extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    var color = 'yellow';\n    if (this.props.device.traits.includes(\"action.devices.traits.ColorSetting\")){\n      color = \"#\" + this.props.status.color.spectrumRgb.toString(16);\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: color,\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    const title = {\n      marginTop: '5px',\n      marginBottom: '5px'\n    }\n\n    const devider = {\n      width: '80%'\n    }\n\n    return (\n      <div>\n        <div className=\"device_container\">\n          <div style={ color_strip }></div>\n          <h2 style={ title }>{ this.props.device.name.name }</h2>\n          <hr style={ devider }/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Bathtub\n","import React from 'react';\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass Awing extends React.Component {\n\n  render() {\n    \n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    const title = {\n      marginTop: '5px',\n      marginBottom: '5px'\n    }\n\n    const devider = {\n      width: '80%'\n    }\n\n    return (\n      <div>\n        <div className=\"device_container\">\n          <div style={ color_strip }></div>\n          <h2 style={ title }>{ this.props.device.name.name }</h2>\n          <hr style={ devider }/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Awing\n","import React from 'react';\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass Blinds extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    const title = {\n      marginTop: '5px',\n      marginBottom: '5px'\n    }\n\n    const devider = {\n      width: '80%'\n    }\n\n    return (\n      <div>\n        <div className=\"device_container\">\n          <div style={ color_strip }></div>\n          <h2 style={ title }>{ this.props.device.name.name }</h2>\n          <hr style={ devider }/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Blinds\n","import React from 'react';\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass Closet extends React.Component {\n\n  render() {\n    \n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    const title = {\n      marginTop: '5px',\n      marginBottom: '5px'\n    }\n\n    const devider = {\n      width: '80%'\n    }\n\n    return (\n      <div>\n        <div className=\"device_container\">\n          <div style={ color_strip }></div>\n          <h2 style={ title }>{ this.props.device.name.name }</h2>\n          <hr style={ devider }/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Closet\n","import React from 'react';\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass Curtain extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    const title = {\n      marginTop: '5px',\n      marginBottom: '5px'\n    }\n\n    const devider = {\n      width: '80%'\n    }\n\n    return (\n      <div>\n        <div className=\"device_container\">\n          <div style={ color_strip }></div>\n          <h2 style={ title }>{ this.props.device.name.name }</h2>\n          <hr style={ devider }/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Curtain\n","import React from 'react';\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass Door extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    const title = {\n      marginTop: '5px',\n      marginBottom: '5px'\n    }\n\n    const devider = {\n      width: '80%'\n    }\n\n    return (\n      <div>\n        <div className=\"device_container\">\n          <div style={ color_strip }></div>\n          <h2 style={ title }>{ this.props.device.name.name }</h2>\n          <hr style={ devider }/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Door\n","import React from 'react';\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass Drawer extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    const title = {\n      marginTop: '5px',\n      marginBottom: '5px'\n    }\n\n    const devider = {\n      width: '80%'\n    }\n\n    return (\n      <div>\n        <div className=\"device_container\">\n          <div style={ color_strip }></div>\n          <h2 style={ title }>{ this.props.device.name.name }</h2>\n          <hr style={ devider }/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Drawer\n","import React from 'react';\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass Garage extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    const title = {\n      marginTop: '5px',\n      marginBottom: '5px'\n    }\n\n    const devider = {\n      width: '80%'\n    }\n\n    return (\n      <div>\n        <div className=\"device_container\">\n          <div style={ color_strip }></div>\n          <h2 style={ title }>{ this.props.device.name.name }</h2>\n          <hr style={ devider }/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Garage\n","import React from 'react';\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass Pergola extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    const title = {\n      marginTop: '5px',\n      marginBottom: '5px'\n    }\n\n    const devider = {\n      width: '80%'\n    }\n\n    return (\n      <div>\n        <div className=\"device_container\">\n          <div style={ color_strip }></div>\n          <h2 style={ title }>{ this.props.device.name.name }</h2>\n          <hr style={ devider }/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Pergola\n","import React from 'react';\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass Shutter extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    const title = {\n      marginTop: '5px',\n      marginBottom: '5px'\n    }\n\n    const devider = {\n      width: '80%'\n    }\n\n    return (\n      <div>\n        <div className=\"device_container\">\n          <div style={ color_strip }></div>\n          <h2 style={ title }>{ this.props.device.name.name }</h2>\n          <hr style={ devider }/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Shutter\n","import React from 'react';\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass Valve extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    const title = {\n      marginTop: '5px',\n      marginBottom: '5px'\n    }\n\n    const devider = {\n      width: '80%'\n    }\n\n    return (\n      <div>\n        <div className=\"device_container\">\n          <div style={ color_strip }></div>\n          <h2 style={ title }>{ this.props.device.name.name }</h2>\n          <hr style={ devider }/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Valve\n","import React from 'react';\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass Window extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    const title = {\n      marginTop: '5px',\n      marginBottom: '5px'\n    }\n\n    const devider = {\n      width: '80%'\n    }\n\n    return (\n      <div>\n        <div className=\"device_container\">\n          <div style={ color_strip }></div>\n          <h2 style={ title }>{ this.props.device.name.name }</h2>\n          <hr style={ devider }/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Window\n","import React from 'react';\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass Lock extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    const title = {\n      marginTop: '5px',\n      marginBottom: '5px'\n    }\n\n    const devider = {\n      width: '80%'\n    }\n\n    return (\n      <div>\n        <div className=\"device_container\">\n          <div style={ color_strip }></div>\n          <h2 style={ title }>{ this.props.device.name.name }</h2>\n          <hr style={ devider }/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Lock\n","import React from 'react';\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass Gate extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    const title = {\n      marginTop: '5px',\n      marginBottom: '5px'\n    }\n\n    const devider = {\n      width: '80%'\n    }\n\n    return (\n      <div>\n        <div className=\"device_container\">\n          <div style={ color_strip }></div>\n          <h2 style={ title }>{ this.props.device.name.name }</h2>\n          <hr style={ devider }/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Gate\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass Heater extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    var color = 'yellow';\n    if (this.props.device.traits.includes(\"action.devices.traits.ColorSetting\")){\n      color = \"#\" + this.props.status.color.spectrumRgb.toString(16);\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: color,\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    const title = {\n      marginTop: '5px',\n      marginBottom: '5px'\n    }\n\n    const devider = {\n      width: '80%'\n    }\n\n    return (\n      <div>\n        <div className=\"device_container\">\n          <div style={ color_strip }></div>\n          <h2 style={ title }>{ this.props.device.name.name }</h2>\n          <hr style={ devider }/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Heater\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass Hood extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    var color = 'yellow';\n    if (this.props.device.traits.includes(\"action.devices.traits.ColorSetting\")){\n      color = \"#\" + this.props.status.color.spectrumRgb.toString(16);\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: color,\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    const title = {\n      marginTop: '5px',\n      marginBottom: '5px'\n    }\n\n    const devider = {\n      width: '80%'\n    }\n\n    return (\n      <div>\n        <div className=\"device_container\">\n          <div style={ color_strip }></div>\n          <h2 style={ title }>{ this.props.device.name.name }</h2>\n          <hr style={ devider }/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Hood\n","import React from 'react';\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass SecuritySystem extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    const title = {\n      marginTop: '5px',\n      marginBottom: '5px'\n    }\n\n    const devider = {\n      width: '80%'\n    }\n\n    return (\n      <div>\n        <div className=\"device_container\">\n          <div style={ color_strip }></div>\n          <h2 style={ title }>{ this.props.device.name.name }</h2>\n          <hr style={ devider }/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SecuritySystem\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass Blender extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    var color = 'yellow';\n    if (this.props.device.traits.includes(\"action.devices.traits.ColorSetting\")){\n      color = \"#\" + this.props.status.color.spectrumRgb.toString(16);\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: color,\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    const title = {\n      marginTop: '5px',\n      marginBottom: '5px'\n    }\n\n    const devider = {\n      width: '80%'\n    }\n\n    return (\n      <div>\n        <div className=\"device_container\">\n          <div style={ color_strip }></div>\n          <h2 style={ title }>{ this.props.device.name.name }</h2>\n          <hr style={ devider }/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Blender\n","import React from 'react';\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass Global extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    var color = 'white';\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: color\n    }\n\n    const title = {\n      marginTop: '5px',\n      marginBottom: '5px'\n    }\n\n    const devider = {\n      width: '80%'\n    }\n\n    return (\n      <div>\n        <div className=\"device_container\">\n          <div style={ color_strip }></div>\n          <h2 style={ title }>{ this.props.device.name.name }</h2>\n          <hr style={ devider }/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Global\n","import React from 'react';\nimport Light from '../devices/Light'\nimport Outlet from '../devices/Outlet'\nimport AcUnit from '../devices/AcUnit'\nimport AirFreshener from '../devices/AirFreshener'\nimport AirPurifier from '../devices/AirPurifier'\nimport Bed from '../devices/Bed'\nimport Fan from '../devices/Fan'\nimport Fireplace from '../devices/Fireplace'\nimport Radiator from '../devices/Radiator'\nimport Switch from '../devices/Switch'\nimport Thermostat from '../devices/Thermostat'\nimport AirCooler from '../devices/AirCooler'\nimport Bathtub from '../devices/Bathtub'\nimport Awing from '../devices/Awing'\nimport Blinds from '../devices/Blinds'\nimport Closet from '../devices/Closet'\nimport Curtain from '../devices/Curtain'\nimport Door from '../devices/Door'\nimport Drawer from '../devices/Drawer'\nimport Garage from '../devices/Garage'\nimport Pergola from '../devices/Pergola'\nimport Shutter from '../devices/Shutter'\nimport Valve from '../devices/Valve'\nimport Window from '../devices/Window'\nimport Lock from '../devices/Lock'\nimport Gate from '../devices/Gate'\nimport Heater from '../devices/Heater'\nimport Hood from '../devices/Hood'\nimport SecuritySystem from '../devices/SecuritySystem'\nimport Blender from '../devices/Blender'\nimport Global from '../devices/Global'\nimport getCookieValue from '../../functions'\nimport { root } from '../../constants'\n\nimport './Devices.css';\n\nclass Devices extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {},\n      devices: []\n    }\n    this.loadData = this.loadData.bind(this);\n    this.newDevice = this.newDevice.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  loadData(){\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      if (http.readyState === 4) {\n        if (http.status === 200) {\n          var data = JSON.parse(http.responseText);\n          this.setState({\n             data: data,\n             devices: data.devices\n           });\n        } else {\n          console.error(http.statusText);\n        }\n      }\n    }.bind(this);\n    http.open(\"GET\", root + \"api/global/get/\");\n    http.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    http.send();\n  }\n\n  newDevice(){\n    window.location.href = '/devices/editor/'\n  }\n\n  render() {\n\n    const title = {\n      width: '80%',\n      marginLeft: '8%',\n      backgroundColor: 'white',\n      paddingTop: '10px',\n      paddingLeft: '20px',\n      paddingBottom: '10px',\n      paddingRight: '20px',\n      borderRadius: '20px'\n    }\n\n    const container = {\n      width: '80%',\n      marginLeft: '9%',\n      marginTop: '10px',\n    }\n\n    const devices = this.state.devices.map((device) => {\n      if(device.type === 'action.devices.types.LIGHT')\n        return <Light key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.OUTLET')\n        return <Outlet key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.AC_UNIT')\n        return <AcUnit key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.AIRFRESHENER')\n        return <AirFreshener key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.AIRPURIFIER')\n        return <AirPurifier key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.BED')\n        return <Bed key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.FAN')\n        return <Fan key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.FIREPLACE')\n        return <Fireplace key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.RADIATOR')\n        return <Radiator key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.SWITCH')\n        return <Switch key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.THERMOSTAT')\n        return <Thermostat key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.AIRCOOLER')\n        return <AirCooler key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.BATHTUB')\n        return <Bathtub key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.AWING')\n        return <Awing key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.AIRCOOLER')\n        return <AirCooler key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.BLINDS')\n        return <Blinds key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.CLOSET')\n        return <Closet key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.CURTAIN')\n        return <Curtain key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.DOOR')\n        return <Door key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.DRAWER')\n        return <Drawer key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.GARAGE')\n        return <Garage key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.GATE')\n        return <Gate key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.PERGOLA')\n        return <Pergola key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.SHUTTER')\n        return <Shutter key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.VALVE')\n        return <Valve key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.WINDOW')\n        return <Window key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.LOCK')\n        return <Lock key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.HEATER')\n        return <Heater key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.HOOD')\n        return <Hood key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.SECURITYSYSTEM')\n        return <SecuritySystem key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.BLENDER')\n        return <Blender key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else\n        return <Global key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n\n\n      return false\n\n    });\n\n    return (\n      <div>\n        <div style={ title }>\n          <h2>Devices</h2>\n        </div>\n\n        <div className=\"devices_device_container\">\n          { devices }\n        </div>\n\n        <div style={ container }>\n          <button type=\"button\" onClick={ this.newDevice }>New</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Devices\n","import React from 'react';\n\nclass Text extends React.Component {\n  constructor(props) {\n    super(props);\n    this.update = this.update.bind(this);\n  }\n\n\n  update(event){\n    this.props.update(this.props.data,event.target.value);\n  }\n\n  render() {\n    return (\n      <div className=\"table_row\">\n        <div className=\"table_cel\">\n          {this.props.name}\n        </div>\n        <div className=\"table_cel\">\n          <input type=\"text\" id={this.props.data} defaultValue={this.props.value} onChange={this.update} className=\"table_input\"/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Text\n","import React from 'react';\n\nclass Scene extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n  }\n\n\n  updateCheckbox(event){\n    this.props.update('attributes/' + event.target.id,event.target.checked);\n  }\n\n  render() {\n\n\n    return (\n      <div>\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n            \n          </div>\n          <div className=\"attribute_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"sceneReversible\" defaultChecked={this.props.sceneReversible} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>sceneReversible</i></span>\n            </label>\n          </div>\n          <div className=\"attribute_table_cel\">\n            <span className=\"attribute_advise\">Enable it if the scene can be desabled.</span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Scene\n","import React from 'react';\n\nclass OnOff extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n  }\n\n\n  updateCheckbox(event){\n    this.props.update('attributes/' + event.target.id,event.target.checked);\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n            \n          </div>\n          <div className=\"attribute_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"commandOnlyOnOff\" defaultChecked={this.props.attributes.commandOnlyOnOff} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>commandOnlyOnOff</i></span>\n            </label>\n          </div>\n          <div className=\"attribute_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the state.</span>\n          </div>\n        </div>\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n          </div>\n          <div className=\"attribute_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"queryOnlyOnOff\" defaultChecked={this.props.attributes.queryOnlyOnOff} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>queryOnlyOnOff</i></span>\n            </label>\n          </div>\n          <div className=\"attribute_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Google shouldn't change the device state.</span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default OnOff\n","import React from 'react';\n\nclass Brightness extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n  }\n\n\n  updateCheckbox(event){\n    this.props.update('attributes/' + event.target.id,event.target.checked);\n  }\n\n  render() {\n\n\n    return (\n      <div>\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n            \n          </div>\n          <div className=\"attribute_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"commandOnlyBrightness\" defaultChecked={this.props.commandOnlyBrightness} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>commandOnlyBrightness</i></span>\n            </label>\n          </div>\n          <div className=\"attribute_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the brightness.</span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Brightness\n","import React from 'react';\n\nclass FanSpeed extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n    this.updateFanSpeeds = this.updateFanSpeeds.bind(this);\n    this.addFanSpeed = this.addFanSpeed.bind(this);\n  }\n\n\n  updateCheckbox(event){\n    this.props.update('attributes/' + event.target.id,event.target.checked);\n  }\n\n  updateFanSpeeds(event){\n    const id = event.target.id.split('_')\n    const speed_id = id[1]\n    //Process the attribute and value depending of the attribute\n    const speed_attribute = id[0] === 'lang' ? id[0] : 'speed_synonym';\n    const value = id[0] === 'lang' ? event.target.value : event.target.value.split(',')\n    //Update the temporal data and update it\n    var temp_availableFanSpeeds = this.props.attributes.availableFanSpeeds\n    temp_availableFanSpeeds.speeds[speed_id].speed_values[0][speed_attribute] = value\n    if (id[0] === 'names') temp_availableFanSpeeds.speeds[speed_id].speed_name = value[0]\n    this.props.update('attributes/availableFanSpeeds', temp_availableFanSpeeds);\n  }\n\n  addFanSpeed(){\n    var temp_availableFanSpeeds = this.props.attributes.availableFanSpeeds\n    temp_availableFanSpeeds.speeds.push({\n      \"speed_name\": \"\",\n      \"speed_values\": [\n        {\n          \"speed_synonym\": [\"\"],\n          \"lang\": \"en\"\n        }\n      ]\n    });\n    this.props.update('attributes/availableFanSpeeds', temp_availableFanSpeeds);\n  }\n\n  render() {\n\n    const names_box = {\n      width: '150px'\n    }\n\n    const speeds = this.props.attributes.availableFanSpeeds.speeds.map((speed, i) => {\n      return (\n              <div key={i}>\n                <div className=\"table_row\" key={i}>\n                  <div className=\"table_cel\">\n                  </div>\n                  <div className=\"table_cel\">\n                    <label>\n                      <span>Languaje: </span>\n                      <select name=\"type\" id={\"lang_\" + i} value={speed.speed_values[0].lang} onChange={this.updateFanSpeeds}>\n                        <option value=\"es\">es</option>\n                        <option value=\"en\">en</option>\n                      </select>\n                    </label>\n                    <label>\n                      <span>Speed name: </span>\n                      <input type=\"text\" id={\"names_\" + i} style={names_box} defaultValue={speed.speed_values[0].speed_synonym} placeholder=\"Speed name\" onChange={this.updateFanSpeeds}/>\n                    </label>\n                  </div>\n                </div>\n              </div>\n              )\n    });\n\n    return (\n      <div>\n\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n\n          </div>\n          <div className=\"attribute_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"reversible\" defaultChecked={this.props.attributes.reversible} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>reversible</i></span>\n            </label>\n          </div>\n          <div className=\"attribute_table_cel\">\n            <span className=\"attribute_advise\">Enable it if the fan supports blowing in both directions.</span>\n          </div>\n        </div>\n\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n          </div>\n          <div className=\"attribute_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"supportsFanSpeedPercent\" defaultChecked={this.props.attributes.supportsFanSpeedPercent} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>supportsFanSpeedPercent</i></span>\n            </label>\n          </div>\n          <div className=\"attribute_table_cel\">\n            <span className=\"attribute_advise\">Enable it if the speed can be controlled with a number from 0 to 100.</span>\n          </div>\n        </div>\n\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n          </div>\n          <div className=\"attribute_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"commandOnlyFanSpeed\" defaultChecked={this.props.attributes.commandOnlyFanSpeed} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>commandOnlyFanSpeed</i></span>\n            </label>\n          </div>\n          <div className=\"attribute_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the fan speed.</span>\n          </div>\n        </div>\n\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n          </div>\n          <div className=\"attribute_table_cel\">\n            Add a speed <button type=\"button\" className=\"add_attribute_button\" onClick={ this.addFanSpeed }>Add</button>\n          </div>\n        </div>\n\n        {speeds}\n\n      </div>\n    );\n  }\n}\n\nexport default FanSpeed\n","import React from 'react';\n\nclass ColorSetting extends React.Component {\n  constructor(props) {\n    super(props);\n    this.update = this.update.bind(this);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n  }\n\n  update(event){\n    this.props.update('attributes/' + event.target.id,event.target.value);\n  }\n\n  updateCheckbox(event){\n    this.props.update('attributes/' + event.target.id,event.target.checked);\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n\n          </div>\n          <div className=\"attribute_table_cel\">\n            <select name=\"type\" id=\"colorModel\" className=\"table_input\" value={this.props.attributes.colorModel} onChange={this.update}>\n              <option value=\"\">Select</option>\n              <option value=\"rgb\">RGB light</option>\n              <option value=\"hsv\">HSV light</option>\n              <option value=\"\">Color temperature</option>\n            </select>\n          </div>\n          <div className=\"attribute_table_cel\">\n            <span className=\"attribute_advise\"></span>\n          </div>\n        </div>\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n\n          </div>\n          <div className=\"attribute_table_cel\">\n            Minimum temperature: <input type=\"number\" id=\"colorTemperatureRange/temperatureMinK\" defaultValue={ this.props.attributes.colorTemperatureRange ? this.props.attributes.colorTemperatureRange.temperatureMinK : 0} min=\"0\" max=\"10000\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"attribute_table_cel\">\n            <span className=\"attribute_advise\">Minimum color temperature (in Kelvin) supported by the device.</span>\n          </div>\n        </div>\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n\n          </div>\n          <div className=\"attribute_table_cel\">\n            Maximum temperature: <input type=\"number\" id=\"colorTemperatureRange/temperatureMaxK\" defaultValue={this.props.attributes.colorTemperatureRange ? this.props.attributes.colorTemperatureRange.temperatureMaxK : 0} min=\"0\" max=\"10000\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"attribute_table_cel\">\n            <span className=\"attribute_advise\">Maximum color temperature (in Kelvin) supported by the device.</span>\n          </div>\n        </div>\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n\n          </div>\n          <div className=\"attribute_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"commandOnlyColorSetting\" defaultChecked={this.props.attributes.commandOnlyColorSetting} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>commandOnlyColorSetting</i></span>\n            </label>\n          </div>\n          <div className=\"attribute_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the color.</span>\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default ColorSetting\n","import React from 'react';\n\nclass TemperatureSetting extends React.Component {\n  constructor(props) {\n    super(props);\n    this.update = this.update.bind(this);\n    this.updateMode = this.updateMode.bind(this);\n    this.addMode = this.addMode.bind(this);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n  }\n\n  update(event){\n    this.props.update('attributes/' + event.target.id,event.target.value);\n  }\n\n  updateMode(event){\n    const id = event.target.id.split('_')\n    const mode_id = id[1]\n    var temp_availableThermostatModes = this.props.attributes.availableThermostatModes.split(',')\n\n    if (event.target.value === 'delete'){\n      temp_availableThermostatModes.splice(mode_id, 1)\n    } else if (event.target.value !== 'select') {\n      temp_availableThermostatModes[mode_id] = event.target.value;\n    }\n\n    this.props.update('attributes/availableThermostatModes', temp_availableThermostatModes.join(','));\n  }\n\n  addMode(){\n    var temp_availableThermostatModes = this.props.attributes.availableThermostatModes\n    temp_availableThermostatModes += \",\"\n    this.props.update('attributes/availableThermostatModes', temp_availableThermostatModes);\n  }\n\n  updateCheckbox(event){\n    this.props.update('attributes/' + event.target.id,event.target.checked);\n  }\n\n\n  render() {\n\n    const modes = this.props.attributes.availableThermostatModes.split(',').map((mode, i) => {\n\n      return (\n          <div key={i}>\n            <div className=\"table_row\">\n              <div className=\"table_cel\">\n              </div>\n              <div className=\"table_cel\">\n                <label>\n                  <span>Mode: </span>\n                  <select name=\"type\" id={\"mode_\" + i} value={mode} onChange={this.updateMode}>\n                    <option value=\"select\">Select a mode</option>\n                    <option value=\"delete\">Delete this mode</option>\n                    <option value=\"off\">Off</option>\n                    <option value=\"heat\">Heat</option>\n                    <option value=\"cool\">Cool</option>\n                    <option value=\"on\">On</option>\n                    <option value=\"heatcool\">Heatcool</option>\n                    <option value=\"auto\">Auto</option>\n                    <option value=\"fan-only\">Fan only</option>\n                    <option value=\"purifier\">Purifier</option>\n                    <option value=\"eco\">Eco</option>\n                    <option value=\"dry\">Dry</option>\n                  </select>\n                </label>\n              </div>\n            </div>\n          </div>\n\n          )\n    });\n\n    return (\n      <div>\n\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n          </div>\n          <div className=\"attribute_table_cel\">\n            Add a thermostat mode <button type=\"button\" className=\"add_attribute_button\" onClick={ this.addMode }>Add</button>\n          </div>\n        </div>\n\n        {modes}\n\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n\n          </div>\n          <div className=\"attribute_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"commandOnlyTemperatureSetting\" defaultChecked={this.props.attributes.commandOnlyTemperatureSetting} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>commandOnlyTemperatureSetting</i></span>\n            </label>\n          </div>\n          <div className=\"attribute_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the temperature.</span>\n          </div>\n        </div>\n\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n          </div>\n          <div className=\"attribute_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"queryOnlyTemperatureSetting\" defaultChecked={this.props.attributes.queryOnlyTemperatureSetting} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>queryOnlyTemperatureSetting</i></span>\n            </label>\n          </div>\n          <div className=\"attribute_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Google shouldn't change the device temperature settings.</span>\n          </div>\n        </div>\n\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n\n          </div>\n          <div className=\"attribute_table_cel\">\n            Minimum temperature: <input type=\"number\" id=\"thermostatTemperatureRange/minThresholdCelsius\" defaultValue={ this.props.attributes.thermostatTemperatureRange ? this.props.attributes.thermostatTemperatureRange.minThresholdCelsius : 0} min=\"0\" max=\"50\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"attribute_table_cel\">\n            <span className=\"attribute_advise\">Minimum temperature (in Celsius) supported by the device.</span>\n          </div>\n        </div>\n\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n\n          </div>\n          <div className=\"attribute_table_cel\">\n            Maximum temperature: <input type=\"number\" id=\"thermostatTemperatureRange/maxThresholdCelsius\" defaultValue={this.props.attributes.thermostatTemperatureRange ? this.props.attributes.thermostatTemperatureRange.maxThresholdCelsius : 0} min=\"0\" max=\"50\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"attribute_table_cel\">\n            <span className=\"attribute_advise\">Maximum temperature (in Celsius) supported by the device.</span>\n          </div>\n        </div>\n\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n\n          </div>\n          <div className=\"attribute_table_cel\">\n            Range: <input type=\"number\" id=\"bufferRangeCelsius\" defaultValue={this.props.attributes.bufferRangeCelsius} min=\"0\" max=\"50\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"attribute_table_cel\">\n            <span className=\"attribute_advise\">Specifies the minimum offset between heat-cool setpoints in Celsius.</span>\n          </div>\n        </div>\n\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n\n          </div>\n          <div className=\"attribute_table_cel\">\n            <select name=\"type\" id=\"thermostatTemperatureUnit\" className=\"table_input\" value={this.props.attributes.thermostatTemperatureUnit} onChange={this.update}>\n              <option value=\"C\">Celsius</option>\n              <option value=\"F\">Fahrenheit</option>\n            </select>\n          </div>\n        </div>\n\n\n\n      </div>\n    );\n  }\n}\n\nexport default TemperatureSetting\n","import React from 'react';\n\nclass Toggles extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n    this.updatetoggle = this.updatetoggle.bind(this);\n    this.addToggle = this.addToggle.bind(this);\n  }\n\n\n  updateCheckbox(event){\n    this.props.update('attributes/' + event.target.id,event.target.checked);\n  }\n\n  updatetoggle(event){\n    const id = event.target.id.split('_')\n    const toggle_id = id[1]\n    //Process the attribute and value depending of the attribute\n    const toggle_attribute = id[0] === 'lang' ? id[0] : 'name_synonym';\n    const value = id[0] === 'lang' ? event.target.value : event.target.value.split(',')\n    //Update the temporal data and update it\n    var temp_availableToggles = this.props.attributes.availableToggles\n    temp_availableToggles[toggle_id].name_values[0][toggle_attribute] = value\n    if (id[0] === 'names') temp_availableToggles[toggle_id].name = value[0]\n    this.props.update('attributes/availableToggles', temp_availableToggles);\n  }\n\n  addToggle(){\n    var temp_availableToggles = this.props.attributes.availableToggles\n    temp_availableToggles.push({\n      \"name\": \"\",\n      \"name_values\": [\n        {\n          \"name_synonym\": [\"\"],\n          \"lang\": \"en\"\n        }\n      ]\n    });\n    this.props.update('attributes/availableToggles', temp_availableToggles);\n  }\n\n  render() {\n\n    const names_box = {\n      marginLeft: '20px',\n      width: '150px'\n    }\n\n    const toggles = this.props.attributes.availableToggles.map((toggle, i) => {\n      return (\n              <div key={i}>\n                <div className=\"table_row\">\n                  <div className=\"table_cel\">\n                  </div>\n                  <div className=\"table_cel\">\n                    <label>\n                      <span>Languaje: </span>\n                      <select name=\"type\" id={\"lang_\" + i} value={toggle.name_values[0].lang} placeholder=\"Name for the toggle\" onChange={this.updatetoggle}>\n                        <option value=\"es\">es</option>\n                        <option value=\"en\">en</option>\n                      </select>\n                    </label>\n                    <label>\n                      <span>Name: </span>\n                      <input type=\"text\" id={\"names_\" + i} style={names_box} defaultValue={toggle.name_values[0].name_synonym} placeholder=\"Name\" onChange={this.updatetoggle}/>\n                    </label>\n\n\n                  </div>\n                </div>\n              </div>\n            )\n    });\n\n    return (\n      <div>\n\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n\n          </div>\n          <div className=\"attribute_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"commandOnlyToggles\" defaultChecked={this.props.attributes.reversible} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>commandOnlyToggles</i></span>\n            </label>\n          </div>\n          <div className=\"attribute_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the states.</span>\n          </div>\n        </div>\n\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n          </div>\n          <div className=\"attribute_table_cel\">\n            Add a toggle <button type=\"button\" className=\"add_attribute_button\" onClick={ this.addToggle }>Add</button>\n          </div>\n        </div>\n\n        {toggles}\n\n      </div>\n    );\n  }\n}\n\nexport default Toggles\n","import React from 'react';\n\nclass Modes extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n    this.updateMode = this.updateMode.bind(this);\n    this.addMode = this.addMode.bind(this);\n  }\n\n\n  updateCheckbox(event){\n    this.props.update('attributes/' + event.target.id,event.target.checked);\n  }\n\n  updateMode(event){\n    const id = event.target.id.split('_')\n    const mode_id = id[1]\n    var temp_availableModes = this.props.attributes.availableModes\n\n    if(id[0] === 'lang'){\n      temp_availableModes[mode_id].name_values[0].lang = event.target.value;\n    } else if (id[0] === 'names'){\n      temp_availableModes[mode_id].name_values[0].name_synonym = event.target.value.split(',');\n      temp_availableModes[mode_id].name = event.target.value.split(',')[0]\n    } else if (id[0] === 'settings'){\n      var values = event.target.value.split(',')\n      var settings = []\n      for ( var i = 0; i < values.length; i ++){\n        settings.push({\n          setting_name: values[i],\n            setting_values: [{\n              setting_synonym: [values[i]],\n              lang: this.props.attributes.availableModes[mode_id].name_values[0].lang\n             }]\n        })\n      }\n      temp_availableModes[mode_id].settings = settings\n    }\n    this.props.update('attributes/availableModes', temp_availableModes);\n  }\n\n  addMode(){\n    var temp_availableModes = this.props.attributes.availableModes\n    temp_availableModes.push({\n      \"name\": \"\",\n      \"name_values\": [\n        {\n          \"name_synonym\": [\"\"],\n          \"lang\": \"en\"\n        }\n      ],\n      \"settings\": [\n        {\n          \"setting_name\": \"\",\n            \"setting_values\": [{\n              \"setting_synonym\": [\"\"],\n              \"lang\": \"en\"\n             }]\n        }\n      ]\n    });\n    this.props.update('attributes/availableModes', temp_availableModes);\n  }\n\n  render() {\n\n    const names_box = {\n      width: '150px'\n    }\n\n    const settings_box = {\n      width: '230px'\n    }\n\n\n    const modes = this.props.attributes.availableModes.map((mode, i) => {\n      const settings = mode.settings.map((setting,i) => {return setting.setting_name});\n\n      return (\n              <div key={i}>\n                <div className=\"table_row\">\n                  <div className=\"table_cel\">\n                  </div>\n                  <div className=\"table_cel\">\n                    <label>\n                      <span>Languaje: </span>\n                      <select name=\"type\" id={\"lang_\" + i} value={mode.name_values[0].lang} onChange={this.updateMode}>\n                        <option value=\"es\">es</option>\n                        <option value=\"en\">en</option>\n                      </select>\n                    </label>\n                    <label>\n                      <span>Mode name: </span>\n                      <input type=\"text\" id={\"names_\" + i} style={names_box} defaultValue={mode.name_values[0].name_synonym} placeholder=\"Mode name\" onChange={this.updateMode}/>\n                    </label>\n                    <label>\n                      <span>Mode settings: </span>\n                      <input type=\"text\" id={\"settings_\" + i} style={settings_box} defaultValue={settings} placeholder=\"Separated by commas\" onChange={this.updateMode}/>\n                    </label>\n                  </div>\n                </div>\n\n\n              </div>\n\n              )\n    });\n\n    return (\n      <div>\n\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n\n          </div>\n          <div className=\"attribute_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"commandOnlyModes\" defaultChecked={this.props.attributes.reversible} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>commandOnlyModes</i></span>\n            </label>\n          </div>\n          <div className=\"attribute_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the modes.</span>\n          </div>\n        </div>\n\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n          </div>\n          <div className=\"attribute_table_cel\">\n            Add a mode <button type=\"button\" className=\"add_attribute_button\" onClick={ this.addMode }>Add</button>\n          </div>\n\n        </div>\n\n        {modes}\n\n      </div>\n    );\n  }\n}\n\nexport default Modes\n","import React from 'react';\n\nclass HumiditySetting extends React.Component {\n  constructor(props) {\n    super(props);\n    this.update = this.update.bind(this);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n  }\n\n  update(event){\n    this.props.update('attributes/' + event.target.id,event.target.value);\n  }\n\n  updateCheckbox(event){\n    this.props.update('attributes/' + event.target.id,event.target.checked);\n  }\n\n  render() {\n    return (\n      <div>\n\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n\n          </div>\n          <div className=\"attribute_table_cel\">\n            Minimum humidity <input type=\"number\" id=\"humiditySetpointRange/minPercent\" defaultValue={ this.props.attributes.humiditySetpointRange ? this.props.attributes.humiditySetpointRange.minPercent : 0} min=\"0\" max=\"100\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"attribute_table_cel\">\n            <span className=\"attribute_advise\">Minimum humidity level as percentage.</span>\n          </div>\n        </div>\n\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n\n          </div>\n          <div className=\"attribute_table_cel\">\n            Maximum humidity <input type=\"number\" id=\"humiditySetpointRange/maxPercent\" defaultValue={this.props.attributes.humiditySetpointRange ? this.props.attributes.humiditySetpointRange.maxPercent : 0} min=\"0\" max=\"100\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"attribute_table_cel\">\n            <span className=\"attribute_advise\">Maximum humidity level as percentage.</span>\n          </div>\n        </div>\n\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n\n          </div>\n          <div className=\"attribute_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"commandOnlyHumiditySetting\" defaultChecked={this.props.attributes.commandOnlyHumiditySetting} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>commandOnlyHumiditySetting</i></span>\n            </label>\n          </div>\n          <div className=\"attribute_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the humidity.</span>\n          </div>\n        </div>\n\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n\n          </div>\n          <div className=\"attribute_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"queryOnlyHumiditySetting\" defaultChecked={this.props.attributes.queryOnlyHumiditySetting} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>queryOnlyHumiditySetting</i></span>\n            </label>\n          </div>\n          <div className=\"attribute_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Google shouldn't change the device humidity.</span>\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default HumiditySetting\n","import React from 'react';\n\nclass OpenClose extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n  }\n\n\n  updateCheckbox(event){\n    this.props.update('attributes/' + event.target.id,event.target.checked);\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n\n          </div>\n          <div className=\"attribute_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"discreteOnlyOpenClose\" defaultChecked={this.props.attributes.discreteOnlyOpenClose} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>discreteOnlyOpenClose</i></span>\n            </label>\n          </div>\n          <div className=\"attribute_table_cel\">\n            <span className=\"attribute_advise\">Enable it if the device must either be fully open or fully closed.</span>\n          </div>\n        </div>\n\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n          </div>\n          <div className=\"attribute_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"commandOnlyOpenClose\" defaultChecked={this.props.attributes.commandOnlyOpenClose} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>commandOnlyOpenClose</i></span>\n            </label>\n          </div>\n          <div className=\"attribute_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the state.</span>\n          </div>\n        </div>\n\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n          </div>\n          <div className=\"attribute_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"queryOnlyOpenClose\" defaultChecked={this.props.attributes.queryOnlyOpenClose} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>queryOnlyOpenClose</i></span>\n            </label>\n          </div>\n          <div className=\"attribute_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Google shouldn't change the device state.</span>\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default OpenClose\n","import React from 'react';\n\nclass Rotation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.update = this.update.bind(this);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n  }\n\n  update(event){\n    this.props.update('attributes/' + event.target.id,event.target.value);\n  }\n\n  updateCheckbox(event){\n    this.props.update('attributes/' + event.target.id,event.target.checked);\n  }\n\n  render() {\n    return (\n      <div>\n\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n\n          </div>\n          <div className=\"attribute_table_cel\">\n            Minimum rotation: <input type=\"number\" id=\"rotationDegreesRange/rotationDegreesMin\" defaultValue={ this.props.attributes.rotationDegreesRange ? this.props.attributes.rotationDegreesRange.rotationDegreesMin : 0} min=\"0\" max=\"100\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"attribute_table_cel\">\n            <span className=\"attribute_advise\">Minimum rotation degrees that a device can rotate.</span>\n          </div>\n        </div>\n\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n\n          </div>\n          <div className=\"attribute_table_cel\">\n            Maximum rotation: <input type=\"number\" id=\"rotationDegreesRange/rotationDegreesMax\" defaultValue={this.props.attributes.rotationDegreesRange ? this.props.attributes.rotationDegreesRange.rotationDegreesMax : 0} min=\"0\" max=\"100\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"attribute_table_cel\">\n            <span className=\"attribute_advise\">Maximum rotation degrees that a device can rotate.</span>\n          </div>\n        </div>\n\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n\n          </div>\n          <div className=\"attribute_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"commandOnlyRotation\" defaultChecked={this.props.attributes.commandOnlyRotation} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>commandOnlyRotation</i></span>\n            </label>\n          </div>\n          <div className=\"attribute_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the device.</span>\n          </div>\n        </div>\n\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n\n          </div>\n          <div className=\"attribute_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"supportsContinuousRotation\" defaultChecked={this.props.attributes.supportsContinuousRotation} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>supportsContinuousRotation</i></span>\n            </label>\n          </div>\n          <div className=\"attribute_table_cel\">\n            <span className=\"attribute_advise\">Enable it if the device supports continuous rotation.</span>\n          </div>\n        </div>\n\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n\n          </div>\n          <div className=\"attribute_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"supportsDegrees\" defaultChecked={this.props.attributes.supportsDegrees} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>supportsDegrees</i></span>\n            </label>\n          </div>\n          <div className=\"attribute_table_cel\">\n            <span className=\"attribute_advise\">Enable it if the device allows rotation by degree.</span>\n          </div>\n        </div>\n\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n\n          </div>\n          <div className=\"attribute_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"supportsPercent\" defaultChecked={this.props.attributes.supportsPercent} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>supportsPercent</i></span>\n            </label>\n          </div>\n          <div className=\"attribute_table_cel\">\n            <span className=\"attribute_advise\">Enable it if device allows rotation by percent.</span>\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default Rotation\n","import React from 'react';\n\nclass Fill extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateLevels = this.updateLevels.bind(this);\n    this.addLevel = this.addLevel.bind(this);\n  }\n\n  updateLevels(event){\n    const id = event.target.id.split('_')\n    const level_id = id[1]\n    //Process the attribute and value depending of the attribute\n    const level_attribute = id[0] === 'lang' ? id[0] : 'level_synonym';\n    const value = id[0] === 'lang' ? event.target.value : event.target.value.split(',')\n    //Update the temporal data and update it\n    var temp_availableFillLevels = this.props.attributes.availableFillLevels\n    temp_availableFillLevels.levels[level_id].level_values[0][level_attribute] = value\n    if (id[0] === 'names') temp_availableFillLevels.levels[level_id].level_name = value[0]\n    this.props.update('attributes/availableFillLevels', temp_availableFillLevels);\n  }\n\n  addLevel(){\n    var temp_availableFillLevels = this.props.attributes.availableFillLevels\n    temp_availableFillLevels.levels.push({\n      \"level_name\": \"\",\n      \"level_values\": [\n        {\n          \"level_synonym\": [\"\"],\n          \"lang\": \"en\"\n        }\n      ]\n    });\n    this.props.update('attributes/availableFillLevels', temp_availableFillLevels);\n  }\n\n  render() {\n\n    const names_box = {\n      width: '150px'\n    }\n\n    const levels = this.props.attributes.availableFillLevels.levels.map((level, i) => {\n      return (\n              <div key={i}>\n                <div className=\"table_row\" key={i}>\n                  <div className=\"table_cel\">\n                  </div>\n                  <div className=\"table_cel\">\n                    <label>\n                      <span>Languaje: </span>\n                      <select name=\"type\" id={\"lang_\" + i} value={level.level_values[0].lang} onChange={this.updateLevels}>\n                        <option value=\"es\">es</option>\n                        <option value=\"en\">en</option>\n                      </select>\n                    </label>\n                    <label>\n                      <span>Fill level name: </span>\n                      <input type=\"text\" id={\"names_\" + i} style={names_box} defaultValue={level.level_values[0].level_synonym} placeholder=\"Fill level name\" onChange={this.updateLevels}/>\n                    </label>\n                  </div>\n                </div>\n              </div>\n              )\n    });\n\n    return (\n      <div>\n\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n          </div>\n          <div className=\"attribute_table_cel\">\n            Add a level <button type=\"button\" className=\"add_attribute_button\" onClick={ this.addLevel }>Add</button>\n          </div>\n        </div>\n\n        {levels}\n\n      </div>\n    );\n  }\n}\n\nexport default Fill\n","import React from 'react';\n\nclass ArmDisarm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateSecurityLevel = this.updateSecurityLevel.bind(this);\n    this.addSecurityLevel = this.addSecurityLevel.bind(this);\n  }\n\n  updateSecurityLevel(event){\n    const id = event.target.id.split('_')\n    const level_id = id[1]\n    //Process the attribute and value depending of the attribute\n    const level_attribute = id[0] === 'lang' ? id[0] : 'level_synonym';\n    const value = id[0] === 'lang' ? event.target.value : event.target.value.split(',')\n    //Update the temporal data and update it\n    var temp_availableArmLevels = this.props.attributes.availableArmLevels\n    temp_availableArmLevels.levels[level_id].level_values[0][level_attribute] = value\n    if (id[0] === 'names') temp_availableArmLevels.levels[level_id].level_name = value[0]\n    this.props.update('attributes/availableArmLevels', temp_availableArmLevels);\n  }\n\n  addSecurityLevel(){\n    var temp_availableArmLevels = this.props.attributes.availableArmLevels\n    temp_availableArmLevels.levels.push({\n      \"level_name\": \"\",\n      \"level_values\": [\n        {\n          \"level_synonym\": [\"\"],\n          \"lang\": \"en\"\n        }\n      ]\n    });\n    this.props.update('attributes/availableArmLevels', temp_availableArmLevels);\n  }\n\n  render() {\n\n    const names_box = {\n      marginLeft: '20px',\n      width: '150px'\n    }\n\n    const levels = this.props.attributes.availableArmLevels.levels.map((level, i) => {\n      return (\n              <div key={i}>\n                <div className=\"table_row\" key={i}>\n                  <div className=\"table_cel\">\n                  </div>\n                  <div className=\"table_cel\">\n                    <label>\n                      <span>Languaje: </span>\n                      <select name=\"type\" id={\"lang_\" + i} value={level.level_values[0].lang} onChange={this.updateSecurityLevel}>\n                        <option value=\"es\">es</option>\n                        <option value=\"en\">en</option>\n                      </select>\n                    </label>\n                    <label>\n                      <span>Level name: </span>\n                      <input type=\"text\" id={\"names_\" + i} style={names_box} defaultValue={level.level_values[0].speed_synonym} placeholder=\"Security level name\" onChange={this.updateSecurityLevel}/>\n                    </label>\n                  </div>\n                </div>\n              </div>\n              )\n    });\n\n    return (\n      <div>\n\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n          </div>\n          <div className=\"attribute_table_cel\">\n            Add a security level <button type=\"button\" className=\"add_attribute_button\" onClick={ this.addSecurityLevel }>Add</button>\n          </div>\n        </div>\n\n        {levels}\n\n      </div>\n    );\n  }\n}\n\nexport default ArmDisarm\n","import React from 'react';\n\nclass StartStop extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n    this.updateArray = this.updateArray.bind(this);\n  }\n\n\n  updateCheckbox(event){\n    this.props.update('attributes/' + event.target.id,event.target.checked);\n  }\n\n  updateArray(event){\n    this.props.update('attributes/' + event.target.id,event.target.value.split(','));\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n\n          </div>\n          <div className=\"attribute_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"pausable\" defaultChecked={this.props.attributes.pausable} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>pausable</i></span>\n            </label>\n          </div>\n          <div className=\"attribute_table_cel\">\n            <span className=\"attribute_advise\">Enable it if the device can be paused.</span>\n          </div>\n        </div>\n\n        <div className=\"table_row\">\n          <div className=\"table_cel\">\n\n          </div>\n          <div className=\"table_cel\">\n            Zones: <input type=\"text\" id=\"availableThermostatModes\" defaultValue={this.props.attributes.availableZones} onChange={this.updateArray} className=\"text_input\"/>\n          </div>\n        </div>\n\n        <div className=\"table_row\">\n          <div className=\"table_cel\">\n\n          </div>\n          <div className=\"table_cel\">\n            <span className=\"attribute_advise\">Supported zones names separeted by commas.</span>\n          </div>\n        </div>\n\n\n      </div>\n    );\n  }\n}\n\nexport default StartStop\n","import React from 'react';\n\nclass Timer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n    this.update = this.update.bind(this);\n  }\n\n\n  updateCheckbox(event){\n    this.props.update('attributes/' + event.target.id,event.target.checked);\n  }\n\n  update(event){\n    this.props.update('attributes/' + event.target.id,event.target.value);\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n\n          </div>\n          <div className=\"attribute_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"commandOnlyTimer\" defaultChecked={this.props.attributes.commandOnlyTimer} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>commandOnlyTimer</i></span>\n            </label>\n          </div>\n          <div className=\"attribute_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the state.</span>\n          </div>\n        </div>\n\n        <div className=\"table_row\">\n          <div className=\"table_cel\">\n\n          </div>\n          <div className=\"table_cel\">\n            Max time: <input type=\"text\" id=\"maxTimerLimitSec\" defaultValue={this.props.attributes.maxTimerLimitSec} onChange={this.update} className=\"text_input\"/>\n          </div>\n        </div>\n\n        <div className=\"table_row\">\n          <div className=\"table_cel\">\n\n          </div>\n          <div className=\"table_cel\">\n            <span className=\"attribute_advise\">Indicates the longest timer setting in seconds available on the device.</span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Timer\n","import React from 'react';\n\nclass TemperatureControl extends React.Component {\n  constructor(props) {\n    super(props);\n    this.update = this.update.bind(this);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n  }\n\n  update(event){\n    this.props.update('attributes/' + event.target.id,event.target.value);\n  }\n\n  updateCheckbox(event){\n    this.props.update('attributes/' + event.target.id,event.target.checked);\n  }\n\n  render() {\n\n\n    return (\n      <div>\n\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n\n          </div>\n          <div className=\"attribute_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"commandOnlyTemperatureControl\" defaultChecked={this.props.attributes.commandOnlyTemperatureControl} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>commandOnlyTemperatureControl</i></span>\n            </label>\n          </div>\n          <div className=\"attribute_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the temperature.</span>\n          </div>\n        </div>\n\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n          </div>\n          <div className=\"attribute_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"queryOnlyTemperatureControl\" defaultChecked={this.props.attributes.queryOnlyTemperatureControl} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>queryOnlyTemperatureControl</i></span>\n            </label>\n          </div>\n          <div className=\"attribute_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Google shouldn't change the device temperature settings.</span>\n          </div>\n        </div>\n\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n\n          </div>\n          <div className=\"attribute_table_cel\">\n            Minimum temperature: <input type=\"number\" id=\"temperatureRange/minThresholdCelsius\" defaultValue={ this.props.attributes.temperatureRange ? this.props.attributes.temperatureRange.minThresholdCelsius : 0} min=\"0\" max=\"400\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"attribute_table_cel\">\n            <span className=\"attribute_advise\">Minimum temperature (in Celsius) supported by the device.</span>\n          </div>\n        </div>\n\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n\n          </div>\n          <div className=\"attribute_table_cel\">\n            Maximum temperature: <input type=\"number\" id=\"temperatureRange/maxThresholdCelsius\" defaultValue={this.props.attributes.temperatureRange ? this.props.attributes.temperatureRange.maxThresholdCelsius : 0} min=\"0\" max=\"400\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"attribute_table_cel\">\n            <span className=\"attribute_advise\">Maximum temperature (in Celsius) supported by the device.</span>\n          </div>\n        </div>\n\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n\n          </div>\n          <div className=\"attribute_table_cel\">\n            Step: <input type=\"number\" id=\"temperatureStepCelsius\" defaultValue={this.props.attributes.temperatureStepCelsius} min=\"0\" max=\"400\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"attribute_table_cel\">\n            <span className=\"attribute_advise\">Specifies the relative temperature step.</span>\n          </div>\n        </div>\n\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n\n          </div>\n          <div className=\"attribute_table_cel\">\n            <select name=\"type\" id=\"temperatureUnitForUX\" className=\"table_input\" value={this.props.attributes.temperatureUnitForUX} onChange={this.update}>\n              <option value=\"C\">Celsius</option>\n              <option value=\"F\">Fahrenheit</option>\n            </select>\n          </div>\n        </div>\n\n\n\n      </div>\n    );\n  }\n}\n\nexport default TemperatureControl\n","import React from 'react';\n\nclass Cook extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateMode = this.updateMode.bind(this);\n    this.addMode = this.addMode.bind(this);\n    this.updatePreset = this.updatePreset.bind(this);\n    this.addPreset = this.addPreset.bind(this);\n  }\n\n  updateMode(event){\n    const id = event.target.id.split('_')\n    const mode_id = id[1]\n    var temp_supportedCookingModes = this.props.attributes.supportedCookingModes\n\n    if (event.target.value === 'delete'){\n      temp_supportedCookingModes.splice(mode_id, 1)\n    } else if (event.target.value !== 'select') {\n      temp_supportedCookingModes[mode_id] = event.target.value;\n    }\n\n    this.props.update('attributes/supportedCookingModes', temp_supportedCookingModes);\n  }\n\n  addMode(){\n    var temp_supportedCookingModes = this.props.attributes.supportedCookingModes\n    temp_supportedCookingModes.push(\"\");\n    this.props.update('attributes/supportedCookingModes', temp_supportedCookingModes);\n  }\n\n  updatePreset(event){\n    const id = event.target.id.split('_')\n    const preset_id = id[1]\n    var temp_foodPresets = this.props.attributes.foodPresets\n\n    if(id[0] === 'lang'){\n      temp_foodPresets[preset_id].food_synonyms[0].lang = event.target.value;\n    } else if (id[0] === 'names'){\n      temp_foodPresets[preset_id].food_synonyms[0].synonym = event.target.value.split(',');\n      temp_foodPresets[preset_id].food_preset_name = event.target.value.split(',')[0]\n    } else if (id[0] === 'units'){\n      temp_foodPresets[preset_id].supported_units[0] = event.target.value;\n    }\n    this.props.update('attributes/foodPresets', temp_foodPresets);\n  }\n\n  addPreset(){\n    var temp_foodPresets = this.props.attributes.foodPresets\n    temp_foodPresets.push({\n      \"food_preset_name\": \"\",\n      \"supported_units\": [\"\"],\n      \"food_synonyms\": [{\n        \"synonym\": [\"\"],\n        \"language\": \"en\"\n      }]\n    });\n    this.props.update('attributes/foodPresets', temp_foodPresets);\n  }\n\n  render() {\n\n    const names_box = {\n      width: '150px'\n    }\n\n    const modes = this.props.attributes.supportedCookingModes.map((mode, i) => {\n\n      return (\n              <div key={i}>\n                <div className=\"table_row\">\n                  <div className=\"table_cel\">\n                  </div>\n                  <div className=\"table_cel\">\n                    <label>\n                      <span>Mode: </span>\n                      <select name=\"type\" id={\"mode_\" + i} value={mode} onChange={this.updateMode}>\n                        <option value=\"select\">Select a mode</option>\n                        <option value=\"delete\">Delete this mode</option>\n                        <option value=\"UNKNOWN_COOKING_MODE\">UNKNOWN_COOKING_MODE</option>\n                        <option value=\"BAKE\">BAKE</option>\n                        <option value=\"BEAT\">BEAT</option>\n                        <option value=\"BLEND\">BLEND</option>\n                        <option value=\"BOIL\">BOIL</option>\n                        <option value=\"BREW\">BREW</option>\n                        <option value=\"BROIL\">BROIL</option>\n                        <option value=\"CONVECTION_BAKE\">CONVECTION_BAKE</option>\n                        <option value=\"COOK\">COOK</option>\n                        <option value=\"DEFROST\">DEFROST</option>\n                        <option value=\"DEHYDRATE\">DEHYDRATE</option>\n                        <option value=\"FERMENT\">FERMENT</option>\n                        <option value=\"FRY\">FRY</option>\n                        <option value=\"KNEAD\">KNEAD</option>\n                        <option value=\"MICROWAVE\">MICROWAVE</option>\n                        <option value=\"PRESSURE_COOK\">PRESSURE_COOK</option>\n                        <option value=\"PUREE\">PUREE</option>\n                        <option value=\"ROAST\">ROAST</option>\n                        <option value=\"SAUTE\">SAUTE</option>\n                        <option value=\"SLOW_COOK\">SLOW_COOK</option>\n                        <option value=\"SOUS_VIDE\">SOUS_VIDE</option>\n                        <option value=\"STEAM\">STEAM</option>\n                        <option value=\"STEW\">STEW</option>\n                        <option value=\"WARM\">WARM</option>\n                        <option value=\"WHIP\">WHIP</option>\n                      </select>\n                    </label>\n                  </div>\n                </div>\n              </div>\n\n              )\n    });\n\n    const presets = this.props.attributes.foodPresets.map((preset, i) => {\n\n      return (\n              <div key={i}>\n                <div className=\"table_row\">\n                  <div className=\"table_cel\">\n                  </div>\n                  <div className=\"table_cel\">\n                    <label>\n                      <span>Language: </span>\n                      <select name=\"type\" id={\"lang_\" + i} value={preset.food_synonyms[0].lang} onChange={this.updatePreset}>\n                        <option value=\"es\">es</option>\n                        <option value=\"en\">en</option>\n                      </select>\n                    </label>\n                    <label style={names_box}>\n                      <span>Preset name: </span>\n                      <input type=\"text\" id={\"names_\" + i} defaultValue={preset.food_synonyms[0].synonym} placeholder=\"Preset name\" onChange={this.updatePreset}/>\n                    </label>\n                    <label>\n                      <span>Units: </span>\n                      <select name=\"type\" id={\"units_\" + i} value={preset.supported_units[0]} onChange={this.updatePreset}>\n                        <option value=\"NO_UNITS\">No units</option>\n                        <option value=\"UNKNOWN_UNITS\">Unkown</option>\n                        <option value=\"CENTIMETERS\">Centimeters</option>\n                        <option value=\"CUPS\">Cups</option>\n                        <option value=\"DECILITERS\">Deciliters</option>\n                        <option value=\"FEET\">Feet</option>\n                        <option value=\"FLUID_OUNCES\">Fluid ounces</option>\n                        <option value=\"GALLONS\">Gallons</option>\n                        <option value=\"GRAMS\">Grams</option>\n                        <option value=\"INCHES\">Inches</option>\n                        <option value=\"KILOGRAMS\">Kilograms</option>\n                        <option value=\"LITERS\">Liters</option>\n                        <option value=\"METERS\">Meters</option>\n                        <option value=\"MILLIGRAMS\">Miligrams</option>\n                        <option value=\"MILLILITERS\">Mililiters</option>\n                        <option value=\"MILLIMETERS\">Milimeters</option>\n                        <option value=\"OUNCES\">Ounces</option>\n                        <option value=\"PINCH\">Pinch</option>\n                        <option value=\"PINTS\">Pints</option>\n                        <option value=\"PORTION\">Portion</option>\n                        <option value=\"POUNDS\">Pounds</option>\n                        <option value=\"QUARTS\">Quarts</option>\n                        <option value=\"TABLESPOONS\">Tablespoons</option>\n                        <option value=\"TEASPOONS\">Teaspoons</option>\n                      </select>\n                    </label>\n                  </div>\n                </div>\n              </div>\n              )\n    });\n\n    return (\n      <div>\n\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n          </div>\n          <div className=\"attribute_table_cel\">\n            Add a cooking mode <button type=\"button\" className=\"add_attribute_button\" onClick={ this.addMode }>Add</button>\n          </div>\n        </div>\n\n        {modes}\n\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n          </div>\n          <div className=\"attribute_table_cel\">\n            Add a preset <button type=\"button\" className=\"add_attribute_button\" onClick={ this.addPreset }>Add</button>\n          </div>\n        </div>\n\n        {presets}\n\n      </div>\n    );\n  }\n}\n\nexport default Cook\n","import React from 'react';\nimport Text from '../editor/Text'\nimport Scene from '../editor/traits/Scene'\nimport OnOff from '../editor/traits/OnOff'\nimport Brightness from '../editor/traits/Brightness'\nimport FanSpeed from '../editor/traits/FanSpeed'\nimport ColorSetting from '../editor/traits/ColorSetting'\nimport TemperatureSetting from '../editor/traits/TemperatureSetting'\nimport Toggles from '../editor/traits/Toggles'\nimport Modes from '../editor/traits/Modes'\nimport HumiditySetting from '../editor/traits/HumiditySetting'\nimport OpenClose from '../editor/traits/OpenClose'\nimport Rotation from '../editor/traits/Rotation'\nimport Fill from '../editor/traits/Fill'\nimport ArmDisarm from '../editor/traits/ArmDisarm'\nimport StartStop from '../editor/traits/StartStop'\nimport Timer from '../editor/traits/Timer'\nimport TemperatureControl from '../editor/traits/TemperatureControl'\nimport Cook from '../editor/traits/Cook'\nimport getCookieValue from '../../functions'\nimport { root, deviceReference } from '../../constants'\n\nimport './Editor.css';\n\nclass Editor extends React.Component {\n  constructor(props) {\n    super(props);\n    const id = window.location.pathname.split('/')[3];\n    var create = false;\n    if (id === \"\") create = true;\n    this.state = {\n      id: id,\n      create: create,\n      device: {\n        attributes: {},\n        deviceInfo: {},\n        id: \"\",\n        name: {\n          defaultnames: [],\n          nicknames: [],\n          name: \"\"\n        },\n        traits: [],\n        type: \"\"\n      },\n      status: {\n        online: true\n      },\n      posible_traits: [],\n      save_status: \"\"\n    }\n    this.updateNames = this.updateNames.bind(this);\n    this.update = this.update.bind(this);\n    this.updateId = this.updateId.bind(this);\n    this.updateType = this.updateType.bind(this);\n    this.updateTraits = this.updateTraits.bind(this);\n    this.save = this.save.bind(this);\n    this.delete = this.delete.bind(this);\n    this.renderAttrinutes = this.renderAttrinutes.bind(this);\n  }\n\n  componentDidMount() {\n    if (!this.state.create){\n      var http = new XMLHttpRequest();\n      http.onload = function (e) {\n        if (http.readyState === 4) {\n          if (http.status === 200) {\n            var data = JSON.parse(http.responseText);\n            this.setState({\n               device: data,\n               posible_traits: deviceReference.devices[data.type]\n             });\n          } else {\n            console.error(http.statusText);\n          }\n        }\n      }.bind(this);\n      http.open(\"GET\", root + \"api/devices/get/\" + this.state.id + \"/\");\n      http.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n      http.send();\n    }\n  }\n\n  updateNames(dumy_key, value){\n    var names = value.split(',');\n    var temp_device = this.state.device\n    temp_device.name = {\n      defaultnames: names,\n      nicknames: names,\n      name: names[0]\n    }\n    this.setState({\n      device: temp_device\n    })\n  }\n\n  update(key, value){\n    var temp_device = this.state.device\n    var keys = key.split('/');\n    if (keys.length === 1)\n      temp_device[key] = value\n    else if (keys.length === 2)\n      temp_device[keys[0]][keys[1]] = value\n    else if (keys.length === 3)\n      temp_device[keys[0]][keys[1]][keys[2]] = value\n    this.setState({\n      device: temp_device\n    })\n  }\n\n  updateId(event){\n    this.update('id',event.target.value)\n  }\n\n  updateType(event){\n    this.update('type',event.target.value)\n    this.setState({\n       posible_traits: deviceReference.devices[event.target.value]\n     });\n  }\n\n  updateTraits(event){\n    var temp_device = this.state.device\n    var temp_status = this.state.status\n    if (event.target.checked) {\n      if (this.state.device.traits.includes(event.target.id) === false){\n        //Push the trait to the device\n        temp_device.traits.push(event.target.id)\n        //Set the default values\n        var attributes = deviceReference.traits[event.target.id].attributes;\n        Object.keys(attributes).forEach((attribute, i) => {\n          temp_device.attributes[attribute] = attributes[attribute].default\n        });\n        //Set the default status params\n        var params = deviceReference.traits[event.target.id].param;\n        Object.keys(params).forEach((param, i) => {\n          temp_status[param] = params[param].default\n        });\n      }\n    } else {\n      if (this.state.device.traits.includes(event.target.id) === true){\n        temp_device.traits = temp_device.traits.filter(function(value, index, arr){ return value !== event.target.id;});\n      }\n    }\n    this.setState({\n      device: temp_device\n    })\n  }\n\n  save(){\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      if (http.readyState === 4) {\n        if (http.status === 200) {\n          JSON.parse(http.responseText);\n          this.setState({\n             save_status: \"Saved correctly.\"\n           });\n        } else {\n          console.error(http.statusText);\n          this.setState({\n             save_status: \"Error, the changes haven't been saved.\"\n           });\n        }\n        setTimeout(function(){\n          this.setState({\n             save_status: \"\"\n           });\n        }.bind(this), 5000)\n      }\n    }.bind(this);\n    var payload = {\n      \"device\": this.state.device\n    }\n    if (this.state.create){\n      http.open(\"POST\", root + \"api/devices/create/\");\n      payload.status = this.state.status\n    } else {\n      http.open(\"POST\", root + \"api/devices/update/\");\n    }\n    http.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\n    http.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    http.send(JSON.stringify(payload));\n  }\n\n  delete(){\n    if(window.confirm('Do you want to delete the device?')){\n      var http = new XMLHttpRequest();\n      http.onload = function (e) {\n        if (http.readyState === 4) {\n          if (http.status === 200) {\n            window.location.href = \"/devices/\"\n          } else {\n            console.error(http.statusText);\n            this.setState({\n               save_status: \"Error, the device hasn't been deleted.\"\n             });\n          }\n          setTimeout(function(){\n            this.setState({\n               save_status: \"\"\n             });\n          }.bind(this), 5000)\n        }\n      }.bind(this);\n      http.open(\"GET\", root + \"api/devices/delete/\" + this.state.device.id + \"/\");\n      http.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n      http.send();\n    } else {\n      this.setState({\n         save_status: \"Ok. The device is save.\"\n       });\n    }\n  }\n\n  renderAttrinutes(trait){\n    if (this.state.device.traits.includes(trait)){\n      if (trait === 'action.devices.traits.Scene')\n        return <Scene sceneReversible={this.state.device.attributes.sceneReversible} update={this.update}/>\n      else if (trait === 'action.devices.traits.OnOff')\n        return <OnOff attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.Brightness')\n        return <Brightness commandOnlyBrightness={this.state.device.attributes.commandOnlyBrightness} update={this.update}/>\n      else if (trait === 'action.devices.traits.ColorSetting')\n        return <ColorSetting attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.FanSpeed')\n        return <FanSpeed attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.TemperatureSetting')\n        return <TemperatureSetting attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.Toggles')\n        return <Toggles attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.Modes')\n        return <Modes attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.HumiditySetting')\n        return <HumiditySetting attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.OpenClose')\n        return <OpenClose attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.Rotation')\n        return <Rotation attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.Fill')\n        return <Fill attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.ArmDisarm')\n        return <ArmDisarm attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.StartStop')\n        return <StartStop attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.Timer')\n        return <Timer attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.TemperatureControl')\n        return <TemperatureControl attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.Cook')\n        return <Cook attributes={this.state.device.attributes} update={this.update}/>\n    }\n  }\n\n  render() {\n\n    const container = {\n      width: '80%',\n      marginLeft: '8%',\n      marginTop: '20px',\n      backgroundColor: 'white',\n      paddingTop: '10px',\n      paddingLeft: '20px',\n      paddingBottom: '20px',\n      paddingRight: '20px',\n      borderRadius: '20px'\n    }\n\n    const button = {\n      width: '200px'\n    }\n\n    const deleteButton = {\n      backgroundColor: 'red'\n    }\n\n    const deleteButtonDisabled = {\n      backgroundColor: 'red',\n      opacity: '0.2'\n    }\n\n    const separator = {\n      width: '70%'\n    }\n\n    const types = Object.keys(deviceReference.devicesCoolNames).map((type) => {\n      return <option key={type} value={type}>{deviceReference.devicesCoolNames[type]}</option>\n    })\n\n    const nicknames = this.state.device.name.nicknames.map((name) => {\n      return name\n    });\n\n    const traits = this.state.posible_traits.map((trait) =>\n      <div key={trait}>\n        <hr style={separator}/>\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n            {deviceReference.traitsCoolNames[trait]}\n          </div>\n          <div className=\"attribute_table_cel\">\n            <label>\n              <input type=\"checkbox\" id={trait} defaultChecked={this.state.device.traits.includes(trait)} onChange={this.updateTraits}/>\n\n            </label>\n          </div>\n          <div className=\"attribute_table_cel\">\n            Read Google's <a href={\"https://developers.google.com/assistant/smarthome/traits/\" + trait.split('.')[3].toLowerCase()} target=\"blanck\">documentation</a>\n          </div>\n        </div>\n        {this.renderAttrinutes(trait)}\n      </div>\n    );\n\n    return (\n      <div>\n\n        <div style={ container }>\n          <h2>Global settings</h2>\n          <div className=\"advise\">\n            <span>General settings of the device.</span>\n            <hr/>\n          </div>\n          <div className=\"table_row\">\n            <div className=\"table_cel\">\n              Device ID*\n            </div>\n            <div className=\"table_cel\">\n              <input type=\"text\" id=\"id\" className=\"table_input\" defaultValue={this.state.device.id} onChange={this.updateId} disabled={ this.state.create ? false : true }/>\n            </div>\n          </div>\n          <div className=\"table_row\">\n            <div className=\"table_cel\">\n              Device Type*\n            </div>\n            <div className=\"table_cel\">\n              <select name=\"type\" id=\"type\" className=\"table_input\" value={this.state.device.type} onChange={this.updateType} disabled={ this.state.create ? false : true }>\n                <option value=\"default\">Select a device</option>\n                {types}\n              </select>\n            </div>\n          </div>\n          <Text name=\"Hardware version\" data=\"deviceInfo/hwVersion\" value={this.state.device.deviceInfo.hwVersion} update={this.update}/>\n          <Text name=\"Software version\" data=\"deviceInfo/swVersion\" value={this.state.device.deviceInfo.swVersion} update={this.update}/>\n          <Text name=\"Manufacturer\" data=\"deviceInfo/manufacturer\" value={this.state.device.deviceInfo.manufacturer} update={this.update}/>\n          <Text name=\"Model\" data=\"deviceInfo/model\" value={this.state.device.deviceInfo.model} update={this.update}/>\n          <Text name=\"Nick names*\" data=\"nicknames\" value={nicknames} update={this.updateNames}/>\n          <div className=\"advise\">\n            <span>Nick names must be separeted by <i>,</i> commas.</span><br/>\n            <span>* data is required.</span>\n          </div>\n          <hr/>\n          <h2>Traits</h2>\n          <div className=\"advise\">\n            <span>The traits define what the device can do.</span>\n          </div>\n          {traits}\n          <hr/>\n          <div className=\"table_cel\">\n            <button type=\"button\" style={ this.state.create ? deleteButtonDisabled : deleteButton } onClick={ this.delete } disabled={ this.state.create ? true : false}>Delete</button>\n            <button type=\"button\" onClick={ this.save }>Save</button>\n            <span>{this.state.save_status}</span>\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default Editor\n","import React from 'react';\nimport getCookieValue from '../../functions'\nimport { root } from '../../constants'\n\nimport './Settings.css';\n\nclass Settings extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      settings: {\n        google: {},\n        ddns: {},\n        mqtt: {},\n        apikey: \"\"\n      },\n      save_status: \"\",\n      url: {\n        auth: \"\",\n        token: \"\",\n        fulfillment: \"\"\n      }\n    }\n    this.update = this.update.bind(this);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n    this.save = this.save.bind(this);\n  }\n\n  componentDidMount() {\n    if (!this.state.create){\n      var http = new XMLHttpRequest();\n      http.onload = function (e) {\n        if (http.readyState === 4) {\n          if (http.status === 200) {\n            var data = JSON.parse(http.responseText);\n            console.log(data)\n            this.setState({\n               settings: data,\n               url: {\n                 auth: \"https://\" + data.ddns.hostname + \"/auth/\",\n                 token: \"https://\" + data.ddns.hostname + \"/token/\",\n                 fulfillment: \"https://\" + data.ddns.hostname + \"/smarthome/\"\n               }\n             });\n          } else {\n            console.error(http.statusText);\n          }\n        }\n      }.bind(this);\n      http.open(\"GET\", root + \"api/settings/get/\");\n      http.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n      http.send();\n    }\n  }\n\n  update(event){\n    // this.props.update('attributes/' + event.target.id,event.target.value);\n    const id = event.target.id.split(\"/\");\n    var settings = this.state.settings;\n    if (id.length === 1){\n      settings[id[0]] = event.target.value;\n    } else if (id.length === 2){\n      settings[id[0]][id[1]] = event.target.value;\n    }\n    this.setState({\n       settings: settings\n     });\n     console.log(this.state.settings)\n  }\n\n  updateCheckbox(event){\n    // this.props.update('attributes/' + event.target.id,event.target.value);\n    const id = event.target.id.split(\"/\");\n    var settings = this.state.settings;\n    if (id.length === 1){\n      settings[id[0]] = event.target.checked;\n    } else if (id.length === 2){\n      settings[id[0]][id[1]] = event.target.checked;\n    }\n    this.setState({\n       settings: settings\n     });\n     console.log(this.state.settings)\n  }\n\n  save(){\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      if (http.readyState === 4) {\n        if (http.status === 200) {\n          JSON.parse(http.responseText);\n          this.setState({\n             save_status: \"Saved correctly.\"\n           });\n        } else {\n          console.error(http.statusText);\n          this.setState({\n             save_status: \"Error, the changes haven't been saved.\"\n           });\n        }\n        setTimeout(function(){\n          this.setState({\n             save_status: \"\"\n           });\n        }.bind(this), 5000)\n      }\n    }.bind(this);\n    http.open(\"POST\", root + \"api/settings/update/\");\n    http.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\n    http.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    http.send(JSON.stringify(this.state.settings));\n  }\n\n  render() {\n\n    const container = {\n      width: '80%',\n      marginLeft: '8%',\n      marginTop: '20px',\n      backgroundColor: 'white',\n      paddingTop: '10px',\n      paddingLeft: '20px',\n      paddingBottom: '20px',\n      paddingRight: '20px',\n      borderRadius: '20px'\n    }\n\n    const sub_container = {\n      width: '80%',\n      marginTop: '10px',\n      marginLeft: '10%',\n      fontSize: '18px',\n      textAlign: 'left'\n    }\n\n    const button = {\n      width: '200px'\n    }\n\n    return (\n      <div>\n\n\n        <div style={ container }>\n          <h2>Actions on Google</h2>\n          <hr/>\n          <div style={sub_container}>\n            <div className=\"table_row\">\n              <div className=\"table_cel\">\n                Client ID\n              </div>\n              <div className=\"table_cel\">\n                <input type=\"text\" id=\"google/client_id\" defaultValue={this.state.settings.google.client_id} onChange={this.update}/>\n              </div>\n              <div className=\"table_cel\">\n                <span className=\"advise\"></span>\n              </div>\n            </div>\n            <div className=\"table_row\">\n              <div className=\"table_cel\">\n                Client Secret\n              </div>\n              <div className=\"table_cel\">\n                <input type=\"text\" id=\"google/client_secret\" defaultValue={this.state.settings.google.client_secret} onChange={this.update}/>\n              </div>\n              <div className=\"table_cel\">\n                <span className=\"advise\"></span>\n              </div>\n            </div>\n            <div className=\"table_row\">\n              <div className=\"table_cel\">\n                Authorization URL\n              </div>\n              <div className=\"table_cel\">\n                <input type=\"text\" defaultValue={this.state.url.auth} disabled/>\n              </div>\n              <div className=\"table_cel\">\n                <span className=\"advise\"></span>\n              </div>\n            </div>\n            <div className=\"table_row\">\n              <div className=\"table_cel\">\n                Token URL\n              </div>\n              <div className=\"table_cel\">\n                <input type=\"text\" defaultValue={this.state.url.token} disabled/>\n              </div>\n              <div className=\"table_cel\">\n                <span className=\"advise\"></span>\n              </div>\n            </div>\n            <div className=\"table_row\">\n              <div className=\"table_cel\">\n                Fulfillment URL\n              </div>\n              <div className=\"table_cel\">\n                <input type=\"text\" defaultValue={this.state.url.fulfillment} disabled/>\n              </div>\n              <div className=\"table_cel\">\n                <span className=\"advise\"></span>\n              </div>\n            </div>\n          </div>\n          <div className=\"save_container\">\n            <button type=\"button\" style={ button } onClick={ this.save }>Save</button>\n            <span>{this.state.save_status}</span>\n          </div>\n          <div className=\"advise\">\n            <span>Actions on Google settings. It is used to authenticate with Google. If you change it here, you must change it on the Actions Console &#62; Develop &#62; Account Linking.</span>\n          </div>\n        </div>\n\n\n        <div style={ container }>\n          <h2>MQTT</h2>\n          <hr/>\n          <div style={sub_container}>\n              <div className=\"table_row\">\n                <div className=\"table_cel\">\n                  User\n                </div>\n                <div className=\"table_cel\">\n                  <input type=\"text\" id=\"mqtt/user\" defaultValue={this.state.settings.mqtt.user} onChange={this.update}/>\n                </div>\n                <div className=\"table_cel\">\n                  <span className=\"advise\"></span>\n                </div>\n              </div>\n              <div className=\"table_row\">\n                <div className=\"table_cel\">\n                  Password\n                </div>\n                <div className=\"table_cel\">\n                  <input type=\"text\" id=\"mqtt/password\" defaultValue={this.state.settings.mqtt.password} onChange={this.update}/>\n                </div>\n                <div className=\"table_cel\">\n                  <span className=\"advise\"></span>\n                </div>\n              </div>\n          </div>\n          <div className=\"save_container\">\n            <button type=\"button\" style={ button } onClick={ this.save }>Save</button>\n            <span>{this.state.save_status}</span>\n          </div>\n          <div className=\"advise\">\n            <span>Important. You must configure the username and password into Mosquitto manually from a terminal. This is only for telling Homeware its credentials. Clear both if you don't use credentials.</span>\n          </div>\n        </div>\n\n        <div style={ container }>\n          <h2>DDNS provider</h2>\n          <hr/>\n          <div style={sub_container}>\n              <div className=\"table_row\">\n                <div className=\"table_cel\">\n                  Enable\n                </div>\n                <div className=\"table_cel\">\n                  <input type=\"checkbox\" id=\"ddns/enabled\" defaultChecked={this.state.settings.ddns.enabled} onChange={this.updateCheckbox}/>\n                </div>\n                <div className=\"table_cel\">\n                  <span className=\"advise\"></span>\n                </div>\n              </div>\n              <div className=\"table_row\">\n                <div className=\"table_cel\">\n                  Provider\n                </div>\n                <div className=\"table_cel\">\n                  <select name=\"type\" id=\"ddns/provider\" className=\"table_input\" value={this.state.settings.ddns.provider} onChange={this.update}>\n                    <option value=\"noip\">Noip</option>\n                  </select>\n                </div>\n                <div className=\"table_cel\">\n                  <span className=\"advise\"></span>\n                </div>\n              </div>\n              <div className=\"table_row\">\n                <div className=\"table_cel\">\n                  Username\n                </div>\n                <div className=\"table_cel\">\n                  <input type=\"text\" id=\"ddns/username\" defaultValue={this.state.settings.ddns.username} onChange={this.update}/>\n                </div>\n                <div className=\"table_cel\">\n                  <span className=\"advise\"></span>\n                </div>\n              </div>\n              <div className=\"table_row\">\n                <div className=\"table_cel\">\n                  Password\n                </div>\n                <div className=\"table_cel\">\n                  <input type=\"text\" id=\"ddns/password\" defaultValue={this.state.settings.ddns.password} onChange={this.update}/>\n                </div>\n                <div className=\"table_cel\">\n                  <span className=\"advise\"></span>\n                </div>\n              </div>\n              <div className=\"table_row\">\n                <div className=\"table_cel\">\n                  Hostname\n                </div>\n                <div className=\"table_cel\">\n                  <input type=\"text\" id=\"ddns/hostname\" defaultValue={this.state.settings.ddns.hostname} onChange={this.update}/>\n                </div>\n                <div className=\"table_cel\">\n                  <span className=\"advise\"></span>\n                </div>\n              </div>\n          </div>\n          <div className=\"save_container\">\n            <button type=\"button\" style={ button } onClick={ this.save }>Save</button>\n            <span>{this.state.save_status}</span>\n          </div>\n          <div className=\"advise\">\n            <span>Set up the access data to the DDNS provider account. Open an issue on Github if you want a DDNS provider that is not listed.</span>\n          </div>\n        </div>\n\n\n      </div>\n    );\n  }\n}\n\nexport default Settings\n","import React from 'react';\n\nfunction Component(props) {\n\n  const component = {\n    marginTop: '5px',\n    width: '100%',\n    display: 'grid',\n    gridTemplateColumns: '60% 20% 20%'\n  }\n\n  const textContainer = {\n    textAlign: 'left',\n    paddingTop: '4px'\n  }\n\n  const text = {\n    fontSize: '18px'\n  }\n\n  const running = {\n    fontSize: '12px',\n    fontWeight: 'bold',\n    color: 'white',\n    backgroundColor: 'green',\n    padding: '5px',\n    paddingLeft: '10px',\n    paddingRight: '10px',\n    borderRadius: '5px'\n  }\n\n  const stopped = {\n    fontSize: '12px',\n    fontWeight: 'bold',\n    color: 'white',\n    backgroundColor: 'red',\n    padding: '5px',\n    paddingLeft: '10px',\n    paddingRight: '10px',\n    borderRadius: '5px'\n  }\n\n  const power = {\n    fontSize: '18px',\n    cursor: 'pointer'\n  }\n\n  function go (){\n    window.location.href = props.href;\n  }\n\n  return (\n    <div style={ component }>\n      <div style={ textContainer }>\n        <span style={ text }>{ props.title }</span>\n      </div>\n      <div style={ textContainer }>\n        <span style={ props.status === 'Running' ? running : stopped }>{ props.status }</span>\n      </div>\n      <div style={ textContainer }>\n        <span style={ power } onClick={go}>{ props.enable ? 'Enabled' : 'Disabled' }</span>\n      </div>\n    </div>\n  );\n}\n\nexport default Component\n","import React from 'react';\nimport getCookieValue from '../../functions'\nimport { root } from '../../constants'\nimport Component from '../system/Component.js'\nconst ReactMarkdown = require('react-markdown')\n\n\nclass System extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      components: [],\n      git: {\n        version: '',\n        description: '',\n        code: 0\n      },\n      version: ''\n    }\n  }\n\n  componentDidMount() {\n    var comp = new XMLHttpRequest();\n    comp.onload = function (e) {\n      if (comp.readyState === 4) {\n        if (comp.status === 200) {\n          var response = JSON.parse(comp.responseText);\n          var components = []\n          var keys = Object.keys(response);\n          for (var i = 0; i < keys.length; i++) {\n            components.push(response[keys[i]])\n          }\n\n          this.setState({ components: components });\n        } else {\n          console.error(comp.statusText);\n        }\n      }\n    }.bind(this);\n    comp.open(\"GET\", root + \"api/system/status/\");\n    comp.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    comp.send();\n\n    var vers = new XMLHttpRequest();\n    vers.onload = function (e) {\n      if (vers.readyState === 4) {\n        if (vers.status === 200) {\n          var version = JSON.parse(vers.responseText);\n          this.setState({ version: version.version });\n        } else {\n          console.error(vers.statusText);\n        }\n      }\n    }.bind(this);\n    vers.open(\"GET\", root + \"api/global/version/\");\n    vers.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    vers.send();\n\n    var git = new XMLHttpRequest();\n    git.onload = function (e) {\n      if (git.readyState === 4) {\n        if (git.status === 200) {\n          const latestRelease = JSON.parse(git.responseText);\n          const description = latestRelease.body\n          this.setState({ git: {\n            version: latestRelease.tag_name,\n            description: description,\n            code: 200\n            }\n          });\n        } else if (git.status === 403) {\n          this.setState({ git: {\n            version: 'GitHub rate limit exceeded. You have reloaded so many times. It will reset after some time.',\n            code: 403\n            }\n          });\n        } else {\n          console.error(git.statusText);\n        }\n      }\n    }.bind(this);\n    git.open(\"GET\", 'https://api.github.com/repos/kikeelectronico/Homeware-LAN/releases/latest');\n    git.send();\n  }\n\n  upgrade(){\n    if(window.confirm('Are you sure?')){\n      window.location = root + \"files/buckup/homeware/\" + getCookieValue('token')\n      //\n      // var conn = new XMLHttpRequest();\n      // conn.onload = function (e) {\n      //   if (conn.readyState === 4) {\n      //     if (conn.status === 200) {\n      //       window.location.href = \"/upgrading\"\n      //     } else {\n      //       console.error(conn.statusText);\n      //     }\n      //   }\n      // }\n      // conn.open(\"GET\", root + \"api/system/upgrade/\");\n      // conn.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n      // conn.send();\n    }\n  }\n\n  restart(){\n    alert('WIP');\n  }\n\n  reboot(){\n    alert('WIP');\n  }\n\n  shutdown(){\n    alert('WIP');\n  }\n\n  render() {\n\n    const container = {\n      width: '80%',\n      marginLeft: '8%',\n      marginTop: '20px',\n      backgroundColor: 'white',\n      paddingTop: '10px',\n      paddingLeft: '20px',\n      paddingBottom: '20px',\n      paddingRight: '20px',\n      borderRadius: '20px'\n    }\n\n    const data_container = {\n      width: '80%',\n      marginLeft: '10%',\n      marginTop: '20px',\n      fontSize: '18px',\n      textAlign: 'left'\n    }\n\n    const version_container = {\n      width: '80%',\n      marginTop: '10px',\n      marginLeft: '10%',\n      fontSize: '18px',\n      textAlign: 'left'\n    }\n\n    const upgrade_button = {\n      width: '200px'\n    }\n\n    const git_description = {\n      marginTop: '20px',\n      marginLeft: '10%',\n      width: '80%',\n      paddingLeft: '20px',\n      paddingRight: '20px',\n      paddingBottom: '20px',\n      borderRadius: '20px',\n      border: '1px solid #aaa'\n    }\n\n    const power_button_container = {\n      width: '80%',\n      marginTop: '10px',\n      marginLeft: '10%',\n      display: 'grid',\n      gridTemplateColumns: 'repeat(auto-fill, 200px)',\n      gridGap: '20px'\n    }\n\n    const components = this.state.components.map((component) =>\n      <Component title={ component.title } status={ component.status } enable={ component.enable } key={ component.title }/>\n    );\n\n    var upgrader = ''\n    if(this.state.version !== this.state.git.version && this.state.git.code === 200){\n      upgrader = <div><b>New version:</b> { this.state.git.version} <div style={ git_description }> <ReactMarkdown source={this.state.git.description} /> <button type=\"button\" style={ upgrade_button } onClick={ this.upgrade }>Upgrade</button></div> </div>\n    } else if(this.state.git.code === 403){\n      upgrader = <div><b>New version:</b> { this.state.git.version}</div>\n    }\n\n\n    return (\n      <div>\n        <div style={ container }>\n          <h2>System status</h2>\n          <hr/>\n          <div style={data_container}>\n            { components }\n          </div>\n          <div className=\"advise\">\n            <span>These are the core elements of Homeware-LAN. All must be running.</span>\n          </div>\n        </div>\n\n        <div style={ container }>\n          <h2>Plugins</h2>\n          <hr/>\n          <div style={data_container}>\n            WIP\n          </div>\n          <div className=\"advise\">\n            <span></span>\n          </div>\n        </div>\n\n        <div style={ container }>\n          <h2>Version</h2>\n          <hr/>\n          <div style={version_container}>\n            <b>System version:</b> { this.state.version }\n            { upgrader }\n          </div>\n          <div className=\"advise\">\n            <span>Verify if there is any code update and upgrade the software if an update is available.</span>\n          </div>\n        </div>\n\n        <div style={ container }>\n          <h2>Power</h2>\n          <hr/>\n          <div style={ power_button_container }>\n            <button type=\"button\" onClick={ this.restart }>Restart Homeware-LAN</button>\n            <button type=\"button\" onClick={ this.reboot }>Reboot System</button>\n            <button type=\"button\" onClick={ this.shutdown }>Shutdown System</button>\n          </div>\n          <div className=\"advise\">\n            <span>Control the device and restart the Homeware-LAN installation.</span>\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default System\n","import React from 'react';\nimport getCookieValue from '../../functions'\nimport { root } from '../../constants'\n\nclass Backup extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    }\n  }\n\n  backup(){\n    window.location = root + \"files/buckup/homeware/\" + getCookieValue('token')\n  }\n\n  render() {\n\n    const container = {\n      width: '80%',\n      marginLeft: '8%',\n      marginTop: '20px',\n      backgroundColor: 'white',\n      paddingTop: '10px',\n      paddingLeft: '20px',\n      paddingBottom: '20px',\n      paddingRight: '20px',\n      borderRadius: '20px'\n    }\n\n    const sub_container = {\n      width: '80%',\n      marginTop: '10px',\n      marginLeft: '10%',\n      fontSize: '18px',\n      textAlign: 'left'\n    }\n\n    const form = {\n    }\n\n    const button = {\n      width: '200px'\n    }\n\n    const restore_url = root + \"files/restore/file/\" + getCookieValue('token') + \"/\";\n\n    return (\n      <div>\n\n\n        <div style={ container }>\n          <h2>Backup</h2>\n          <hr/>\n          <div style={sub_container}>\n              <button type=\"button\" style={ button } onClick={ this.backup }>Backup</button>\n          </div>\n          <div className=\"advise\">\n            <span>Download a backup file.</span>\n          </div>\n        </div>\n\n        <div style={ container }>\n          <h2>Restore</h2>\n          <hr/>\n          <div style={sub_container}>\n            <form style={ form } method=\"post\" encType=\"multipart/form-data\" action={ restore_url }>\n              <input type=\"file\" name=\"file\"/>\n              <button type=\"submit\" style={ button } onClick={ this.restart }>Restore</button>\n              </form>\n          </div>\n          <div className=\"advise\">\n            <span>Restore a backup file.</span>\n          </div>\n        </div>\n\n\n      </div>\n    );\n  }\n}\n\nexport default Backup\n","import React from 'react';\nimport getCookieValue from '../../functions'\nimport { root } from '../../constants'\n\nclass Access extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {\n        apikey: ''\n      }\n    }\n  }\n\n  componentDidMount() {\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      if (http.readyState === 4) {\n        if (http.status === 200) {\n          var data = JSON.parse(http.responseText);\n          this.setState({ data: data });\n        } else {\n          console.error(http.statusText);\n        }\n      }\n    }.bind(this);\n    http.open(\"GET\", root + \"api/access/get/\");\n    http.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    http.send();\n  }\n\n  generateAPIKey(){\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      if (http.readyState === 4) {\n        if (http.status === 200) {\n          // var data = JSON.parse(http.responseText);\n          window.location.href = \"/access\"\n        } else {\n          console.error(http.statusText);\n        }\n      }\n    };\n    http.open(\"GET\", root + \"api/settings/apikey/\");\n    http.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    http.send();\n  }\n\n  render() {\n\n    const container = {\n      width: '80%',\n      marginLeft: '8%',\n      backgroundColor: 'white',\n      paddingTop: '10px',\n      paddingLeft: '20px',\n      paddingBottom: '20px',\n      paddingRight: '20px',\n      borderRadius: '20px'\n    }\n\n    const form_container = {\n      width: '80%',\n      marginLeft: '10%',\n      marginTop: '20px',\n    }\n\n    const form_colum = {\n      width: '80%',\n      marginLeft: '10%',\n      marginTop: '20px'\n    }\n\n    const input = {\n      width: '100%'\n    }\n\n    return (\n      <div>\n        <div style={ container }>\n          <h2>API key</h2>\n          <hr/>\n          <div style={form_container}>\n            <div style={form_colum}>\n              <input type=\"text\" id=\"apikey\" style={input} value={ this.state.data.apikey } disabled/>\n            </div>\n            <div style={form_colum}>\n              <button type=\"button\" onClick={ this.generateAPIKey }>Generate</button>\n            </div>\n          </div>\n          <div className=\"advise\">\n            <span>The API Key gives you access to the Homeware's API. Please do not generate an API Key if you are not sure of what you are doing.</span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Access\n","import React from 'react';\nimport getCookieValue from '../../functions'\nimport { root } from '../../constants'\n\nclass Logs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      page: 0\n    }\n\n    this.previousPage = this.previousPage.bind(this);\n    this.nextPage = this.nextPage.bind(this);\n    this.downloadLog = this.downloadLog.bind(this);\n  }\n\n  componentDidMount() {\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      if (http.readyState === 4) {\n        if (http.status === 200) {\n          var data = JSON.parse(http.responseText);\n          this.setState({ data: data });\n        } else {\n          console.error(http.statusText);\n        }\n      }\n    }.bind(this);\n    http.open(\"GET\", root + \"api/log/get/\");\n    http.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    http.send();\n  }\n\n  previousPage() {\n    if (this.state.page > 0)\n      this.setState({ page: this.state.page - 1 });\n  }\n\n  nextPage() {\n    if (this.state.page < this.state.data.length/10-1)\n      this.setState({ page: this.state.page + 1 });\n  }\n\n  downloadLog() {\n    window.location = root + \"files/log/homeware/\" + getCookieValue('token')\n  }\n\n  render() {\n\n    const container = {\n      width: '80%',\n      marginLeft: '8%',\n      backgroundColor: 'white',\n      paddingTop: '10px',\n      paddingLeft: '20px',\n      paddingBottom: '20px',\n      paddingRight: '20px',\n      borderRadius: '20px'\n    }\n\n    const line = {\n      width: '80%',\n      marginLeft: '8%',\n      marginTop: '10px',\n      borderBottom: '1px solid #eee',\n      paddingLeft: '20px',\n      paddingBottom: '10px',\n      paddingRight: '20px',\n      textAlign: 'left'\n    }\n\n    const yellow = {\n      color: 'orange'\n    }\n\n    const red = {\n      color: 'red'\n    }\n\n    const button_container = {\n      width: '100%',\n      marginTop: '10px',\n      display: 'grid',\n      gridTemplateColumns: 'repeat(auto-fill, 200px)',\n      gridGap: '20px'\n    }\n\n    const sus = this.state.page === 0 ? 0 : 1\n    const homeware_lan_log_data = this.state.data.reverse().slice(this.state.page * 10, this.state.page * 10 + 10 - sus);\n    const homeware_lan_log = homeware_lan_log_data.map((register) =>\n      <div style={ line } key={ register.time }>\n        { register.severity === 'Log' ? <b>{ register.severity }</b> : '' }\n        { register.severity === 'Warning' ? <b style={ yellow }>{ register.severity }</b> : '' }\n        { register.severity === 'Alert' ? <b style={ red }>{ register.severity }</b> : '' }\n         - { register.time }<br/>\n        { register.message }\n      </div>\n    );\n\n    return (\n      <div>\n        <div style={ container }>\n          <h2>Homeware-LAN log</h2>\n          <hr/>\n          <div>\n            { homeware_lan_log }\n          </div>\n          <div style={ button_container }>\n            <button type=\"button\" onClick={ this.previousPage }>Previous page</button>\n            <button type=\"button\" onClick={ this.nextPage }>Next page</button>\n            <button type=\"button\" onClick={ this.downloadLog }>Download</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Logs\n","import React from 'react';\nimport { root } from '../../constants'\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      enable_message: false,\n      message: ''\n    }\n    this.login = this.login.bind(this);\n    this.grantAccess = this.grantAccess.bind(this);\n  }\n\n  login() {\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      var response = JSON.parse(http.responseText);\n      console.log(response)\n      if(response['status'] === 'in'){\n        document.cookie = \"user=\" + response['user'] + \"; path=/\";\n        document.cookie = \"token=\" + response['token'] + \"; path=/\";\n        window.location = '/';\n      } else if (response['status'] === 'fail'){\n        this.setState({\n          enable_message: true,\n          message: 'Incorrect User or Password'\n        })\n        setTimeout(function(){\n          this.setState({\n             enable_message: false\n           });\n        }.bind(this), 5000)\n      }\n    }.bind(this);\n    http.open(\"GET\", root + \"api/user/login/\");\n    http.setRequestHeader('user', document.getElementById('user').value)\n    http.setRequestHeader('pass', document.getElementById('password').value)\n    http.send();\n  }\n\n  grantAccess() {\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      if (http.responseText !== 'fail')\n        window.location = http.responseText;\n      else {\n        this.setState({\n          enable_message: true,\n          message: 'Incorrect User or Password'\n        })\n        setTimeout(function(){\n          this.setState({\n             enable_message: false\n           });\n        }.bind(this), 5000)\n      }\n    }.bind(this);\n    http.open(\"GET\", root + \"api/user/googleSync/\");\n    http.setRequestHeader('user', document.getElementById('user').value)\n    http.setRequestHeader('pass', document.getElementById('password').value)\n    http.send();\n  }\n\n  render() {\n\n    const form_container = {\n      margin: '20%',\n    }\n\n    const element = {\n      margin: '10px'\n    }\n\n    var message = '';\n    if (this.state.enable_message){\n      message = <div className=\"alert_message\"> { this.state.message } </div>\n    }\n\n    return (\n      <div style={ form_container }>\n        { window.location.href.includes('google') ? <p>Google request access to Homeware-Lan</p> : '' }\n        <br/>\n        <span style={ element }>Username</span>\n        <input type=\"text\" name=\"user\" id=\"user\"/>\n        <span style={ element }>Password</span>\n        <input type=\"password\" name=\"password\" id=\"password\"/>\n        <button type=\"button\" style={ element } onClick={ !window.location.href.includes('google') ? this.login : this.grantAccess }>{ !window.location.href.includes('google') ? <span>Login</span> : <span>Grant access</span> }</button>\n        <br/>\n        { message }\n      </div>\n    );\n  }\n}\n\nexport default Login\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport getCookieValue from './functions'\nimport { root } from './constants'\n\nimport Welcome from './components/assistant/Welcome'\nimport User from './components/assistant/User'\nimport Domain from './components/assistant/Domain'\nimport Confignginx from './components/assistant/Confignginx'\nimport Change2domain from './components/assistant/Change2domain'\nimport Changed2domain from './components/assistant/Changed2domain'\nimport Ssl from './components/assistant/Ssl'\nimport Google from './components/assistant/Google'\nimport Initialize from './components/assistant/Initialize'\n\nimport Menu from './components/web/Menu'\nimport Devices from './components/pages/Devices'\nimport Editor from './components/pages/Editor'\nimport Settings from './components/pages/Settings'\nimport System from './components/pages/System'\nimport Backup from './components/pages/Backup'\nimport Access from './components/pages/Access'\nimport Logs from './components/pages/Logs'\nimport Login from './components/pages/Login'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      session: false,\n      version: ''\n    }\n    this.logout = this.logout.bind(this);\n  }\n\n  componentDidMount() {\n    if (!window.location.href.includes('assistant')) {\n      var http = new XMLHttpRequest();\n      http.onload = function (e) {\n        if (http.readyState === 4) {\n          if (http.status === 200) {\n            var data = JSON.parse(http.responseText);\n            if (data.status !== 'in' && !window.location.href.includes('login'))\n              window.location.href = '/login/'\n            else if (data.status === 'in')\n              this.setState({\n                session: true\n              });\n          } else {\n            console.error(http.statusText);\n          }\n        }\n      }.bind(this);\n      http.open(\"GET\", root + \"api/user/validateToken/\");\n      http.setRequestHeader('token', getCookieValue('token'))\n      http.setRequestHeader('user', getCookieValue('user'))\n      http.send();\n\n      var vers = new XMLHttpRequest();\n      vers.onload = function (e) {\n        if (vers.readyState === 4) {\n          if (vers.status === 200) {\n            var version = JSON.parse(vers.responseText);\n            this.setState({ version: version.version });\n          } else {\n            console.error(vers.statusText);\n          }\n        }\n      }.bind(this);\n      vers.open(\"GET\", root + \"api/global/version/\");\n      vers.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n      vers.send();\n    }\n  }\n\n  logout() {\n    document.cookie = \"user=; path=/\";\n    document.cookie = \"token=; path=/\";\n    this.setState({\n      session: false\n    });\n    window.location.href = '/'\n  }\n\n  render() {\n\n    if (!this.state.session && !window.location.href.includes('assistant') && !window.location.href.includes('login'))\n      return ''\n    else if (window.location.href.includes('login'))\n      return (\n        <div className=\"Clear_app\">\n          <Login/>\n        </div>\n      );\n    else if (window.location.href.includes('assistant'))\n      return (\n        <Router>\n          <div className=\"Clear_app\">\n            <Route exact={ true } path=\"/assistant/\" component={ Welcome }/>\n            <Route exact={ true } path=\"/assistant/welcome/\" component={ Welcome }/>\n            <Route exact={ true } path=\"/assistant/user\" component={ User }/>\n            <Route exact={ true } path=\"/assistant/domain\" component={ Domain }/>\n            <Route exact={ true } path=\"/assistant/confignginx\" component={ Confignginx }/>\n            <Route exact={ true } path=\"/assistant/change2domain\" component={ Change2domain }/>\n            <Route exact={ true } path=\"/assistant/changed2domain\" component={ Changed2domain }/>\n            <Route exact={ true } path=\"/assistant/ssl\" component={ Ssl }/>\n            <Route exact={ true } path=\"/assistant/google\" component={ Google }/>\n            <Route exact={ true } path=\"/assistant/initialize\" component={ Initialize }/>\n          </div>\n        </Router>\n      );\n    else\n      return (\n        <Router>\n          <div className=\"App\">\n            <div className=\"upper-menu\">\n              Homeware-LAN\n            </div>\n            <div className=\"main-app\">\n              <div className=\"menu\">\n                <div>\n                  <Menu image=\"/devices_icon.png\" title=\"Devices\" href=\"/devices\"/>\n                  <Menu image=\"/tasks_icon.png\" title=\"Tasks\" href=\"/tasks\"/>\n                  <Menu image=\"/settings_icon.png\" title=\"Settings\" href=\"/settings\"/>\n                  <Menu image=\"/status_icon.png\" title=\"System\" href=\"/system\"/>\n                  <Menu image=\"/backup_icon.png\" title=\"Backup\" href=\"/backup\"/>\n                  <Menu image=\"/access_icon.png\" title=\"Access\" href=\"/access\"/>\n                  <Menu image=\"/logs_icon.png\" title=\"Logs\" href=\"/logs\"/>\n                  <hr/>\n                  <Menu image=\"/repo_icon.png\" title=\"Repo\" href=\"/\"/>\n                  <Menu image=\"/help_icon.png\" title=\"How to\" href=\"/\"/>\n                  <hr/>\n                  <Menu image=\"/logout_icon.png\" title=\"Logout\" exec={ this.logout }/>\n                </div>\n                <div className=\"menu-data\">\n                  <p>Version: { this.state.version }</p>\n                </div>\n              </div>\n              <div className=\"page\">\n                <Route exact={ true } path=\"/\" component={ Devices }/>\n                <Route path=\"/devices/editor\" component={ Editor }/>\n                <Route exact={ true } path=\"/devices\" component={ Devices }/>\n                <Route path=\"/settings\" component={ Settings }/>\n                <Route path=\"/system\" component={ System }/>\n                <Route path=\"/backup\" component={ Backup }/>\n                <Route path=\"/access\" component={ Access }/>\n                <Route path=\"/logs\" component={ Logs }/>\n              </div>\n            </div>\n          </div>\n        </Router>\n      );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}