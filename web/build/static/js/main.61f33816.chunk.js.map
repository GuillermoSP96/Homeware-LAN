{"version":3,"sources":["functions.js","constants.js","components/assistant/Welcome.js","components/assistant/User.js","components/assistant/Domain.js","components/assistant/Confignginx.js","components/assistant/Change2domain.js","components/assistant/Changed2domain.js","components/assistant/Ssl.js","components/assistant/Google.js","components/assistant/Initialize.js","components/web/Menu.js","components/devices/traits/OnOff.js","components/devices/aux/Information.js","components/devices/aux/Connecting.js","components/devices/aux/Edit.js","components/devices/Light.js","components/devices/Outlet.js","components/devices/traits/TemperatureSetting.js","components/devices/AcUnit.js","components/devices/AirFreshener.js","components/devices/AirPurifier.js","components/devices/Bed.js","components/devices/Fan.js","components/devices/Fireplace.js","components/devices/Radiator.js","components/devices/Switch.js","components/devices/Thermostat.js","components/devices/AirCooler.js","components/devices/Bathtub.js","components/devices/Awing.js","components/devices/Blinds.js","components/devices/Closet.js","components/devices/Curtain.js","components/devices/Door.js","components/devices/Drawer.js","components/devices/Garage.js","components/devices/Pergola.js","components/devices/Shutter.js","components/devices/Valve.js","components/devices/Window.js","components/devices/Lock.js","components/devices/Gate.js","components/devices/Heater.js","components/devices/Hood.js","components/devices/SecuritySystem.js","components/devices/Blender.js","components/devices/Global.js","components/devices/Scene.js","components/pages/Devices.js","components/editor/Text.js","components/editor/traits/Scene.js","components/editor/traits/OnOff.js","components/editor/traits/Brightness.js","components/editor/traits/FanSpeed.js","components/editor/traits/ColorSetting.js","components/editor/traits/TemperatureSetting.js","components/editor/traits/Toggles.js","components/editor/traits/Modes.js","components/editor/traits/HumiditySetting.js","components/editor/traits/OpenClose.js","components/editor/traits/Rotation.js","components/editor/traits/Fill.js","components/editor/traits/ArmDisarm.js","components/editor/traits/StartStop.js","components/editor/traits/Timer.js","components/editor/traits/TemperatureControl.js","components/editor/traits/Cook.js","components/editor/traits/SensorState.js","components/pages/Editor.js","components/pages/Info.js","components/pages/Connecting.js","components/pages/Tasks.js","components/manager/Logic.js","components/manager/Trigger.js","components/manager/Triggers.js","components/manager/Time.js","components/manager/Device.js","components/manager/DeviceToDevice.js","components/manager/Assistant.js","components/manager/Target.js","components/manager/DeviceTarget.js","components/pages/Manager.js","components/pages/Settings.js","components/system/Component.js","components/pages/System.js","components/pages/Backup.js","components/pages/Access.js","components/pages/Logs.js","components/pages/Login.js","App.js","serviceWorker.js","index.js"],"names":["getCookieValue","cname","name","ca","decodeURIComponent","document","cookie","split","i","length","c","charAt","substring","indexOf","root","window","location","href","includes","deviceReference","devices","traits","attributes","commandOnlyOnOff","type","default","queryOnlyOnOff","params","commands","commandOnlyBrightness","colorModel","commandOnlyColorSetting","colorTemperatureRange","temperatureMinK","temperatureMaxK","content","availableThermostatModes","thermostatTemperatureRange","minThresholdCelsius","maxThresholdCelsius","thermostatTemperatureUnit","bufferRangeCelsius","commandOnlyTemperatureSetting","queryOnlyTemperatureSetting","discreteOnlyOpenClose","openDirection","commandOnlyOpenClose","queryOnlyOpenClose","commandOnlyRotation","supportsContinuousRotation","supportsDegrees","supportsPercent","rotationDegreesRange","rotationDegreesMin","rotationDegreesMax","command","description","sceneReversible","availableToggles","commandOnlyToggles","availableZones","pausable","maxTimerLimitSec","commandOnlyTimer","temperatureStepCelsius","temperatureUnitForUX","queryOnlyTemperatureControl","commandOnlyTemperatureControl","temperatureRange","availableFanSpeeds","speeds","ordered","reversible","commandOnlyFanSpeed","availableArmLevels","levels","availableFillLevels","humiditySetpointRange","minPercent","maxPercent","commandOnlyHumiditySetting","queryOnlyHumiditySetting","foodPresets","supportedCookingModes","availableModes","commandOnlyModes","sensorStatesSupported","thermostatTemperatureAmbient","commanded","thermostatTemperatureSetpoint","thermostatHumidityAmbient","thermostatMode","select","on","deactivate","brightness","online","color","spectrumRgb","thermostatTemperatureSetpointHigh","thermostatTemperatureSetpointLow","openPercent","rotationPercent","rotationDegrees","isLocked","isJammed","isDocked","isRunning","isPaused","activeZones","timerRemainingSec","timerPaused","temperatureSetpointCelsius","temperatureAmbientCelsius","currentFanSpeedSetting","isArmed","exitAllowance","isFilled","humiditySetpointPercent","humidityAmbientPercent","currentArmLevel","currentFillLevel","currentCookingMode","currentFoodPreset","currentFoodQuantity","currentFoodUnit","currentToggleSettings","currentModeSettings","Welcome","props","next","bind","className","onClick","this","React","Component","User","state","enable_next","enable_message","message","set","http","XMLHttpRequest","onload","e","readyState","status","setState","responseText","console","error","statusText","setTimeout","url","hostname","open","setRequestHeader","send","JSON","stringify","getElementById","value","alert","element","margin","style","id","Domain","target","Confignginx","Change2domain","onreadystatechange","log","data","parse","code","placeholder","Changed2domain","Ssl","Google","Initialize","xmlHttp","Menu","marginTop","display","gridTemplateColumns","src","image","alt","width","paddingTop","fontSize","cursor","exec","title","OnOff","toggle","reload","float","marginLeft","Information","go","Connecting","Edit","Light","device","Object","keys","toString","spectrumRGB","color_strip","height","borderRadius","backgroundColor","opacity","paddingLeft","Outlet","TemperatureSetting","up","down","update","temperature","marginRight","AcUnit","AirFreshener","AirPurifier","Bed","Fan","Fireplace","Radiator","Switch","Thermostat","AirCooler","Bathtub","Awing","Blinds","Closet","Curtain","Door","Drawer","Garage","Pergola","Shutter","Valve","Window","Lock","Gate","Heater","Hood","SecuritySystem","Blender","Global","Scene","Devices","loadData","newDevice","setInterval","map","key","Text","event","defaultValue","onChange","updateCheckbox","checked","defaultChecked","Brightness","FanSpeed","updateFanSpeeds","addFanSpeed","speed_id","speed_attribute","temp_availableFanSpeeds","speed_values","speed_name","push","names_box","speed","lang","speed_synonym","supportsFanSpeedPercent","ColorSetting","min","max","updateMode","addMode","mode_id","temp_availableThermostatModes","splice","join","modes","mode","Toggles","updatetoggle","addToggle","toggle_id","toggle_attribute","temp_availableToggles","name_values","toggles","name_synonym","Modes","temp_availableModes","values","settings","setting_name","setting_values","setting_synonym","settings_box","setting","HumiditySetting","OpenClose","Rotation","Fill","updateLevels","addLevel","level_id","level_attribute","temp_availableFillLevels","level_values","level_name","level","level_synonym","ArmDisarm","updateSecurityLevel","addSecurityLevel","temp_availableArmLevels","StartStop","updateArray","Timer","TemperatureControl","Cook","updatePreset","addPreset","temp_supportedCookingModes","preset_id","temp_foodPresets","food_synonyms","synonym","food_preset_name","supported_units","presets","preset","SensorState","sensor","availableStates","rawValueUnit","numericCapabilities","Editor","pathname","create","deviceInfo","defaultNames","nicknames","posible_traits","save_status","updateNames","updateId","updateType","updateTraits","save","delete","renderAttrinutes","dumy_key","names","temp_device","temp_status","forEach","attribute","param","filter","index","arr","payload","confirm","trait","types","toLowerCase","disabled","hwVersion","swVersion","manufacturer","model","defaultnames","dev","sta","json_viewer","textAlign","concat","topic","Tasks","tasks","openManager","newTask","task","Logic","addOr","addAnd","openTriggerAssistant","addTriggerLogic","num_operations","triggers","operation","operations","op","Trigger","renderTriggerText","week","days","Triggers","trigger","Assistant","addTriggerOperation","hour","minute","closeTriggerAssistant","Device","updateDevice","updateParam","typeConversion","origen","int","list","bool","string","options","option","DeviceToDevice","device_a","device_b","updateDependencies","params_a","params_b","timeTigger","deiceTrigger","deviceToDeviceTrigger","Time","Target","marginBottom","addTarget","Manager","trigger_assistant_parent","deleteTrigger","devices_names","tas","parent","ts","Date","now","targets","DeviceTarget","Settings","google","ddns","mqtt","apikey","auth","token","fulfillment","client_id","client_secret","user","password","ip","last","enabled","provider","username","fontWeight","padding","paddingRight","ReactMarkdown","require","System","components","git","version","upgrading","loadComponents","upgrade","areYouAwake","vers","latestRelease","body","tag_name","comp","response","conn","git_description","paddingBottom","border","component","enable","source","restart","reboot","shutdown","Backup","button","restore_url","backup","method","encType","action","Access","generateAPIKey","Logs","page","previousPage","nextPage","downloadLog","line","borderBottom","yellow","red","homeware_lan_log","reverse","slice","register","severity","time","Login","login","grantAccess","App","session","logout","exact","path","Info","Boolean","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.61f33816.chunk.js","sourcesContent":["function getCookieValue(cname) {\n  var name = cname + \"=\";\n  var decodedCookie = decodeURIComponent(document.cookie);\n  var ca = decodedCookie.split(';');\n  for(var i = 0; i <ca.length; i++) {\n    var c = ca[i];\n    while (c.charAt(0) === ' ') {\n      c = c.substring(1);\n    }\n    if (c.indexOf(name) === 0) {\n      return c.substring(name.length, c.length);\n    }\n  }\n  return \"\";\n}\n\nexport default getCookieValue;\n","var root = window.location.href.includes('localhost') ? \"http://homeware.local/\" : \"/\"\n\nconst deviceReference = {\n  devices: {\n    \"action.devices.types.AC_UNIT\": {\n      name: \"AC unit\",\n      traits: [\n        \"action.devices.traits.FanSpeed\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.TemperatureSetting\"\n      ]\n    },\n    \"action.devices.types.AIRCOOLER\": {\n      name: \"Air cooler\",\n      traits: [\n        \"action.devices.traits.FanSpeed\",\n        \"action.devices.traits.HumiditySetting\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.TemperatureSetting\"\n      ]\n    },\n    \"action.devices.types.AIRFRESHENER\": {\n      name: \"Air freshener\",\n      traits: [\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.AIRPURIFIER\": {\n      name: \"Air purifier\",\n      traits: [\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.FanSpeed\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.Toggles\",\n        \"action.devices.traits.SensorState\"\n      ]\n    },\n    \"action.devices.types.AWNING\": {\n      name: \"Awing\",\n      traits: [\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OpenClose\"\n      ]\n    },\n    \"action.devices.types.BATHTUB\": {\n      name: \"Bathtub\",\n      traits: [\n        \"action.devices.traits.Fill\",\n        \"action.devices.traits.OnOff\"\n      ]\n    },\n    \"action.devices.types.BED\": {\n      name: \"Bed\",\n      traits: [\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.BLINDS\": {\n      name: \"Blinds\",\n      traits: [\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OpenClose\"\n      ]\n    },\n    \"action.devices.types.BLENDER\": {\n      name: \"Blender\",\n      traits: [\n        \"action.devices.traits.Cook\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Timer\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.BOILER\": {\n      name: \"Boiler\",\n      traits: [\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.TemperatureControl\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.CARBON_MONOXIDE_DETECTOR\": {\n      name: \"Carbon monoxide detector\",\n      traits: [\n        \"action.devices.traits.SensorState\"\n      ]\n    },\n    \"action.devices.types.CLOSET\": {\n      name: \"Closet\",\n      traits: [\n        \"action.devices.traits.OpenClose\"\n      ]\n    },\n    \"action.devices.types.COFFE_MAKER\": {\n      name: \"Coffe maker\",\n      traits: [\n        \"action.devices.traits.Cook\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.TemperatureControl\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.COOKTOP\": {\n      name: \"Cooktop\",\n      traits: [\n        \"action.devices.traits.Cook\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Timer\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.CURTAIN\": {\n      name: \"Curtain\",\n      traits: [\n        \"action.devices.traits.OpenClose\"\n      ]\n    },\n    \"action.devices.types.DEHUMIDIFIER\": {\n      name: \"Dehumidifier\",\n      traits: [\n        \"action.devices.traits.FanSpeed\",\n        \"action.devices.traits.HumiditySetting\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.RunCycle\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.DEHYDRATOR\": {\n      name: \"Dehydrator\",\n      traits: [\n        \"action.devices.traits.Cook\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Timer\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.DISHWASHER\": {\n      name: \"Dishwasher\",\n      traits: [\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.Toggles\",\n        \"action.devices.traits.RunCycle\"\n      ]\n    },\n    \"action.devices.types.DOOR\": {\n      name: \"Door\",\n      traits: [\n        \"action.devices.traits.OpenClose\"\n      ]\n    },\n    \"action.devices.types.DRAWER\": {\n      name: \"Drawer\",\n      traits: [\n        \"action.devices.traits.OpenClose\"\n      ]\n    },\n    \"action.devices.types.DRYER\": {\n      name: \"Dryer\",\n      traits: [\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.Toggles\",\n        \"action.devices.traits.RunCycle\"\n      ]\n    },\n    \"action.devices.types.FAN\": {\n      name: \"Fan\",\n      traits: [\n        \"action.devices.traits.FanSpeed\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.FIREPLACE\": {\n      name: \"Fireplace\",\n      traits: [\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.FREEZER\": {\n      name: \"Fireplace\",\n      traits: [\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.TemperatureControl\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.FRYER\": {\n      name: \"Fryer\",\n      traits: [\n        \"action.devices.traits.Cook\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Timer\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.GARAGE\": {\n      name: \"Garage\",\n      traits: [\n        \"action.devices.traits.OpenClose\"\n      ]\n    },\n    \"action.devices.types.GATE\": {\n      name: \"Gate\",\n      traits: [\n        \"action.devices.traits.OpenClose\"\n      ]\n    },\n    \"action.devices.types.GRILL\": {\n      name: \"Grill\",\n      traits: [\n        \"action.devices.traits.Cook\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Timer\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.HEATER\": {\n      name: \"Heater\",\n      traits: [\n        \"action.devices.traits.FanSpeed\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.TemperatureSetting\",\n      ]\n    },\n    \"action.devices.types.HOOD\": {\n      name: \"Hood\",\n      traits: [\n        \"action.devices.traits.FanSpeed\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.HUMIDIFIER\": {\n      name: \"Humidifier\",\n      traits: [\n        \"action.devices.traits.FanSpeed\",\n        \"action.devices.traits.HumiditySetting\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.KETTLE\": {\n      name: \"Kettle\",\n      traits: [\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.TemperatureControl\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.LIGHT\": {\n      name: \"Light\",\n      traits: [\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.Brightness\",\n        \"action.devices.traits.ColorSetting\"\n      ]\n    },\n    \"action.devices.types.LOCK\": {\n      name: \"Lock\",\n      traits: [\n        \"action.devices.traits.LockUnlock\"\n      ]\n    },\n    \"action.devices.types.MICROWAVE\": {\n      name: \"Microwave\",\n      traits: [\n        \"action.devices.traits.Cook\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Timer\",\n        \"action.devices.traits.Toggles\"\n      ],\n    },\n    \"action.devices.types.MOP\": {\n      name: \"Mop\",\n      traits: [\n        \"action.devices.traits.Dock\",\n        \"action.devices.traits.Locator\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.RunCycle\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.MOWER\": {\n      name: \"Mower\",\n      traits: [\n        \"action.devices.traits.Dock\",\n        \"action.devices.traits.Locator\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.RunCycle\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.MULTICOOKER\": {\n      name: \"Multicooker\",\n      traits: [\n        \"action.devices.traits.Cook\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Timer\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.OUTLET\": {\n      name: \"Outlet\",\n      traits: [\n        \"action.devices.traits.OnOff\"\n      ]\n    },\n    \"action.devices.types.OVEN\": {\n      name: \"Oven\",\n      traits: [\n        \"action.devices.traits.Cook\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.TemperatureControl\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.PERGOLA\": {\n      name: \"Pergola\",\n      traits: [\n        \"action.devices.traits.OpenClose\",\n        \"action.devices.traits.Rotation\"\n      ]\n    },\n    \"action.devices.types.PRESSURECOOKER\": {\n      name: \"Pressure cooker\",\n      traits: [\n        \"action.devices.traits.Cook\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Timer\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.RADIATOR\": {\n      name: \"Radiator\",\n      traits: [\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.REFRIGERATOR\": {\n      name: \"Refrigerator\",\n      traits: [\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.TemperatureControl\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.SENSOR\": {\n      name: \"Sensor\",\n      traits: [\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.SensorState\"\n      ]\n    },\n    \"action.devices.types.SECURITYSYSTEM\": {\n      name: \"Security system\",\n      traits: [\n        \"action.devices.traits.ArmDisarm\",\n        \"action.devices.traits.StatusReport\"\n      ]\n    },\n    \"action.devices.types.SHOWER\": {\n      name: \"Shower\",\n      traits: [\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.TemperatureControl\"\n      ]\n    },\n    \"action.devices.types.SHUTTER\": {\n      name: \"Shutter\",\n      traits: [\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OpenClose\",\n        \"action.devices.traits.Rotation\"\n      ]\n    },\n    \"action.devices.types.SMOKE_DETECTOR\": {\n      name: \"Smoke detector\",\n      traits: [\n        \"action.devices.traits.SensorState\"\n      ]\n    },\n    \"action.devices.types.SOUSVIDE\": {\n      name: \"Sous vide\",\n      traits: [\n        \"action.devices.traits.Cook\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Timer\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.SPRINKLER\": {\n      name: \"Sprinkler\",\n      traits: [\n        \"action.devices.traits.StartStop\"\n      ]\n    },\n    \"action.devices.types.STANDMIXER\": {\n      name: \"Stand mixer\",\n      traits: [\n        \"action.devices.traits.Cook\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.SWITCH\": {\n      name: \"Switch\",\n      traits: [\n        \"action.devices.traits.OnOff\"\n      ]\n    },\n    \"action.devices.types.THERMOSTAT\": {\n      name: \"Thermostat\",\n      traits: [\n        \"action.devices.traits.TemperatureSetting\"\n      ]\n    },\n    \"action.devices.types.VACUUM\": {\n      name: \"Vacum\",\n      traits: [\n        \"action.devices.traits.Dock\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.VALVE\": {\n      name: \"Valve\",\n      traits: [\n        \"action.devices.traits.OpenClose\"\n      ]\n    },\n    \"action.devices.types.WASHER\": {\n      name: \"Washer\",\n      traits: [\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.RunCycle\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.WATERHEATER\": {\n      name: \"Water heater\",\n      traits: [\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.TemperatureControl\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.WATERPURIFIER\": {\n      name: \"Water purifier\",\n      traits: [\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.SensorState\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.WATERSOFTENER\": {\n      name: \"Water softener\",\n      traits: [\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.SensorState\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.WINDOW\": {\n      name: \"Window\",\n      traits: [\n        \"action.devices.traits.LockUnlock\",\n        \"action.devices.traits.OpenClose\"\n      ]\n    },\n    \"action.devices.types.SCENE\": {\n      name: \"Scene\",\n      traits: [\n        \"action.devices.traits.Scene\"\n      ]\n    },\n    \"action.devices.types.YOGURTMAKER\": {\n      name: \"Yogurt maker\",\n      traits: [\n        \"action.devices.traits.Cook\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Timer\",\n        \"action.devices.traits.Toggles\"\n      ]\n    }\n  },\n  traits: {\n    \"action.devices.traits.OnOff\": {\n      name: 'Power control',\n      attributes: {\n        commandOnlyOnOff: {\n          type: \"bool\",\n          default: false\n        },\n        queryOnlyOnOff: {\n          type: \"bool\",\n          default: false\n        }\n      },\n      params: ['on'],\n      commands: []\n    },\n    \"action.devices.traits.Brightness\": {\n      name: 'Brightness',\n      attributes: {\n        commandOnlyBrightness: {\n          type: \"bool\",\n          default: false\n        }\n      },\n      params: ['brightness'],\n      commands: []\n    },\n    \"action.devices.traits.ColorSetting\": {\n      name: 'Color setting',\n      attributes: {\n        colorModel: {\n          type: \"string\",\n          default: \"rgb\"\n        },\n        commandOnlyColorSetting: {\n            type: \"bool\",\n            default: false\n        },\n        colorTemperatureRange: {\n          type: \"object\",\n          default: {\n            temperatureMinK: 4000,\n            temperatureMaxK: 4200\n          },\n          content: {\n            temperatureMinK: {\n              type: \"int\",\n              default: 4000\n            },\n            temperatureMaxK: {\n              type: \"int\",\n              default: 4200\n            }\n          }\n        }\n      },\n      params: ['color'],\n      commands: []\n    },\n    \"action.devices.traits.TemperatureSetting\": {\n      name: 'Temperature Settings',\n      attributes: {\n        availableThermostatModes: {\n          type: \"select\",\n          default: \"off,heat,cool\"\n        },\n        thermostatTemperatureRange: {\n          type: \"object\",\n          default: {\n            minThresholdCelsius: 18,\n            maxThresholdCelsius: 34\n          }\n        },\n        thermostatTemperatureUnit: {\n          type: \"string\",\n          default: \"C\"\n        },\n        bufferRangeCelsius: {\n          type: \"int\",\n          default: 2\n        },\n        commandOnlyTemperatureSetting: {\n          type: \"bool\",\n          default: false\n        },\n        queryOnlyTemperatureSetting: {\n          type: \"bool\",\n          default: false\n        }\n      },\n      params: [\n        'thermostatMode',\n        'thermostatTemperatureSetpoint',\n        'thermostatTemperatureAmbient',\n        'thermostatTemperatureSetpointHigh',\n        'thermostatTemperatureSetpointLow',\n        'thermostatHumidityAmbient'\n      ],\n      commands: []\n    },\n    \"action.devices.traits.OpenClose\": {\n      name: 'Open or close',\n      attributes: {\n        discreteOnlyOpenClose: {\n          type: \"bool\",\n          default: false\n        },\n        openDirection: {\n          type: \"array\",\n          default: [\"UP\",\"DOWN\",\"LEFT\",\"RIGHT\",\"IN\",\"OUT\"]\n        },\n        commandOnlyOpenClose: {\n          type: \"bool\",\n          default: false\n        },\n        queryOnlyOpenClose: {\n          type: \"bool\",\n          default: false\n        }\n      },\n      params: ['openPercent'],\n      commands: []\n    },\n    \"action.devices.traits.Rotation\": {\n      name: 'Rotation',\n      attributes: {\n        commandOnlyRotation: {\n          type: \"bool\",\n          default: false\n        },\n        supportsContinuousRotation: {\n          type: \"bool\",\n          default: false\n        },\n        supportsDegrees: {\n          type: \"bool\",\n          default: false\n        },\n        supportsPercent: {\n          type: \"bool\",\n          default: false\n        },\n        rotationDegreesRange: {\n          type: \"object\",\n          default: {\n            rotationDegreesMin: 0,\n            rotationDegreesMax: 0\n          },\n          content: {\n            rotationDegreesMin: {\n              type: \"int\"\n            },\n            rotationDegreesMax: {\n              type: \"int\"\n            }\n          }\n        }\n      },\n      params: ['rotationPercent','rotationDegrees'],\n      commands: []\n    },\n    \"action.devices.traits.LockUnlock\": {\n      name: 'Lock or unlock',\n      attributes: {},\n      params: ['isLocked','isJammed'],\n      commands: [\n        {\n          command: 'lock',\n          description: 'Lock'\n        },\n        {\n          command: 'unlock',\n          description: 'Unlock'\n        }\n      ]\n    },\n    \"action.devices.traits.Scene\": {\n      name: 'Scene',\n      attributes: {\n        sceneReversible: {\n          type: \"bool\",\n          default: true\n        }\n      },\n      params: ['deactivate'],\n      commands: []\n    },\n    \"action.devices.traits.Dock\": {\n      name: 'Dock',\n      attributes: {},\n      params: ['isDocked'],\n      commands: []\n    },\n    \"action.devices.traits.Toggles\": {\n      name: 'Toogles',\n      attributes: {\n        availableToggles: {\n          type: \"strigifyedObject\",\n          default: []\n        },\n        commandOnlyToggles: {\n          type: \"bool\",\n          default: false\n        }\n      },\n      params: ['currentToggleSettings'],\n      commands: []\n    },\n    \"action.devices.traits.StartStop\": {\n      name: 'Start and stop',\n      attributes: {\n        availableZones: {\n          type: \"array\",\n          default: []\n        },\n        pausable: {\n          type: \"bool\",\n          default: false\n        }\n      },\n      params: ['isRunning','isPaused','activeZones'],\n      commands: [\n        {\n          command: 'start',\n          description: 'Start the process'\n        },\n        {\n          command: 'stop',\n          description: 'Stop the process'\n        },\n        {\n          command: 'pause',\n          description: 'Pause cooking'\n        },\n        {\n          command: 'unpause',\n          description: 'Unpause cooking'\n        }\n      ]\n    },\n    \"action.devices.traits.Timer\": {\n      name: 'Timer',\n      attributes: {\n        maxTimerLimitSec: {\n          type: \"int\",\n          default: 1000\n        },\n        commandOnlyTimer: {\n          type: \"bool\",\n          default: false\n        }\n      },\n      params: ['timerRemainingSec', 'timerPaused'],\n      commands: []\n    },\n    \"action.devices.traits.TemperatureControl\": {\n      name: 'Temperature control',\n      attributes: {\n        temperatureStepCelsius: {\n          type: \"int\",\n          default: 5\n        },\n        temperatureUnitForUX: {\n          type: \"string\",\n          default: \"C\"\n        },\n        queryOnlyTemperatureControl: {\n          type: \"bool\",\n          default: false\n        },\n        commandOnlyTemperatureControl: {\n          type: \"bool\",\n          default: false\n        },\n        temperatureRange: {\n          type: \"object\",\n          default: {\n            minThresholdCelsius: 0,\n            maxThresholdCelsius: 150\n          },\n          content: {\n            minThresholdCelsius: {\n              type: \"int\"\n            },\n            maxThresholdCelsius: {\n              type: \"int\"\n            }\n          }\n        }\n      },\n      params: ['temperatureSetpointCelsius','temperatureAmbientCelsius'],\n      commands: []\n    },\n    \"action.devices.traits.FanSpeed\": {\n      name: 'Fan Speed',\n      attributes: {\n        availableFanSpeeds: {\n          type: \"strigifyedObject\",\n          default: {\n            speeds: [],\n            ordered: true\n          }\n        },\n        reversible: {\n          type: \"bool\",\n          default: true\n        },\n        commandOnlyFanSpeed: {\n          type: \"bool\",\n          default: true\n        }\n      },\n      params: ['currentFanSpeedSetting'],\n      commands: []\n    },\n    \"action.devices.traits.ArmDisarm\": {\n      name: 'Arm or disarm',\n      attributes: {\n        availableArmLevels: {\n          type: \"strigifyedObject\",\n          default: {\n            levels: [],\n            ordered: true\n          }\n        }\n      },\n      params: ['isArmed', 'currentArmLevel','exitAllowance'],\n      commands: [\n        {\n          command: 'cancel',\n          description: 'The arm process must be canceled'\n        },\n        {\n          command: 'arm',\n          description: 'Arm the system'\n        },\n        {\n          command: 'disarm',\n          description: 'Disarm the system'\n        }\n      ]\n    },\n    \"action.devices.traits.Fill\": {\n      name: 'Fill',\n      attributes: {\n        availableFillLevels: {\n          type: \"strigifyedObject\",\n          default: {\n            levels: [],\n            ordered: true\n          }\n        }\n      },\n      params: ['isFilled','currentFillLevel'],\n      commands: [\n        {\n          command: 'fill',\n          description: 'Fill'\n        },\n        {\n          command: 'drain',\n          description: 'Drain'\n        }\n      ]\n    },\n    \"action.devices.traits.RunCycle\": {\n      name: 'RunCycle',\n      attributes: {},\n      params: [],\n      commands: []\n    },\n    \"action.devices.traits.StatusReport\": {\n      name: 'Status report',\n      attributes: {},\n      params: ['currentStatusReport'],\n      commands: []\n    },\n    \"action.devices.traits.HumiditySetting\": {\n      name: 'Humidity setting',\n      attributes: {\n        humiditySetpointRange: {\n          type: \"object\",\n          default: {\n            minPercent: 0,\n            maxPercent: 100\n          },\n          content: {\n            minPercent: {\n              type: \"int\"\n            },\n            maxPercent: {\n              type: \"int\"\n            }\n          }\n        },\n        commandOnlyHumiditySetting: {\n          type: \"bool\",\n          default: false\n        },\n        queryOnlyHumiditySetting: {\n          type: \"bool\",\n          default: false\n        }\n      },\n      params: ['humiditySetpointPercent','humidityAmbientPercent'],\n      commands: []\n    },\n    \"action.devices.traits.Cook\": {\n      name: 'Cooking',\n      attributes: {\n        foodPresets: {\n          type: \"strigifyedObject\",\n          default: []\n        },\n        supportedCookingModes: {\n          type: \"selectToArray\",\n          default: []\n        }\n      },\n      params: ['currentCookingMode','currentFoodPreset','currentFoodQuantity','currentFoodUnit'],\n      commands: []\n    },\n    \"action.devices.traits.Modes\": {\n      name: 'Modes',\n      attributes: {\n        availableModes: {\n          type: \"strigifyedObject\",\n          default: []\n        },\n        commandOnlyModes: {\n          type: \"bool\",\n          default: false\n        }\n      },\n      params: ['currentModeSettings'],\n      commands: [\n        {\n          command: 'start',\n          description: 'Start cooking'\n        },\n        {\n          command: 'stop',\n          description: 'Stop cooking'\n        }\n      ]\n    },\n    \"action.devices.traits.Locator\": {\n      name: 'Locator',\n      attributes: {\n      },\n      params: [],\n      commands: [\n        {\n          command: 'silence',\n          description: 'Stop the alarm'\n        }\n      ]\n    },\n    \"action.devices.traits.SensorState\": {\n      name: 'Sesnor',\n      attributes: {\n        sensorStatesSupported: {\n          type: 'object',\n          default: [\n            {\n              name: \"\"\n            }\n          ]\n        }\n      },\n      params: ['currentSensorStateData'],\n      commands: []\n    }\n  },\n  params: {\n    thermostatTemperatureAmbient: {\n      type: \"int\",\n      name: 'Ambient temperature',\n      commanded: false,\n      default: 21\n    },\n    thermostatTemperatureSetpoint: {\n      type: \"int\",\n      name: 'Temperature set point',\n      commanded: true,\n      default: 22\n    },\n    thermostatHumidityAmbient: {\n      type: \"int\",\n      name: 'Ambient humidity',\n      commanded: false,\n      default: 60\n    },\n    thermostatMode: {\n      type: \"list\",\n      select: [\"cool\",\"heat\",\"off\",\"on\",\"heatcool\",\"auto\",\"fan-only\",\"purifier\",\"eco\",\"dry\"],\n      name: 'Mode',\n      commanded: true,\n      default: 'off'\n    },\n    on: {\n      type: \"bool\",\n      select: [\"true\",\"false\"],\n      name: 'Power',\n      commanded: true,\n      default: false\n    },\n    deactivate: {\n      type: \"bool\",\n      select: [\"true\",\"false\"],\n      name: 'Deactivate',\n      commanded: true,\n      default: true\n    },\n    brightness: {\n      type: \"int\",\n      name: 'Brightness',\n      commanded: true,\n      default: 80\n    },\n    online: {\n      type: \"bool\",\n      select: [\"true\",\"false\"],\n      name: 'Online',\n      commanded: false,\n      default: true\n    },\n    color: {\n      type: \"color\",\n      name: 'Color',\n      commanded: true,\n      default: {\n        spectrumRgb: 16711935\n      }\n    },\n    thermostatTemperatureSetpointHigh: {\n      type: \"int\",\n      name: 'Hight set point in heatcool mode',\n      commanded: true,\n      default: 22\n    },\n    thermostatTemperatureSetpointLow: {\n      type: \"int\",\n      name: 'Low set point in heatcool mode',\n      commanded: true,\n      default: 18\n    },\n    openPercent: {\n      type: \"int\",\n      name: 'Open percentage',\n      commanded: true,\n      default: 60\n    },\n    rotationPercent: {\n      type: \"int\",\n      name: 'Rotation percentage',\n      commanded: true,\n      default: 50\n    },\n    rotationDegrees: {\n      type: \"int\",\n      name: 'Ration degrees',\n      commanded: true,\n      default: 90\n    },\n    isLocked: {\n      type: \"bool\",\n      name: 'Is locked',\n      commanded: false,\n      default: false\n    },\n    isJammed: {\n      type: \"bool\",\n      name: 'Is jammed',\n      commanded: false,\n      default: false\n    },\n    isDocked: {\n      type: \"bool\",\n      name: 'Is docked',\n      commanded: false,\n      default: false\n    },\n    isRunning: {\n      type: \"bool\",\n      name: 'Is running',\n      commanded: false,\n      default: false\n    },\n    isPaused: {\n      type: \"bool\",\n      name: 'Is paused',\n      commanded: false,\n      default: false\n    },\n    activeZones: {\n      type: \"object\",\n      name: 'Active Zones',\n      commanded: true,\n      default: []\n    },\n    timerRemainingSec: {\n      type: \"int\",\n      name: 'Remaining time [seconds]',\n      commanded: true,\n      default: 0\n    },\n    timerPaused: {\n      type: \"bool\",\n      name: 'Is paused',\n      commanded: true,\n      default: false\n    },\n    temperatureSetpointCelsius: {\n      type: \"int\",\n      name: 'Set point',\n      commanded: true,\n      default: 22\n    },\n    temperatureAmbientCelsius: {\n      type: \"int\",\n      name: 'Ambient',\n      commanded: false,\n      default: 21\n    },\n    currentFanSpeedSetting: {\n      type: \"string\",\n      name: 'Fan speed setting',\n      commanded: true,\n      default: ''\n    },\n    isArmed: {\n      type: \"bool\",\n      name: 'Is armed',\n      commanded: false,\n      default: false\n    },\n    exitAllowance: {\n      type: \"int\",\n      name: 'Time to leave',\n      commanded: true,\n      default: 20\n    },\n    isFilled: {\n      type: \"bool\",\n      name: 'Is filled',\n      commanded: false,\n      default: false\n    },\n    humiditySetpointPercent: {\n      type: \"int\",\n      name: 'Humidity set point',\n      commanded: true,\n      default: 70\n    },\n    humidityAmbientPercent: {\n      type: \"int\",\n      name: 'Ambient humidity',\n      commanded: false,\n      default: 60\n    },\n    currentArmLevel: {\n      type: \"string\",\n      name: 'Current security level',\n      commanded: true,\n      default: ''\n    },\n    currentFillLevel: {\n      type: \"string\",\n      name: 'Current fill levell',\n      commanded: true,\n      default: ''\n    },\n    currentCookingMode: {\n      type: \"string\",\n      name: 'Current cooking mode',\n      commanded: true,\n      default: ''\n    },\n    currentFoodPreset: {\n      type: \"string\",\n      name: 'Current food preset',\n      commanded: true,\n      default: ''\n    },\n    currentFoodQuantity: {\n      type: \"int\",\n      name: 'Current food quantity',\n      commanded: true,\n      default: ''\n    },\n    currentFoodUnit: {\n      type: \"string\",\n      name: 'Current food unit',\n      commanded: true,\n      default: ''\n    },\n    currentToggleSettings: {\n      type: \"object\",\n      name: 'Toggles status',\n      commanded: true,\n      default: []\n    },\n    currentModeSettings: {\n      type: \"object\",\n      name: 'Modes status',\n      commanded: true,\n      default: []\n    },\n  }\n}\n\nexport { root, deviceReference }\n","import React from 'react';\n\nimport './Assistant.css';\n\nclass Welcome extends React.Component {\n  constructor(props) {\n    super(props);\n    this.next = this.next.bind(this);\n  }\n\n\n  next() {\n    window.location.href = '/assistant/user/';\n  }\n\n  render() {\n\n    return (\n      <div className=\"assistant_container\">\n        <h1>Homeware configuration assistant</h1><br/>\n        <p>Follow this assistant in order to configure your Homeware installation.</p>\n        <br/>\n        <button type=\"button\" onClick={this.next}>Next</button>\n      </div>\n    );\n\n\n  }\n}\n\nexport default Welcome\n","import React from 'react';\n\nclass User extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      enable_next: false,\n      enable_message: false,\n      message: ''\n    }\n    this.set = this.set.bind(this);\n    this.next = this.next.bind(this);\n  }\n\n  set() {\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      if (http.readyState === 4) {\n        if (http.status === 200) {\n          this.setState({\n            enable_next: true,\n            enable_message: true,\n            message: http.responseText\n          });\n          console.error(http.responseText);\n        } else {\n          console.error(http.statusText);\n          this.setState({\n            enable_message: true,\n            message: 'Some error has occurred'\n          });\n        }\n        setTimeout(function(){\n          this.setState({\n            enable_message: false,\n            message: ''\n          });\n        }.bind(this), 5000)\n      }\n    }.bind(this);\n    var url = 'http://' + window.location.hostname + ':5001/api/user/set/';\n    http.open( \"POST\", url, true );\n    http.setRequestHeader(\"Content-type\", \"application/json\");\n    http.send(JSON.stringify({\n      'user': document.getElementById('user').value,\n      'pass': document.getElementById('password').value\n    }));\n  }\n\n  next() {\n    if (this.state.enable_next)\n      window.location.href = '/assistant/domain/';\n    else\n      alert('You must create an user')\n  }\n\n  render() {\n\n    const element = {\n      margin: '10px'\n    }\n\n    var message = '';\n    if (this.state.enable_message){\n      message = <div className=\"alert_message\"> { this.state.message } </div>\n    }\n\n    return (\n      <div className=\"assistant_container\">\n        <h1>Homeware configuration assistant - User</h1>\n        <p>In order to keep your Homeware installation secure you must create an user and a password.</p>\n        <br/>\n        { message }\n        <span style={ element }>Username</span>\n        <input type=\"text\" name=\"user\" id=\"user\"/>\n        <span style={ element }>Password</span>\n        <input type=\"password\" name=\"password\" id=\"password\"/>\n        <button type=\"button\" onClick={this.set}>Create</button>\n        <br/>\n        <br/>\n        <button type=\"button\" onClick={this.next}>Next</button>\n      </div>\n    );\n\n\n  }\n}\n\nexport default User\n","import React from 'react';\n\nclass Domain extends React.Component {\n  constructor(props) {\n    super(props);\n    this.next = this.next.bind(this);\n  }\n\n\n  next() {\n    window.location.href = '/assistant/confignginx/';\n  }\n\n  render() {\n\n    return (\n      <div className=\"assistant_container\">\n        <h1>Homeware configuration assistant - Domain</h1>\n        <p>You must get a domain and point it to your WAN IP.</p>\n        <div className=\"assistant_text\">\n\n          <p>There are two possibilities:</p>\n            <ul>\n              <li>Use a static IP and a DNS</li>\n              <li>Use a dinamic IP and a DDNS</li>\n            </ul>\n          <p>If you have a static WAN IP, you probably know how to configure your domain name</p>\n          <p>If you have a dinamic IP, you should use a DDNS provider</p>\n          <p>The process depend on the provider you choose. For example, you can use <a href='https://my.noip.com' target='blanck'>no-ip</a> as the provider:</p>\n          <ul>\n            <li>Create an account in no-ip.</li>\n            <li>Go to <i>Dynamic DNS</i> and create a new <i>Hostname</i>.\n                <ul>\n                  <li>Choose a unique <i>Hostname</i>.</li>\n                  <li>Select <i>DNS Host (A)</i>.</li>\n                  <li>Fill the <i>IPv4 Address</i> with your WAN/public IP. You can get it from <a href='https://www.whatismyip.com/what-is-my-public-ip-address/' target='blanck'>WhatsMyIp</a>.</li>\n                </ul>\n            </li>\n            <li>When the installation will be completed you must configure the DDNS data from the <i>Settings</i> section on Homeware.</li>\n          </ul>\n        </div>\n        <button type=\"button\" onClick={this.next}>Next</button>\n\n      </div>\n    );\n\n\n  }\n}\n\nexport default Domain\n","import React from 'react';\n\nclass Confignginx extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      enable_next: false,\n      enable_message: false,\n      message: ''\n    }\n    this.set = this.set.bind(this);\n    this.next = this.next.bind(this);\n  }\n\n  set() {\n\n  }\n\n  next() {\n    window.location.href = '/assistant/change2domain/';\n  }\n\n  render() {\n\n    var message = '';\n    if (this.state.enable_message){\n      message = <div className=\"alert_message\"> { this.state.message } </div>\n    }\n\n    return (\n      <div className=\"assistant_container\">\n        <h1>Homeware configuration assistant - Configuration of Nginx</h1>\n        <p>Configure Nginx with the initial settings</p>\n        { message }\n        <br/>\n        <div className=\"assistant_text\">\n          <p>Open a terminal on your Raspberry Pi or connect to the Raspberry Pi using SSH and run:</p>\n          <br/>\n          <span className=\"code\">$ cd /usr/share/Homeware-LAN/bash</span><br/><br/><br/>\n          <span className=\"code\">$ sudo sh confignginx.sh your.domain.com</span>\n        </div>\n        <br/>\n        <br/>\n        <button type=\"button\" onClick={this.next}>Next</button>\n      </div>\n    );\n\n\n  }\n}\n\nexport default Confignginx\n","import React from 'react';\n\nclass Change2domain extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      enable_next: false,\n      enable_message: false,\n      message: ''\n    }\n    this.set = this.set.bind(this);\n  }\n\n  set() {\n    var http = new XMLHttpRequest();\n    http.onreadystatechange = function() {\n      console.log(http.status)\n      if (http.status === 200) {\n        var data = JSON.parse(http.responseText);\n        console.log(data);\n        if (data.code === 200 )\n          window.location.href = 'http://' + document.getElementById('domain').value + '/assistant/changed2domain/';\n        else\n          this.setState({\n            enable_message: true,\n            message: data.error\n          });\n      } else {\n        console.error(http.statusText);\n        this.setState({\n          enable_message: true,\n          message: 'Some error has occurred'\n        });\n      }\n    }.bind(this);\n    var url = 'http://' + window.location.hostname + ':5001/api/settings/domain/' + document.getElementById('domain').value;\n    http.open( \"GET\", url, true );\n    http.send( null );\n  }\n\n  render() {\n\n    var message = '';\n    if (this.state.enable_message){\n      message = <div className=\"alert_message\"> { this.state.message } </div>\n    }\n\n    return (\n      <div className=\"assistant_container\">\n      <h1>Homeware configuration assistant - Change to domain</h1><br/>\n      <p>Open your router config web page, look for <i>Port Forwarding</i> and create the following rules.</p>\n        { message }\n        <div className=\"assistant_text\">\n        <ul>\n          <li>80 port:\n            <ul>\n              <li>Protocol: TCP</li>\n              <li>WAN start port: 80</li>\n              <li>WAN end port: 80</li>\n              <li>LAN start port: 80</li>\n              <li>LAN end port: 80</li>\n              <li>LAN host IP: The Raspberry Pi IP</li>\n            </ul>\n          </li>\n          <li>443 port:\n            <ul>\n              <li>Protocol: TCP</li>\n              <li>WAN start port: 443</li>\n              <li>WAN end port: 443</li>\n              <li>LAN start port: 443</li>\n              <li>LAN end port: 443</li>\n              <li>LAN host IP: The Raspberry Pi IP</li>\n            </ul>\n          </li>\n        </ul>\n        <p>Now we must change to your domain.</p>\n        <input type=\"text\" id=\"domain\" placeholder=\"Your domain\"/>\n        <button type=\"button\" onClick={this.set}>Next</button>\n        </div>\n      </div>\n    );\n\n\n  }\n}\n\nexport default Change2domain\n","import React from 'react';\n\nimport './Assistant.css';\n\nclass Changed2domain extends React.Component {\n  constructor(props) {\n    super(props);\n    this.next = this.next.bind(this);\n  }\n\n\n  next() {\n    window.location.href = '/assistant/ssl/';\n  }\n\n  render() {\n\n    return (\n      <div className=\"assistant_container\">\n      <h1>Homeware configuration assistant - Change to domain</h1>\n      <p>Congrats, now you are accessing your Homeware from the Internet. See the URL in the top bar :-) </p>\n        <br/>\n        <button type=\"button\" onClick={this.next}>Next</button>\n      </div>\n    );\n\n\n  }\n}\n\nexport default Changed2domain\n","import React from 'react';\n\nimport './Assistant.css';\n\nclass Ssl extends React.Component {\n  constructor(props) {\n    super(props);\n    this.next = this.next.bind(this);\n  }\n\n\n  next() {\n    window.location.href = '/assistant/google/';\n  }\n\n  render() {\n\n    return (\n      <div className=\"assistant_container\">\n        <h1>Homeware configuration assistant - SSL certificate</h1>\n        <p>Google needs to comunicate with the Raspberry Pi via HTTPS, so we need a SSL certicate for Homeware.</p>\n        <br/>\n        <div className=\"assistant_text\">\n        <p>Open a terminal on your Raspberry Pi or connect to the Raspberry Pi using SSH and run:</p>\n        <br/>\n        <span className=\"code\">$ sudo certbot --nginx</span><br/><br/>\n        <p>Follow the Certbot instructions. When Certbot ask you about redirecting http to https, enable it.</p>\n        </div>\n        <br/>\n        <br/>\n        <button type=\"button\" onClick={this.next}>Next</button>\n      </div>\n    );\n\n\n  }\n}\n\nexport default Ssl\n","import React from 'react';\n\nimport './Assistant.css';\n\nclass Google extends React.Component {\n  constructor(props) {\n    super(props);\n    this.next = this.next.bind(this);\n  }\n\n\n  next() {\n    window.location.href = '/assistant/initialize/';\n  }\n\n  render() {\n\n    return (\n      <div className=\"assistant_container\">\n      <h1>Homeware configuration assistant - Google</h1>\n      <p>Google needs to know where Homeware is.</p>\n        <br/>\n        <div className=\"assistant_text\">\n          <p>Follow the instructions on this wiki <a href=\"https://github.com/kikeelectronico/Homeware-LAN/wiki/Connect-Homeware-LAN-with-Google\" target=\"blanck\">https://github.com/kikeelectronico/Homeware-LAN/wiki/Connect-Homeware-LAN-with-Google</a>.</p>\n          <p>During the process you will use the following Client Information. You will be able to change it from the <i>Settings</i> page in the future.</p>\n          <span id=\"actionOnGoogleData\">\n            <b>Client ID:</b> 123<br/>\n            <b>Client Secret:</b> 456<br/>\n            <b>Authorization URL:</b> https://&lt;your.domain.com&gt;/auth/<br/>\n            <b>Token URL:</b> https://&lt;your.domain.com&gt;/token/<br/>\n            <b>Fulfillment URL:</b> https://&lt;your.domain.com&gt;/smarthome/<br/>\n          </span>\n        </div>\n        <br/>\n        <br/>\n        <button type=\"button\" onClick={this.next}>Next</button>\n      </div>\n    );\n\n\n  }\n}\n\nexport default Google\n","import React from 'react';\n\nimport './Assistant.css';\n\nclass Initialize extends React.Component {\n  constructor(props) {\n    super(props);\n\n    var xmlHttp = new XMLHttpRequest();\n    xmlHttp.onreadystatechange = function() {\n      console.log(xmlHttp.responseText)\n    }\n    var url = 'http://' + window.location.hostname + ':5001/api/settings/setAssistantDone/';\n    xmlHttp.open( \"GET\", url, true );\n    xmlHttp.send( null );\n\n    setTimeout(function(){window.location.href = '/'}, 3000);\n  }\n\n  render() {\n\n    return (\n      <div className=\"assistant_container\">\n        <h1>Homeware configuration assistant - Last touches</h1>\n        <p>Homeware is giving it self the last touches.</p>\n      </div>\n    );\n\n\n  }\n}\n\nexport default Initialize\n","import React from 'react';\n\nfunction Menu(props) {\n\n  const menu = {\n    marginTop: '5px',\n    display: 'grid',\n    gridTemplateColumns: '40px auto'\n  }\n\n  const image = {\n    width: '30px'\n  }\n\n  const textContainer = {\n    paddingTop: '4px'\n  }\n\n  const text = {\n    fontSize: '18px',\n    cursor: 'pointer'\n  }\n\n  function go (){\n    window.location.href = props.href;\n  }\n\n  return (\n    <div style={ menu }>\n      <div>\n        <img src={ props.image } alt={ props.image } style={ image }/>\n      </div>\n      <div style={ textContainer }>\n        <span style={ text } onClick={ props.exec ? props.exec : go}>{ props.title }</span>\n      </div>\n    </div>\n  );\n}\n\nexport default Menu\n","import React from 'react';\nimport getCookieValue from '../../../functions'\nimport { root } from '../../../constants'\n\nclass OnOff extends React.Component {\n  constructor(props) {\n    super(props);\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle(){\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      if (http.readyState === 4) {\n        if (http.status === 200) {\n          this.props.reload();\n        } else {\n          console.error(http.statusText);\n        }\n      }\n    }.bind(this)\n    http.open(\"POST\", root + \"api/status/update/\");\n    http.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\n    http.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    http.send(JSON.stringify({\n      \"id\": this.props.id,\n      \"param\": \"on\",\n      \"value\": !this.props.on\n    }));\n  }\n\n  render() {\n\n    const container = {\n      float: 'left',\n      marginLeft: '5px'\n    }\n\n    const image = {\n      width: '30px'\n    }\n\n    return (\n      <div style={container}>\n        <img src={ this.props.on ? '/devices/onoff_on_true.png' : '/devices/onoff_on_false.png'} onClick={ this.toggle } alt={ this.props.image } style={ image }/>\n      </div>\n    );\n  }\n}\n\nexport default OnOff\n","import React from 'react';\n\nclass Information extends React.Component {\n  constructor(props) {\n    super(props);\n    this.go = this.go.bind(this);\n  }\n\n  go(){\n    window.location.href = \"/devices/info/\" + this.props.id + \"/\"\n  }\n\n  render() {\n\n    const container = {\n      float: 'left',\n      marginLeft: '5px'\n    }\n\n    const image = {\n      width: '30px'\n    }\n\n    return (\n      <div style={container}>\n        <img src=\"/devices/information.png\" onClick={ this.go } alt={ this.props.image } style={ image }/>\n      </div>\n    );\n  }\n}\n\nexport default Information\n","import React from 'react';\n\nclass Connecting extends React.Component {\n  constructor(props) {\n    super(props);\n    this.go = this.go.bind(this);\n  }\n\n  go(){\n    window.location.href = \"/devices/connecting/\" + this.props.id + \"/\"\n  }\n\n  render() {\n\n    const container = {\n      float: 'left',\n      marginLeft: '5px'\n    }\n\n    const image = {\n      width: '30px'\n    }\n\n    return (\n      <div style={container}>\n        <img src=\"/devices/connecting.png\" onClick={ this.go } alt={ this.props.image } style={ image }/>\n      </div>\n    );\n  }\n}\n\nexport default Connecting\n","import React from 'react';\n\nclass Edit extends React.Component {\n  constructor(props) {\n    super(props);\n    this.go = this.go.bind(this);\n  }\n\n  go(){\n    window.location.href = \"/devices/editor/\" + this.props.id + \"/\"\n  }\n\n  render() {\n\n    const container = {\n      float: 'left',\n      marginLeft: '5px'\n    }\n\n    const image = {\n      width: '30px'\n    }\n\n    return (\n      <div style={container}>\n        <img src=\"/devices/edit.png\" onClick={ this.go } alt={ this.props.image } style={ image }/>\n      </div>\n    );\n  }\n}\n\nexport default Edit\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Light extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    var color = 'yellow';\n    if (this.props.device.traits.includes(\"action.devices.traits.ColorSetting\")){\n      if (Object.keys(this.props.status.color).includes(\"spectrumRgb\"))\n        color = \"#\" + this.props.status.color.spectrumRgb.toString(16);\n      else\n        color = \"#\" + this.props.status.color.spectrumRGB.toString(16);\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: color,\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Light\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Outlet extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'blue',\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Outlet\n","import React from 'react';\nimport getCookieValue from '../../../functions'\nimport { root } from '../../../constants'\n\nclass TemperatureSetting extends React.Component {\n  constructor(props) {\n    super(props);\n    this.up = this.up.bind(this);\n    this.down = this.down.bind(this);\n    this.update = this.update.bind(this);\n  }\n\n  up(){\n    var temperature = this.props.status.thermostatTemperatureSetpoint + 1;\n    this.update(temperature)\n  }\n\n  down(){\n    var temperature = this.props.status.thermostatTemperatureSetpoint - 1;\n    this.update(temperature)\n  }\n\n  update(temperature){\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      if (http.readyState === 4) {\n        if (http.status === 200) {\n          this.props.reload();\n        } else {\n          console.error(http.statusText);\n        }\n      }\n    }.bind(this)\n    http.open(\"POST\", root + \"api/status/update/\");\n    http.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\n    http.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    http.send(JSON.stringify({\n      \"id\": this.props.id,\n      \"param\": \"thermostatTemperatureSetpoint\",\n      \"value\": temperature\n    }));\n  }\n\n  render() {\n\n    const container = {\n      float: 'left',\n      marginLeft: '5px'\n    }\n\n    const image = {\n      width: '30px'\n    }\n\n    const temperature = {\n      fontSize: '30px',\n      marginLeft: '5px',\n      marginRight: '5px',\n      color: '#777'\n    }\n\n    return (\n      <div style={container}>\n        <img src='/devices/arrow_down.png' onClick={ this.down } alt='Arrow up' style={ image }/>\n        <span style={temperature}>{this.props.status.thermostatTemperatureSetpoint}</span>\n        <img src='/devices/arrow_up.png' onClick={ this.up } alt='Arrow down' style={ image }/>\n      </div>\n    );\n  }\n}\n\nexport default TemperatureSetting\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport TemperatureSetting from './traits/TemperatureSetting'\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass AcUnit extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    var color = 'yellow';\n    if (this.props.status.thermostatMode === 'off')\n      color = \"#666\";\n    else if (this.props.status.thermostatMode === 'heat')\n      color = \"red\";\n    else if (this.props.status.thermostatMode === 'cool')\n      color = \"lightblue\";\n    else if (this.props.status.thermostatMode === 'on')\n      color = \"yellow\";\n    else if (this.props.status.thermostatMode === 'heatcool')\n      color = \"#DC97FF\";\n    else if (this.props.status.thermostatMode === 'auto')\n      color = \"#EE357E\";\n    else if (this.props.status.thermostatMode === 'fan-only')\n      color = \"blue\";\n    else if (this.props.status.thermostatMode === 'purifier')\n      color = \"#F3882E\";\n    else if (this.props.status.thermostatMode === 'eco')\n      color = \"green\";\n    else if (this.props.status.thermostatMode === 'dry')\n      color = \"#753500\";\n\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: color,\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <TemperatureSetting id={ this.props.device.id } status={this.props.status} on={ this.props.status } reload={ this.props.reload }/>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AcUnit\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass AirFreshener extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'yellow',\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AirFreshener\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass AirPurifier extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'yellow',\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AirPurifier\n","import React from 'react';\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Bed extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Bed\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Fan extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'yellow',\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Fan\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Fireplace extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'yellow',\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Fireplace\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Radiator extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'yellow',\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Radiator\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Switch extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'yellow',\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Switch\n","import React from 'react';\nimport TemperatureSetting from './traits/TemperatureSetting'\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Thermostat extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    var color = 'yellow';\n    if (this.props.status.thermostatMode === 'off')\n      color = \"#666\";\n    else if (this.props.status.thermostatMode === 'heat')\n      color = \"red\";\n    else if (this.props.status.thermostatMode === 'cool')\n      color = \"lightblue\";\n    else if (this.props.status.thermostatMode === 'on')\n      color = \"yellow\";\n    else if (this.props.status.thermostatMode === 'heatcool')\n      color = \"#DC97FF\";\n    else if (this.props.status.thermostatMode === 'auto')\n      color = \"#EE357E\";\n    else if (this.props.status.thermostatMode === 'fan-only')\n      color = \"blue\";\n    else if (this.props.status.thermostatMode === 'purifier')\n      color = \"#F3882E\";\n    else if (this.props.status.thermostatMode === 'eco')\n      color = \"green\";\n    else if (this.props.status.thermostatMode === 'dry')\n      color = \"#753500\";\n\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: color\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <TemperatureSetting id={ this.props.device.id } status={this.props.status} on={ this.props.status } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Thermostat\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass AirCooler extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    var color = 'yellow';\n    if (this.props.device.traits.includes(\"action.devices.traits.ColorSetting\")){\n      color = \"#\" + this.props.status.color.spectrumRgb.toString(16);\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: color,\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AirCooler\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Bathtub extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    var color = 'yellow';\n    if (this.props.device.traits.includes(\"action.devices.traits.ColorSetting\")){\n      color = \"#\" + this.props.status.color.spectrumRgb.toString(16);\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: color,\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Bathtub\n","import React from 'react';\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Awing extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Awing\n","import React from 'react';\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Blinds extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Blinds\n","import React from 'react';\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Closet extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Closet\n","import React from 'react';\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Curtain extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Curtain\n","import React from 'react';\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Door extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Door\n","import React from 'react';\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Drawer extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Drawer\n","import React from 'react';\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Garage extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Garage\n","import React from 'react';\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Pergola extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Pergola\n","import React from 'react';\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Shutter extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Shutter\n","import React from 'react';\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Valve extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Valve\n","import React from 'react';\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Window extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Window\n","import React from 'react';\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Lock extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Lock\n","import React from 'react';\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Gate extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Gate\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Heater extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    var color = 'yellow';\n    if (this.props.device.traits.includes(\"action.devices.traits.ColorSetting\")){\n      color = \"#\" + this.props.status.color.spectrumRgb.toString(16);\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: color,\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Heater\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Hood extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    var color = 'yellow';\n    if (this.props.device.traits.includes(\"action.devices.traits.ColorSetting\")){\n      color = \"#\" + this.props.status.color.spectrumRgb.toString(16);\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: color,\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Hood\n","import React from 'react';\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass SecuritySystem extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SecuritySystem\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Blender extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    var color = 'yellow';\n    if (this.props.device.traits.includes(\"action.devices.traits.ColorSetting\")){\n      color = \"#\" + this.props.status.color.spectrumRgb.toString(16);\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: color,\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Blender\n","import React from 'react';\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Global extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    var color = 'white';\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: color\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Global\n","import React from 'react';\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Scene extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    var color = 'white';\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: color\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">Scene: { this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Scene\n","import React from 'react';\nimport Light from '../devices/Light'\nimport Outlet from '../devices/Outlet'\nimport AcUnit from '../devices/AcUnit'\nimport AirFreshener from '../devices/AirFreshener'\nimport AirPurifier from '../devices/AirPurifier'\nimport Bed from '../devices/Bed'\nimport Fan from '../devices/Fan'\nimport Fireplace from '../devices/Fireplace'\nimport Radiator from '../devices/Radiator'\nimport Switch from '../devices/Switch'\nimport Thermostat from '../devices/Thermostat'\nimport AirCooler from '../devices/AirCooler'\nimport Bathtub from '../devices/Bathtub'\nimport Awing from '../devices/Awing'\nimport Blinds from '../devices/Blinds'\nimport Closet from '../devices/Closet'\nimport Curtain from '../devices/Curtain'\nimport Door from '../devices/Door'\nimport Drawer from '../devices/Drawer'\nimport Garage from '../devices/Garage'\nimport Pergola from '../devices/Pergola'\nimport Shutter from '../devices/Shutter'\nimport Valve from '../devices/Valve'\nimport Window from '../devices/Window'\nimport Lock from '../devices/Lock'\nimport Gate from '../devices/Gate'\nimport Heater from '../devices/Heater'\nimport Hood from '../devices/Hood'\nimport SecuritySystem from '../devices/SecuritySystem'\nimport Blender from '../devices/Blender'\nimport Global from '../devices/Global'\nimport Scene from '../devices/Scene'\nimport getCookieValue from '../../functions'\nimport { root } from '../../constants'\n\nimport './Devices.css';\n\nclass Devices extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {},\n      devices: []\n    }\n    this.loadData = this.loadData.bind(this);\n    this.newDevice = this.newDevice.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadData();\n    setInterval(this.loadData,3000);\n  }\n\n  loadData(){\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      if (http.readyState === 4) {\n        if (http.status === 200) {\n          var data = JSON.parse(http.responseText);\n          this.setState({\n             data: data,\n             devices: data.devices\n           });\n        } else {\n          console.error(http.statusText);\n        }\n      }\n    }.bind(this);\n    http.open(\"GET\", root + \"api/global/get/\");\n    http.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    http.send();\n  }\n\n  newDevice(){\n    window.location.href = '/devices/editor/'\n  }\n\n  render() {\n\n    const devices = this.state.devices.map((device) => {\n      if(device.type === 'action.devices.types.LIGHT')\n        return <Light key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.OUTLET')\n        return <Outlet key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.AC_UNIT')\n        return <AcUnit key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.AIRFRESHENER')\n        return <AirFreshener key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.AIRPURIFIER')\n        return <AirPurifier key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.BED')\n        return <Bed key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.FAN')\n        return <Fan key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.FIREPLACE')\n        return <Fireplace key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.RADIATOR')\n        return <Radiator key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.SWITCH')\n        return <Switch key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.THERMOSTAT')\n        return <Thermostat key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.AIRCOOLER')\n        return <AirCooler key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.BATHTUB')\n        return <Bathtub key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.AWING')\n        return <Awing key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.AIRCOOLER')\n        return <AirCooler key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.BLINDS')\n        return <Blinds key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.CLOSET')\n        return <Closet key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.CURTAIN')\n        return <Curtain key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.DOOR')\n        return <Door key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.DRAWER')\n        return <Drawer key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.GARAGE')\n        return <Garage key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.GATE')\n        return <Gate key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.PERGOLA')\n        return <Pergola key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.SHUTTER')\n        return <Shutter key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.VALVE')\n        return <Valve key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.WINDOW')\n        return <Window key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.LOCK')\n        return <Lock key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.HEATER')\n        return <Heater key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.HOOD')\n        return <Hood key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.SECURITYSYSTEM')\n        return <SecuritySystem key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.BLENDER')\n        return <Blender key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.SCENE')\n        return <Scene key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else\n        return <Global key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n    });\n\n    return (\n      <div>\n        <div className=\"page_title_container\">\n          <h2>Devices and scences</h2>\n        </div>\n\n        <div className=\"page_cards_container\">\n          { devices }\n        </div>\n\n        <div className=\"page_buttons_containter\">\n          <button type=\"button\" onClick={ this.newDevice }>New</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Devices\n","import React from 'react';\n\nimport '../pages/Editor.css';\n\nclass Text extends React.Component {\n  constructor(props) {\n    super(props);\n    this.update = this.update.bind(this);\n  }\n\n\n  update(event){\n    this.props.update(this.props.data,event.target.value);\n  }\n\n  render() {\n    return (\n      <div className=\"two_table_row\">\n        <div className=\"two_table_cel\">\n          {this.props.name}\n        </div>\n        <div className=\"two_table_cel\">\n          <input type=\"text\" className=\"two_input\" id={this.props.data} defaultValue={this.props.value} onChange={this.update}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Text\n","import React from 'react';\n\nclass Scene extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n  }\n\n\n  updateCheckbox(event){\n    this.props.update('attributes/' + event.target.id,event.target.checked);\n  }\n\n  render() {\n\n\n    return (\n      <div>\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n\n          </div>\n          <div className=\"three_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"sceneReversible\" defaultChecked={this.props.sceneReversible} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>sceneReversible</i></span>\n            </label>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if the scene can be desabled.</span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Scene\n","import React from 'react';\n\nclass OnOff extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n  }\n\n\n  updateCheckbox(event){\n    this.props.update('attributes/' + event.target.id,event.target.checked);\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n\n          </div>\n          <div className=\"three_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"commandOnlyOnOff\" defaultChecked={this.props.attributes.commandOnlyOnOff} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>commandOnlyOnOff</i></span>\n            </label>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the state.</span>\n          </div>\n        </div>\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n          </div>\n          <div className=\"three_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"queryOnlyOnOff\" defaultChecked={this.props.attributes.queryOnlyOnOff} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>queryOnlyOnOff</i></span>\n            </label>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Google shouldn't change the device state.</span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default OnOff\n","import React from 'react';\n\nclass Brightness extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n  }\n\n\n  updateCheckbox(event){\n    this.props.update('attributes/' + event.target.id,event.target.checked);\n  }\n\n  render() {\n\n\n    return (\n      <div>\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n\n          </div>\n          <div className=\"three_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"commandOnlyBrightness\" defaultChecked={this.props.commandOnlyBrightness} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>commandOnlyBrightness</i></span>\n            </label>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the brightness.</span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Brightness\n","import React from 'react';\n\nclass FanSpeed extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n    this.updateFanSpeeds = this.updateFanSpeeds.bind(this);\n    this.addFanSpeed = this.addFanSpeed.bind(this);\n  }\n\n\n  updateCheckbox(event){\n    this.props.update('attributes/' + event.target.id,event.target.checked);\n  }\n\n  updateFanSpeeds(event){\n    const id = event.target.id.split('_')\n    const speed_id = id[1]\n    //Process the attribute and value depending of the attribute\n    const speed_attribute = id[0] === 'lang' ? id[0] : 'speed_synonym';\n    const value = id[0] === 'lang' ? event.target.value : event.target.value.split(',')\n    //Update the temporal data and update it\n    var temp_availableFanSpeeds = this.props.attributes.availableFanSpeeds\n    temp_availableFanSpeeds.speeds[speed_id].speed_values[0][speed_attribute] = value\n    if (id[0] === 'names') temp_availableFanSpeeds.speeds[speed_id].speed_name = value[0]\n    this.props.update('attributes/availableFanSpeeds', temp_availableFanSpeeds);\n  }\n\n  addFanSpeed(){\n    var temp_availableFanSpeeds = this.props.attributes.availableFanSpeeds\n    temp_availableFanSpeeds.speeds.push({\n      \"speed_name\": \"\",\n      \"speed_values\": [\n        {\n          \"speed_synonym\": [\"\"],\n          \"lang\": \"en\"\n        }\n      ]\n    });\n    this.props.update('attributes/availableFanSpeeds', temp_availableFanSpeeds);\n  }\n\n  render() {\n\n    const names_box = {\n      width: '150px'\n    }\n\n    const speeds = this.props.attributes.availableFanSpeeds.speeds.map((speed, i) => {\n      return (\n              <div key={i}>\n                <div className=\"two_table_row\" key={i}>\n                  <div className=\"two_table_cel\">\n                  </div>\n                  <div className=\"two_table_cel\">\n                    <label>\n                      <span>Languaje: </span>\n                      <select name=\"type\" id={\"lang_\" + i} value={speed.speed_values[0].lang} onChange={this.updateFanSpeeds}>\n                        <option value=\"es\">es</option>\n                        <option value=\"en\">en</option>\n                      </select>\n                    </label>\n                    <label>\n                      <span>Speed name: </span>\n                      <input type=\"text\" id={\"names_\" + i} style={names_box} defaultValue={speed.speed_values[0].speed_synonym} placeholder=\"Speed name\" onChange={this.updateFanSpeeds}/>\n                    </label>\n                  </div>\n                </div>\n              </div>\n              )\n    });\n\n    return (\n      <div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n\n          </div>\n          <div className=\"three_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"reversible\" defaultChecked={this.props.attributes.reversible} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>reversible</i></span>\n            </label>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if the fan supports blowing in both directions.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n          </div>\n          <div className=\"three_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"supportsFanSpeedPercent\" defaultChecked={this.props.attributes.supportsFanSpeedPercent} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>supportsFanSpeedPercent</i></span>\n            </label>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if the speed can be controlled with a number from 0 to 100.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n          </div>\n          <div className=\"three_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"commandOnlyFanSpeed\" defaultChecked={this.props.attributes.commandOnlyFanSpeed} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>commandOnlyFanSpeed</i></span>\n            </label>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the fan speed.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n          </div>\n          <div className=\"three_table_cel\">\n            Add a speed <button type=\"button\" className=\"add_attribute_button\" onClick={ this.addFanSpeed }>Add</button>\n          </div>\n        </div>\n\n        {speeds}\n\n      </div>\n    );\n  }\n}\n\nexport default FanSpeed\n","import React from 'react';\n\nclass ColorSetting extends React.Component {\n  constructor(props) {\n    super(props);\n    this.update = this.update.bind(this);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n  }\n\n  update(event){\n    this.props.update('attributes/' + event.target.id,event.target.value);\n  }\n\n  updateCheckbox(event){\n    this.props.update('attributes/' + event.target.id,event.target.checked);\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n\n          </div>\n          <div className=\"three_table_cel\">\n            <select name=\"type\" id=\"colorModel\" className=\"table_input\" value={this.props.attributes.colorModel} onChange={this.update}>\n              <option value=\"\">Select</option>\n              <option value=\"rgb\">RGB light</option>\n              <option value=\"hsv\">HSV light</option>\n              <option value=\"\">Color temperature</option>\n            </select>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\"></span>\n          </div>\n        </div>\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n\n          </div>\n          <div className=\"three_table_cel\">\n            Minimum temperature: <input type=\"number\" id=\"colorTemperatureRange/temperatureMinK\" defaultValue={ this.props.attributes.colorTemperatureRange ? this.props.attributes.colorTemperatureRange.temperatureMinK : 0} min=\"0\" max=\"10000\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Minimum color temperature (in Kelvin) supported by the device.</span>\n          </div>\n        </div>\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n\n          </div>\n          <div className=\"three_table_cel\">\n            Maximum temperature: <input type=\"number\" id=\"colorTemperatureRange/temperatureMaxK\" defaultValue={this.props.attributes.colorTemperatureRange ? this.props.attributes.colorTemperatureRange.temperatureMaxK : 0} min=\"0\" max=\"10000\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Maximum color temperature (in Kelvin) supported by the device.</span>\n          </div>\n        </div>\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n\n          </div>\n          <div className=\"three_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"commandOnlyColorSetting\" defaultChecked={this.props.attributes.commandOnlyColorSetting} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>commandOnlyColorSetting</i></span>\n            </label>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the color.</span>\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default ColorSetting\n","import React from 'react';\n\nclass TemperatureSetting extends React.Component {\n  constructor(props) {\n    super(props);\n    this.update = this.update.bind(this);\n    this.updateMode = this.updateMode.bind(this);\n    this.addMode = this.addMode.bind(this);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n  }\n\n  update(event){\n    this.props.update('attributes/' + event.target.id,event.target.value);\n  }\n\n  updateMode(event){\n    const id = event.target.id.split('_')\n    const mode_id = id[1]\n    var temp_availableThermostatModes = this.props.attributes.availableThermostatModes.split(',')\n\n    if (event.target.value === 'delete'){\n      temp_availableThermostatModes.splice(mode_id, 1)\n    } else if (event.target.value !== 'select') {\n      temp_availableThermostatModes[mode_id] = event.target.value;\n    }\n\n    this.props.update('attributes/availableThermostatModes', temp_availableThermostatModes.join(','));\n  }\n\n  addMode(){\n    var temp_availableThermostatModes = this.props.attributes.availableThermostatModes\n    temp_availableThermostatModes += \",\"\n    this.props.update('attributes/availableThermostatModes', temp_availableThermostatModes);\n  }\n\n  updateCheckbox(event){\n    this.props.update('attributes/' + event.target.id,event.target.checked);\n  }\n\n\n  render() {\n\n    const modes = this.props.attributes.availableThermostatModes.split(',').map((mode, i) => {\n\n      return (\n          <div key={i}>\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">\n              </div>\n              <div className=\"two_table_cel\">\n                <label>\n                  <span>Mode: </span>\n                  <select name=\"type\" id={\"mode_\" + i} value={mode} onChange={this.updateMode}>\n                    <option value=\"select\">Select a mode</option>\n                    <option value=\"delete\">Delete this mode</option>\n                    <option value=\"off\">Off</option>\n                    <option value=\"heat\">Heat</option>\n                    <option value=\"cool\">Cool</option>\n                    <option value=\"on\">On</option>\n                    <option value=\"heatcool\">Heatcool</option>\n                    <option value=\"auto\">Auto</option>\n                    <option value=\"fan-only\">Fan only</option>\n                    <option value=\"purifier\">Purifier</option>\n                    <option value=\"eco\">Eco</option>\n                    <option value=\"dry\">Dry</option>\n                  </select>\n                </label>\n              </div>\n            </div>\n          </div>\n\n          )\n    });\n\n    return (\n      <div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n          </div>\n          <div className=\"three_table_cel\">\n            Add a thermostat mode <button type=\"button\" className=\"add_attribute_button\" onClick={ this.addMode }>Add</button>\n          </div>\n        </div>\n\n        {modes}\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n\n          </div>\n          <div className=\"three_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"commandOnlyTemperatureSetting\" defaultChecked={this.props.attributes.commandOnlyTemperatureSetting} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>commandOnlyTemperatureSetting</i></span>\n            </label>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the temperature.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n          </div>\n          <div className=\"three_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"queryOnlyTemperatureSetting\" defaultChecked={this.props.attributes.queryOnlyTemperatureSetting} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>queryOnlyTemperatureSetting</i></span>\n            </label>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Google shouldn't change the device temperature settings.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n\n          </div>\n          <div className=\"three_table_cel\">\n            Minimum temperature: <input type=\"number\" id=\"thermostatTemperatureRange/minThresholdCelsius\" defaultValue={ this.props.attributes.thermostatTemperatureRange ? this.props.attributes.thermostatTemperatureRange.minThresholdCelsius : 0} min=\"0\" max=\"50\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Minimum temperature (in Celsius) supported by the device.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n\n          </div>\n          <div className=\"three_table_cel\">\n            Maximum temperature: <input type=\"number\" id=\"thermostatTemperatureRange/maxThresholdCelsius\" defaultValue={this.props.attributes.thermostatTemperatureRange ? this.props.attributes.thermostatTemperatureRange.maxThresholdCelsius : 0} min=\"0\" max=\"50\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Maximum temperature (in Celsius) supported by the device.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n\n          </div>\n          <div className=\"three_table_cel\">\n            Range: <input type=\"number\" id=\"bufferRangeCelsius\" defaultValue={this.props.attributes.bufferRangeCelsius} min=\"0\" max=\"50\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Specifies the minimum offset between heat-cool setpoints in Celsius.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n\n          </div>\n          <div className=\"three_table_cel\">\n            <select name=\"type\" id=\"thermostatTemperatureUnit\" className=\"table_input\" value={this.props.attributes.thermostatTemperatureUnit} onChange={this.update}>\n              <option value=\"C\">Celsius</option>\n              <option value=\"F\">Fahrenheit</option>\n            </select>\n          </div>\n        </div>\n\n\n\n      </div>\n    );\n  }\n}\n\nexport default TemperatureSetting\n","import React from 'react';\n\nclass Toggles extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n    this.updatetoggle = this.updatetoggle.bind(this);\n    this.addToggle = this.addToggle.bind(this);\n  }\n\n\n  updateCheckbox(event){\n    this.props.update('attributes/' + event.target.id,event.target.checked);\n  }\n\n  updatetoggle(event){\n    const id = event.target.id.split('_')\n    const toggle_id = id[1]\n    //Process the attribute and value depending of the attribute\n    const toggle_attribute = id[0] === 'lang' ? id[0] : 'name_synonym';\n    const value = id[0] === 'lang' ? event.target.value : event.target.value.split(',')\n    //Update the temporal data and update it\n    var temp_availableToggles = this.props.attributes.availableToggles\n    temp_availableToggles[toggle_id].name_values[0][toggle_attribute] = value\n    if (id[0] === 'names') temp_availableToggles[toggle_id].name = value[0]\n    this.props.update('attributes/availableToggles', temp_availableToggles);\n  }\n\n  addToggle(){\n    var temp_availableToggles = this.props.attributes.availableToggles\n    temp_availableToggles.push({\n      \"name\": \"\",\n      \"name_values\": [\n        {\n          \"name_synonym\": [\"\"],\n          \"lang\": \"en\"\n        }\n      ]\n    });\n    this.props.update('attributes/availableToggles', temp_availableToggles);\n  }\n\n  render() {\n\n    const names_box = {\n      marginLeft: '20px',\n      width: '150px'\n    }\n\n    const toggles = this.props.attributes.availableToggles.map((toggle, i) => {\n      return (\n              <div key={i}>\n                <div className=\"two_table_row\">\n                  <div className=\"two_table_cel\">\n                  </div>\n                  <div className=\"two_table_cel\">\n                    <label>\n                      <span>Languaje: </span>\n                      <select name=\"type\" id={\"lang_\" + i} value={toggle.name_values[0].lang} placeholder=\"Name for the toggle\" onChange={this.updatetoggle}>\n                        <option value=\"es\">es</option>\n                        <option value=\"en\">en</option>\n                      </select>\n                    </label>\n                    <label>\n                      <span>Name: </span>\n                      <input type=\"text\" id={\"names_\" + i} style={names_box} defaultValue={toggle.name_values[0].name_synonym} placeholder=\"Name\" onChange={this.updatetoggle}/>\n                    </label>\n\n\n                  </div>\n                </div>\n              </div>\n            )\n    });\n\n    return (\n      <div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n\n          </div>\n          <div className=\"three_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"commandOnlyToggles\" defaultChecked={this.props.attributes.reversible} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>commandOnlyToggles</i></span>\n            </label>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the states.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n          </div>\n          <div className=\"three_table_cel\">\n            Add a toggle <button type=\"button\" className=\"add_attribute_button\" onClick={ this.addToggle }>Add</button>\n          </div>\n        </div>\n\n        {toggles}\n\n      </div>\n    );\n  }\n}\n\nexport default Toggles\n","import React from 'react';\n\nclass Modes extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n    this.updateMode = this.updateMode.bind(this);\n    this.addMode = this.addMode.bind(this);\n  }\n\n\n  updateCheckbox(event){\n    this.props.update('attributes/' + event.target.id,event.target.checked);\n  }\n\n  updateMode(event){\n    const id = event.target.id.split('_')\n    const mode_id = id[1]\n    var temp_availableModes = this.props.attributes.availableModes\n\n    if(id[0] === 'lang'){\n      temp_availableModes[mode_id].name_values[0].lang = event.target.value;\n    } else if (id[0] === 'names'){\n      temp_availableModes[mode_id].name_values[0].name_synonym = event.target.value.split(',');\n      temp_availableModes[mode_id].name = event.target.value.split(',')[0]\n    } else if (id[0] === 'settings'){\n      var values = event.target.value.split(',')\n      var settings = []\n      for ( var i = 0; i < values.length; i ++){\n        settings.push({\n          setting_name: values[i],\n            setting_values: [{\n              setting_synonym: [values[i]],\n              lang: this.props.attributes.availableModes[mode_id].name_values[0].lang\n             }]\n        })\n      }\n      temp_availableModes[mode_id].settings = settings\n    }\n    this.props.update('attributes/availableModes', temp_availableModes);\n  }\n\n  addMode(){\n    var temp_availableModes = this.props.attributes.availableModes\n    temp_availableModes.push({\n      \"name\": \"\",\n      \"name_values\": [\n        {\n          \"name_synonym\": [\"\"],\n          \"lang\": \"en\"\n        }\n      ],\n      \"settings\": [\n        {\n          \"setting_name\": \"\",\n            \"setting_values\": [{\n              \"setting_synonym\": [\"\"],\n              \"lang\": \"en\"\n             }]\n        }\n      ]\n    });\n    this.props.update('attributes/availableModes', temp_availableModes);\n  }\n\n  render() {\n\n    const names_box = {\n      width: '150px'\n    }\n\n    const settings_box = {\n      width: '230px'\n    }\n\n\n    const modes = this.props.attributes.availableModes.map((mode, i) => {\n      const settings = mode.settings.map((setting,i) => {return setting.setting_name});\n\n      return (\n              <div key={i}>\n                <div className=\"two_table_row\">\n                  <div className=\"two_table_cel\">\n                  </div>\n                  <div className=\"two_table_cel\">\n                    <label>\n                      <span>Languaje: </span>\n                      <select name=\"type\" id={\"lang_\" + i} value={mode.name_values[0].lang} onChange={this.updateMode}>\n                        <option value=\"es\">es</option>\n                        <option value=\"en\">en</option>\n                      </select>\n                    </label>\n                    <label>\n                      <span>Mode name: </span>\n                      <input type=\"text\" id={\"names_\" + i} style={names_box} defaultValue={mode.name_values[0].name_synonym} placeholder=\"Mode name\" onChange={this.updateMode}/>\n                    </label>\n                    <label>\n                      <span>Mode settings: </span>\n                      <input type=\"text\" id={\"settings_\" + i} style={settings_box} defaultValue={settings} placeholder=\"Separated by commas\" onChange={this.updateMode}/>\n                    </label>\n                  </div>\n                </div>\n\n\n              </div>\n\n              )\n    });\n\n    return (\n      <div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n\n          </div>\n          <div className=\"three_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"commandOnlyModes\" defaultChecked={this.props.attributes.reversible} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>commandOnlyModes</i></span>\n            </label>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the modes.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n          </div>\n          <div className=\"three_table_cel\">\n            Add a mode <button type=\"button\" className=\"add_attribute_button\" onClick={ this.addMode }>Add</button>\n          </div>\n\n        </div>\n\n        {modes}\n\n      </div>\n    );\n  }\n}\n\nexport default Modes\n","import React from 'react';\n\nclass HumiditySetting extends React.Component {\n  constructor(props) {\n    super(props);\n    this.update = this.update.bind(this);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n  }\n\n  update(event){\n    this.props.update('attributes/' + event.target.id,event.target.value);\n  }\n\n  updateCheckbox(event){\n    this.props.update('attributes/' + event.target.id,event.target.checked);\n  }\n\n  render() {\n    return (\n      <div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n\n          </div>\n          <div className=\"three_table_cel\">\n            Minimum humidity <input type=\"number\" id=\"humiditySetpointRange/minPercent\" defaultValue={ this.props.attributes.humiditySetpointRange ? this.props.attributes.humiditySetpointRange.minPercent : 0} min=\"0\" max=\"100\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Minimum humidity level as percentage.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n\n          </div>\n          <div className=\"three_table_cel\">\n            Maximum humidity <input type=\"number\" id=\"humiditySetpointRange/maxPercent\" defaultValue={this.props.attributes.humiditySetpointRange ? this.props.attributes.humiditySetpointRange.maxPercent : 0} min=\"0\" max=\"100\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Maximum humidity level as percentage.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n\n          </div>\n          <div className=\"three_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"commandOnlyHumiditySetting\" defaultChecked={this.props.attributes.commandOnlyHumiditySetting} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>commandOnlyHumiditySetting</i></span>\n            </label>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the humidity.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n\n          </div>\n          <div className=\"three_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"queryOnlyHumiditySetting\" defaultChecked={this.props.attributes.queryOnlyHumiditySetting} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>queryOnlyHumiditySetting</i></span>\n            </label>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Google shouldn't change the device humidity.</span>\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default HumiditySetting\n","import React from 'react';\n\nclass OpenClose extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n  }\n\n\n  updateCheckbox(event){\n    this.props.update('attributes/' + event.target.id,event.target.checked);\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n\n          </div>\n          <div className=\"three_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"discreteOnlyOpenClose\" defaultChecked={this.props.attributes.discreteOnlyOpenClose} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>discreteOnlyOpenClose</i></span>\n            </label>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if the device must either be fully open or fully closed.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n          </div>\n          <div className=\"three_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"commandOnlyOpenClose\" defaultChecked={this.props.attributes.commandOnlyOpenClose} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>commandOnlyOpenClose</i></span>\n            </label>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the state.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n          </div>\n          <div className=\"three_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"queryOnlyOpenClose\" defaultChecked={this.props.attributes.queryOnlyOpenClose} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>queryOnlyOpenClose</i></span>\n            </label>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Google shouldn't change the device state.</span>\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default OpenClose\n","import React from 'react';\n\nclass Rotation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.update = this.update.bind(this);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n  }\n\n  update(event){\n    this.props.update('attributes/' + event.target.id,event.target.value);\n  }\n\n  updateCheckbox(event){\n    this.props.update('attributes/' + event.target.id,event.target.checked);\n  }\n\n  render() {\n    return (\n      <div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n\n          </div>\n          <div className=\"three_table_cel\">\n            Minimum rotation: <input type=\"number\" id=\"rotationDegreesRange/rotationDegreesMin\" defaultValue={ this.props.attributes.rotationDegreesRange ? this.props.attributes.rotationDegreesRange.rotationDegreesMin : 0} min=\"0\" max=\"100\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Minimum rotation degrees that a device can rotate.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n\n          </div>\n          <div className=\"three_table_cel\">\n            Maximum rotation: <input type=\"number\" id=\"rotationDegreesRange/rotationDegreesMax\" defaultValue={this.props.attributes.rotationDegreesRange ? this.props.attributes.rotationDegreesRange.rotationDegreesMax : 0} min=\"0\" max=\"100\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Maximum rotation degrees that a device can rotate.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n\n          </div>\n          <div className=\"three_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"commandOnlyRotation\" defaultChecked={this.props.attributes.commandOnlyRotation} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>commandOnlyRotation</i></span>\n            </label>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the device.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n\n          </div>\n          <div className=\"three_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"supportsContinuousRotation\" defaultChecked={this.props.attributes.supportsContinuousRotation} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>supportsContinuousRotation</i></span>\n            </label>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if the device supports continuous rotation.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n\n          </div>\n          <div className=\"three_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"supportsDegrees\" defaultChecked={this.props.attributes.supportsDegrees} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>supportsDegrees</i></span>\n            </label>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if the device allows rotation by degree.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n\n          </div>\n          <div className=\"three_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"supportsPercent\" defaultChecked={this.props.attributes.supportsPercent} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>supportsPercent</i></span>\n            </label>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if device allows rotation by percent.</span>\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default Rotation\n","import React from 'react';\n\nclass Fill extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateLevels = this.updateLevels.bind(this);\n    this.addLevel = this.addLevel.bind(this);\n  }\n\n  updateLevels(event){\n    const id = event.target.id.split('_')\n    const level_id = id[1]\n    //Process the attribute and value depending of the attribute\n    const level_attribute = id[0] === 'lang' ? id[0] : 'level_synonym';\n    const value = id[0] === 'lang' ? event.target.value : event.target.value.split(',')\n    //Update the temporal data and update it\n    var temp_availableFillLevels = this.props.attributes.availableFillLevels\n    temp_availableFillLevels.levels[level_id].level_values[0][level_attribute] = value\n    if (id[0] === 'names') temp_availableFillLevels.levels[level_id].level_name = value[0]\n    this.props.update('attributes/availableFillLevels', temp_availableFillLevels);\n  }\n\n  addLevel(){\n    var temp_availableFillLevels = this.props.attributes.availableFillLevels\n    temp_availableFillLevels.levels.push({\n      \"level_name\": \"\",\n      \"level_values\": [\n        {\n          \"level_synonym\": [\"\"],\n          \"lang\": \"en\"\n        }\n      ]\n    });\n    this.props.update('attributes/availableFillLevels', temp_availableFillLevels);\n  }\n\n  render() {\n\n    const names_box = {\n      width: '150px'\n    }\n\n    const levels = this.props.attributes.availableFillLevels.levels.map((level, i) => {\n      return (\n              <div key={i}>\n                <div className=\"two_table_row\" key={i}>\n                  <div className=\"two_table_cel\">\n                  </div>\n                  <div className=\"two_table_cel\">\n                    <label>\n                      <span>Languaje: </span>\n                      <select name=\"type\" id={\"lang_\" + i} value={level.level_values[0].lang} onChange={this.updateLevels}>\n                        <option value=\"es\">es</option>\n                        <option value=\"en\">en</option>\n                      </select>\n                    </label>\n                    <label>\n                      <span>Fill level name: </span>\n                      <input type=\"text\" id={\"names_\" + i} style={names_box} defaultValue={level.level_values[0].level_synonym} placeholder=\"Fill level name\" onChange={this.updateLevels}/>\n                    </label>\n                  </div>\n                </div>\n              </div>\n              )\n    });\n\n    return (\n      <div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n          </div>\n          <div className=\"three_table_cel\">\n            Add a level <button type=\"button\" className=\"add_attribute_button\" onClick={ this.addLevel }>Add</button>\n          </div>\n        </div>\n\n        {levels}\n\n      </div>\n    );\n  }\n}\n\nexport default Fill\n","import React from 'react';\n\nclass ArmDisarm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateSecurityLevel = this.updateSecurityLevel.bind(this);\n    this.addSecurityLevel = this.addSecurityLevel.bind(this);\n  }\n\n  updateSecurityLevel(event){\n    const id = event.target.id.split('_')\n    const level_id = id[1]\n    //Process the attribute and value depending of the attribute\n    const level_attribute = id[0] === 'lang' ? id[0] : 'level_synonym';\n    const value = id[0] === 'lang' ? event.target.value : event.target.value.split(',')\n    //Update the temporal data and update it\n    var temp_availableArmLevels = this.props.attributes.availableArmLevels\n    temp_availableArmLevels.levels[level_id].level_values[0][level_attribute] = value\n    if (id[0] === 'names') temp_availableArmLevels.levels[level_id].level_name = value[0]\n    this.props.update('attributes/availableArmLevels', temp_availableArmLevels);\n  }\n\n  addSecurityLevel(){\n    var temp_availableArmLevels = this.props.attributes.availableArmLevels\n    temp_availableArmLevels.levels.push({\n      \"level_name\": \"\",\n      \"level_values\": [\n        {\n          \"level_synonym\": [\"\"],\n          \"lang\": \"en\"\n        }\n      ]\n    });\n    this.props.update('attributes/availableArmLevels', temp_availableArmLevels);\n  }\n\n  render() {\n\n    const names_box = {\n      marginLeft: '20px',\n      width: '150px'\n    }\n\n    const levels = this.props.attributes.availableArmLevels.levels.map((level, i) => {\n      return (\n              <div key={i}>\n                <div className=\"two_table_row\" key={i}>\n                  <div className=\"two_table_cel\">\n                  </div>\n                  <div className=\"two_table_cel\">\n                    <label>\n                      <span>Languaje: </span>\n                      <select name=\"type\" id={\"lang_\" + i} value={level.level_values[0].lang} onChange={this.updateSecurityLevel}>\n                        <option value=\"es\">es</option>\n                        <option value=\"en\">en</option>\n                      </select>\n                    </label>\n                    <label>\n                      <span>Level name: </span>\n                      <input type=\"text\" id={\"names_\" + i} style={names_box} defaultValue={level.level_values[0].level_synonym} placeholder=\"Security level name\" onChange={this.updateSecurityLevel}/>\n                    </label>\n                  </div>\n                </div>\n              </div>\n              )\n    });\n\n    return (\n      <div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n          </div>\n          <div className=\"three_table_cel\">\n            Add a security level <button type=\"button\" className=\"add_attribute_button\" onClick={ this.addSecurityLevel }>Add</button>\n          </div>\n        </div>\n\n        {levels}\n\n      </div>\n    );\n  }\n}\n\nexport default ArmDisarm\n","import React from 'react';\n\nclass StartStop extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n    this.updateArray = this.updateArray.bind(this);\n  }\n\n\n  updateCheckbox(event){\n    this.props.update('attributes/' + event.target.id,event.target.checked);\n  }\n\n  updateArray(event){\n    this.props.update('attributes/' + event.target.id,event.target.value.split(','));\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n\n          </div>\n          <div className=\"three_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"pausable\" defaultChecked={this.props.attributes.pausable} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>pausable</i></span>\n            </label>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if the device can be paused.</span>\n          </div>\n        </div>\n\n        <div className=\"two_table_row\">\n          <div className=\"two_table_cel\">\n\n          </div>\n          <div className=\"two_table_cel\">\n            Zones: <input type=\"text\" id=\"availableThermostatModes\" defaultValue={this.props.attributes.availableZones} onChange={this.updateArray} className=\"text_input\"/>\n          </div>\n        </div>\n\n        <div className=\"two_table_row\">\n          <div className=\"two_table_cel\">\n\n          </div>\n          <div className=\"two_table_cel\">\n            <span className=\"attribute_advise\">Supported zones names separeted by commas.</span>\n          </div>\n        </div>\n\n\n      </div>\n    );\n  }\n}\n\nexport default StartStop\n","import React from 'react';\n\nclass Timer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n    this.update = this.update.bind(this);\n  }\n\n\n  updateCheckbox(event){\n    this.props.update('attributes/' + event.target.id,event.target.checked);\n  }\n\n  update(event){\n    this.props.update('attributes/' + event.target.id,event.target.value);\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n\n          </div>\n          <div className=\"three_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"commandOnlyTimer\" defaultChecked={this.props.attributes.commandOnlyTimer} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>commandOnlyTimer</i></span>\n            </label>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the state.</span>\n          </div>\n        </div>\n\n        <div className=\"two_table_row\">\n          <div className=\"two_table_cel\">\n\n          </div>\n          <div className=\"two_table_cel\">\n            Max time: <input type=\"text\" id=\"maxTimerLimitSec\" defaultValue={this.props.attributes.maxTimerLimitSec} onChange={this.update} className=\"text_input\"/>\n          </div>\n        </div>\n\n        <div className=\"two_table_row\">\n          <div className=\"two_table_cel\">\n\n          </div>\n          <div className=\"two_table_cel\">\n            <span className=\"attribute_advise\">Indicates the longest timer setting in seconds available on the device.</span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Timer\n","import React from 'react';\n\nclass TemperatureControl extends React.Component {\n  constructor(props) {\n    super(props);\n    this.update = this.update.bind(this);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n  }\n\n  update(event){\n    this.props.update('attributes/' + event.target.id,event.target.value);\n  }\n\n  updateCheckbox(event){\n    this.props.update('attributes/' + event.target.id,event.target.checked);\n  }\n\n  render() {\n\n\n    return (\n      <div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n\n          </div>\n          <div className=\"three_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"commandOnlyTemperatureControl\" defaultChecked={this.props.attributes.commandOnlyTemperatureControl} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>commandOnlyTemperatureControl</i></span>\n            </label>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the temperature.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n          </div>\n          <div className=\"three_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"queryOnlyTemperatureControl\" defaultChecked={this.props.attributes.queryOnlyTemperatureControl} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>queryOnlyTemperatureControl</i></span>\n            </label>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Google shouldn't change the device temperature settings.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n\n          </div>\n          <div className=\"three_table_cel\">\n            Minimum temperature: <input type=\"number\" id=\"temperatureRange/minThresholdCelsius\" defaultValue={ this.props.attributes.temperatureRange ? this.props.attributes.temperatureRange.minThresholdCelsius : 0} min=\"0\" max=\"400\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Minimum temperature (in Celsius) supported by the device.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n\n          </div>\n          <div className=\"three_table_cel\">\n            Maximum temperature: <input type=\"number\" id=\"temperatureRange/maxThresholdCelsius\" defaultValue={this.props.attributes.temperatureRange ? this.props.attributes.temperatureRange.maxThresholdCelsius : 0} min=\"0\" max=\"400\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Maximum temperature (in Celsius) supported by the device.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n\n          </div>\n          <div className=\"three_table_cel\">\n            Step: <input type=\"number\" id=\"temperatureStepCelsius\" defaultValue={this.props.attributes.temperatureStepCelsius} min=\"0\" max=\"400\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Specifies the relative temperature step.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n\n          </div>\n          <div className=\"three_table_cel\">\n            <select name=\"type\" id=\"temperatureUnitForUX\" className=\"table_input\" value={this.props.attributes.temperatureUnitForUX} onChange={this.update}>\n              <option value=\"C\">Celsius</option>\n              <option value=\"F\">Fahrenheit</option>\n            </select>\n          </div>\n        </div>\n\n\n\n      </div>\n    );\n  }\n}\n\nexport default TemperatureControl\n","import React from 'react';\n\nclass Cook extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateMode = this.updateMode.bind(this);\n    this.addMode = this.addMode.bind(this);\n    this.updatePreset = this.updatePreset.bind(this);\n    this.addPreset = this.addPreset.bind(this);\n  }\n\n  updateMode(event){\n    const id = event.target.id.split('_')\n    const mode_id = id[1]\n    var temp_supportedCookingModes = this.props.attributes.supportedCookingModes\n\n    if (event.target.value === 'delete'){\n      temp_supportedCookingModes.splice(mode_id, 1)\n    } else if (event.target.value !== 'select') {\n      temp_supportedCookingModes[mode_id] = event.target.value;\n    }\n\n    this.props.update('attributes/supportedCookingModes', temp_supportedCookingModes);\n  }\n\n  addMode(){\n    var temp_supportedCookingModes = this.props.attributes.supportedCookingModes\n    temp_supportedCookingModes.push(\"\");\n    this.props.update('attributes/supportedCookingModes', temp_supportedCookingModes);\n  }\n\n  updatePreset(event){\n    const id = event.target.id.split('_')\n    const preset_id = id[1]\n    var temp_foodPresets = this.props.attributes.foodPresets\n\n    if(id[0] === 'lang'){\n      temp_foodPresets[preset_id].food_synonyms[0].lang = event.target.value;\n    } else if (id[0] === 'names'){\n      temp_foodPresets[preset_id].food_synonyms[0].synonym = event.target.value.split(',');\n      temp_foodPresets[preset_id].food_preset_name = event.target.value.split(',')[0]\n    } else if (id[0] === 'units'){\n      temp_foodPresets[preset_id].supported_units[0] = event.target.value;\n    }\n    this.props.update('attributes/foodPresets', temp_foodPresets);\n  }\n\n  addPreset(){\n    var temp_foodPresets = this.props.attributes.foodPresets\n    temp_foodPresets.push({\n      \"food_preset_name\": \"\",\n      \"supported_units\": [\"\"],\n      \"food_synonyms\": [{\n        \"synonym\": [\"\"],\n        \"language\": \"en\"\n      }]\n    });\n    this.props.update('attributes/foodPresets', temp_foodPresets);\n  }\n\n  render() {\n\n    const names_box = {\n      width: '150px'\n    }\n\n    const modes = this.props.attributes.supportedCookingModes.map((mode, i) => {\n\n      return (\n              <div key={i}>\n                <div className=\"two_table_row\">\n                  <div className=\"two_table_cel\">\n                  </div>\n                  <div className=\"two_table_cel\">\n                    <label>\n                      <span>Mode: </span>\n                      <select name=\"type\" id={\"mode_\" + i} value={mode} onChange={this.updateMode}>\n                        <option value=\"select\">Select a mode</option>\n                        <option value=\"delete\">Delete this mode</option>\n                        <option value=\"UNKNOWN_COOKING_MODE\">UNKNOWN_COOKING_MODE</option>\n                        <option value=\"BAKE\">BAKE</option>\n                        <option value=\"BEAT\">BEAT</option>\n                        <option value=\"BLEND\">BLEND</option>\n                        <option value=\"BOIL\">BOIL</option>\n                        <option value=\"BREW\">BREW</option>\n                        <option value=\"BROIL\">BROIL</option>\n                        <option value=\"CONVECTION_BAKE\">CONVECTION_BAKE</option>\n                        <option value=\"COOK\">COOK</option>\n                        <option value=\"DEFROST\">DEFROST</option>\n                        <option value=\"DEHYDRATE\">DEHYDRATE</option>\n                        <option value=\"FERMENT\">FERMENT</option>\n                        <option value=\"FRY\">FRY</option>\n                        <option value=\"KNEAD\">KNEAD</option>\n                        <option value=\"MICROWAVE\">MICROWAVE</option>\n                        <option value=\"PRESSURE_COOK\">PRESSURE_COOK</option>\n                        <option value=\"PUREE\">PUREE</option>\n                        <option value=\"ROAST\">ROAST</option>\n                        <option value=\"SAUTE\">SAUTE</option>\n                        <option value=\"SLOW_COOK\">SLOW_COOK</option>\n                        <option value=\"SOUS_VIDE\">SOUS_VIDE</option>\n                        <option value=\"STEAM\">STEAM</option>\n                        <option value=\"STEW\">STEW</option>\n                        <option value=\"WARM\">WARM</option>\n                        <option value=\"WHIP\">WHIP</option>\n                      </select>\n                    </label>\n                  </div>\n                </div>\n              </div>\n\n              )\n    });\n\n    const presets = this.props.attributes.foodPresets.map((preset, i) => {\n\n      return (\n              <div key={i}>\n                <div className=\"two_table_row\">\n                  <div className=\"two_table_cel\">\n                  </div>\n                  <div className=\"two_table_cel\">\n                    <label>\n                      <span>Language: </span>\n                      <select name=\"type\" id={\"lang_\" + i} value={preset.food_synonyms[0].lang} onChange={this.updatePreset}>\n                        <option value=\"es\">es</option>\n                        <option value=\"en\">en</option>\n                      </select>\n                    </label>\n                    <label style={names_box}>\n                      <span>Preset name: </span>\n                      <input type=\"text\" id={\"names_\" + i} defaultValue={preset.food_synonyms[0].synonym} placeholder=\"Preset name\" onChange={this.updatePreset}/>\n                    </label>\n                    <label>\n                      <span>Units: </span>\n                      <select name=\"type\" id={\"units_\" + i} value={preset.supported_units[0]} onChange={this.updatePreset}>\n                        <option value=\"NO_UNITS\">No units</option>\n                        <option value=\"UNKNOWN_UNITS\">Unkown</option>\n                        <option value=\"CENTIMETERS\">Centimeters</option>\n                        <option value=\"CUPS\">Cups</option>\n                        <option value=\"DECILITERS\">Deciliters</option>\n                        <option value=\"FEET\">Feet</option>\n                        <option value=\"FLUID_OUNCES\">Fluid ounces</option>\n                        <option value=\"GALLONS\">Gallons</option>\n                        <option value=\"GRAMS\">Grams</option>\n                        <option value=\"INCHES\">Inches</option>\n                        <option value=\"KILOGRAMS\">Kilograms</option>\n                        <option value=\"LITERS\">Liters</option>\n                        <option value=\"METERS\">Meters</option>\n                        <option value=\"MILLIGRAMS\">Miligrams</option>\n                        <option value=\"MILLILITERS\">Mililiters</option>\n                        <option value=\"MILLIMETERS\">Milimeters</option>\n                        <option value=\"OUNCES\">Ounces</option>\n                        <option value=\"PINCH\">Pinch</option>\n                        <option value=\"PINTS\">Pints</option>\n                        <option value=\"PORTION\">Portion</option>\n                        <option value=\"POUNDS\">Pounds</option>\n                        <option value=\"QUARTS\">Quarts</option>\n                        <option value=\"TABLESPOONS\">Tablespoons</option>\n                        <option value=\"TEASPOONS\">Teaspoons</option>\n                      </select>\n                    </label>\n                  </div>\n                </div>\n              </div>\n              )\n    });\n\n    return (\n      <div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n          </div>\n          <div className=\"three_table_cel\">\n            Add a cooking mode <button type=\"button\" className=\"add_attribute_button\" onClick={ this.addMode }>Add</button>\n          </div>\n        </div>\n\n        {modes}\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n          </div>\n          <div className=\"three_table_cel\">\n            Add a preset <button type=\"button\" className=\"add_attribute_button\" onClick={ this.addPreset }>Add</button>\n          </div>\n        </div>\n\n        {presets}\n\n      </div>\n    );\n  }\n}\n\nexport default Cook\n","import React from 'react';\n\nclass SensorState extends React.Component {\n  constructor(props) {\n    super(props);\n    this.update = this.update.bind(this);\n  }\n\n  update(event){\n    const value = event.target.value;\n    var sensor = {\n      name: value\n    }\n\n    switch (value) {\n      case 'AirQuality':\n        sensor['descriptiveCapabilities'] = {\n          availableStates: ['fair','good','healthy','moderate','poor','severe','unhealthy','unhealthy for sensitive groups','very poor','very unhealthy','unknown'],\n        }\n        sensor['numericCapabilities']= { rawValueUnit: \"AQI\" }\n        break;\n      case 'CarbonDioxideLevel':\n        sensor['descriptiveCapabilities'] = {\n          numericCapabilities: { rawValueUnit: \"PARTS_PER_MILLION\" }\n        }\n        break;\n      case 'CarbonMonoxideLevel':\n        sensor['descriptiveCapabilities'] = {\n          availableStates: ['carbon monoxide detected','high','no carbon monoxide detected','unknown']\n        }\n        sensor['numericCapabilities']= { rawValueUnit: \"PARTS_PER_MILLION\" }\n        break;\n      case 'FilterCleanliness':\n        sensor['descriptiveCapabilities'] = {\n          availableStates: ['clean','dirty','needs replacement','unknown']\n        }\n        break;\n      case 'FilterLifeTime':\n        sensor['descriptiveCapabilities'] = {\n          availableStates: ['good','new','replace soon','replace now','unknown']\n        }\n        sensor['numericCapabilities']= { rawValueUnit: \"PERCENTAGE\" }\n        break;\n      case 'HEPAFilterLifeTime':\n        sensor['numericCapabilities']= { rawValueUnit: \"PERCENTAGE\" }\n        break;\n      case 'Max2FilterLifeTime':\n        sensor['numericCapabilities']= { rawValueUnit: \"PERCENTAGE\" }\n        break;\n      case 'PM2.5':\n        sensor['numericCapabilities']= { rawValueUnit: \"MICROGRAMS_PER_CUBIC_METER\" }\n        break;\n      case 'PM10':\n        sensor['numericCapabilities']= { rawValueUnit: \"MICROGRAMS_PER_CUBIC_METER\" }\n        break;\n      case 'PreFilterLifeTime':\n        sensor['numericCapabilities']= { rawValueUnit: \"PERCENTAGE\" }\n        break;\n      case 'SmokeLevel':\n        sensor['descriptiveCapabilities'] = {\n          availableStates: ['smoke detected','high','no smoke detected','unknown']\n        }\n        sensor['numericCapabilities']= { rawValueUnit: \"PARTS_PER_MILLION\" }\n        break;\n      case 'WaterLeak':\n        sensor['descriptiveCapabilities'] = {\n          availableStates: ['leak','no leak','unknown']\n        }\n        break;\n      case 'RainDetection':\n        sensor['descriptiveCapabilities'] = {\n          availableStates: ['rain detected','no rain detected','unknown']\n        }\n        break;\n      case 'VolatileOrganicCompounds':\n        sensor['numericCapabilities']= { rawValueUnit: \"PARTS_PER_MILLION\" }\n        break;\n    }\n\n    var sensorStatesSupported = []\n    sensorStatesSupported.push(sensor);\n    this.props.update('attributes/' + event.target.id,sensorStatesSupported);\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n\n          </div>\n          <div className=\"three_table_cel\">\n            <select name=\"type\" id=\"sensorStatesSupported\" className=\"table_input\" value={this.props.attributes.sensorStatesSupported[0].name} onChange={this.update}>\n              <option value=\"\">Select</option>\n              <option value=\"AirQuality\">Air Quality</option>\n              <option value=\"CarbonDioxideLevel\">Carbon Dioxide Level</option>\n              <option value=\"CarbonMonoxideLevel\">Carbon Monoxide Level</option>\n              <option value=\"FilterCleanliness\">Filter Clean liness</option>\n              <option value=\"FilterLifeTime\">Filter Life Time</option>\n              <option value=\"HEPAFilterLifeTime\">HEPA Filter Life Time</option>\n              <option value=\"Max2FilterLifeTime\">Max2 Filter Life Time</option>\n              <option value=\"PM2.5\">PM2.5</option>\n              <option value=\"PM10\">PM10</option>\n              <option value=\"PreFilterLifeTime\">PreFilter Life Time</option>\n              <option value=\"SmokeLevel\">Smoke Level</option>\n              <option value=\"WaterLeak\">Water Leak</option>\n              <option value=\"RainDetection\">Rain Detection</option>\n              <option value=\"VolatileOrganicCompounds\">Volatile Organic Compounds</option>\n            </select>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\"></span>\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default SensorState\n","import React from 'react';\nimport Text from '../editor/Text'\nimport Scene from '../editor/traits/Scene'\nimport OnOff from '../editor/traits/OnOff'\nimport Brightness from '../editor/traits/Brightness'\nimport FanSpeed from '../editor/traits/FanSpeed'\nimport ColorSetting from '../editor/traits/ColorSetting'\nimport TemperatureSetting from '../editor/traits/TemperatureSetting'\nimport Toggles from '../editor/traits/Toggles'\nimport Modes from '../editor/traits/Modes'\nimport HumiditySetting from '../editor/traits/HumiditySetting'\nimport OpenClose from '../editor/traits/OpenClose'\nimport Rotation from '../editor/traits/Rotation'\nimport Fill from '../editor/traits/Fill'\nimport ArmDisarm from '../editor/traits/ArmDisarm'\nimport StartStop from '../editor/traits/StartStop'\nimport Timer from '../editor/traits/Timer'\nimport TemperatureControl from '../editor/traits/TemperatureControl'\nimport Cook from '../editor/traits/Cook'\nimport SensorState from '../editor/traits/SensorState'\nimport getCookieValue from '../../functions'\nimport { root, deviceReference } from '../../constants'\n\nimport './Editor.css';\n\nclass Editor extends React.Component {\n  constructor(props) {\n    super(props);\n    const id = window.location.pathname.split('/')[3];\n    var create = false;\n    if (id === \"\") create = true;\n    this.state = {\n      id: id,\n      create: create,\n      device: {\n        attributes: {},\n        deviceInfo: {},\n        id: \"\",\n        name: {\n          defaultNames: [],\n          nicknames: [],\n          name: \"\"\n        },\n        traits: [],\n        type: \"\"\n      },\n      status: {\n        online: true\n      },\n      posible_traits: [],\n      save_status: \"\"\n    }\n    this.updateNames = this.updateNames.bind(this);\n    this.update = this.update.bind(this);\n    this.updateId = this.updateId.bind(this);\n    this.updateType = this.updateType.bind(this);\n    this.updateTraits = this.updateTraits.bind(this);\n    this.save = this.save.bind(this);\n    this.delete = this.delete.bind(this);\n    this.renderAttrinutes = this.renderAttrinutes.bind(this);\n  }\n\n  componentDidMount() {\n    if (!this.state.create){\n      var http = new XMLHttpRequest();\n      http.onload = function (e) {\n        if (http.readyState === 4) {\n          if (http.status === 200) {\n            var data = JSON.parse(http.responseText);\n            this.setState({\n               device: data,\n               posible_traits: deviceReference.devices[data.type].traits\n             });\n          } else {\n            console.error(http.statusText);\n          }\n        }\n      }.bind(this);\n      http.open(\"GET\", root + \"api/devices/get/\" + this.state.id + \"/\");\n      http.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n      http.send();\n    }\n  }\n\n  updateNames(dumy_key, value){\n    var names = value.split(',');\n    var temp_device = this.state.device\n    temp_device.name = {\n      defaultNames: names,\n      nicknames: names,\n      name: names[0]\n    }\n    this.setState({\n      device: temp_device\n    })\n  }\n\n  update(key, value){\n    var temp_device = this.state.device\n    var keys = key.split('/');\n    if (keys.length === 1)\n      temp_device[key] = value\n    else if (keys.length === 2)\n      temp_device[keys[0]][keys[1]] = value\n    else if (keys.length === 3)\n      temp_device[keys[0]][keys[1]][keys[2]] = value\n    this.setState({\n      device: temp_device\n    })\n  }\n\n  updateId(event){\n    this.update('id',event.target.value)\n  }\n\n  updateType(event){\n    this.update('type',event.target.value)\n    this.setState({\n       posible_traits: deviceReference.devices[event.target.value].traits\n     });\n  }\n\n  updateTraits(event){\n    var temp_device = this.state.device\n    var temp_status = this.state.status\n    if (event.target.checked) {\n      if (this.state.device.traits.includes(event.target.id) === false){\n        //Push the trait to the device\n        temp_device.traits.push(event.target.id)\n        //Set the default values\n        var attributes = deviceReference.traits[event.target.id].attributes;\n        Object.keys(attributes).forEach((attribute, i) => {\n          temp_device.attributes[attribute] = attributes[attribute].default\n        });\n        //Set the default status params\n        var params = deviceReference.traits[event.target.id].params;\n        params.forEach((param, i) => {\n          temp_status[param] = deviceReference.params[param].default\n        });\n      }\n    } else {\n      if (this.state.device.traits.includes(event.target.id) === true){\n        temp_device.traits = temp_device.traits.filter(function(value, index, arr){ return value !== event.target.id;});\n      }\n    }\n    this.setState({\n      device: temp_device\n    })\n  }\n\n  save(){\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      if (http.readyState === 4) {\n        if (http.status === 200) {\n          JSON.parse(http.responseText);\n          this.setState({\n             save_status: \"Saved correctly.\"\n           });\n        } else {\n          console.error(http.statusText);\n          this.setState({\n             save_status: \"Error, the changes haven't been saved.\"\n           });\n        }\n        setTimeout(function(){\n          this.setState({\n             save_status: \"\"\n           });\n        }.bind(this), 5000)\n      }\n    }.bind(this);\n    var payload = {\n      \"device\": this.state.device\n    }\n    if (this.state.create){\n      http.open(\"POST\", root + \"api/devices/create/\");\n      payload.status = this.state.status\n    } else {\n      http.open(\"POST\", root + \"api/devices/update/\");\n    }\n    http.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\n    http.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    http.send(JSON.stringify(payload));\n  }\n\n  delete(){\n    if(window.confirm('Do you want to delete the device?')){\n      var http = new XMLHttpRequest();\n      http.onload = function (e) {\n        if (http.readyState === 4) {\n          if (http.status === 200) {\n            window.location.href = \"/devices/\"\n          } else {\n            console.error(http.statusText);\n            this.setState({\n               save_status: \"Error, the device hasn't been deleted.\"\n             });\n          }\n          setTimeout(function(){\n            this.setState({\n               save_status: \"\"\n             });\n          }.bind(this), 5000)\n        }\n      }.bind(this);\n      http.open(\"GET\", root + \"api/devices/delete/\" + this.state.device.id + \"/\");\n      http.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n      http.send();\n    } else {\n      this.setState({\n         save_status: \"Ok. The device is save.\"\n       });\n    }\n  }\n\n  renderAttrinutes(trait){\n    if (this.state.device.traits.includes(trait)){\n      if (trait === 'action.devices.traits.Scene')\n        return <Scene sceneReversible={this.state.device.attributes.sceneReversible} update={this.update}/>\n      else if (trait === 'action.devices.traits.OnOff')\n        return <OnOff attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.Brightness')\n        return <Brightness commandOnlyBrightness={this.state.device.attributes.commandOnlyBrightness} update={this.update}/>\n      else if (trait === 'action.devices.traits.ColorSetting')\n        return <ColorSetting attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.FanSpeed')\n        return <FanSpeed attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.TemperatureSetting')\n        return <TemperatureSetting attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.Toggles')\n        return <Toggles attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.Modes')\n        return <Modes attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.HumiditySetting')\n        return <HumiditySetting attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.OpenClose')\n        return <OpenClose attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.Rotation')\n        return <Rotation attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.Fill')\n        return <Fill attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.ArmDisarm')\n        return <ArmDisarm attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.StartStop')\n        return <StartStop attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.Timer')\n        return <Timer attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.TemperatureControl')\n        return <TemperatureControl attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.Cook')\n        return <Cook attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.SensorState')\n        return <SensorState attributes={this.state.device.attributes} update={this.update}/>\n    }\n  }\n\n  render() {\n\n    const deleteButton = {\n      backgroundColor: 'red'\n    }\n\n    const deleteButtonDisabled = {\n      backgroundColor: 'red',\n      opacity: '0.2'\n    }\n\n    const types = Object.keys(deviceReference.devices).map((type) => {\n      return <option key={type} value={type}>{deviceReference.devices[type].name}</option>\n    })\n\n    const nicknames = this.state.device.name.nicknames.map((name) => {\n      return name\n    });\n\n    const traits = this.state.posible_traits.map((trait) =>\n      <div key={trait}>\n        <hr className=\"separator\"/>\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n            {deviceReference.traits[trait].name}\n          </div>\n          <div className=\"three_table_cel\">\n            <label>\n              <input type=\"checkbox\" id={trait} defaultChecked={this.state.device.traits.includes(trait)} onChange={this.updateTraits}/>\n\n            </label>\n          </div>\n          <div className=\"three_table_cel\">\n            Read Google's <a href={\"https://developers.google.com/assistant/smarthome/traits/\" + trait.split('.')[3].toLowerCase()} target=\"blanck\">documentation</a>\n          </div>\n        </div>\n        {this.renderAttrinutes(trait)}\n      </div>\n    );\n\n    return (\n      <div>\n\n        <div className=\"page_block_container\">\n          <h2>Global settings</h2>\n          <div className=\"advise\">\n            <span>General settings of the device.</span>\n            <hr/>\n          </div>\n          <div className=\"two_table_row\">\n            <div className=\"two_table_cel\">\n              Device ID*\n            </div>\n            <div className=\"two_table_cel\">\n              <input type=\"text\" className=\"two_input\" id=\"id\" defaultValue={this.state.device.id} onChange={this.updateId} disabled={ this.state.create ? false : true }/>\n            </div>\n          </div>\n          <div className=\"two_table_row\">\n            <div className=\"two_table_cel\">\n              Device Type*\n            </div>\n            <div className=\"two_table_cel\">\n              <select name=\"type\" className=\"two_input\" id=\"type\" value={this.state.device.type} onChange={this.updateType} disabled={ this.state.create ? false : true }>\n                <option value=\"default\">Select a device</option>\n                {types}\n              </select>\n            </div>\n          </div>\n          <Text name=\"Nick names*\" data=\"nicknames\" value={nicknames} update={this.updateNames}/>\n          <Text name=\"Hardware version\" data=\"deviceInfo/hwVersion\" value={this.state.device.deviceInfo ? this.state.device.deviceInfo.hwVersion : ''} update={this.update}/>\n          <Text name=\"Software version\" data=\"deviceInfo/swVersion\" value={this.state.device.deviceInfo ? this.state.device.deviceInfo.swVersion : ''} update={this.update}/>\n          <Text name=\"Manufacturer\" data=\"deviceInfo/manufacturer\" value={this.state.device.deviceInfo ? this.state.device.deviceInfo.manufacturer : ''} update={this.update}/>\n          <Text name=\"Model\" data=\"deviceInfo/model\" value={this.state.device.deviceInfo ? this.state.device.deviceInfo.model : ''} update={this.update}/>\n          <div className=\"advise\">\n            <span>Nick names must be separeted by <i>,</i> commas.</span><br/>\n            <span>* data is required.</span>\n          </div>\n          <hr/>\n          <h2>Traits</h2>\n          <div className=\"advise\">\n            <span>The traits define what the device can do.</span>\n          </div>\n          {traits}\n          <hr/>\n          <div className=\"two_table_cel\">\n            <button type=\"button\" style={ this.state.create ? deleteButtonDisabled : deleteButton } onClick={ this.delete } disabled={ this.state.create ? true : false}>Delete</button>\n            <button type=\"button\" onClick={ this.save }>Save</button>\n            <span>{this.state.save_status}</span>\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default Editor\n","import React from 'react';\nimport ReactJson from 'react-json-view'\nimport getCookieValue from '../../functions'\nimport { root } from '../../constants'\n\nclass Editor extends React.Component {\n  constructor(props) {\n    super(props);\n    const id = window.location.pathname.split('/')[3];\n    this.state = {\n      id: id,\n      device: {\n        attributes: {},\n        deviceInfo: {},\n        id: \"\",\n        name: {\n          defaultnames: [],\n          nicknames: [],\n          name: \"\"\n        },\n        traits: [],\n        type: \"\"\n      },\n      status: {\n        online: true\n      }\n    }\n  }\n\n  componentDidMount() {\n    var dev = new XMLHttpRequest();\n    dev.onload = function (e) {\n      if (dev.readyState === 4) {\n        if (dev.status === 200) {\n          var data = JSON.parse(dev.responseText);\n          this.setState({\n             device: data\n           });\n        } else {\n          console.error(dev.statusText);\n        }\n      }\n    }.bind(this);\n    dev.open(\"GET\", root + \"api/devices/get/\" + this.state.id + \"/\");\n    dev.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    dev.send();\n\n    var sta = new XMLHttpRequest();\n    sta.onload = function (e) {\n      if (sta.readyState === 4) {\n        if (sta.status === 200) {\n          var data = JSON.parse(sta.responseText);\n          this.setState({\n             status: data\n           });\n        } else {\n          console.error(sta.statusText);\n        }\n      }\n    }.bind(this);\n    sta.open(\"GET\", root + \"api/status/get/\" + this.state.id + \"/\");\n    sta.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    sta.send();\n  }\n\n\n\n  render() {\n\n    const json_viewer = {\n      textAlign: 'left',\n    }\n\n    return (\n      <div>\n\n        <div className=\"page_block_container\">\n          <h2>Device definition</h2>\n          <div className=\"advise\">\n            <span>General settings of the device.</span>\n            <hr/>\n          </div>\n          <div style={json_viewer}>\n            <ReactJson src={this.state.device} />\n          </div>\n        </div>\n\n        <div className=\"page_block_container\">\n          <h2>Device status</h2>\n          <div className=\"advise\">\n            <span>Status of the device.</span>\n            <hr/>\n          </div>\n          <div style={json_viewer}>\n            <ReactJson src={this.state.status} />\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default Editor\n","import React from 'react';\nimport getCookieValue from '../../functions'\nimport { root, deviceReference } from '../../constants'\n\nimport './Connecting.css';\n\nclass Connecting extends React.Component {\n  constructor(props) {\n    super(props);\n    const id = window.location.pathname.split('/')[3]\n    this.state = {\n      id: id,\n      traits: [],\n      params: [],\n      commands: []\n    }\n  }\n\n  componentDidMount() {\n    var dev = new XMLHttpRequest();\n    dev.onload = function (e) {\n      if (dev.readyState === 4) {\n        if (dev.status === 200) {\n          const data = JSON.parse(dev.responseText);\n          const traits = data.traits;\n          var commands = [];\n          var params = []\n          traits.forEach((trait) => {\n            params = params.concat(deviceReference.traits[trait].params);\n            commands = commands.concat(deviceReference.traits[trait].commands);\n          });\n          this.setState({\n             traits: traits,\n             params: params,\n             commands: commands\n           });\n        } else {\n          console.error(dev.statusText)\n        }\n      }\n    }.bind(this);\n    dev.open(\"GET\", root + \"api/devices/get/\" + this.state.id + \"/\");\n    dev.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    dev.send();\n  }\n\n  render() {\n\n    const params = this.state.params.map((param, i) => {\n      var type = deviceReference.params[param].type\n      if (type === 'list')\n        type = 'string'\n\n      var topic = 'None - Controlled only by the device'\n      if (deviceReference.params[param].commanded)\n        topic = 'device/' + this.state.id + '/' + param\n\n      return (\n        <div key={i} className=\"param_table_row\">\n          <div className=\"param_table_cel\">{param}</div>\n          <div className=\"param_table_cel\">{topic}</div>\n          <div className=\"param_table_cel\">{type}</div>\n        </div>\n      )\n    })\n\n    const commands = this.state.commands.map((command, i) => {\n      return (\n        <div key={i} className=\"command_table_row\">\n          <div className=\"command_table_cel\">{command.command}</div>\n          <div className=\"command_table_cel\">{'device/' + this.state.id + '/command'}</div>\n          <div className=\"command_table_cel\">{command.description}</div>\n        </div>\n      )\n    })\n\n    return (\n      <div>\n\n        <div className=\"page_block_container\">\n          <h2>Params</h2>\n          <div className=\"advise\">\n            <p>Params are data interchanged between Google and the device and stored in Homeware database. </p>\n            <p>If the param has got a notification topic, Google Home can control it. A notification will be sent in this MQTT topic when Google change a param.</p>\n            <p>If the param hasn't got a notification topic, the device should update the param value when necessary.</p>\n            <hr/>\n          </div>\n          <div className=\"param_table_row param_table_header\">\n            <div className=\"param_table_cel\"><b>Param</b></div>\n            <div className=\"param_table_cel\"><b>Notifications topic</b></div>\n            <div className=\"param_table_cel\"><b>Type</b></div>\n          </div>\n          {params}\n          <div className=\"advise\">\n            <hr/>\n            <p>The device can change the value of any param sending an execute request to device/control topic as follow</p>\n            <p>&#123;\"id\":\"light001\",\"param\":\"brightness\",\"value\":\"80\",\"intent\":\"execute\"&#125;</p>\n          </div>\n        </div>\n\n        <div className=\"page_block_container\">\n          <h2>Commands</h2>\n          <div className=\"advise\">\n            <p>Commands are directs orders from Google to the device. Commands are not stored in Homeware's database.</p>\n            <hr/>\n          </div>\n          <div className=\"command_table_row command_table_header\">\n            <div className=\"command_table_cel\"><b>Command</b></div>\n            <div className=\"command_table_cel\"><b>Notifications topic</b></div>\n            <div className=\"command_table_cel\"><b>Description</b></div>\n          </div>\n          {commands}\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default Connecting\n","import React from 'react';\nimport getCookieValue from '../../functions'\nimport { root } from '../../constants'\n\nimport './Tasks.css';\n\nclass Tasks extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      devices: [],\n      tasks: []\n    }\n    this.loadData = this.loadData.bind(this);\n    this.openManager = this.openManager.bind(this);\n    this.newTask = this.newTask.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  loadData(){\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      if (http.readyState === 4) {\n        if (http.status === 200) {\n          var data = JSON.parse(http.responseText);\n          this.setState({\n             devices: data.devices,\n             tasks: data.tasks\n           });\n        } else {\n          console.error(http.statusText);\n        }\n      }\n    }.bind(this);\n    http.open(\"GET\", root + \"api/global/get/\");\n    http.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    http.send();\n  }\n\n  openManager(event){\n    window.location.href = '/tasks/manager/' +  event.target.id.split('_')[1]\n  }\n\n  newTask(){\n    window.location.href = '/tasks/manager/'\n  }\n\n  render() {\n\n    const tasks = this.state.tasks.map((task, i) => {\n      return(\n        <div key={i} className=\"task_card\">\n          <h2 className=\"task_card_title\" id={ 'task_' + i } onClick={ this.openManager }>{ task.title }</h2>\n          <hr className=\"task_card_divider\"/>\n          <p>{ task.description }</p>\n        </div>\n      )\n    });\n\n    return (\n      <div>\n        <div className=\"page_title_container\">\n          <h2>Tasks</h2>\n        </div>\n\n        <div className=\"page_cards_container\">\n          {tasks}\n        </div>\n\n        <div className=\"page_buttons_containter\">\n          <button type=\"button\" onClick={ this.newTask }>New</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Tasks\n","import React from 'react';\nimport Triggers from './Triggers'\n\nimport '../pages/Manager.css';\n\nclass Logic extends React.Component {\n  constructor(props) {\n    super(props);\n    this.delete = this.delete.bind(this);\n    this.addOr = this.addOr.bind(this);\n    this.addAnd = this.addAnd.bind(this);\n    this.openTriggerAssistant = this.openTriggerAssistant.bind(this);\n  }\n\n  delete() {\n    this.props.delete(this.props.id);\n  }\n\n  addOr() {\n    this.props.addTriggerLogic('or',this.props.id)\n  }\n\n  addAnd() {\n    this.props.addTriggerLogic('and',this.props.id)\n  }\n\n  openTriggerAssistant() {\n    this.props.openTriggerAssistant(this.props.id)\n  }\n\n  render() {\n\n    const num_operations = this.props.triggers[this.props.id].operation.length-1;\n    const operations = this.props.triggers[this.props.id].operation.map((op, i) => {\n      return (\n        <div key={op + i }>\n          <Triggers id={op} triggers={this.props.triggers} devices={this.props.devices} delete={this.props.delete} addTriggerLogic={this.props.addTriggerLogic}  openTriggerAssistant={this.props.openTriggerAssistant}/>\n          {i < num_operations ? <h2 className=\"trigger_logic_title\">{this.props.triggers[this.props.id].type}</h2> : '' }\n        </div>\n      );\n    });\n\n    return (\n      <div className=\"trigger_logic_container\">\n          {operations}\n          <div className=\"trigger_logic_buttons_container\">\n            <button type=\"button\" className=\"trigger_logic_button\" onClick={ this.addOr }>Or</button>\n            <button type=\"button\" className=\"trigger_logic_button\" onClick={ this.addAnd }>And</button>\n            <button type=\"button\" className=\"trigger_logic_button\" onClick={ this.openTriggerAssistant }>Trigger</button>\n            <button type=\"button\" className=\"trigger_logic_button red_button\" onClick={ this.delete }>Delete</button>\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default Logic\n","import React from 'react';\nimport { deviceReference } from '../../constants'\n\nimport '../pages/Manager.css';\n\nclass Trigger extends React.Component {\n  constructor(props) {\n    super(props);\n    this.delete = this.delete.bind(this);\n    this.renderTriggerText = this.renderTriggerText.bind(this);\n  }\n\n  delete() {\n    this.props.delete(this.props.id);\n  }\n\n  renderTriggerText() {\n    const week = ['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday']\n    const device_triggers = ['d2b','d2i','d2l','d2s']\n\n    const type = this.props.triggers[this.props.id].type;\n    const operation = this.props.triggers[this.props.id].operation.split(':');\n    if (device_triggers.includes(type)) {\n      return this.props.devices[operation[0]] + ' (' + (deviceReference.params[operation[1]] ? deviceReference.params[operation[1]].name : operation[1]) + ') ' +  operation[2] + ' ' +  operation[3];\n    } else if (type === 'd2d') {\n      return this.props.devices[operation[0]] + ' (' + (deviceReference.params[operation[1]] ? deviceReference.params[operation[1]].name : operation[1]) + ') ' +  operation[2] + ' ' +  this.props.devices[operation[3]] + ' (' + (deviceReference.params[operation[4]].name ? deviceReference.params[operation[4]].name : operation[4]) + ') ';\n    } else if (type === 'd2c') {\n      return this.props.devices[operation[0]] + ' (' + (deviceReference.params[operation[1]] ? deviceReference.params[operation[1]].name : operation[1]) + ') ' +  operation[2] + ' ' +  operation[3];\n    } else if (type === 'time') {\n\n      var days = '';\n      for( var i = 0; i < operation[2].length; i++){\n        days += week[operation[2][i]];\n        if (i !== operation[2].length - 1)\n          days += ', ';\n      }\n      return operation[0] + ':'  + operation[1] + ' on ' + days\n\n    } else {\n      return this.props.triggers[this.props.id].operation\n    }\n  }\n\n  render() {\n\n    return (\n      <div className=\"trigger_device_container\">\n        <span>{this.renderTriggerText()}</span>\n        <img src=\"/global/bin_icon.png\" alt=\"Delete icon\" className=\"trigger_delete\" onClick={this.delete}/>\n      </div>\n    );\n  }\n}\n\nexport default Trigger\n","import React from 'react';\nimport Logic from './Logic'\nimport Trigger from './Trigger'\n\nclass Triggers extends React.Component {\n  constructor(props) {\n    super(props);\n    this.addOr = this.addOr.bind(this);\n    this.addAnd = this.addAnd.bind(this);\n    this.openTriggerAssistant = this.openTriggerAssistant.bind(this);\n  }\n\n  addOr() {\n    this.props.addTriggerLogic('or','triggers')\n  }\n\n  addAnd() {\n    this.props.addTriggerLogic('and','triggers')\n  }\n\n  openTriggerAssistant() {\n    this.props.openTriggerAssistant('triggers')\n  }\n\n  render() {\n\n    if (this.props.triggers.trigger) {\n      var operation = this.props.triggers[this.props.id]\n      const device_triggers = ['d2b','d2d','d2i','d2l','time','d2c']\n\n      if (operation.type === 'or'){\n        return <Logic id={this.props.id} triggers={this.props.triggers} devices={this.props.devices} delete={this.props.delete} addTriggerLogic={this.props.addTriggerLogic} openTriggerAssistant={this.props.openTriggerAssistant}/>\n      } else if (operation.type === 'and'){\n        return <Logic id={this.props.id} triggers={this.props.triggers} devices={this.props.devices} delete={this.props.delete} addTriggerLogic={this.props.addTriggerLogic} openTriggerAssistant={this.props.openTriggerAssistant}/>\n      } else if (device_triggers.includes(operation.type)){\n        return <Trigger id={this.props.id} triggers={this.props.triggers} devices={this.props.devices} delete={this.props.delete}/>\n      }\n    } else {\n      return (\n        <div>\n        <button type=\"button\" className=\"trigger_logic_button\" onClick={ this.addOr }>Or</button>\n        <button type=\"button\" className=\"trigger_logic_button\" onClick={ this.addAnd }>And</button>\n        <button type=\"button\" className=\"trigger_logic_button\" onClick={ this.openTriggerAssistant }>Trigger</button>\n        </div>\n      );\n    }\n\n  }\n}\n\nexport default Triggers\n","import React from 'react';\n\nimport '../pages/Manager.css';\n\nclass Assistant extends React.Component {\n  constructor(props) {\n    super(props);\n    this.addTriggerOperation = this.addTriggerOperation.bind(this);\n  }\n\n  addTriggerOperation(){\n    const hour = document.getElementById('hour').value;\n    const minute = document.getElementById('minute').value;\n    var week = '';\n\n    if (document.getElementById('monday').checked)\n      week += '1'\n    if (document.getElementById('tuesday').checked)\n      week += '2'\n    if (document.getElementById('wednesday').checked)\n      week += '3'\n    if (document.getElementById('thursday').checked)\n      week += '4'\n    if (document.getElementById('friday').checked)\n      week += '5'\n    if (document.getElementById('saturday').checked)\n      week += '6'\n    if (document.getElementById('sunday').checked)\n      week += '0'\n\n    const value = hour + ':' + minute + ':' + week;\n    this.props.addTriggerOperation('time',value);\n    this.props.closeTriggerAssistant();\n  }\n\n  render() {\n\n    return (\n      <div className=\"trigger_assistant_container\">\n        <h2 className=\"trigger_assistant_title\">Triggered by time</h2>\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n            Hour*\n          </div>\n          <div className=\"three_table_cel\">\n            <input type=\"number\" className=\"\" id=\"hour\" min=\"0\" max=\"23\"/>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"advise\">24h format</span>\n          </div>\n        </div>\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n            Minute*\n          </div>\n          <div className=\"three_table_cel\">\n            <input type=\"number\" className=\"\" id=\"minute\" min=\"0\" max=\"59\"/>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"advise\"></span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n            Week*\n          </div>\n          <div className=\"three_table_cel\">\n            Sunday\n          </div>\n          <div className=\"three_table_cel\">\n            <input type=\"checkbox\" id=\"sunday\"/>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n          </div>\n          <div className=\"three_table_cel\">\n            Monday\n          </div>\n          <div className=\"three_table_cel\">\n            <input type=\"checkbox\" id=\"monday\"/>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n          </div>\n          <div className=\"three_table_cel\">\n            Tuesday\n          </div>\n          <div className=\"three_table_cel\">\n            <input type=\"checkbox\" id=\"tuesday\"/>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n          </div>\n          <div className=\"three_table_cel\">\n            Wednesday\n          </div>\n          <div className=\"three_table_cel\">\n            <input type=\"checkbox\" id=\"wednesday\"/>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n          </div>\n          <div className=\"three_table_cel\">\n            Thursday\n          </div>\n          <div className=\"three_table_cel\">\n            <input type=\"checkbox\" id=\"thursday\"/>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n          </div>\n          <div className=\"three_table_cel\">\n            Friday\n          </div>\n          <div className=\"three_table_cel\">\n            <input type=\"checkbox\" id=\"friday\"/>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n          </div>\n          <div className=\"three_table_cel\">\n            Saturday\n          </div>\n          <div className=\"three_table_cel\">\n            <input type=\"checkbox\" id=\"saturday\"/>\n          </div>\n        </div>\n\n\n\n\n\n        <div className=\"trigger_assisstant_buttons_container\">\n          <button type=\"button\" className=\"trigger_assistant_button\" onClick={ this.addTriggerOperation }>Save</button>\n          <button type=\"button\" className=\"trigger_assistant_button red_button\" onClick={ this.props.closeTriggerAssistant }>Cancel</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Assistant\n","import React from 'react';\nimport { deviceReference } from '../../constants'\n\nimport '../pages/Manager.css';\n\nclass Device extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      device: \"\"\n    }\n    this.updateDevice = this.updateDevice.bind(this);\n    this.updateParam = this.updateParam.bind(this);\n    this.addTriggerOperation = this.addTriggerOperation.bind(this);\n    this.typeConversion = this.typeConversion.bind(this);\n  }\n\n  updateDevice(event) {\n    this.setState({\n      device: event.target.value\n    });\n  }\n\n  updateParam(event) {\n    this.setState({\n      param: event.target.value\n    });\n  }\n\n  addTriggerOperation(){\n    const device = document.getElementById('device').value;\n    const param = document.getElementById('param').value;\n    const comparator = document.getElementById('comparator').value;\n    const value = document.getElementById('value').value;\n\n\n    const operation = device + ':' + param + ':' + comparator + ':' + value;\n    this.props.addTriggerOperation(this.typeConversion(deviceReference.params[this.state.param].type),operation);\n    this.props.closeTriggerAssistant();\n  }\n\n  typeConversion(origen) {\n    const type = {\n      int: 'd2i',\n      list: 'd2l',\n      bool: 'd2b',\n      string: 'd2s',\n      color: 'd2c'\n    }\n    return type[origen]\n  }\n\n  render() {\n\n    const devices = Object.keys(this.props.devices).map((device) => {\n      return <option key={device} value={device}>{this.props.devices[device]}</option>\n    })\n\n    const params = this.state.device === \"\" ? '' : Object.keys(this.props.status[this.state.device]).map((param) => {\n      return <option key={param} value={param}>{ deviceReference.params[param] ? deviceReference.params[param].name : param + ' - Not supported yet' }</option>\n    })\n\n    var value = '';\n    if (deviceReference.params[this.state.param]){\n      const type = this.typeConversion(deviceReference.params[this.state.param].type);\n      if(type === 'd2i'){\n        value = (\n          <div className=\"two_table_row\">\n            <div className=\"two_table_cel\">\n              Value*\n            </div>\n            <div className=\"two_table_cel\">\n              <input type=\"number\" className=\"\" id=\"value\"/>\n            </div>\n          </div>\n        )\n      } else if(type === 'd2s'){\n        value = (\n          <div className=\"two_table_row\">\n            <div className=\"two_table_cel\">\n              Value*\n            </div>\n            <div className=\"two_table_cel\">\n              <input type=\"text\" className=\"\" id=\"value\"/>\n            </div>\n          </div>\n        )\n      } else if(type === 'd2b' || type === 'd2l'){\n\n        const options = deviceReference.params[this.state.param].select.map((option) => {\n          return <option key={option} value={option}>{option}</option>\n        })\n\n        value = (\n          <div className=\"two_table_row\">\n            <div className=\"two_table_cel\">\n              Value*\n            </div>\n            <div className=\"two_table_cel\">\n              <select name=\"type\" className=\"two_input\" id=\"value\">\n                {options}\n              </select>\n            </div>\n          </div>\n        )\n      }\n\n    }\n\n    return (\n      <div className=\"trigger_assistant_container\">\n        <h2 className=\"trigger_assistant_title\">Triggered by a device</h2>\n\n        <div className=\"two_table_row\">\n          <div className=\"two_table_cel\">\n            Device*\n          </div>\n          <div className=\"two_table_cel\">\n            <select name=\"type\" className=\"two_input\" id=\"device\" onChange={this.updateDevice}>\n              <option value=\"\">Select a device</option>\n              {devices}\n            </select>\n          </div>\n        </div>\n        <div className=\"two_table_row\">\n          <div className=\"two_table_cel\">\n            Param*\n          </div>\n          <div className=\"two_table_cel\">\n            <select name=\"type\" className=\"two_input\" id=\"param\" onChange={this.updateParam}>\n              <option value=\"\">Select a param</option>\n              {params}\n            </select>\n          </div>\n        </div>\n        <div className=\"two_table_row\">\n          <div className=\"two_table_cel\">\n            Comparator*\n          </div>\n          <div className=\"two_table_cel\">\n            <select name=\"type\" className=\"two_input\" id=\"comparator\">\n              <option>=</option>\n              <option>&lt;</option>\n              <option>&gt;</option>\n              <option>&lt;=</option>\n              <option>&gt;=</option>\n            </select>\n          </div>\n        </div>\n\n        {value}\n\n        <div className=\"trigger_assisstant_buttons_container\">\n          <button type=\"button\" className=\"trigger_assistant_button\" onClick={ this.addTriggerOperation }>Save</button>\n          <button type=\"button\" className=\"trigger_assistant_button red_button\" onClick={ this.props.closeTriggerAssistant }>Cancel</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Device\n","import React from 'react';\nimport { deviceReference } from '../../constants'\n\nimport '../pages/Manager.css';\n\nclass DeviceToDevice extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      device_a: \"\",\n      device_b: \"\"\n    }\n    this.updateDependencies = this.updateDependencies.bind(this);\n    this.addTriggerOperation = this.addTriggerOperation.bind(this);\n  }\n\n  updateDependencies(event) {\n    var state = this.state;\n    state[event.target.id] = event.target.value;\n    this.setState(state);\n  }\n\n\n  addTriggerOperation(){\n    const device_a = document.getElementById('device_a').value;\n    const param_a = document.getElementById('param_a').value;\n    const comparator = document.getElementById('comparator').value;\n    const device_b = document.getElementById('device_b').value;\n    const param_b = document.getElementById('param_b').value;\n\n    const operation = device_a + ':' + param_a + ':' + comparator + ':' + device_b + ':' + param_b;\n    this.props.addTriggerOperation('d2d',operation);\n    this.props.closeTriggerAssistant();\n  }\n\n  render() {\n\n    const devices = Object.keys(this.props.devices).map((device) => {\n      return <option key={device} value={device}>{this.props.devices[device]}</option>\n    })\n\n    const params_a = this.state.device_a === \"\" ? '' : Object.keys(this.props.status[this.state.device_a]).map((param) => {\n      return <option key={param} value={param}>{ deviceReference.params[param] ? deviceReference.params[param].name : param + ' - Not supported yet' }</option>\n    })\n\n    const params_b = this.state.device_b === \"\" ? '' : Object.keys(this.props.status[this.state.device_b]).map((param) => {\n      return <option key={param} value={param}>{ deviceReference.params[param] ? deviceReference.params[param].name : param + ' - Not supported yet' }</option>\n    })\n\n    return (\n      <div className=\"trigger_assistant_container\">\n        <h2 className=\"trigger_assistant_title\">Compare two devices</h2>\n\n        <div className=\"two_table_row\">\n          <div className=\"two_table_cel\">\n            Device A*\n          </div>\n          <div className=\"two_table_cel\">\n            <select name=\"type\" className=\"two_input\" id=\"device_a\" onChange={this.updateDependencies}>\n              <option value=\"\">Select a device</option>\n              {devices}\n            </select>\n          </div>\n        </div>\n        <div className=\"two_table_row\">\n          <div className=\"two_table_cel\">\n            Param A*\n          </div>\n          <div className=\"two_table_cel\">\n            <select name=\"type\" className=\"two_input\" id=\"param_a\" onChange={this.updateDependencies}>\n              <option value=\"\">Select a param</option>\n              {params_a}\n            </select>\n          </div>\n        </div>\n\n        <div className=\"two_table_row\">\n          <div className=\"two_table_cel\">\n            Comparator*\n          </div>\n          <div className=\"two_table_cel\">\n            <select name=\"type\" className=\"two_input\" id=\"comparator\">\n              <option>=</option>\n              <option>&lt;</option>\n              <option>&gt;</option>\n              <option>&lt;=</option>\n              <option>&gt;=</option>\n            </select>\n          </div>\n        </div>\n\n        <div className=\"two_table_row\">\n          <div className=\"two_table_cel\">\n            Device B*\n          </div>\n          <div className=\"two_table_cel\">\n            <select name=\"type\" className=\"two_input\" id=\"device_b\" onChange={this.updateDependencies}>\n              <option value=\"\">Select a device</option>\n              {devices}\n            </select>\n          </div>\n        </div>\n        <div className=\"two_table_row\">\n          <div className=\"two_table_cel\">\n            Param B*\n          </div>\n          <div className=\"two_table_cel\">\n            <select name=\"type\" className=\"two_input\" id=\"param_b\" onChange={this.updateDependencies}>\n              <option value=\"\">Select a param</option>\n              {params_b}\n            </select>\n          </div>\n        </div>\n\n        <div className=\"trigger_assisstant_buttons_container\">\n          <button type=\"button\" className=\"trigger_assistant_button\" onClick={ this.addTriggerOperation }>Save</button>\n          <button type=\"button\" className=\"trigger_assistant_button red_button\" onClick={ this.props.closeTriggerAssistant }>Cancel</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default DeviceToDevice\n","import React from 'react';\nimport Time from './Time'\nimport Device from './Device'\nimport DeviceToDevice from './DeviceToDevice'\n\nimport '../pages/Manager.css';\n\nclass Assistant extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      type: ''\n    }\n    this.timeTigger = this.timeTigger.bind(this);\n    this.deiceTrigger = this.deiceTrigger.bind(this);\n    this.deviceToDeviceTrigger = this.deviceToDeviceTrigger.bind(this);\n  }\n\n  timeTigger() {\n    this.setState({\n      type: 'time'\n    });\n  }\n\n  deiceTrigger() {\n    this.setState({\n      type: 'device'\n    });\n  }\n\n  deviceToDeviceTrigger() {\n    this.setState({\n      type: 'device2device'\n    });\n  }\n\n  render() {\n\n    if (this.state.type === '')\n      return (\n        <div className=\"trigger_assistant_container\">\n          <h2 className=\"trigger_assistant_title\">Add a new trigger</h2>\n          <div className=\"trigger_assisstant_buttons_container\">\n            <button type=\"button\" className=\"trigger_assistant_button\" onClick={ this.timeTigger }>Time</button>\n            <button type=\"button\" className=\"trigger_assistant_button\" onClick={ this.deiceTrigger }>Device</button>\n            <button type=\"button\" className=\"trigger_assistant_button\" onClick={ this.deviceToDeviceTrigger }>Device to device</button>\n            <button type=\"button\" className=\"trigger_assistant_button red_button\" onClick={ this.props.closeTriggerAssistant }>Cancel</button>\n          </div>\n        </div>\n      );\n    else if (this.state.type === 'time')\n      return <Time closeTriggerAssistant={this.props.closeTriggerAssistant} addTriggerOperation={this.props.addTriggerOperation}/>\n    else if (this.state.type === 'device')\n      return <Device devices={this.props.devices} status={this.props.status} closeTriggerAssistant={this.props.closeTriggerAssistant} addTriggerOperation={this.props.addTriggerOperation}/>\n    else if (this.state.type === 'device2device')\n      return <DeviceToDevice devices={this.props.devices} status={this.props.status} closeTriggerAssistant={this.props.closeTriggerAssistant} addTriggerOperation={this.props.addTriggerOperation}/>\n  }\n}\n\nexport default Assistant\n","import React from 'react';\nimport { deviceReference } from '../../constants'\n\nimport '../pages/Manager.css';\n\nclass Target extends React.Component {\n  constructor(props) {\n    super(props);\n    this.delete = this.delete.bind(this);\n  }\n\n  delete() {\n    this.props.delete(this.props.id);\n  }\n\n  render() {\n\n    const container = {\n        marginBottom: '10px'\n    }\n\n    return (\n      <div className=\"trigger_device_container\" style={container}>\n        <span>{ (this.props.devices[this.props.target.device] ? this.props.devices[this.props.target.device] : this.props.target.device)\n        + ' (' + (deviceReference.params[this.props.target.param] ? deviceReference.params[this.props.target.param].name : this.props.target.param)\n        + ') = ' + this.props.target.value}</span>\n        <img src=\"/global/bin_icon.png\" alt=\"Delete icon\" className=\"trigger_delete\" onClick={this.delete}/>\n      </div>\n    );\n  }\n}\n\nexport default Target\n","import React from 'react';\nimport { deviceReference } from '../../constants'\n\nimport '../pages/Manager.css';\n\nclass Device extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      device: \"\"\n    }\n    this.updateDevice = this.updateDevice.bind(this);\n    this.updateParam = this.updateParam.bind(this);\n    this.addTarget = this.addTarget.bind(this);\n    this.typeConversion = this.typeConversion.bind(this);\n  }\n\n  updateDevice(event) {\n    this.setState({\n      device: event.target.value\n    });\n  }\n\n  updateParam(event) {\n    this.setState({\n      param: event.target.value\n    });\n  }\n\n  addTarget(){\n    const device = document.getElementById('device').value;\n    const param = document.getElementById('param').value;\n    const value = document.getElementById('value').value;\n\n    const target = {\n      device: device,\n      param: param,\n      value: value\n    }\n    this.props.addTarget(target);\n    document.getElementById('device').value = '';\n    document.getElementById('param').value = '';\n    this.setState({\n      param: ''\n    });\n  }\n\n  typeConversion(origen) {\n    const type = {\n      int: 'd2i',\n      list: 'd2l',\n      bool: 'd2b',\n      string: 'd2s',\n      color: 'd2c'\n    }\n    return type[origen]\n  }\n\n  render() {\n\n    const devices = Object.keys(this.props.devices).map((device) => {\n      return <option key={device} value={device}>{this.props.devices[device]}</option>\n    })\n\n    const params = this.state.device === \"\" ? '' : Object.keys(this.props.status[this.state.device]).map((param) => {\n      return <option key={param} value={param}>{ deviceReference.params[param] ? deviceReference.params[param].name : param + ' - Not supported yet' }</option>\n    })\n\n    var value = '';\n    if (deviceReference.params[this.state.param]){\n      const type = this.typeConversion(deviceReference.params[this.state.param].type);\n      if(type === 'd2i'){\n        value = (\n          <div className=\"two_table_row\">\n            <div className=\"two_table_cel\">\n              Value*\n            </div>\n            <div className=\"two_table_cel\">\n              <input type=\"number\" className=\"\" id=\"value\"/>\n            </div>\n          </div>\n        )\n      } else if(type === 'd2s'){\n        value = (\n          <div className=\"two_table_row\">\n            <div className=\"two_table_cel\">\n              Value*\n            </div>\n            <div className=\"two_table_cel\">\n              <input type=\"text\" className=\"\" id=\"value\"/>\n            </div>\n          </div>\n        )\n      } else if(type === 'd2b' || type === 'd2l'){\n\n        const options = deviceReference.params[this.state.param].select.map((option) => {\n          return <option key={option} value={option}>{option}</option>\n        })\n\n        value = (\n          <div className=\"two_table_row\">\n            <div className=\"two_table_cel\">\n              Value*\n            </div>\n            <div className=\"two_table_cel\">\n              <select name=\"type\" className=\"two_input\" id=\"value\">\n                {options}\n              </select>\n            </div>\n          </div>\n        )\n      }\n\n    }\n\n    return (\n      <div className=\"trigger_assistant_container\">\n        <h2 className=\"trigger_assistant_title\">New target</h2>\n\n        <div className=\"two_table_row\">\n          <div className=\"two_table_cel\">\n            Device*\n          </div>\n          <div className=\"two_table_cel\">\n            <select name=\"type\" className=\"two_input\" id=\"device\" onChange={this.updateDevice}>\n              <option value=\"\">Select a device</option>\n              {devices}\n            </select>\n          </div>\n        </div>\n        <div className=\"two_table_row\">\n          <div className=\"two_table_cel\">\n            Param*\n          </div>\n          <div className=\"two_table_cel\">\n            <select name=\"type\" className=\"two_input\" id=\"param\" onChange={this.updateParam}>\n              <option value=\"\">Select a param</option>\n              {params}\n            </select>\n          </div>\n        </div>\n\n        {value}\n\n        <div className=\"trigger_assisstant_buttons_container\">\n          <button type=\"button\" className=\"trigger_assistant_button\" onClick={ this.addTarget }>Add</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Device\n","import React from 'react';\nimport Triggers from '../manager/Triggers.js'\nimport Assistant from '../manager/Assistant.js'\nimport Target from '../manager/Target.js'\nimport DeviceTarget from '../manager/DeviceTarget.js'\nimport getCookieValue from '../../functions'\nimport { root } from '../../constants'\n\nimport './Manager.css';\n\nclass Manager extends React.Component {\n  constructor(props) {\n    super(props);\n    const id = window.location.pathname.split('/')[3];\n    var create = false;\n    if (id === \"\") create = true;\n    this.state = {\n      id: id,\n      create: create,\n      save_status: \"\",\n      trigger_assistant_parent: 0,\n      task: {\n        title: '',\n        description: '',\n        triggers: {},\n        target: []\n      },\n      devices: [],\n      status: {}\n    }\n    this.update = this.update.bind(this);\n    this.save = this.save.bind(this);\n    this.delete = this.delete.bind(this);\n    this.deleteTrigger = this.deleteTrigger.bind(this);\n    this.addTriggerLogic = this.addTriggerLogic.bind(this);\n    this.openTriggerAssistant = this.openTriggerAssistant.bind(this);\n    this.addTriggerOperation = this.addTriggerOperation.bind(this);\n    this.closeTriggerAssistant = this.closeTriggerAssistant.bind(this);\n    this.addTarget = this.addTarget.bind(this);\n  }\n\n  componentDidMount() {\n    // Load devices data\n    var dev = new XMLHttpRequest();\n    dev.onload = function (e) {\n      if (dev.readyState === 4) {\n        if (dev.status === 200) {\n          var data = JSON.parse(dev.responseText);\n          var devices_names = {}\n          data.devices.forEach((device) => {\n            devices_names[device.id] = device.name.name\n          })\n          this.setState({\n             devices: devices_names,\n             status:  data.status\n           });\n        } else {\n          console.error(dev.statusText);\n        }\n      }\n    }.bind(this);\n    dev.open(\"GET\", root + \"api/global/get/\");\n    dev.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    dev.send();\n\n    // Load task if neeeded\n    if (!this.state.create){\n      var tas = new XMLHttpRequest();\n      tas.onload = function (e) {\n        if (tas.readyState === 4) {\n          if (tas.status === 200) {\n            var data = JSON.parse(tas.responseText);\n            console.log(data);\n            this.setState({\n               task: data\n             });\n          } else {\n            console.error(tas.statusText);\n          }\n        }\n      }.bind(this);\n      tas.open(\"GET\", root + \"api/tasks/get/\" + this.state.id + \"/\");\n      tas.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n      tas.send();\n    }\n  }\n\n  update(event){\n    var task = this.state.task;\n    task[event.target.id] = event.target.value\n    this.setState({\n      task: task\n    })\n  }\n\n  save(){\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      if (http.readyState === 4) {\n        if (http.status === 200) {\n          JSON.parse(http.responseText);\n          this.setState({\n             save_status: \"Saved correctly.\"\n           });\n        } else {\n          console.error(http.statusText);\n          this.setState({\n             save_status: \"Error, the changes haven't been saved.\"\n           });\n        }\n        setTimeout(function(){\n          this.setState({\n             save_status: \"\"\n           });\n        }.bind(this), 5000)\n      }\n    }.bind(this);\n    var payload = {\n      \"task\": this.state.task\n    }\n    if (this.state.create){\n      http.open(\"POST\", root + \"api/tasks/create/\");\n    } else {\n      http.open(\"POST\", root + \"api/tasks/update/\");\n      payload['id'] = this.state.id;\n    }\n    http.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\n    http.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    http.send(JSON.stringify(payload));\n  }\n\n  delete(){\n    if(window.confirm('Do you want to delete the device?')){\n      var http = new XMLHttpRequest();\n      http.onload = function (e) {\n        if (http.readyState === 4) {\n          if (http.status === 200) {\n            window.location.href = \"/tasks/\"\n          } else {\n            console.error(http.statusText);\n            this.setState({\n               save_status: \"Error, the device hasn't been deleted.\"\n             });\n          }\n          setTimeout(function(){\n            this.setState({\n               save_status: \"\"\n             });\n          }.bind(this), 5000)\n        }\n      }.bind(this);\n      http.open(\"GET\", root + \"api/tasks/delete/\" + this.state.id + \"/\");\n      http.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n      http.send();\n    } else {\n      this.setState({\n         save_status: \"Ok. The device is save.\"\n       });\n    }\n  }\n\n  deleteTrigger(id) {\n    // Get the task\n    var task = this.state.task;\n    var triggers = task.triggers;\n    // Get the the parent id\n    const parent = triggers[id].parent\n    if (parent !== 'triggers') {\n      // Delete from the parent\n      const index = triggers[parent].operation.indexOf(id);\n      triggers[parent].operation.splice(index,1)\n      // Delete the trigger\n      delete triggers[id];\n      task.triggers = triggers;\n    } else {\n      task.triggers = {};\n    }\n    this.setState({\n      task: task\n    });\n  }\n\n  addTriggerLogic(type, parent) {\n    // Get the triggers\n    var task = this.state.task;\n    if (parent !== 'triggers') {\n      // Get the timestamp\n      const ts = Date.now();\n      // Compose and create the logic trigger\n      task.triggers[ts] = {\n        operation: [],\n        parent: parent,\n        type: type\n      };\n      // Register the trigger in the parent\n      task.triggers[parent].operation.push(ts);\n    } else {\n      task.triggers['trigger'] = {\n        operation: [],\n        parent: 'triggers',\n        type: type\n      };\n    }\n    // Update the component state\n    this.setState({\n      task: task\n    });\n  }\n\n  openTriggerAssistant(parent) {\n    this.setState({\n      trigger_assistant_parent: parent\n    });\n  }\n\n  addTriggerOperation(type, operation) {\n    // Get the triggers\n    var task = this.state.task;\n    const parent = this.state.trigger_assistant_parent;\n    if (parent !== 'triggers') {\n      // Get the timestamp\n      const ts = Date.now();\n      // Compose and create the logic trigger\n      task.triggers[ts] = {\n        operation: operation,\n        parent: parent,\n        type: type\n      };\n      // Register the trigger in the parent\n      task.triggers[parent].operation.push(ts);\n    } else {\n      task.triggers['trigger'] = {\n        operation: operation,\n        parent: 'triggers',\n        type: type\n      };\n    }\n    // Update the component state\n    this.setState({\n      task: task\n    });\n  }\n\n  closeTriggerAssistant() {\n    this.setState({\n      trigger_assistant_parent: 0\n    });\n  }\n\n  addTarget(target) {\n    var task = this.state.task;\n    task.target.push(target);\n    this.setState({\n      task: task\n    });\n  }\n\n  render() {\n\n    const button = {\n      width: '200px'\n    }\n\n    const deleteButton = {\n      backgroundColor: 'red'\n    }\n\n    const deleteButtonDisabled = {\n      backgroundColor: 'red',\n      opacity: '0.2'\n    }\n\n    const separator = {\n      width: '70%'\n    }\n\n    const targets = this.state.task.target.map((target, i) => {\n      return <Target key={i} target={target} devices={this.state.devices}/>\n    })\n\n    return (\n      <div>\n\n      <div className=\"page_block_container\">\n        <h2>Task</h2>\n        <hr style={separator}/>\n        <div className=\"two_table_row\">\n          <div className=\"two_table_cel\">\n            Name*\n          </div>\n          <div className=\"two_table_cel\">\n            <input type=\"text\" className=\"two_input\" id=\"title\" defaultValue={this.state.task.title} onChange={this.update}/>\n          </div>\n        </div>\n        <div className=\"two_table_row\">\n          <div className=\"two_table_cel\">\n            Description*\n          </div>\n          <div className=\"two_table_cel\">\n            <input type=\"text\" className=\"two_input\" id=\"description\" defaultValue={this.state.task.description} onChange={this.update}/>\n          </div>\n        </div>\n        <hr/>\n        <h2>Triggers</h2>\n        <div className=\"advise\">\n          <span></span>\n        </div>\n        {\n          this.state.trigger_assistant_parent !== 0\n          ?\n          <Assistant devices={this.state.devices} status={this.state.status} closeTriggerAssistant={this.closeTriggerAssistant} addTriggerOperation={this.addTriggerOperation}/>\n          :\n          <Triggers id=\"trigger\" triggers={this.state.task.triggers} devices={this.state.devices} delete={this.deleteTrigger} addTriggerLogic={this.addTriggerLogic} openTriggerAssistant={this.openTriggerAssistant}/>\n        }\n        <hr/>\n        <h2>Targets</h2>\n        <div className=\"advise\">\n          <span></span>\n        </div>\n        {targets}\n        <DeviceTarget devices={this.state.devices} status={this.state.status} addTarget={this.addTarget}/>\n\n        <hr/>\n        <div className=\"two_table_cel\">\n          <button type=\"button\" style={ this.state.create ? deleteButtonDisabled : deleteButton } onClick={ this.delete } disabled={ this.state.create ? true : false}>Delete</button>\n          <button type=\"button\" onClick={ this.save }>Save</button>\n          <span>{this.state.save_status}</span>\n        </div>\n      </div>\n\n    </div>\n  );\n  }\n}\n\nexport default Manager\n","import React from 'react';\nimport getCookieValue from '../../functions'\nimport { root } from '../../constants'\n\nclass Settings extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      settings: {\n        google: {},\n        ddns: {},\n        mqtt: {},\n        apikey: \"\"\n      },\n      save_status: \"\",\n      url: {\n        auth: \"\",\n        token: \"\",\n        fulfillment: \"\"\n      }\n    }\n    this.update = this.update.bind(this);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n    this.save = this.save.bind(this);\n  }\n\n  componentDidMount() {\n    if (!this.state.create){\n      var http = new XMLHttpRequest();\n      http.onload = function (e) {\n        if (http.readyState === 4) {\n          if (http.status === 200) {\n            var data = JSON.parse(http.responseText);\n            this.setState({\n               settings: data,\n               url: {\n                 auth: \"https://\" + data.ddns.hostname + \"/auth/\",\n                 token: \"https://\" + data.ddns.hostname + \"/token/\",\n                 fulfillment: \"https://\" + data.ddns.hostname + \"/smarthome/\"\n               }\n             });\n          } else {\n            console.error(http.statusText);\n          }\n        }\n      }.bind(this);\n      http.open(\"GET\", root + \"api/settings/get/\");\n      http.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n      http.send();\n    }\n  }\n\n  update(event){\n    // this.props.update('attributes/' + event.target.id,event.target.value);\n    const id = event.target.id.split(\"/\");\n    var settings = this.state.settings;\n    if (id.length === 1){\n      settings[id[0]] = event.target.value;\n    } else if (id.length === 2){\n      settings[id[0]][id[1]] = event.target.value;\n    }\n    this.setState({\n       settings: settings\n     });\n  }\n\n  updateCheckbox(event){\n    // this.props.update('attributes/' + event.target.id,event.target.value);\n    const id = event.target.id.split(\"/\");\n    var settings = this.state.settings;\n    if (id.length === 1){\n      settings[id[0]] = event.target.checked;\n    } else if (id.length === 2){\n      settings[id[0]][id[1]] = event.target.checked;\n    }\n    this.setState({\n       settings: settings\n     });\n  }\n\n  save(){\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      if (http.readyState === 4) {\n        if (http.status === 200) {\n          JSON.parse(http.responseText);\n          this.setState({\n             save_status: \"Saved correctly.\"\n           });\n        } else {\n          this.setState({\n             save_status: \"Error, the changes haven't been saved.\"\n           });\n        }\n        setTimeout(function(){\n          this.setState({\n             save_status: \"\"\n           });\n        }.bind(this), 5000)\n      }\n    }.bind(this);\n    http.open(\"POST\", root + \"api/settings/update/\");\n    http.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\n    http.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    http.send(JSON.stringify(this.state.settings));\n  }\n\n  render() {\n\n    return (\n      <div>\n        <div className=\"page_block_container\">\n          <h2>Actions on Google</h2>\n          <hr/>\n          <div className=\"page_block_content_container\">\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">\n                Client ID\n              </div>\n              <div className=\"two_table_cel\">\n                <input type=\"text\" className=\"two_input\" id=\"google/client_id\" defaultValue={this.state.settings.google.client_id} onChange={this.update}/>\n              </div>\n              <div className=\"two_table_cel\">\n                <span className=\"advise\"></span>\n              </div>\n            </div>\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">\n                Client Secret\n              </div>\n              <div className=\"two_table_cel\">\n                <input type=\"text\" className=\"two_input\" id=\"google/client_secret\" defaultValue={this.state.settings.google.client_secret} onChange={this.update}/>\n              </div>\n              <div className=\"two_table_cel\">\n                <span className=\"advise\"></span>\n              </div>\n            </div>\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">\n                Authorization URL\n              </div>\n              <div className=\"two_table_cel\">\n                <input type=\"text\" className=\"two_input\" defaultValue={this.state.url.auth} disabled/>\n              </div>\n              <div className=\"two_table_cel\">\n                <span className=\"advise\"></span>\n              </div>\n            </div>\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">\n                Token URL\n              </div>\n              <div className=\"two_table_cel\">\n                <input type=\"text\" className=\"two_input\" defaultValue={this.state.url.token} disabled/>\n              </div>\n              <div className=\"two_table_cel\">\n                <span className=\"advise\"></span>\n              </div>\n            </div>\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">\n                Fulfillment URL\n              </div>\n              <div className=\"two_table_cel\">\n                <input type=\"text\" className=\"two_input\" defaultValue={this.state.url.fulfillment} disabled/>\n              </div>\n              <div className=\"two_table_cel\">\n                <span className=\"advise\"></span>\n              </div>\n            </div>\n          </div>\n          <div className=\"page_block_buttons_container\">\n            <button type=\"button\" onClick={ this.save }>Save</button>\n            <span>{this.state.save_status}</span>\n          </div>\n          <div className=\"advise\">\n            <span>Actions on Google settings. It is used to authenticate with Google. If you change it here, you must change it on the Actions Console &#62; Develop &#62; Account Linking.</span>\n          </div>\n        </div>\n\n\n        <div className=\"page_block_container\">\n          <h2>MQTT</h2>\n          <hr/>\n          <div className=\"page_block_content_container\">\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">\n                User\n              </div>\n              <div className=\"two_table_cel\">\n                <input type=\"text\" className=\"two_input\" id=\"mqtt/user\" defaultValue={this.state.settings.mqtt.user} onChange={this.update}/>\n              </div>\n            </div>\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">\n                Password\n              </div>\n              <div className=\"two_table_cel\">\n                <input type=\"text\" className=\"two_input\" id=\"mqtt/password\" defaultValue={this.state.settings.mqtt.password} onChange={this.update}/>\n              </div>\n            </div>\n          </div>\n          <div className=\"page_block_buttons_container\">\n            <button type=\"button\" onClick={ this.save }>Save</button>\n            <span>{this.state.save_status}</span>\n          </div>\n          <div className=\"advise\">\n            <span>Important. You must configure the username and password into Mosquitto manually from a terminal. This is only for telling Homeware its credentials. Clear both if you don't use credentials.</span>\n          </div>\n        </div>\n\n        <div className=\"page_block_container\">\n          <h2>DDNS provider</h2>\n          <hr/>\n          <div className=\"page_block_content_container\">\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">\n                Status:\n              </div>\n              <div className=\"two_table_cel\">\n                { this.state.settings.ddns.status }\n              </div>\n            </div>\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">\n                IP and time:\n              </div>\n              <div className=\"two_table_cel\">\n                { this.state.settings.ddns.ip + \" updated at \" + this.state.settings.ddns.last}\n              </div>\n            </div>\n          </div>\n          <hr/>\n          <div className=\"page_block_content_container\">\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">\n                Enable\n              </div>\n              <div className=\"two_table_cel\">\n                <input type=\"checkbox\" id=\"ddns/enabled\" defaultChecked={this.state.settings.ddns.enabled} onChange={this.updateCheckbox}/>\n              </div>\n            </div>\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">\n                Provider\n              </div>\n              <div className=\"two_table_cel\">\n                <select name=\"type\" className=\"settings_select\" id=\"ddns/provider\" value={this.state.settings.ddns.provider} onChange={this.update}>\n                  <option value=\"noip\">Noip</option>\n                </select>\n              </div>\n            </div>\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">\n                Username\n              </div>\n              <div className=\"two_table_cel\">\n                <input type=\"text\" className=\"two_input\" id=\"ddns/username\" defaultValue={this.state.settings.ddns.username} onChange={this.update}/>\n              </div>\n            </div>\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">\n                Password\n              </div>\n              <div className=\"two_table_cel\">\n                <input type=\"text\" className=\"two_input\" id=\"ddns/password\" defaultValue={this.state.settings.ddns.password} onChange={this.update}/>\n              </div>\n            </div>\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">\n                Hostname\n              </div>\n              <div className=\"two_table_cel\">\n                <input type=\"text\" className=\"two_input\" id=\"ddns/hostname\" defaultValue={this.state.settings.ddns.hostname} onChange={this.update}/>\n              </div>\n            </div>\n          </div>\n          <div className=\"page_block_buttons_container\">\n            <button type=\"button\" onClick={ this.save }>Save</button>\n            <span>{this.state.save_status}</span>\n          </div>\n          <div className=\"advise\">\n            <span>Set up the access data to the DDNS provider account. Open an issue on Github if you want a DDNS provider that is not listed.</span>\n          </div>\n        </div>\n\n\n      </div>\n    );\n  }\n}\n\nexport default Settings\n","import React from 'react';\n\nfunction Component(props) {\n\n  const component = {\n    marginTop: '5px',\n    width: '100%',\n    display: 'grid',\n    gridTemplateColumns: '70% 30%'\n  }\n\n  const textContainer = {\n    textAlign: 'left',\n    paddingTop: '4px'\n  }\n\n  const labelContainer = {\n    textAlign: 'right',\n    paddingTop: '4px'\n  }\n\n  const text = {\n    fontSize: '18px'\n  }\n\n  const running = {\n    fontSize: '12px',\n    fontWeight: 'bold',\n    color: 'white',\n    backgroundColor: 'green',\n    padding: '5px',\n    paddingLeft: '10px',\n    paddingRight: '10px',\n    borderRadius: '5px'\n  }\n\n  const stopped = {\n    fontSize: '12px',\n    fontWeight: 'bold',\n    color: 'white',\n    backgroundColor: 'red',\n    padding: '5px',\n    paddingLeft: '10px',\n    paddingRight: '10px',\n    borderRadius: '5px'\n  }\n\n  return (\n    <div style={ component }>\n      <div style={ textContainer }>\n        <span style={ text }>{ props.title }</span>\n      </div>\n      <div style={ labelContainer }>\n        <span style={ props.status === 'Running' ? running : stopped }>{ props.status }</span>\n      </div>\n    </div>\n  );\n}\n\nexport default Component\n","import React from 'react';\nimport getCookieValue from '../../functions'\nimport { root } from '../../constants'\nimport Component from '../system/Component.js'\nconst ReactMarkdown = require('react-markdown')\n\n\nclass System extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      components: [],\n      git: {\n        version: '',\n        description: '',\n        code: 0\n      },\n      version: '',\n      upgrading: false\n    }\n\n    this.loadComponents = this.loadComponents.bind(this);\n    this.upgrade = this.upgrade.bind(this);\n    this.areYouAwake = this.areYouAwake.bind(this);\n  }\n\n  componentDidMount() {\n\n    this.loadComponents();\n    setInterval(this.loadComponents,3000)\n\n    var vers = new XMLHttpRequest();\n    vers.onload = function (e) {\n      if (vers.readyState === 4) {\n        if (vers.status === 200) {\n          var version = JSON.parse(vers.responseText);\n          this.setState({ version: version.version });\n        } else {\n          console.error(vers.statusText);\n        }\n      }\n    }.bind(this);\n    vers.open(\"GET\", root + \"api/global/version/\");\n    vers.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    vers.send();\n\n    var git = new XMLHttpRequest();\n    git.onload = function (e) {\n      if (git.readyState === 4) {\n        if (git.status === 200) {\n          const latestRelease = JSON.parse(git.responseText);\n          const description = latestRelease.body\n          this.setState({ git: {\n            version: latestRelease.tag_name,\n            description: description,\n            code: 200\n            }\n          });\n        } else if (git.status === 403) {\n          this.setState({ git: {\n            version: 'GitHub rate limit exceeded. You have reloaded so many times. It will reset after some time.',\n            code: 403\n            }\n          });\n        } else {\n          console.error(git.statusText);\n        }\n      }\n    }.bind(this);\n    git.open(\"GET\", 'https://api.github.com/repos/kikeelectronico/Homeware-LAN/releases/latest');\n    git.send();\n  }\n\n  loadComponents() {\n    var comp = new XMLHttpRequest();\n    comp.onload = function (e) {\n      if (comp.readyState === 4) {\n        if (comp.status === 200) {\n          var response = JSON.parse(comp.responseText);\n          var components = []\n          var keys = Object.keys(response);\n          for (var i = 0; i < keys.length; i++) {\n            components.push(response[keys[i]])\n          }\n\n          this.setState({ components: components });\n        } else {\n          console.error(comp.statusText);\n        }\n      }\n    }.bind(this);\n    comp.open(\"GET\", root + \"api/system/status/\");\n    comp.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    comp.send();\n  }\n\n  upgrade(){\n    if(window.confirm('Are you sure?')){\n      window.open(root + \"files/buckup/homeware/\" + getCookieValue('token'))\n      this.setState({\n        upgrading: true\n      });\n\n      var conn = new XMLHttpRequest();\n      conn.onload = function (e) {\n        if (conn.readyState === 4) {\n          if (conn.status === 200) {\n            this.areYouAwake();\n          } else {\n            console.error(conn.statusText);\n          }\n        }\n      }.bind(this)\n      conn.open(\"GET\", root + \"api/system/upgrade/\");\n      conn.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n      conn.send();\n    }\n  }\n\n  areYouAwake(){\n    var conn = new XMLHttpRequest();\n    conn.onload = function (e) {\n      if (conn.readyState === 4) {\n        if (conn.status === 200) {\n          window.location.href = '/'\n        } else {\n          console.error(conn.statusText);\n          setTimeout(this.areYouAwake,2000);\n        }\n      }\n    }.bind(this)\n    conn.open(\"GET\", root + \"test/\");\n    conn.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    conn.send();\n  }\n\n  restart(){\n    alert('WIP');\n  }\n\n  reboot(){\n    alert('WIP');\n  }\n\n  shutdown(){\n    alert('WIP');\n  }\n\n  render() {\n\n    const upgrade_button = {\n      width: '200px'\n    }\n\n    const git_description = {\n      marginTop: '20px',\n      marginLeft: '10%',\n      width: '80%',\n      paddingLeft: '20px',\n      paddingRight: '20px',\n      paddingTop: '20px',\n      paddingBottom: '20px',\n      borderRadius: '20px',\n      border: '1px solid #aaa'\n    }\n\n    const red_text = {\n      color: 'red'\n    }\n\n    const components = this.state.components.map((component) =>\n      <Component title={ component.title } status={ component.status } enable={ component.enable } key={ component.title }/>\n    );\n\n    var upgrade = '';\n    if(this.state.version !== this.state.git.version && this.state.git.code === 200 && !this.state.upgrading){\n      upgrade = <div><b>New version:</b> { this.state.git.version} <div style={ git_description }> <ReactMarkdown source={this.state.git.description} /> <button type=\"button\" style={ upgrade_button } onClick={ this.upgrade }>Upgrade</button></div> </div>\n    } else if(this.state.git.code === 403 && !this.state.upgrading){\n      upgrade = <div><b>New version:</b> { this.state.git.version}</div>\n    } else if (this.state.upgrading) {\n      upgrade = <div style={ git_description }><b style={ red_text }>Upgrading</b>. It will take a couple of minutes. You will be redirected to the homepage once finished.</div>\n    }\n\n\n    return (\n      <div>\n        <div className=\"page_block_container\">\n          <h2>System status</h2>\n          <hr/>\n          <div className=\"page_block_content_container\">\n            { components }\n          </div>\n          <div className=\"advise\">\n            <span>These are the core elements of Homeware-LAN. All must be running.</span>\n          </div>\n        </div>\n\n        <div className=\"page_block_container\">\n          <h2>Plugins</h2>\n          <hr/>\n          <div className=\"page_block_content_container\">\n            WIP\n          </div>\n          <div className=\"advise\">\n            <span></span>\n          </div>\n        </div>\n\n        <div className=\"page_block_container\">\n          <h2>Version</h2>\n          <hr/>\n          <div className=\"page_block_content_container\">\n            <b>System version:</b> { this.state.version }\n            { upgrade }\n          </div>\n          <div className=\"advise\">\n            <span>Verify if there is any code update and upgrade the software if an update is available.</span>\n          </div>\n        </div>\n\n        <div className=\"page_block_container\">\n          <h2>Power</h2>\n          <hr/>\n          <div className=\"page_block_buttons_container\">\n            <button type=\"button\" onClick={ this.restart }>Restart Homeware</button>\n            <button type=\"button\" onClick={ this.reboot }>Reboot System</button>\n            <button type=\"button\" onClick={ this.shutdown }>Shutdown System</button>\n          </div>\n          <div className=\"advise\">\n            <span>Control the device and restart the Homeware-LAN installation.</span>\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default System\n","import React from 'react';\nimport getCookieValue from '../../functions'\nimport { root } from '../../constants'\n\nclass Backup extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    }\n  }\n\n  backup(){\n    window.location = root + \"files/buckup/homeware/\" + getCookieValue('token')\n  }\n\n  render() {\n\n    const button = {\n      width: '200px'\n    }\n\n    const restore_url = root + \"files/restore/file/\" + getCookieValue('token') + \"/\";\n\n    return (\n      <div>\n\n\n        <div className=\"page_block_container\">\n          <h2>Backup</h2>\n          <hr/>\n          <div className=\"page_block_content_container\">\n              <button type=\"button\" style={ button } onClick={ this.backup }>Backup</button>\n          </div>\n          <div className=\"advise\">\n            <span>Download a backup file.</span>\n          </div>\n        </div>\n\n        <div className=\"page_block_container\">\n          <h2>Restore</h2>\n          <hr/>\n          <div className=\"page_block_content_container\">\n            <form method=\"post\" encType=\"multipart/form-data\" action={ restore_url }>\n              <input type=\"file\" name=\"file\"/>\n              <button type=\"submit\" style={ button } onClick={ this.restart }>Restore</button>\n              </form>\n          </div>\n          <div className=\"advise\">\n            <span>Restore a backup file.</span>\n          </div>\n        </div>\n\n\n      </div>\n    );\n  }\n}\n\nexport default Backup\n","import React from 'react';\nimport getCookieValue from '../../functions'\nimport { root } from '../../constants'\n\nclass Access extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {\n        apikey: ''\n      }\n    }\n  }\n\n  componentDidMount() {\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      if (http.readyState === 4) {\n        if (http.status === 200) {\n          var data = JSON.parse(http.responseText);\n          this.setState({ data: data });\n        } else {\n          console.error(http.statusText);\n        }\n      }\n    }.bind(this);\n    http.open(\"GET\", root + \"api/access/get/\");\n    http.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    http.send();\n  }\n\n  generateAPIKey(){\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      if (http.readyState === 4) {\n        if (http.status === 200) {\n          // var data = JSON.parse(http.responseText);\n          window.location.href = \"/access\"\n        } else {\n          console.error(http.statusText);\n        }\n      }\n    };\n    http.open(\"GET\", root + \"api/settings/apikey/\");\n    http.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    http.send();\n  }\n\n  render() {\n\n    return (\n      <div>\n        <div className=\"page_block_container\">\n          <h2>API key</h2>\n          <hr/>\n          <div className=\"page_block_content_container\">\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">\n                API Key\n              </div>\n              <div className=\"two_table_cel\">\n                <input type=\"text\" className=\"two_input\" id=\"apikey\" value={ this.state.data.apikey } disabled/>\n              </div>\n            </div>\n          </div>\n          <div className=\"page_block_buttons_container\">\n            <button type=\"button\" onClick={ this.generateAPIKey }>Generate</button>\n\n          </div>\n          <div className=\"advise\">\n            <span>The API Key gives you access to the Homeware's API. Please do not generate an API Key if you are not sure of what you are doing.</span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Access\n","import React from 'react';\nimport getCookieValue from '../../functions'\nimport { root } from '../../constants'\n\nclass Logs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      page: 1\n    }\n\n    this.previousPage = this.previousPage.bind(this);\n    this.nextPage = this.nextPage.bind(this);\n    this.downloadLog = this.downloadLog.bind(this);\n  }\n\n  componentDidMount() {\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      if (http.readyState === 4) {\n        if (http.status === 200) {\n          var data = JSON.parse(http.responseText);\n          this.setState({ data: data });\n        } else {\n          console.error(http.statusText);\n        }\n      }\n    }.bind(this);\n    http.open(\"GET\", root + \"api/log/get/\");\n    http.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    http.send();\n  }\n\n  previousPage() {\n    if (this.state.page > 1)\n      this.setState({ page: this.state.page - 1 });\n  }\n\n  nextPage() {\n    if (this.state.page < this.state.data.length/10-1)\n      this.setState({ page: this.state.page + 1 });\n  }\n\n  downloadLog() {\n    window.location = root + \"files/log/homeware/\" + getCookieValue('token')\n  }\n\n  render() {\n\n    const line = {\n      width: '80%',\n      marginLeft: '8%',\n      marginTop: '10px',\n      borderBottom: '1px solid #eee',\n      paddingLeft: '20px',\n      paddingBottom: '10px',\n      paddingRight: '20px',\n      textAlign: 'left'\n    }\n\n    const yellow = {\n      color: 'orange'\n    }\n\n    const red = {\n      color: 'red'\n    }\n\n    const homeware_lan_log_data = this.state.data.reverse().slice(0, this.state.page * 10);\n    const homeware_lan_log = homeware_lan_log_data.map((register, i) =>\n      <div style={ line } key={ i }>\n        { register.severity === 'Log' ? <b>{ register.severity }</b> : '' }\n        { register.severity === 'Warning' ? <b style={ yellow }>{ register.severity }</b> : '' }\n        { register.severity === 'Alert' ? <b style={ red }>{ register.severity }</b> : '' }\n         - { register.time }<br/>\n        { register.message }\n      </div>\n    );\n\n    return (\n      <div>\n        <div className=\"page_block_container\">\n          <h2>Homeware-LAN log</h2>\n          <hr/>\n          <div>\n            { homeware_lan_log }\n          </div>\n          <div className=\"page_block_buttons_container\">\n            <button type=\"button\" onClick={ this.nextPage }>Load more</button>\n            <button type=\"button\" onClick={ this.downloadLog }>Download</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Logs\n","import React from 'react';\nimport { root } from '../../constants'\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      enable_message: false,\n      message: ''\n    }\n    this.login = this.login.bind(this);\n    this.grantAccess = this.grantAccess.bind(this);\n  }\n\n  login() {\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      var response = JSON.parse(http.responseText);\n      if(response['status'] === 'in'){\n        document.cookie = \"user=\" + response['user'] + \"; path=/\";\n        document.cookie = \"token=\" + response['token'] + \"; path=/\";\n        window.location = '/';\n      } else if (response['status'] === 'fail'){\n        this.setState({\n          enable_message: true,\n          message: 'Incorrect User or Password'\n        })\n        setTimeout(function(){\n          this.setState({\n             enable_message: false\n           });\n        }.bind(this), 5000)\n      }\n    }.bind(this);\n    http.open(\"GET\", root + \"api/user/login/\");\n    http.setRequestHeader('user', document.getElementById('user').value)\n    http.setRequestHeader('pass', document.getElementById('password').value)\n    http.send();\n  }\n\n  grantAccess() {\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      if (http.responseText !== 'fail')\n        window.location = http.responseText;\n      else {\n        this.setState({\n          enable_message: true,\n          message: 'Incorrect User or Password'\n        })\n        setTimeout(function(){\n          this.setState({\n             enable_message: false\n           });\n        }.bind(this), 5000)\n      }\n    }.bind(this);\n    http.open(\"GET\", root + \"api/user/googleSync/\");\n    http.setRequestHeader('user', document.getElementById('user').value)\n    http.setRequestHeader('pass', document.getElementById('password').value)\n    http.send();\n  }\n\n  render() {\n\n    const form_container = {\n      margin: '20%',\n    }\n\n    const element = {\n      margin: '10px'\n    }\n\n    var message = '';\n    if (this.state.enable_message){\n      message = <div className=\"alert_message\"> { this.state.message } </div>\n    }\n\n    return (\n      <div style={ form_container }>\n        { window.location.href.includes('google') ? <p>Google request access to Homeware-Lan</p> : '' }\n        <br/>\n        <span style={ element }>Username</span>\n        <input type=\"text\" name=\"user\" id=\"user\"/>\n        <span style={ element }>Password</span>\n        <input type=\"password\" name=\"password\" id=\"password\"/>\n        <button type=\"button\" style={ element } onClick={ !window.location.href.includes('google') ? this.login : this.grantAccess }>{ !window.location.href.includes('google') ? <span>Login</span> : <span>Grant access</span> }</button>\n        <br/>\n        { message }\n      </div>\n    );\n  }\n}\n\nexport default Login\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport getCookieValue from './functions'\nimport { root } from './constants'\n\nimport Welcome from './components/assistant/Welcome'\nimport User from './components/assistant/User'\nimport Domain from './components/assistant/Domain'\nimport Confignginx from './components/assistant/Confignginx'\nimport Change2domain from './components/assistant/Change2domain'\nimport Changed2domain from './components/assistant/Changed2domain'\nimport Ssl from './components/assistant/Ssl'\nimport Google from './components/assistant/Google'\nimport Initialize from './components/assistant/Initialize'\n\nimport Menu from './components/web/Menu'\nimport Devices from './components/pages/Devices'\nimport Editor from './components/pages/Editor'\nimport Info from './components/pages/Info'\nimport Connecting from './components/pages/Connecting'\nimport Tasks from './components/pages/Tasks'\nimport Manager from './components/pages/Manager'\nimport Settings from './components/pages/Settings'\nimport System from './components/pages/System'\nimport Backup from './components/pages/Backup'\nimport Access from './components/pages/Access'\nimport Logs from './components/pages/Logs'\nimport Login from './components/pages/Login'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      session: false,\n      version: ''\n    }\n    this.logout = this.logout.bind(this);\n  }\n\n  componentDidMount() {\n    if (!window.location.href.includes('assistant')) {\n      var http = new XMLHttpRequest();\n      http.onload = function (e) {\n        if (http.readyState === 4) {\n          if (http.status === 200) {\n            var data = JSON.parse(http.responseText);\n            if (data.status !== 'in' && !window.location.href.includes('login'))\n              window.location.href = '/login/'\n            else if (data.status === 'in')\n              this.setState({\n                session: true\n              });\n          } else {\n            console.error(http.statusText);\n          }\n        }\n      }.bind(this);\n      http.open(\"GET\", root + \"api/user/validateToken/\");\n      http.setRequestHeader('token', getCookieValue('token'))\n      http.setRequestHeader('user', getCookieValue('user'))\n      http.send();\n\n      var vers = new XMLHttpRequest();\n      vers.onload = function (e) {\n        if (vers.readyState === 4) {\n          if (vers.status === 200) {\n            var version = JSON.parse(vers.responseText);\n            this.setState({ version: version.version });\n          } else {\n            console.error(vers.statusText);\n          }\n        }\n      }.bind(this);\n      vers.open(\"GET\", root + \"api/global/version/\");\n      vers.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n      vers.send();\n    }\n  }\n\n  logout() {\n    document.cookie = \"user=; path=/\";\n    document.cookie = \"token=; path=/\";\n    this.setState({\n      session: false\n    });\n    window.location.href = '/'\n  }\n\n  render() {\n\n    if (!this.state.session && !window.location.href.includes('assistant') && !window.location.href.includes('login'))\n      return ''\n    else if (window.location.href.includes('login'))\n      return (\n        <div className=\"Clear_app\">\n          <Login/>\n        </div>\n      );\n    else if (window.location.href.includes('assistant'))\n      return (\n        <Router>\n          <div className=\"Clear_app\">\n            <Route exact={ true } path=\"/assistant/\" component={ Welcome }/>\n            <Route exact={ true } path=\"/assistant/welcome/\" component={ Welcome }/>\n            <Route exact={ true } path=\"/assistant/user\" component={ User }/>\n            <Route exact={ true } path=\"/assistant/domain\" component={ Domain }/>\n            <Route exact={ true } path=\"/assistant/confignginx\" component={ Confignginx }/>\n            <Route exact={ true } path=\"/assistant/change2domain\" component={ Change2domain }/>\n            <Route exact={ true } path=\"/assistant/changed2domain\" component={ Changed2domain }/>\n            <Route exact={ true } path=\"/assistant/ssl\" component={ Ssl }/>\n            <Route exact={ true } path=\"/assistant/google\" component={ Google }/>\n            <Route exact={ true } path=\"/assistant/initialize\" component={ Initialize }/>\n          </div>\n        </Router>\n      );\n    else\n      return (\n        <Router>\n          <div className=\"App\">\n            <div className=\"upper-menu\">\n              Homeware-LAN\n            </div>\n            <div className=\"main-app\">\n              <div className=\"menu\">\n                <div>\n                  <Menu image=\"/menu/devices_icon.png\" title=\"Devices\" href=\"/devices\"/>\n                  <Menu image=\"/menu/tasks_icon.png\" title=\"Tasks\" href=\"/tasks\"/>\n                  <Menu image=\"/menu/settings_icon.png\" title=\"Settings\" href=\"/settings\"/>\n                  <Menu image=\"/menu/status_icon.png\" title=\"System\" href=\"/system\"/>\n                  <Menu image=\"/menu/backup_icon.png\" title=\"Backup\" href=\"/backup\"/>\n                  <Menu image=\"/menu/access_icon.png\" title=\"Access\" href=\"/access\"/>\n                  <Menu image=\"/menu/logs_icon.png\" title=\"Logs\" href=\"/logs\"/>\n                  <hr/>\n                  <Menu image=\"/menu/repo_icon.png\" title=\"Repo\" href=\"https://github.com/kikeelectronico/Homeware-LAN\"/>\n                  <Menu image=\"/menu/help_icon.png\" title=\"How to\" href=\"https://github.com/kikeelectronico/Homeware-LAN/wiki\"/>\n                  <hr/>\n                  <Menu image=\"/menu/logout_icon.png\" title=\"Logout\" exec={ this.logout }/>\n                </div>\n                <div className=\"menu-data\">\n                  <p>Version: { this.state.version }</p>\n                </div>\n              </div>\n              <div className=\"page\">\n                <Route exact={ true } path=\"/\" component={ Devices }/>\n                <Route exact={ true } path=\"/devices\" component={ Devices }/>\n                <Route path=\"/devices/editor\" component={ Editor }/>\n                <Route path=\"/devices/info\" component={ Info }/>\n                <Route path=\"/devices/connecting\" component={ Connecting }/>\n                <Route exact={ true } path=\"/tasks\" component={ Tasks }/>\n                <Route path=\"/tasks/manager\" component={ Manager }/>\n                <Route path=\"/settings\" component={ Settings }/>\n                <Route path=\"/system\" component={ System }/>\n                <Route path=\"/backup\" component={ Backup }/>\n                <Route path=\"/access\" component={ Access }/>\n                <Route path=\"/logs\" component={ Logs }/>\n              </div>\n            </div>\n          </div>\n        </Router>\n      );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}