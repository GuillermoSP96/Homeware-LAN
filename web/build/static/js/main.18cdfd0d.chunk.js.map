{"version":3,"sources":["functions.js","constants.js","components/assistant/Welcome.js","components/assistant/User.js","components/assistant/Domain.js","components/assistant/Confignginx.js","components/assistant/Change2domain.js","components/assistant/Changed2domain.js","components/assistant/Ssl.js","components/assistant/Google.js","components/assistant/Initialize.js","components/web/Menu.js","components/devices/traits/OnOff.js","components/devices/aux/Information.js","components/devices/aux/Edit.js","components/devices/Light.js","components/devices/Outlet.js","components/devices/traits/TemperatureSetting.js","components/devices/AcUnit.js","components/devices/AirFreshener.js","components/devices/AirPurifier.js","components/devices/Bed.js","components/devices/Fan.js","components/devices/Fireplace.js","components/devices/Radiator.js","components/devices/Switch.js","components/devices/Thermostat.js","components/devices/AirCooler.js","components/devices/Bathtub.js","components/devices/Awing.js","components/devices/Blinds.js","components/devices/Closet.js","components/devices/Curtain.js","components/devices/Door.js","components/devices/Drawer.js","components/devices/Garage.js","components/devices/Pergola.js","components/devices/Shutter.js","components/devices/Valve.js","components/devices/Window.js","components/devices/Lock.js","components/devices/Gate.js","components/devices/Heater.js","components/devices/Hood.js","components/devices/SecuritySystem.js","components/devices/Blender.js","components/devices/Global.js","components/devices/Scene.js","components/pages/Devices.js","components/editor/Text.js","components/editor/traits/Scene.js","components/editor/traits/OnOff.js","components/editor/traits/Brightness.js","components/editor/traits/FanSpeed.js","components/editor/traits/ColorSetting.js","components/editor/traits/TemperatureSetting.js","components/editor/traits/Toggles.js","components/editor/traits/Modes.js","components/editor/traits/HumiditySetting.js","components/editor/traits/OpenClose.js","components/editor/traits/Rotation.js","components/editor/traits/Fill.js","components/editor/traits/ArmDisarm.js","components/editor/traits/StartStop.js","components/editor/traits/Timer.js","components/editor/traits/TemperatureControl.js","components/editor/traits/Cook.js","components/pages/Editor.js","components/pages/Info.js","components/pages/Tasks.js","components/pages/Settings.js","components/system/Component.js","components/pages/System.js","components/pages/Backup.js","components/pages/Access.js","components/pages/Logs.js","components/pages/Login.js","App.js","serviceWorker.js","index.js"],"names":["getCookieValue","cname","name","ca","decodeURIComponent","document","cookie","split","i","length","c","charAt","substring","indexOf","root","window","location","href","includes","deviceReference","devices","attributes","commandOnlyOnOff","type","default","queryOnlyOnOff","param","on","manual","commandOnlyBrightness","brightness","colorModel","commandOnlyColorSetting","colorTemperatureRange","temperatureMinK","temperatureMaxK","content","color","spectrumRgb","temperatureK","spectrumRGB","spectrumHSV","hue","saturation","availableThermostatModes","thermostatTemperatureRange","minThresholdCelsius","maxThresholdCelsius","thermostatTemperatureUnit","bufferRangeCelsius","commandOnlyTemperatureSetting","queryOnlyTemperatureSetting","thermostatMode","thermostatTemperatureSetpoint","thermostatTemperatureAmbient","thermostatTemperatureSetpointHigh","thermostatTemperatureSetpointLow","thermostatHumidityAmbient","discreteOnlyOpenClose","openDirection","commandOnlyOpenClose","queryOnlyOpenClose","openPercent","openState","commandOnlyRotation","supportsContinuousRotation","supportsDegrees","supportsPercent","rotationDegreesRange","rotationDegreesMin","rotationDegreesMax","rotationPercent","rotationDegrees","isLocked","isJammed","sceneReversible","deactivate","isDocked","availableToggles","commandOnlyToggles","availableZones","pausable","isRunning","isPaused","activeZones","maxTimerLimitSec","commandOnlyTimer","timerRemainingSec","timerPaused","temperatureStepCelsius","temperatureUnitForUX","queryOnlyTemperatureControl","commandOnlyTemperatureControl","temperatureRange","temperatureSetpointCelsius","temperatureAmbientCelsius","availableFanSpeeds","speeds","ordered","reversible","commandOnlyFanSpeed","currentFanSpeedSetting","availableArmLevels","levels","isArmed","currentArmLevel","exitAllowance","availableFillLevels","isFilled","currentFillLevel","lang","currentStatusReport","humiditySetpointRange","minPercent","maxPercent","commandOnlyHumiditySetting","queryOnlyHumiditySetting","humiditySetpointPercent","humidityAmbientPercent","foodPresets","supportedCookingModes","currentCookingMode","currentFoodPreset","currentFoodQuantity","currentFoodUnit","availableModes","commandOnlyModes","devicesCoolNames","Welcome","props","next","bind","className","onClick","this","React","Component","User","state","enable_next","enable_message","message","set","http","XMLHttpRequest","onload","e","readyState","status","setState","responseText","console","error","statusText","setTimeout","url","hostname","open","setRequestHeader","send","JSON","stringify","getElementById","value","alert","element","margin","style","id","Domain","target","Confignginx","Change2domain","onreadystatechange","log","data","parse","code","placeholder","Changed2domain","Ssl","Google","Initialize","xmlHttp","Menu","marginTop","display","gridTemplateColumns","src","image","alt","width","paddingTop","fontSize","cursor","exec","title","OnOff","toggle","reload","float","marginLeft","Information","go","Edit","Light","device","traits","Object","keys","toString","color_strip","height","borderRadius","backgroundColor","opacity","paddingLeft","Outlet","TemperatureSetting","up","down","update","temperature","marginRight","AcUnit","AirFreshener","AirPurifier","Bed","Fan","Fireplace","Radiator","Switch","Thermostat","AirCooler","Bathtub","Awing","Blinds","Closet","Curtain","Door","Drawer","Garage","Pergola","Shutter","Valve","Window","Lock","Gate","Heater","Hood","SecuritySystem","Blender","Global","Scene","Devices","loadData","newDevice","map","key","paddingBottom","paddingRight","Text","event","defaultValue","onChange","updateCheckbox","checked","defaultChecked","Brightness","FanSpeed","updateFanSpeeds","addFanSpeed","speed_id","speed_attribute","temp_availableFanSpeeds","speed_values","speed_name","push","names_box","speed","speed_synonym","supportsFanSpeedPercent","ColorSetting","min","max","updateMode","addMode","mode_id","temp_availableThermostatModes","splice","join","modes","mode","Toggles","updatetoggle","addToggle","toggle_id","toggle_attribute","temp_availableToggles","name_values","toggles","name_synonym","Modes","temp_availableModes","values","settings","setting_name","setting_values","setting_synonym","settings_box","setting","HumiditySetting","OpenClose","Rotation","Fill","updateLevels","addLevel","level_id","level_attribute","temp_availableFillLevels","level_values","level_name","level","level_synonym","ArmDisarm","updateSecurityLevel","addSecurityLevel","temp_availableArmLevels","StartStop","updateArray","Timer","TemperatureControl","Cook","updatePreset","addPreset","temp_supportedCookingModes","preset_id","temp_foodPresets","food_synonyms","synonym","food_preset_name","supported_units","presets","preset","Editor","pathname","create","deviceInfo","defaultnames","nicknames","online","posible_traits","save_status","updateNames","updateId","updateType","updateTraits","save","delete","renderAttrinutes","dumy_key","names","temp_device","temp_status","forEach","attribute","params","filter","index","arr","payload","confirm","trait","separator","types","traitsCoolNames","toLowerCase","disabled","hwVersion","swVersion","manufacturer","model","dev","sta","container","json_viewer","textAlign","Tasks","tasks","openManager","newTask","devider","task","description","Settings","google","ddns","mqtt","apikey","auth","token","fulfillment","sub_container","button","client_id","client_secret","user","password","ip","last","enabled","provider","username","textContainer","fontWeight","padding","enable","ReactMarkdown","require","System","components","git","version","comp","response","vers","latestRelease","body","tag_name","data_container","component","upgrader","border","source","upgrade","gridGap","restart","reboot","shutdown","Backup","restore_url","backup","method","encType","action","Access","form_colum","generateAPIKey","Logs","page","previousPage","nextPage","downloadLog","line","borderBottom","yellow","red","homeware_lan_log","reverse","slice","register","severity","time","Login","login","grantAccess","App","session","logout","exact","path","Info","Boolean","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.18cdfd0d.chunk.js","sourcesContent":["function getCookieValue(cname) {\n  var name = cname + \"=\";\n  var decodedCookie = decodeURIComponent(document.cookie);\n  var ca = decodedCookie.split(';');\n  for(var i = 0; i <ca.length; i++) {\n    var c = ca[i];\n    while (c.charAt(0) === ' ') {\n      c = c.substring(1);\n    }\n    if (c.indexOf(name) === 0) {\n      return c.substring(name.length, c.length);\n    }\n  }\n  return \"\";\n}\n\nexport default getCookieValue;\n","var root = window.location.href.includes('localhost') ? \"http://homeware.local/\" : \"/\"\n\nconst deviceReference = {\n  devices: {\n    \"action.devices.types.AC_UNIT\": [\n      \"action.devices.traits.FanSpeed\",\n      \"action.devices.traits.OnOff\",\n      \"action.devices.traits.TemperatureSetting\"\n    ],\n    \"action.devices.types.AIRCOOLER\": [\n      \"action.devices.traits.FanSpeed\",\n      \"action.devices.traits.HumiditySetting\",\n      \"action.devices.traits.OnOff\",\n      \"action.devices.traits.TemperatureSetting\"\n    ],\n    \"action.devices.types.AIRFRESHENER\": [\n      \"action.devices.traits.Modes\",\n      \"action.devices.traits.OnOff\",\n      \"action.devices.traits.Toggles\"\n    ],\n    \"action.devices.types.AIRPURIFIER\": [\n      \"action.devices.traits.OnOff\",\n      \"action.devices.traits.FanSpeed\",\n      \"action.devices.traits.Modes\",\n      \"action.devices.traits.Toggles\"\n    ],\n    \"action.devices.types.AWNING\": [\n      \"action.devices.traits.Modes\",\n      \"action.devices.traits.OpenClose\"\n    ],\n    \"action.devices.types.BATHTUB\": [\n      \"action.devices.traits.Fill\",\n      \"action.devices.traits.OnOff\"\n    ],\n    \"action.devices.types.BED\": [\n      \"action.devices.traits.Modes\",\n      \"action.devices.traits.Toggles\"\n    ],\n    \"action.devices.types.BLENDER\": [\n      \"action.devices.traits.Cook\",\n      \"action.devices.traits.Modes\",\n      \"action.devices.traits.OnOff\",\n      \"action.devices.traits.StartStop\",\n      \"action.devices.traits.Timer\",\n      \"action.devices.traits.Toggles\"\n    ],\n    \"action.devices.types.BLINDS\": [\n      \"action.devices.traits.Modes\",\n      \"action.devices.traits.OpenClose\"\n    ],\n    \"action.devices.types.BOILER\": [\n      \"action.devices.traits.Modes\",\n      \"action.devices.traits.TemperatureControl\",\n      \"action.devices.traits.OnOff\",\n      \"action.devices.traits.Toggles\"\n    ],\n    \"action.devices.types.CLOSET\": [\n      \"action.devices.traits.OpenClose\"\n    ],\n    \"action.devices.types.COFFE_MAKER\": [\n      \"action.devices.traits.Cook\",\n      \"action.devices.traits.Modes\",\n      \"action.devices.traits.OnOff\",\n      \"action.devices.traits.TemperatureControl\",\n      \"action.devices.traits.Toggles\"\n    ],\n    \"action.devices.types.COOKTOP\": [\n      \"action.devices.traits.Cook\",\n      \"action.devices.traits.Modes\",\n      \"action.devices.traits.OnOff\",\n      \"action.devices.traits.StartStop\",\n      \"action.devices.traits.Timer\",\n      \"action.devices.traits.Toggles\"\n    ],\n    \"action.devices.types.CURTAIN\": [\n      \"action.devices.traits.OpenClose\"\n    ],\n    \"action.devices.types.DEHUMIDIFIER\": [\n      \"action.devices.traits.FanSpeed\",\n      \"action.devices.traits.HumiditySetting\",\n      \"action.devices.traits.Modes\",\n      \"action.devices.traits.OnOff\",\n      \"action.devices.traits.RunCycle\",\n      \"action.devices.traits.StartStop\",\n      \"action.devices.traits.Toggles\"\n    ],\n    \"action.devices.types.DEHYDRATOR\": [\n      \"action.devices.traits.Cook\",\n      \"action.devices.traits.Modes\",\n      \"action.devices.traits.OnOff\",\n      \"action.devices.traits.StartStop\",\n      \"action.devices.traits.Timer\",\n      \"action.devices.traits.Toggles\"\n    ],\n    \"action.devices.types.DISHWASHER\": [\n      \"action.devices.traits.OnOff\",\n      \"action.devices.traits.StartStop\",\n      \"action.devices.traits.Modes\",\n      \"action.devices.traits.Toggles\",\n      \"action.devices.traits.RunCycle\"\n    ],\n    \"action.devices.types.DOOR\": [\n      \"action.devices.traits.OpenClose\"\n    ],\n    \"action.devices.types.DRAWER\": [\n      \"action.devices.traits.OpenClose\"\n    ],\n    \"action.devices.types.DRYER\": [\n      \"action.devices.traits.OnOff\",\n      \"action.devices.traits.StartStop\",\n      \"action.devices.traits.Modes\",\n      \"action.devices.traits.Toggles\",\n      \"action.devices.traits.RunCycle\"\n    ],\n    \"action.devices.types.FAN\": [\n      \"action.devices.traits.FanSpeed\",\n      \"action.devices.traits.Modes\",\n      \"action.devices.traits.OnOff\",\n      \"action.devices.traits.Toggles\"\n    ],\n    \"action.devices.types.FIREPLACE\": [\n      \"action.devices.traits.Modes\",\n      \"action.devices.traits.OnOff\",\n      \"action.devices.traits.Toggles\"\n    ],\n    \"action.devices.types.FRYER\": [\n      \"action.devices.traits.Cook\",\n      \"action.devices.traits.Modes\",\n      \"action.devices.traits.OnOff\",\n      \"action.devices.traits.StartStop\",\n      \"action.devices.traits.Timer\",\n      \"action.devices.traits.Toggles\"\n    ],\n    \"action.devices.types.GARAGE\": [\n      \"action.devices.traits.OpenClose\"\n    ],\n    \"action.devices.types.GATE\": [\n      \"action.devices.traits.OpenClose\"\n    ],\n    \"action.devices.types.GRILL\": [\n      \"action.devices.traits.Cook\",\n      \"action.devices.traits.Modes\",\n      \"action.devices.traits.OnOff\",\n      \"action.devices.traits.StartStop\",\n      \"action.devices.traits.Timer\",\n      \"action.devices.traits.Toggles\"\n    ],\n    \"action.devices.types.HEATER\": [\n      \"action.devices.traits.FanSpeed\",\n      \"action.devices.traits.Modes\",\n      \"action.devices.traits.OnOff\",\n      \"action.devices.traits.TemperatureSetting\",\n      \"action.devices.traits.Toggles\"\n    ],\n    \"action.devices.types.HOOD\": [\n      \"action.devices.traits.FanSpeed\",\n      \"action.devices.traits.Modes\",\n      \"action.devices.traits.OnOff\",\n      \"action.devices.traits.Toggles\"\n    ],\n    \"action.devices.types.HUMIDIFIER\": [\n      \"action.devices.traits.FanSpeed\",\n      \"action.devices.traits.HumiditySetting\",\n      \"action.devices.traits.Modes\",\n      \"action.devices.traits.OnOff\",\n      \"action.devices.traits.StartStop\",\n      \"action.devices.traits.Toggles\"\n    ],\n    \"action.devices.types.KETTLE\": [\n      \"action.devices.traits.Modes\",\n      \"action.devices.traits.OnOff\",\n      \"action.devices.traits.TemperatureControl\",\n      \"action.devices.traits.Toggles\"\n    ],\n    \"action.devices.types.LIGHT\": [\n      \"action.devices.traits.OnOff\",\n      \"action.devices.traits.Brightness\",\n      \"action.devices.traits.ColorSetting\"\n    ],\n    \"action.devices.types.LOCK\": [\n      \"action.devices.traits.LockUnlock\"\n    ],\n    \"action.devices.types.MOP\": [\n      \"action.devices.traits.Dock\",\n      \"action.devices.traits.Locator\",\n      \"action.devices.traits.Modes\",\n      \"action.devices.traits.OnOff\",\n      \"action.devices.traits.RunCycle\",\n      \"action.devices.traits.StartStop\",\n      \"action.devices.traits.Toggles\"\n    ],\n    \"action.devices.types.MOWER\": [\n      \"action.devices.traits.Dock\",\n      \"action.devices.traits.Locator\",\n      \"action.devices.traits.Modes\",\n      \"action.devices.traits.OnOff\",\n      \"action.devices.traits.RunCycle\",\n      \"action.devices.traits.StartStop\",\n      \"action.devices.traits.Toggles\"\n    ],\n    \"action.devices.types.MICROWAVE\": [\n      \"action.devices.traits.Cook\",\n      \"action.devices.traits.Modes\",\n      \"action.devices.traits.OnOff\",\n      \"action.devices.traits.StartStop\",\n      \"action.devices.traits.Timer\",\n      \"action.devices.traits.Toggles\"\n    ],\n    \"action.devices.types.MULTICOOKER\": [\n      \"action.devices.traits.Cook\",\n      \"action.devices.traits.Modes\",\n      \"action.devices.traits.OnOff\",\n      \"action.devices.traits.StartStop\",\n      \"action.devices.traits.Timer\",\n      \"action.devices.traits.Toggles\"\n    ],\n    \"action.devices.types.OUTLET\": [\n      \"action.devices.traits.OnOff\"\n    ],\n    \"action.devices.types.OVEN\": [\n      \"action.devices.traits.Cook\",\n      \"action.devices.traits.Modes\",\n      \"action.devices.traits.OnOff\",\n      \"action.devices.traits.StartStop\",\n      \"action.devices.traits.TemperatureControl\",\n      \"action.devices.traits.Toggles\"\n    ],\n    \"action.devices.types.PERGOLA\": [\n      \"action.devices.traits.OpenClose\",\n      \"action.devices.traits.Rotation\"\n    ],\n    \"action.devices.types.PRESSURECOOKER\": [\n      \"action.devices.traits.Cook\",\n      \"action.devices.traits.Modes\",\n      \"action.devices.traits.OnOff\",\n      \"action.devices.traits.StartStop\",\n      \"action.devices.traits.Timer\",\n      \"action.devices.traits.Toggles\"\n    ],\n    \"action.devices.types.RADIATOR\": [\n      \"action.devices.traits.Modes\",\n      \"action.devices.traits.OnOff\",\n      \"action.devices.traits.Toggles\"\n    ],\n    \"action.devices.types.REFRIGERATOR\": [\n      \"action.devices.traits.Modes\",\n      \"action.devices.traits.OnOff\",\n      \"action.devices.traits.TemperatureControl\",\n      \"action.devices.traits.Toggles\"\n    ],\n    \"action.devices.types.SCENE\": [\n      \"action.devices.traits.Scene\"\n    ],\n    \"action.devices.types.SECURITYSYSTEM\": [\n      \"action.devices.traits.ArmDisarm\",\n      \"action.devices.traits.StatusReport\"\n    ],\n    \"action.devices.types.SHUTTER\": [\n      \"action.devices.traits.Modes\",\n      \"action.devices.traits.OpenClose\",\n      \"action.devices.traits.Rotation\"\n    ],\n    \"action.devices.types.SHOWER\": [\n      \"action.devices.traits.Modes\",\n      \"action.devices.traits.OnOff\",\n      \"action.devices.traits.StartStop\",\n      \"action.devices.traits.TemperatureControl\"\n    ],\n    \"action.devices.types.SOUSVIDE\": [\n      \"action.devices.traits.Cook\",\n      \"action.devices.traits.Modes\",\n      \"action.devices.traits.OnOff\",\n      \"action.devices.traits.StartStop\",\n      \"action.devices.traits.Timer\",\n      \"action.devices.traits.Toggles\"\n    ],\n    \"action.devices.types.SPRINKLER\": [\n      \"action.devices.traits.StartStop\"\n    ],\n    \"action.devices.types.STANDMIXER\": [\n      \"action.devices.traits.Cook\",\n      \"action.devices.traits.Modes\",\n      \"action.devices.traits.OnOff\",\n      \"action.devices.traits.StartStop\",\n      \"action.devices.traits.Toggles\"\n    ],\n    \"action.devices.types.SWITCH\": [\n      \"action.devices.traits.OnOff\"\n    ],\n    \"action.devices.types.THERMOSTAT\": [\n      \"action.devices.traits.TemperatureSetting\"\n    ],\n    \"action.devices.types.VACUUM\": [\n      \"action.devices.traits.Dock\",\n      \"action.devices.traits.Modes\",\n      \"action.devices.traits.OnOff\",\n      \"action.devices.traits.StartStop\",\n      \"action.devices.traits.Toggles\"\n    ],\n    \"action.devices.types.VALVE\": [\n      \"action.devices.traits.OpenClose\"\n    ],\n    \"action.devices.types.WASHER\": [\n      \"action.devices.traits.Modes\",\n      \"action.devices.traits.OnOff\",\n      \"action.devices.traits.RunCycle\",\n      \"action.devices.traits.StartStop\",\n      \"action.devices.traits.Toggles\"\n    ],\n    \"action.devices.types.WATERHEATER\": [\n      \"action.devices.traits.Modes\",\n      \"action.devices.traits.OnOff\",\n      \"action.devices.traits.TemperatureControl\",\n      \"action.devices.traits.Toggles\"\n    ],\n    \"action.devices.types.WINDOW\": [\n      \"action.devices.traits.LockUnlock\",\n      \"action.devices.traits.OpenClose\"\n    ],\n    \"action.devices.types.YOGURTMAKER\": [\n      \"action.devices.traits.Cook\",\n      \"action.devices.traits.Modes\",\n      \"action.devices.traits.OnOff\",\n      \"action.devices.traits.StartStop\",\n      \"action.devices.traits.Timer\",\n      \"action.devices.traits.Toggles\"\n    ]\n  },\n  \"traits\": {\n    \"action.devices.traits.OnOff\": {\n      attributes: {\n        commandOnlyOnOff: {\n          type: \"bool\",\n          default: false\n        },\n        queryOnlyOnOff: {\n          type: \"bool\",\n          default: false\n        }\n      },\n      param:{\n        on: {\n          type: \"bool\",\n          default: true,\n          manual: false\n        }\n      }\n    },\n    \"action.devices.traits.Brightness\": {\n      attributes: {\n        commandOnlyBrightness: {\n          type: \"bool\",\n          default: false\n        }\n      },\n      param:{\n        brightness: {\n          type: \"int\",\n          default: 100,\n          manual: false\n        }\n      }\n    },\n    \"action.devices.traits.ColorSetting\": {\n      attributes: {\n        colorModel: {\n          type: \"string\",\n          default: \"rgb\",\n          manual: false\n        },\n        commandOnlyColorSetting: {\n            type: \"bool\",\n            default: false,\n            manual: false\n        },\n        colorTemperatureRange: {\n          type: \"object\",\n          manual: false,\n          default: {\n            temperatureMinK: 4000,\n            temperatureMaxK: 4200\n          },\n          content: {\n            temperatureMinK: {\n              type: \"int\",\n              default: 4000\n            },\n            temperatureMaxK: {\n              type: \"int\",\n              default: 4200\n            }\n          }\n        }\n      },\n      param:{\n        color: {\n          type: \"object\",\n          manual: false,\n          default: {\n            spectrumRgb: 16711935\n          },\n          content: {\n            temperatureK: {\n              type: \"int\",\n              default: 4000\n            },\n            spectrumRGB: {\n              type: \"int\",\n              default: 255\n            },\n            spectrumHSV:{\n              type: \"object\",\n              content: {\n                hue: {\n                  type: \"float\"\n                },\n                saturation: {\n                  type: \"float\"\n                },\n                default: {\n                  type: \"float\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"action.devices.traits.TemperatureSetting\": {\n      attributes: {\n        availableThermostatModes: {\n          type: \"select\",\n          default: \"off,heat,cool\"\n        },\n        thermostatTemperatureRange: {\n          type: \"object\",\n          default: {\n            minThresholdCelsius: 18,\n            maxThresholdCelsius: 34\n          }\n        },\n        thermostatTemperatureUnit: {\n          type: \"string\",\n          default: \"C\"\n        },\n        bufferRangeCelsius: {\n          type: \"int\",\n          default: 2\n        },\n        commandOnlyTemperatureSetting: {\n          type: \"bool\",\n          default: false\n        },\n        queryOnlyTemperatureSetting: {\n          type: \"bool\",\n          default: false\n        }\n      },\n      param:{\n        thermostatMode: {\n          type: \"string\",\n          default: \"off\",\n          manual: false\n        },\n        thermostatTemperatureSetpoint: {\n          type: \"int\",\n          default: 20,\n          manual: false\n        },\n        thermostatTemperatureAmbient: {\n          type: \"int\",\n          default: 22,\n          manual: false\n        },\n        thermostatTemperatureSetpointHigh: {\n          type: \"int\",\n          default: 28,\n          manual: false\n        },\n        thermostatTemperatureSetpointLow: {\n          type: \"int\",\n          default: 18,\n          manual: false\n        },\n        thermostatHumidityAmbient: {\n          type: \"int\",\n          default: 80,\n          manual: false\n        }\n      }\n    },\n    \"action.devices.traits.OpenClose\": {\n      attributes: {\n        discreteOnlyOpenClose: {\n          type: \"bool\",\n          default: false\n        },\n        openDirection: {\n          type: \"array\",\n          default: [\"UP\",\"DOWN\",\"LEFT\",\"RIGHT\",\"IN\",\"OUT\"]\n        },\n        commandOnlyOpenClose: {\n          type: \"bool\",\n          default: false\n        },\n        queryOnlyOpenClose: {\n          type: \"bool\",\n          default: false\n        }\n      },\n      param:{\n        openPercent: {\n          type: \"int\",\n          default: 0\n        },\n        openState: {\n          type: \"object\",\n          manual: false,\n          default: {\n            openPercent: 0,\n            openDirection: \"UP\"\n          },\n          content: {\n            openPercent:{\n              type: \"int\",\n              default: 0\n            },\n            openDirection:{\n              type: \"int\",\n              default: \"down\"\n            }\n          }\n        }\n      }\n    },\n    \"action.devices.traits.Rotation\": {\n      attributes: {\n        commandOnlyRotation: {\n          type: \"bool\",\n          default: false\n        },\n        supportsContinuousRotation: {\n          type: \"bool\",\n          default: false\n        },\n        supportsDegrees: {\n          type: \"bool\",\n          default: false\n        },\n        supportsPercent: {\n          type: \"bool\",\n          default: false\n        },\n        rotationDegreesRange: {\n          type: \"object\",\n          default: {\n            rotationDegreesMin: 0,\n            rotationDegreesMax: 0\n          },\n          content: {\n            rotationDegreesMin: {\n              type: \"int\"\n            },\n            rotationDegreesMax: {\n              type: \"int\"\n            }\n          }\n        }\n      },\n      param:{\n        rotationPercent: {\n          type: \"int\",\n          manual: false,\n          default: 0\n        },\n        rotationDegrees: {\n          type: \"int\",\n          manual: false,\n          default: 0\n        }\n      }\n    },\n    \"action.devices.traits.LockUnlock\": {\n      attributes: {},\n      param:{\n        isLocked: {\n          type: \"bool\",\n          default: false,\n          manual: false\n        },\n        isJammed: {\n          type: \"bool\",\n          default: false,\n          manual: false\n        }\n      }\n    },\n    \"action.devices.traits.Scene\": {\n      attributes: {\n        sceneReversible: {\n          type: \"bool\",\n          default: true\n        }\n      },\n      param:{\n        deactivate: {\n          type: \"bool\",\n          default: true,\n          manual: false\n        }\n      }\n    },\n    \"action.devices.traits.Dock\": {\n      attributes: {},\n      param:{\n        isDocked: {\n          type: \"bool\",\n          default: false,\n          manual: false\n        }\n      }\n    },\n    \"action.devices.traits.Toggles\": {\n      attributes: {\n        availableToggles: {\n          type: \"strigifyedObject\",\n          default: []\n        },\n        commandOnlyToggles: {\n          type: \"bool\",\n          default: false\n        }\n      },\n      param: {\n      }\n    },\n    \"action.devices.traits.StartStop\": {\n      attributes: {\n        availableZones: {\n          type: \"array\",\n          default: []\n        },\n        pausable: {\n          type: \"bool\",\n          default: false\n        }\n      },\n      param: {\n        isRunning: {\n          type: \"bool\",\n          manual: false,\n          default: false\n        },\n        isPaused: {\n          type: \"bool\",\n          manual: false,\n          default: false\n        },\n        activeZones: ~{\n          type: \"array\",\n          default: []\n        }\n      }\n    },\n    \"action.devices.traits.Timer\": {\n      attributes: {\n        maxTimerLimitSec: {\n          type: \"int\",\n          default: 1000\n        },\n        commandOnlyTimer: {\n          type: \"bool\",\n          default: false\n        }\n      },\n      param: {\n        timerRemainingSec: {\n          type: \"int\",\n          manual: false,\n          default: -1\n        },\n        timerPaused: {\n          type: \"bool\",\n          manual: false,\n          default: false\n        }\n      }\n    },\n    \"action.devices.traits.TemperatureControl\": {\n      attributes: {\n        temperatureStepCelsius: {\n          type: \"int\",\n          default: 5\n        },\n        temperatureUnitForUX: {\n          type: \"string\",\n          default: \"C\"\n        },\n        queryOnlyTemperatureControl: {\n          type: \"bool\",\n          default: false\n        },\n        commandOnlyTemperatureControl: {\n          type: \"bool\",\n          default: false\n        },\n        temperatureRange: {\n          type: \"object\",\n          default: {\n            minThresholdCelsius: 0,\n            maxThresholdCelsius: 150\n          },\n          content: {\n            minThresholdCelsius: {\n              type: \"int\"\n            },\n            maxThresholdCelsius: {\n              type: \"int\"\n            }\n          }\n        }\n      },\n      param: {\n        temperatureSetpointCelsius: {\n          type: \"int\",\n          manual: false,\n          default: 20\n        },\n        temperatureAmbientCelsius: {\n          type: \"int\",\n          manual: false,\n          default: 20\n        }\n      }\n    },\n    \"action.devices.traits.FanSpeed\": {\n      attributes: {\n        availableFanSpeeds: {\n          type: \"strigifyedObject\",\n          default: {\n            speeds: [],\n            ordered: true\n          }\n        },\n        reversible: {\n          type: \"bool\",\n          default: true\n        },\n        commandOnlyFanSpeed: {\n          type: \"bool\",\n          default: true\n        }\n      },\n      param: {\n        currentFanSpeedSetting: {\n          type: \"string\",\n          manual: false,\n          default: \"\"\n        }\n      }\n    },\n    \"action.devices.traits.ArmDisarm\": {\n      attributes: {\n        availableArmLevels: {\n          type: \"strigifyedObject\",\n          default: {\n            levels: [],\n            ordered: true\n          }\n        }\n      },\n      param: {\n        isArmed: {\n          type: \"bool\",\n          manual: false,\n          default: false\n        },\n        currentArmLevel: {\n          type: \"string\",\n          manual: false,\n          default: \"\"\n        },\n        exitAllowance: {\n          type: \"int\",\n          manual: false,\n          default: 20\n        }\n      }\n    },\n    \"action.devices.traits.Fill\": {\n      attributes: {\n        availableFillLevels: {\n          type: \"strigifyedObject\",\n          default: {\n            levels: [],\n            ordered: true\n          }\n        }\n      },\n      param: {\n        isFilled: {\n          type: \"bool\",\n          manual: false,\n          default: false\n        },\n        currentFillLevel: {\n          type: \"string\",\n          manual: false,\n          default: \"\"\n        }\n      }\n    },\n    \"action.devices.traits.RunCycle\": {\n      attributes: {},\n      param: {\n        lang: 'en'\n      }\n    },\n    \"action.devices.traits.StatusReport\": {\n      attributes: {},\n      param: {\n        currentStatusReport: {\n          type: 'object',\n          default: {}\n        }\n      }\n    },\n    \"action.devices.traits.HumiditySetting\": {\n      attributes: {\n        humiditySetpointRange: {\n          type: \"object\",\n          default: {\n            minPercent: 0,\n            maxPercent: 100\n          },\n          content: {\n            minPercent: {\n              type: \"int\"\n            },\n            maxPercent: {\n              type: \"int\"\n            }\n          }\n        },\n        commandOnlyHumiditySetting: {\n          type: \"bool\",\n          default: false\n        },\n        queryOnlyHumiditySetting: {\n          type: \"bool\",\n          default: false\n        }\n      },\n      param: {\n        humiditySetpointPercent: {\n          type: \"int\",\n          manual: false,\n          default: 30\n        },\n        humidityAmbientPercent: {\n          type: \"int\",\n          manual: false,\n          default: 20\n        }\n      }\n    },\n    \"action.devices.traits.Cook\": {\n      attributes: {\n        foodPresets: {\n          type: \"strigifyedObject\",\n          default: []\n        },\n        supportedCookingModes: {\n          type: \"selectToArray\",\n          default: []\n        }\n      },\n      param: {\n        currentCookingMode: {\n          type: \"string\",\n          manual: false,\n          default: \"\"\n        },\n        currentFoodPreset: {\n          type: \"string\",\n          manual: false,\n          default: \"\"\n        },\n        currentFoodQuantity: {\n          type: \"int\",\n          manual: false,\n          default: 0\n        },\n        currentFoodUnit: {\n          type: \"string\",\n          manual: false,\n          default: \"\"\n        }\n      }\n    },\n    \"action.devices.traits.Modes\": {\n      attributes: {\n        availableModes: {\n          type: \"strigifyedObject\",\n          default: []\n        },\n        commandOnlyModes: {\n          type: \"bool\",\n          default: false\n        }\n      },\n      param: {\n      }\n    },\n    \"action.devices.traits.Locator\": {\n      attributes: {\n      },\n      param: {\n      }\n    }\n  },\n  devicesCoolNames: {\n    \"action.devices.types.AC_UNIT\": \"AC unit\",\n    \"action.devices.types.AIRCOOLER\": \"Air cooler\",\n    \"action.devices.types.AIRFRESHENER\": \"Air freshener\",\n    \"action.devices.types.AIRPURIFIER\": \"Air purifier\",\n    \"action.devices.types.AWNING\": \"Awing\",\n    \"action.devices.types.BATHTUB\": \"Bathtub\",\n    \"action.devices.types.BED\": \"Bed\",\n    \"action.devices.types.BLENDER\": \"Blender\",\n    \"action.devices.types.BLINDS\": \"Blinds\",\n    \"action.devices.types.BOILER\": \"Boiler\",\n    \"action.devices.types.CLOSET\": \"Closet\",\n    \"action.devices.types.COFFE_MAKER\": \"Coffe maker\",\n    \"action.devices.types.COOKTOP\": \"Cooktop\",\n    \"action.devices.types.CURTAIN\": \"Curtain\",\n    \"action.devices.types.DEHUMIDIFIER\": \"Dehumidifier\",\n    \"action.devices.types.DEHYDRATOR\": \"Dehydrator\",\n    \"action.devices.types.DISHWASHER\": \"Dishwasher\",\n    \"action.devices.types.DOOR\": \"Door\",\n    \"action.devices.types.DRYER\": \"Dryer\",\n    \"action.devices.types.DRAWER\": \"Drawer\",\n    \"action.devices.types.FAN\": \"Fan\",\n    \"action.devices.types.FIREPLACE\": \"Fireplace\",\n    \"action.devices.types.FRYER\": \"Fryer\",\n    \"action.devices.types.GARAGE\": \"Garage\",\n    \"action.devices.types.GATE\": \"Gate\",\n    \"action.devices.types.GRILL\": \"Grill\",\n    \"action.devices.types.HEATER\": \"Heater\",\n    \"action.devices.types.HOOD\": \"Hood\",\n    \"action.devices.types.HUMIDIFIER\": \"Humidifier\",\n    \"action.devices.types.KETTLE\": \"Kettle\",\n    \"action.devices.types.LIGHT\": \"Light\",\n    \"action.devices.types.LOCK\": \"Lock\",\n    \"action.devices.types.MICROWAVE\": \"Microwave\",\n    \"action.devices.types.MULTICOOKER\": \"Multicooker\",\n    \"action.devices.types.MOP\": \"Mop\",\n    \"action.devices.types.MOWER\": \"Mower\",\n    \"action.devices.types.OUTLET\": \"Outlet\",\n    \"action.devices.types.OVEN\": \"Oven\",\n    \"action.devices.types.PERGOLA\": \"Pergola\",\n    \"action.devices.types.PRESSURECOOKER\": \"Pressure cooker\",\n    \"action.devices.types.RADIATOR\": \"Radiator\",\n    \"action.devices.types.REFRIGERATOR\": \"Refrigerator\",\n    \"action.devices.types.SECURITYSYSTEM\": \"Security system\",\n    \"action.devices.types.SHOWER\": \"Shower\",\n    \"action.devices.types.SOUSVIDE\": \"Sous vide\",\n    \"action.devices.types.SHUTTER\": \"Shutter\",\n    \"action.devices.types.SPRINKLER\": \"Sprinkler\",\n    \"action.devices.types.STANDMIXER\": \"Stand mixer\",\n    \"action.devices.types.SWITCH\": \"Switch\",\n    \"action.devices.types.THERMOSTAT\": \"Thermostat\",\n    \"action.devices.types.VACUUM\": \"Vacum\",\n    \"action.devices.types.VALVE\": \"Valve\",\n    \"action.devices.types.WASHER\": \"Washer\",\n    \"action.devices.types.WATERHEATER\": \"Water heater\",\n    \"action.devices.types.WINDOW\": \"Window\",\n    \"action.devices.types.SCENE\": \"Scene\",\n    \"action.devices.types.YOGURTMAKER\": \"Yogurt maker\"\n  },\n  \"traitsCoolNames\": {\n    \"action.devices.traits.Toggles\": \"Toggle\",\n    \"action.devices.traits.ArmDisarm\": \"Arm or Disarm\",\n    \"action.devices.traits.CameraStream\": \"Camera stream\",\n    \"action.devices.traits.ColorSetting\": \"Color setting\",\n    \"action.devices.traits.FanSpeed\": \"Fan speed\",\n    \"action.devices.traits.LightEffects\": \"Light effects\",\n    \"action.devices.traits.Modes\": \"Modes\",\n    \"action.devices.traits.OnOff\": \"Switch control\",\n    \"action.devices.traits.OpenClose\": \"Open or Close\",\n    \"action.devices.traits.Rotation\": \"Rotation\",\n    \"action.devices.traits.Scene\": \"Scene\",\n    \"action.devices.traits.StartStop\": \"Start or Stop\",\n    \"action.devices.traits.TemperatureControl\": \"Temperature control\",\n    \"action.devices.traits.TemperatureSetting\": \"Temperature setting\",\n    \"action.devices.traits.Timer\": \"Timer\",\n    \"action.devices.traits.Dock\": \"Dock\",\n    \"action.devices.traits.Locator\": \"Locator\",\n    \"action.devices.traits.RunCycle\": \"Run cycle\",\n    \"action.devices.traits.StatusReport\": \"Status report\",\n    \"action.devices.traits.Brightness\": \"Brightness\",\n    \"action.devices.traits.LockUnlock\": \"Lock or Unlock\",\n    \"action.devices.traits.HumiditySetting\": \"Humidity setting\",\n    \"action.devices.traits.Cook\": \"Cooking\",\n    \"action.devices.traits.Fill\": \"Fill level\"\n  }\n}\n\nexport { root, deviceReference }\n","import React from 'react';\n\nimport './Assistant.css';\n\nclass Welcome extends React.Component {\n  constructor(props) {\n    super(props);\n    this.next = this.next.bind(this);\n  }\n\n\n  next() {\n    window.location.href = '/assistant/user/';\n  }\n\n  render() {\n\n    return (\n      <div className=\"assistant_container\">\n        <h1>Homeware configuration assistant</h1><br/>\n        <p>Follow this assistant in order to configure your Homeware installation.</p>\n        <br/>\n        <button type=\"button\" onClick={this.next}>Next</button>\n      </div>\n    );\n\n\n  }\n}\n\nexport default Welcome\n","import React from 'react';\n\nclass User extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      enable_next: false,\n      enable_message: false,\n      message: ''\n    }\n    this.set = this.set.bind(this);\n    this.next = this.next.bind(this);\n  }\n\n  set() {\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      if (http.readyState === 4) {\n        if (http.status === 200) {\n          this.setState({\n            enable_next: true,\n            enable_message: true,\n            message: http.responseText\n          });\n          console.error(http.responseText);\n        } else {\n          console.error(http.statusText);\n          this.setState({\n            enable_message: true,\n            message: 'Some error has occurred'\n          });\n        }\n        setTimeout(function(){\n          this.setState({\n            enable_message: false,\n            message: ''\n          });\n        }.bind(this), 5000)\n      }\n    }.bind(this);\n    var url = 'http://' + window.location.hostname + ':5001/api/user/set/';\n    http.open( \"POST\", url, true );\n    http.setRequestHeader(\"Content-type\", \"application/json\");\n    http.send(JSON.stringify({\n      'user': document.getElementById('user').value,\n      'pass': document.getElementById('password').value\n    }));\n  }\n\n  next() {\n    if (this.state.enable_next)\n      window.location.href = '/assistant/domain/';\n    else\n      alert('You must create an user')\n  }\n\n  render() {\n\n    const element = {\n      margin: '10px'\n    }\n\n    var message = '';\n    if (this.state.enable_message){\n      message = <div className=\"alert_message\"> { this.state.message } </div>\n    }\n\n    return (\n      <div className=\"assistant_container\">\n        <h1>Homeware configuration assistant - User</h1>\n        <p>In order to keep your Homeware installation secure you must create an user and a password.</p>\n        <br/>\n        { message }\n        <span style={ element }>Username</span>\n        <input type=\"text\" name=\"user\" id=\"user\"/>\n        <span style={ element }>Password</span>\n        <input type=\"password\" name=\"password\" id=\"password\"/>\n        <button type=\"button\" onClick={this.set}>Create</button>\n        <br/>\n        <br/>\n        <button type=\"button\" onClick={this.next}>Next</button>\n      </div>\n    );\n\n\n  }\n}\n\nexport default User\n","import React from 'react';\n\nclass Domain extends React.Component {\n  constructor(props) {\n    super(props);\n    this.next = this.next.bind(this);\n  }\n\n\n  next() {\n    window.location.href = '/assistant/confignginx/';\n  }\n\n  render() {\n\n    return (\n      <div className=\"assistant_container\">\n        <h1>Homeware configuration assistant - Domain</h1>\n        <p>You must get a domain and point it to your WAN IP.</p>\n        <div className=\"assistant_text\">\n\n          <p>There are two possibilities:</p>\n            <ul>\n              <li>Use a static IP and a DNS</li>\n              <li>Use a dinamic IP and a DDNS</li>\n            </ul>\n          <p>If you have a static WAN IP, you probably know how to configure your domain name</p>\n          <p>If you have a dinamic IP, you should use a DDNS provider</p>\n          <p>The process depend on the provider you choose. For example, you can use <a href='https://my.noip.com' target='blanck'>no-ip</a> as the provider:</p>\n          <ul>\n            <li>Create an account in no-ip.</li>\n            <li>Go to <i>Dynamic DNS</i> and create a new <i>Hostname</i>.\n                <ul>\n                  <li>Choose a unique <i>Hostname</i>.</li>\n                  <li>Select <i>DNS Host (A)</i>.</li>\n                  <li>Fill the <i>IPv4 Address</i> with your WAN/public IP. You can get it from <a href='https://www.whatismyip.com/what-is-my-public-ip-address/' target='blanck'>WhatsMyIp</a>.</li>\n                </ul>\n            </li>\n            <li>When the installation will be completed you must configure the DDNS data from the <i>Settings</i> section on Homeware.</li>\n          </ul>\n        </div>\n        <button type=\"button\" onClick={this.next}>Next</button>\n\n      </div>\n    );\n\n\n  }\n}\n\nexport default Domain\n","import React from 'react';\n\nclass Confignginx extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      enable_next: false,\n      enable_message: false,\n      message: ''\n    }\n    this.set = this.set.bind(this);\n    this.next = this.next.bind(this);\n  }\n\n  set() {\n\n  }\n\n  next() {\n    window.location.href = '/assistant/change2domain/';\n  }\n\n  render() {\n\n    var message = '';\n    if (this.state.enable_message){\n      message = <div className=\"alert_message\"> { this.state.message } </div>\n    }\n\n    return (\n      <div className=\"assistant_container\">\n        <h1>Homeware configuration assistant - Configuration of Nginx</h1>\n        <p>Configure Nginx with the initial settings</p>\n        { message }\n        <br/>\n        <div className=\"assistant_text\">\n          <p>Open a terminal on your Raspberry Pi or connect to the Raspberry Pi using SSH and run:</p>\n          <br/>\n          <span className=\"code\">$ cd /usr/share/Homeware-LAN/bash</span><br/><br/><br/>\n          <span className=\"code\">$ sudo sh confignginx.sh your.domain.com</span>\n        </div>\n        <br/>\n        <br/>\n        <button type=\"button\" onClick={this.next}>Next</button>\n      </div>\n    );\n\n\n  }\n}\n\nexport default Confignginx\n","import React from 'react';\n\nclass Change2domain extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      enable_next: false,\n      enable_message: false,\n      message: ''\n    }\n    this.set = this.set.bind(this);\n  }\n\n  set() {\n    var http = new XMLHttpRequest();\n    http.onreadystatechange = function() {\n      console.log(http.status)\n      if (http.status === 200) {\n        var data = JSON.parse(http.responseText);\n        console.log(data);\n        if (data.code === 200 )\n          window.location.href = 'http://' + document.getElementById('domain').value + '/assistant/changed2domain/';\n        else\n          this.setState({\n            enable_message: true,\n            message: data.error\n          });\n      } else {\n        console.error(http.statusText);\n        this.setState({\n          enable_message: true,\n          message: 'Some error has occurred'\n        });\n      }\n    }.bind(this);\n    var url = 'http://' + window.location.hostname + ':5001/api/settings/domain/' + document.getElementById('domain').value;\n    http.open( \"GET\", url, true );\n    http.send( null );\n  }\n\n  render() {\n\n    var message = '';\n    if (this.state.enable_message){\n      message = <div className=\"alert_message\"> { this.state.message } </div>\n    }\n\n    return (\n      <div className=\"assistant_container\">\n      <h1>Homeware configuration assistant - Change to domain</h1><br/>\n      <p>Open your router config web page, look for <i>Port Forwarding</i> and create the following rules.</p>\n        { message }\n        <div className=\"assistant_text\">\n        <ul>\n          <li>80 port:\n            <ul>\n              <li>Protocol: TCP</li>\n              <li>WAN start port: 80</li>\n              <li>WAN end port: 80</li>\n              <li>LAN start port: 80</li>\n              <li>LAN end port: 80</li>\n              <li>LAN host IP: The Raspberry Pi IP</li>\n            </ul>\n          </li>\n          <li>443 port:\n            <ul>\n              <li>Protocol: TCP</li>\n              <li>WAN start port: 443</li>\n              <li>WAN end port: 443</li>\n              <li>LAN start port: 443</li>\n              <li>LAN end port: 443</li>\n              <li>LAN host IP: The Raspberry Pi IP</li>\n            </ul>\n          </li>\n        </ul>\n        <p>Now we must change to your domain.</p>\n        <input type=\"text\" id=\"domain\" placeholder=\"Your domain\"/>\n        <button type=\"button\" onClick={this.set}>Next</button>\n        </div>\n      </div>\n    );\n\n\n  }\n}\n\nexport default Change2domain\n","import React from 'react';\n\nimport './Assistant.css';\n\nclass Changed2domain extends React.Component {\n  constructor(props) {\n    super(props);\n    this.next = this.next.bind(this);\n  }\n\n\n  next() {\n    window.location.href = '/assistant/ssl/';\n  }\n\n  render() {\n\n    return (\n      <div className=\"assistant_container\">\n      <h1>Homeware configuration assistant - Change to domain</h1>\n      <p>Congrats, now you are accessing your Homeware from the Internet. See the URL in the top bar :-) </p>\n        <br/>\n        <button type=\"button\" onClick={this.next}>Next</button>\n      </div>\n    );\n\n\n  }\n}\n\nexport default Changed2domain\n","import React from 'react';\n\nimport './Assistant.css';\n\nclass Ssl extends React.Component {\n  constructor(props) {\n    super(props);\n    this.next = this.next.bind(this);\n  }\n\n\n  next() {\n    window.location.href = '/assistant/google/';\n  }\n\n  render() {\n\n    return (\n      <div className=\"assistant_container\">\n        <h1>Homeware configuration assistant - SSL certificate</h1>\n        <p>Google needs to comunicate with the Raspberry Pi via HTTPS, so we need a SSL certicate for Homeware.</p>\n        <br/>\n        <div className=\"assistant_text\">\n        <p>Open a terminal on your Raspberry Pi or connect to the Raspberry Pi using SSH and run:</p>\n        <br/>\n        <span className=\"code\">$ sudo certbot --nginx</span><br/><br/>\n        <p>Follow the Certbot instructions. When Certbot ask you about redirecting http to https, enable it.</p>\n        </div>\n        <br/>\n        <br/>\n        <button type=\"button\" onClick={this.next}>Next</button>\n      </div>\n    );\n\n\n  }\n}\n\nexport default Ssl\n","import React from 'react';\n\nimport './Assistant.css';\n\nclass Google extends React.Component {\n  constructor(props) {\n    super(props);\n    this.next = this.next.bind(this);\n  }\n\n\n  next() {\n    window.location.href = '/assistant/initialize/';\n  }\n\n  render() {\n\n    return (\n      <div className=\"assistant_container\">\n      <h1>Homeware configuration assistant - Google</h1>\n      <p>Google needs to know where Homeware is.</p>\n        <br/>\n        <div className=\"assistant_text\">\n          <p>Follow the instructions on this wiki <a href=\"https://github.com/kikeelectronico/Homeware-LAN/wiki/Connect-Homeware-LAN-with-Google\" target=\"blanck\">https://github.com/kikeelectronico/Homeware-LAN/wiki/Connect-Homeware-LAN-with-Google</a>.</p>\n          <p>During the process you will use the following Client Information. You will be able to change it from the <i>Settings</i> page in the future.</p>\n          <span id=\"actionOnGoogleData\">\n            <b>Client ID:</b> 123<br/>\n            <b>Client Secret:</b> 456<br/>\n            <b>Authorization URL:</b> https://&lt;your.domain.com&gt;/auth/<br/>\n            <b>Token URL:</b> https://&lt;your.domain.com&gt;/token/<br/>\n            <b>Fulfillment URL:</b> https://&lt;your.domain.com&gt;/smarthome/<br/>\n          </span>\n        </div>\n        <br/>\n        <br/>\n        <button type=\"button\" onClick={this.next}>Next</button>\n      </div>\n    );\n\n\n  }\n}\n\nexport default Google\n","import React from 'react';\n\nimport './Assistant.css';\n\nclass Initialize extends React.Component {\n  constructor(props) {\n    super(props);\n\n    var xmlHttp = new XMLHttpRequest();\n    xmlHttp.onreadystatechange = function() {\n      console.log(xmlHttp.responseText)\n    }\n    var url = 'http://' + window.location.hostname + ':5001/api/settings/setAssistantDone/';\n    xmlHttp.open( \"GET\", url, true );\n    xmlHttp.send( null );\n\n    setTimeout(function(){window.location.href = '/'}, 3000);\n  }\n\n  render() {\n\n    return (\n      <div className=\"assistant_container\">\n        <h1>Homeware configuration assistant - Last touches</h1>\n        <p>Homeware is giving it self the last touches.</p>\n      </div>\n    );\n\n\n  }\n}\n\nexport default Initialize\n","import React from 'react';\n\nfunction Menu(props) {\n\n  const menu = {\n    marginTop: '5px',\n    display: 'grid',\n    gridTemplateColumns: '40px auto'\n  }\n\n  const image = {\n    width: '30px'\n  }\n\n  const textContainer = {\n    paddingTop: '4px'\n  }\n\n  const text = {\n    fontSize: '18px',\n    cursor: 'pointer'\n  }\n\n  function go (){\n    window.location.href = props.href;\n  }\n\n  return (\n    <div style={ menu }>\n      <div>\n        <img src={ props.image } alt={ props.image } style={ image }/>\n      </div>\n      <div style={ textContainer }>\n        <span style={ text } onClick={ props.exec ? props.exec : go}>{ props.title }</span>\n      </div>\n    </div>\n  );\n}\n\nexport default Menu\n","import React from 'react';\nimport getCookieValue from '../../../functions'\nimport { root } from '../../../constants'\n\nclass OnOff extends React.Component {\n  constructor(props) {\n    super(props);\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle(){\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      if (http.readyState === 4) {\n        if (http.status === 200) {\n          console.log(http.responseText)\n          this.props.reload();\n        } else {\n          console.error(http.statusText);\n        }\n      }\n    }.bind(this)\n    http.open(\"POST\", root + \"api/status/update/\");\n    http.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\n    http.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    http.send(JSON.stringify({\n      \"id\": this.props.id,\n      \"param\": \"on\",\n      \"value\": !this.props.on\n    }));\n  }\n\n  render() {\n\n    const container = {\n      float: 'left',\n      marginLeft: '5px'\n    }\n\n    const image = {\n      width: '30px'\n    }\n\n    return (\n      <div style={container}>\n        <img src={ this.props.on ? '/devices/onoff_on_true.png' : '/devices/onoff_on_false.png'} onClick={ this.toggle } alt={ this.props.image } style={ image }/>\n      </div>\n    );\n  }\n}\n\nexport default OnOff\n","import React from 'react';\n\nclass Information extends React.Component {\n  constructor(props) {\n    super(props);\n    this.go = this.go.bind(this);\n  }\n\n  go(){\n    window.location.href = \"/devices/info/\" + this.props.id + \"/\"\n  }\n\n  render() {\n\n    const container = {\n      float: 'left',\n      marginLeft: '5px'\n    }\n\n    const image = {\n      width: '30px'\n    }\n\n    return (\n      <div style={container}>\n        <img src=\"/devices/information.png\" onClick={ this.go } alt={ this.props.image } style={ image }/>\n      </div>\n    );\n  }\n}\n\nexport default Information\n","import React from 'react';\n\nclass Edit extends React.Component {\n  constructor(props) {\n    super(props);\n    this.go = this.go.bind(this);\n  }\n\n  go(){\n    window.location.href = \"/devices/editor/\" + this.props.id + \"/\"\n  }\n\n  render() {\n\n    const container = {\n      float: 'left',\n      marginLeft: '5px'\n    }\n\n    const image = {\n      width: '30px'\n    }\n\n    return (\n      <div style={container}>\n        <img src=\"/devices/edit.png\" onClick={ this.go } alt={ this.props.image } style={ image }/>\n      </div>\n    );\n  }\n}\n\nexport default Edit\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass Light extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    var color = 'yellow';\n    if (this.props.device.traits.includes(\"action.devices.traits.ColorSetting\")){\n      if (Object.keys(this.props.status.color).includes(\"spectrumRgb\"))\n        color = \"#\" + this.props.status.color.spectrumRgb.toString(16);\n      else\n        color = \"#\" + this.props.status.color.spectrumRGB.toString(16);\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: color,\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Light\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass Outlet extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'blue',\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Outlet\n","import React from 'react';\nimport getCookieValue from '../../../functions'\nimport { root } from '../../../constants'\n\nclass TemperatureSetting extends React.Component {\n  constructor(props) {\n    super(props);\n    this.up = this.up.bind(this);\n    this.down = this.down.bind(this);\n    this.update = this.update.bind(this);\n  }\n\n  up(){\n    var temperature = this.props.status.thermostatTemperatureSetpoint + 1;\n    this.update(temperature)\n  }\n\n  down(){\n    var temperature = this.props.status.thermostatTemperatureSetpoint - 1;\n    this.update(temperature)\n  }\n\n  update(temperature){\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      if (http.readyState === 4) {\n        if (http.status === 200) {\n          console.log(http.responseText)\n          this.props.reload();\n        } else {\n          console.error(http.statusText);\n        }\n      }\n    }.bind(this)\n    http.open(\"POST\", root + \"api/status/update/\");\n    http.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\n    http.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    http.send(JSON.stringify({\n      \"id\": this.props.id,\n      \"param\": \"thermostatTemperatureSetpoint\",\n      \"value\": temperature\n    }));\n  }\n\n  render() {\n\n    const container = {\n      float: 'left',\n      marginLeft: '5px'\n    }\n\n    const image = {\n      width: '30px'\n    }\n\n    const temperature = {\n      fontSize: '30px',\n      marginLeft: '5px',\n      marginRight: '5px',\n      color: '#777'\n    }\n\n    return (\n      <div style={container}>\n        <img src='/devices/arrow_down.png' onClick={ this.down } alt='Arrow up' style={ image }/>\n        <span style={temperature}>{this.props.status.thermostatTemperatureSetpoint}</span>\n        <img src='/devices/arrow_up.png' onClick={ this.up } alt='Arrow down' style={ image }/>\n      </div>\n    );\n  }\n}\n\nexport default TemperatureSetting\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport TemperatureSetting from './traits/TemperatureSetting'\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass AcUnit extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    var color = 'yellow';\n    if (this.props.status.thermostatMode === 'off')\n      color = \"#666\";\n    else if (this.props.status.thermostatMode === 'heat')\n      color = \"red\";\n    else if (this.props.status.thermostatMode === 'cool')\n      color = \"lightblue\";\n    else if (this.props.status.thermostatMode === 'on')\n      color = \"yellow\";\n    else if (this.props.status.thermostatMode === 'heatcool')\n      color = \"#DC97FF\";\n    else if (this.props.status.thermostatMode === 'auto')\n      color = \"#EE357E\";\n    else if (this.props.status.thermostatMode === 'fan-only')\n      color = \"blue\";\n    else if (this.props.status.thermostatMode === 'purifier')\n      color = \"#F3882E\";\n    else if (this.props.status.thermostatMode === 'eco')\n      color = \"green\";\n    else if (this.props.status.thermostatMode === 'dry')\n      color = \"#753500\";\n\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: color,\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <TemperatureSetting id={ this.props.device.id } status={this.props.status} on={ this.props.status } reload={ this.props.reload }/>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AcUnit\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass AirFreshener extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'yellow',\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AirFreshener\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass AirPurifier extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'yellow',\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AirPurifier\n","import React from 'react';\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass Bed extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Bed\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass Fan extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'yellow',\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Fan\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass Fireplace extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'yellow',\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Fireplace\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass Radiator extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'yellow',\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Radiator\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass Switch extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'yellow',\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Switch\n","import React from 'react';\nimport TemperatureSetting from './traits/TemperatureSetting'\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass Thermostat extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    var color = 'yellow';\n    if (this.props.status.thermostatMode === 'off')\n      color = \"#666\";\n    else if (this.props.status.thermostatMode === 'heat')\n      color = \"red\";\n    else if (this.props.status.thermostatMode === 'cool')\n      color = \"lightblue\";\n    else if (this.props.status.thermostatMode === 'on')\n      color = \"yellow\";\n    else if (this.props.status.thermostatMode === 'heatcool')\n      color = \"#DC97FF\";\n    else if (this.props.status.thermostatMode === 'auto')\n      color = \"#EE357E\";\n    else if (this.props.status.thermostatMode === 'fan-only')\n      color = \"blue\";\n    else if (this.props.status.thermostatMode === 'purifier')\n      color = \"#F3882E\";\n    else if (this.props.status.thermostatMode === 'eco')\n      color = \"green\";\n    else if (this.props.status.thermostatMode === 'dry')\n      color = \"#753500\";\n\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: color\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <TemperatureSetting id={ this.props.device.id } status={this.props.status} on={ this.props.status } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Thermostat\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass AirCooler extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    var color = 'yellow';\n    if (this.props.device.traits.includes(\"action.devices.traits.ColorSetting\")){\n      color = \"#\" + this.props.status.color.spectrumRgb.toString(16);\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: color,\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AirCooler\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass Bathtub extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    var color = 'yellow';\n    if (this.props.device.traits.includes(\"action.devices.traits.ColorSetting\")){\n      color = \"#\" + this.props.status.color.spectrumRgb.toString(16);\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: color,\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Bathtub\n","import React from 'react';\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass Awing extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Awing\n","import React from 'react';\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass Blinds extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Blinds\n","import React from 'react';\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass Closet extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Closet\n","import React from 'react';\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass Curtain extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Curtain\n","import React from 'react';\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass Door extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Door\n","import React from 'react';\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass Drawer extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Drawer\n","import React from 'react';\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass Garage extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Garage\n","import React from 'react';\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass Pergola extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Pergola\n","import React from 'react';\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass Shutter extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Shutter\n","import React from 'react';\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass Valve extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Valve\n","import React from 'react';\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass Window extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Window\n","import React from 'react';\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass Lock extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Lock\n","import React from 'react';\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass Gate extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Gate\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass Heater extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    var color = 'yellow';\n    if (this.props.device.traits.includes(\"action.devices.traits.ColorSetting\")){\n      color = \"#\" + this.props.status.color.spectrumRgb.toString(16);\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: color,\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Heater\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass Hood extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    var color = 'yellow';\n    if (this.props.device.traits.includes(\"action.devices.traits.ColorSetting\")){\n      color = \"#\" + this.props.status.color.spectrumRgb.toString(16);\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: color,\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Hood\n","import React from 'react';\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass SecuritySystem extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SecuritySystem\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass Blender extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    var color = 'yellow';\n    if (this.props.device.traits.includes(\"action.devices.traits.ColorSetting\")){\n      color = \"#\" + this.props.status.color.spectrumRgb.toString(16);\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: color,\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Blender\n","import React from 'react';\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass Global extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    var color = 'white';\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: color\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Global\n","import React from 'react';\nimport Information from './aux/Information'\nimport Edit from './aux/Edit'\n\nclass Scene extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    var color = 'white';\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: color\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">Scene: { this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Scene\n","import React from 'react';\nimport Light from '../devices/Light'\nimport Outlet from '../devices/Outlet'\nimport AcUnit from '../devices/AcUnit'\nimport AirFreshener from '../devices/AirFreshener'\nimport AirPurifier from '../devices/AirPurifier'\nimport Bed from '../devices/Bed'\nimport Fan from '../devices/Fan'\nimport Fireplace from '../devices/Fireplace'\nimport Radiator from '../devices/Radiator'\nimport Switch from '../devices/Switch'\nimport Thermostat from '../devices/Thermostat'\nimport AirCooler from '../devices/AirCooler'\nimport Bathtub from '../devices/Bathtub'\nimport Awing from '../devices/Awing'\nimport Blinds from '../devices/Blinds'\nimport Closet from '../devices/Closet'\nimport Curtain from '../devices/Curtain'\nimport Door from '../devices/Door'\nimport Drawer from '../devices/Drawer'\nimport Garage from '../devices/Garage'\nimport Pergola from '../devices/Pergola'\nimport Shutter from '../devices/Shutter'\nimport Valve from '../devices/Valve'\nimport Window from '../devices/Window'\nimport Lock from '../devices/Lock'\nimport Gate from '../devices/Gate'\nimport Heater from '../devices/Heater'\nimport Hood from '../devices/Hood'\nimport SecuritySystem from '../devices/SecuritySystem'\nimport Blender from '../devices/Blender'\nimport Global from '../devices/Global'\nimport Scene from '../devices/Scene'\nimport getCookieValue from '../../functions'\nimport { root } from '../../constants'\n\nimport './Devices.css';\n\nclass Devices extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {},\n      devices: []\n    }\n    this.loadData = this.loadData.bind(this);\n    this.newDevice = this.newDevice.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  loadData(){\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      if (http.readyState === 4) {\n        if (http.status === 200) {\n          var data = JSON.parse(http.responseText);\n          this.setState({\n             data: data,\n             devices: data.devices\n           });\n        } else {\n          console.error(http.statusText);\n        }\n      }\n    }.bind(this);\n    http.open(\"GET\", root + \"api/global/get/\");\n    http.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    http.send();\n  }\n\n  newDevice(){\n    window.location.href = '/devices/editor/'\n  }\n\n  render() {\n\n    const title = {\n      width: '80%',\n      marginLeft: '8%',\n      backgroundColor: 'white',\n      paddingTop: '10px',\n      paddingLeft: '20px',\n      paddingBottom: '10px',\n      paddingRight: '20px',\n      borderRadius: '20px'\n    }\n\n    const container = {\n      width: '80%',\n      marginLeft: '9%',\n      marginTop: '10px',\n    }\n\n    const devices = this.state.devices.map((device) => {\n      if(device.type === 'action.devices.types.LIGHT')\n        return <Light key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.OUTLET')\n        return <Outlet key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.AC_UNIT')\n        return <AcUnit key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.AIRFRESHENER')\n        return <AirFreshener key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.AIRPURIFIER')\n        return <AirPurifier key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.BED')\n        return <Bed key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.FAN')\n        return <Fan key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.FIREPLACE')\n        return <Fireplace key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.RADIATOR')\n        return <Radiator key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.SWITCH')\n        return <Switch key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.THERMOSTAT')\n        return <Thermostat key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.AIRCOOLER')\n        return <AirCooler key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.BATHTUB')\n        return <Bathtub key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.AWING')\n        return <Awing key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.AIRCOOLER')\n        return <AirCooler key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.BLINDS')\n        return <Blinds key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.CLOSET')\n        return <Closet key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.CURTAIN')\n        return <Curtain key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.DOOR')\n        return <Door key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.DRAWER')\n        return <Drawer key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.GARAGE')\n        return <Garage key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.GATE')\n        return <Gate key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.PERGOLA')\n        return <Pergola key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.SHUTTER')\n        return <Shutter key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.VALVE')\n        return <Valve key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.WINDOW')\n        return <Window key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.LOCK')\n        return <Lock key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.HEATER')\n        return <Heater key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.HOOD')\n        return <Hood key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.SECURITYSYSTEM')\n        return <SecuritySystem key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.BLENDER')\n        return <Blender key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.SCENE')\n        return <Scene key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else\n        return <Global key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n    });\n\n    return (\n      <div>\n        <div style={ title }>\n          <h2>Devices and scences</h2>\n        </div>\n\n        <div className=\"devices_container\">\n          { devices }\n        </div>\n\n        <div style={ container }>\n          <button type=\"button\" onClick={ this.newDevice }>New</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Devices\n","import React from 'react';\n\nimport '../pages/Editor.css';\n\nclass Text extends React.Component {\n  constructor(props) {\n    super(props);\n    this.update = this.update.bind(this);\n  }\n\n\n  update(event){\n    this.props.update(this.props.data,event.target.value);\n  }\n\n  render() {\n    return (\n      <div className=\"table_row\">\n        <div className=\"table_cel\">\n          {this.props.name}\n        </div>\n        <div className=\"table_cel\">\n          <input type=\"text\" id={this.props.data} defaultValue={this.props.value} onChange={this.update} className=\"table_input\"/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Text\n","import React from 'react';\n\nclass Scene extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n  }\n\n\n  updateCheckbox(event){\n    this.props.update('attributes/' + event.target.id,event.target.checked);\n  }\n\n  render() {\n\n\n    return (\n      <div>\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n            \n          </div>\n          <div className=\"attribute_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"sceneReversible\" defaultChecked={this.props.sceneReversible} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>sceneReversible</i></span>\n            </label>\n          </div>\n          <div className=\"attribute_table_cel\">\n            <span className=\"attribute_advise\">Enable it if the scene can be desabled.</span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Scene\n","import React from 'react';\n\nclass OnOff extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n  }\n\n\n  updateCheckbox(event){\n    this.props.update('attributes/' + event.target.id,event.target.checked);\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n            \n          </div>\n          <div className=\"attribute_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"commandOnlyOnOff\" defaultChecked={this.props.attributes.commandOnlyOnOff} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>commandOnlyOnOff</i></span>\n            </label>\n          </div>\n          <div className=\"attribute_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the state.</span>\n          </div>\n        </div>\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n          </div>\n          <div className=\"attribute_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"queryOnlyOnOff\" defaultChecked={this.props.attributes.queryOnlyOnOff} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>queryOnlyOnOff</i></span>\n            </label>\n          </div>\n          <div className=\"attribute_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Google shouldn't change the device state.</span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default OnOff\n","import React from 'react';\n\nclass Brightness extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n  }\n\n\n  updateCheckbox(event){\n    this.props.update('attributes/' + event.target.id,event.target.checked);\n  }\n\n  render() {\n\n\n    return (\n      <div>\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n            \n          </div>\n          <div className=\"attribute_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"commandOnlyBrightness\" defaultChecked={this.props.commandOnlyBrightness} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>commandOnlyBrightness</i></span>\n            </label>\n          </div>\n          <div className=\"attribute_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the brightness.</span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Brightness\n","import React from 'react';\n\nclass FanSpeed extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n    this.updateFanSpeeds = this.updateFanSpeeds.bind(this);\n    this.addFanSpeed = this.addFanSpeed.bind(this);\n  }\n\n\n  updateCheckbox(event){\n    this.props.update('attributes/' + event.target.id,event.target.checked);\n  }\n\n  updateFanSpeeds(event){\n    const id = event.target.id.split('_')\n    const speed_id = id[1]\n    //Process the attribute and value depending of the attribute\n    const speed_attribute = id[0] === 'lang' ? id[0] : 'speed_synonym';\n    const value = id[0] === 'lang' ? event.target.value : event.target.value.split(',')\n    //Update the temporal data and update it\n    var temp_availableFanSpeeds = this.props.attributes.availableFanSpeeds\n    temp_availableFanSpeeds.speeds[speed_id].speed_values[0][speed_attribute] = value\n    if (id[0] === 'names') temp_availableFanSpeeds.speeds[speed_id].speed_name = value[0]\n    this.props.update('attributes/availableFanSpeeds', temp_availableFanSpeeds);\n  }\n\n  addFanSpeed(){\n    var temp_availableFanSpeeds = this.props.attributes.availableFanSpeeds\n    temp_availableFanSpeeds.speeds.push({\n      \"speed_name\": \"\",\n      \"speed_values\": [\n        {\n          \"speed_synonym\": [\"\"],\n          \"lang\": \"en\"\n        }\n      ]\n    });\n    this.props.update('attributes/availableFanSpeeds', temp_availableFanSpeeds);\n  }\n\n  render() {\n\n    const names_box = {\n      width: '150px'\n    }\n\n    const speeds = this.props.attributes.availableFanSpeeds.speeds.map((speed, i) => {\n      return (\n              <div key={i}>\n                <div className=\"table_row\" key={i}>\n                  <div className=\"table_cel\">\n                  </div>\n                  <div className=\"table_cel\">\n                    <label>\n                      <span>Languaje: </span>\n                      <select name=\"type\" id={\"lang_\" + i} value={speed.speed_values[0].lang} onChange={this.updateFanSpeeds}>\n                        <option value=\"es\">es</option>\n                        <option value=\"en\">en</option>\n                      </select>\n                    </label>\n                    <label>\n                      <span>Speed name: </span>\n                      <input type=\"text\" id={\"names_\" + i} style={names_box} defaultValue={speed.speed_values[0].speed_synonym} placeholder=\"Speed name\" onChange={this.updateFanSpeeds}/>\n                    </label>\n                  </div>\n                </div>\n              </div>\n              )\n    });\n\n    return (\n      <div>\n\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n\n          </div>\n          <div className=\"attribute_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"reversible\" defaultChecked={this.props.attributes.reversible} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>reversible</i></span>\n            </label>\n          </div>\n          <div className=\"attribute_table_cel\">\n            <span className=\"attribute_advise\">Enable it if the fan supports blowing in both directions.</span>\n          </div>\n        </div>\n\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n          </div>\n          <div className=\"attribute_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"supportsFanSpeedPercent\" defaultChecked={this.props.attributes.supportsFanSpeedPercent} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>supportsFanSpeedPercent</i></span>\n            </label>\n          </div>\n          <div className=\"attribute_table_cel\">\n            <span className=\"attribute_advise\">Enable it if the speed can be controlled with a number from 0 to 100.</span>\n          </div>\n        </div>\n\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n          </div>\n          <div className=\"attribute_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"commandOnlyFanSpeed\" defaultChecked={this.props.attributes.commandOnlyFanSpeed} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>commandOnlyFanSpeed</i></span>\n            </label>\n          </div>\n          <div className=\"attribute_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the fan speed.</span>\n          </div>\n        </div>\n\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n          </div>\n          <div className=\"attribute_table_cel\">\n            Add a speed <button type=\"button\" className=\"add_attribute_button\" onClick={ this.addFanSpeed }>Add</button>\n          </div>\n        </div>\n\n        {speeds}\n\n      </div>\n    );\n  }\n}\n\nexport default FanSpeed\n","import React from 'react';\n\nclass ColorSetting extends React.Component {\n  constructor(props) {\n    super(props);\n    this.update = this.update.bind(this);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n  }\n\n  update(event){\n    this.props.update('attributes/' + event.target.id,event.target.value);\n  }\n\n  updateCheckbox(event){\n    this.props.update('attributes/' + event.target.id,event.target.checked);\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n\n          </div>\n          <div className=\"attribute_table_cel\">\n            <select name=\"type\" id=\"colorModel\" className=\"table_input\" value={this.props.attributes.colorModel} onChange={this.update}>\n              <option value=\"\">Select</option>\n              <option value=\"rgb\">RGB light</option>\n              <option value=\"hsv\">HSV light</option>\n              <option value=\"\">Color temperature</option>\n            </select>\n          </div>\n          <div className=\"attribute_table_cel\">\n            <span className=\"attribute_advise\"></span>\n          </div>\n        </div>\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n\n          </div>\n          <div className=\"attribute_table_cel\">\n            Minimum temperature: <input type=\"number\" id=\"colorTemperatureRange/temperatureMinK\" defaultValue={ this.props.attributes.colorTemperatureRange ? this.props.attributes.colorTemperatureRange.temperatureMinK : 0} min=\"0\" max=\"10000\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"attribute_table_cel\">\n            <span className=\"attribute_advise\">Minimum color temperature (in Kelvin) supported by the device.</span>\n          </div>\n        </div>\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n\n          </div>\n          <div className=\"attribute_table_cel\">\n            Maximum temperature: <input type=\"number\" id=\"colorTemperatureRange/temperatureMaxK\" defaultValue={this.props.attributes.colorTemperatureRange ? this.props.attributes.colorTemperatureRange.temperatureMaxK : 0} min=\"0\" max=\"10000\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"attribute_table_cel\">\n            <span className=\"attribute_advise\">Maximum color temperature (in Kelvin) supported by the device.</span>\n          </div>\n        </div>\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n\n          </div>\n          <div className=\"attribute_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"commandOnlyColorSetting\" defaultChecked={this.props.attributes.commandOnlyColorSetting} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>commandOnlyColorSetting</i></span>\n            </label>\n          </div>\n          <div className=\"attribute_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the color.</span>\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default ColorSetting\n","import React from 'react';\n\nclass TemperatureSetting extends React.Component {\n  constructor(props) {\n    super(props);\n    this.update = this.update.bind(this);\n    this.updateMode = this.updateMode.bind(this);\n    this.addMode = this.addMode.bind(this);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n  }\n\n  update(event){\n    this.props.update('attributes/' + event.target.id,event.target.value);\n  }\n\n  updateMode(event){\n    const id = event.target.id.split('_')\n    const mode_id = id[1]\n    var temp_availableThermostatModes = this.props.attributes.availableThermostatModes.split(',')\n\n    if (event.target.value === 'delete'){\n      temp_availableThermostatModes.splice(mode_id, 1)\n    } else if (event.target.value !== 'select') {\n      temp_availableThermostatModes[mode_id] = event.target.value;\n    }\n\n    this.props.update('attributes/availableThermostatModes', temp_availableThermostatModes.join(','));\n  }\n\n  addMode(){\n    var temp_availableThermostatModes = this.props.attributes.availableThermostatModes\n    temp_availableThermostatModes += \",\"\n    this.props.update('attributes/availableThermostatModes', temp_availableThermostatModes);\n  }\n\n  updateCheckbox(event){\n    this.props.update('attributes/' + event.target.id,event.target.checked);\n  }\n\n\n  render() {\n\n    const modes = this.props.attributes.availableThermostatModes.split(',').map((mode, i) => {\n\n      return (\n          <div key={i}>\n            <div className=\"table_row\">\n              <div className=\"table_cel\">\n              </div>\n              <div className=\"table_cel\">\n                <label>\n                  <span>Mode: </span>\n                  <select name=\"type\" id={\"mode_\" + i} value={mode} onChange={this.updateMode}>\n                    <option value=\"select\">Select a mode</option>\n                    <option value=\"delete\">Delete this mode</option>\n                    <option value=\"off\">Off</option>\n                    <option value=\"heat\">Heat</option>\n                    <option value=\"cool\">Cool</option>\n                    <option value=\"on\">On</option>\n                    <option value=\"heatcool\">Heatcool</option>\n                    <option value=\"auto\">Auto</option>\n                    <option value=\"fan-only\">Fan only</option>\n                    <option value=\"purifier\">Purifier</option>\n                    <option value=\"eco\">Eco</option>\n                    <option value=\"dry\">Dry</option>\n                  </select>\n                </label>\n              </div>\n            </div>\n          </div>\n\n          )\n    });\n\n    return (\n      <div>\n\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n          </div>\n          <div className=\"attribute_table_cel\">\n            Add a thermostat mode <button type=\"button\" className=\"add_attribute_button\" onClick={ this.addMode }>Add</button>\n          </div>\n        </div>\n\n        {modes}\n\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n\n          </div>\n          <div className=\"attribute_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"commandOnlyTemperatureSetting\" defaultChecked={this.props.attributes.commandOnlyTemperatureSetting} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>commandOnlyTemperatureSetting</i></span>\n            </label>\n          </div>\n          <div className=\"attribute_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the temperature.</span>\n          </div>\n        </div>\n\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n          </div>\n          <div className=\"attribute_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"queryOnlyTemperatureSetting\" defaultChecked={this.props.attributes.queryOnlyTemperatureSetting} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>queryOnlyTemperatureSetting</i></span>\n            </label>\n          </div>\n          <div className=\"attribute_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Google shouldn't change the device temperature settings.</span>\n          </div>\n        </div>\n\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n\n          </div>\n          <div className=\"attribute_table_cel\">\n            Minimum temperature: <input type=\"number\" id=\"thermostatTemperatureRange/minThresholdCelsius\" defaultValue={ this.props.attributes.thermostatTemperatureRange ? this.props.attributes.thermostatTemperatureRange.minThresholdCelsius : 0} min=\"0\" max=\"50\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"attribute_table_cel\">\n            <span className=\"attribute_advise\">Minimum temperature (in Celsius) supported by the device.</span>\n          </div>\n        </div>\n\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n\n          </div>\n          <div className=\"attribute_table_cel\">\n            Maximum temperature: <input type=\"number\" id=\"thermostatTemperatureRange/maxThresholdCelsius\" defaultValue={this.props.attributes.thermostatTemperatureRange ? this.props.attributes.thermostatTemperatureRange.maxThresholdCelsius : 0} min=\"0\" max=\"50\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"attribute_table_cel\">\n            <span className=\"attribute_advise\">Maximum temperature (in Celsius) supported by the device.</span>\n          </div>\n        </div>\n\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n\n          </div>\n          <div className=\"attribute_table_cel\">\n            Range: <input type=\"number\" id=\"bufferRangeCelsius\" defaultValue={this.props.attributes.bufferRangeCelsius} min=\"0\" max=\"50\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"attribute_table_cel\">\n            <span className=\"attribute_advise\">Specifies the minimum offset between heat-cool setpoints in Celsius.</span>\n          </div>\n        </div>\n\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n\n          </div>\n          <div className=\"attribute_table_cel\">\n            <select name=\"type\" id=\"thermostatTemperatureUnit\" className=\"table_input\" value={this.props.attributes.thermostatTemperatureUnit} onChange={this.update}>\n              <option value=\"C\">Celsius</option>\n              <option value=\"F\">Fahrenheit</option>\n            </select>\n          </div>\n        </div>\n\n\n\n      </div>\n    );\n  }\n}\n\nexport default TemperatureSetting\n","import React from 'react';\n\nclass Toggles extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n    this.updatetoggle = this.updatetoggle.bind(this);\n    this.addToggle = this.addToggle.bind(this);\n  }\n\n\n  updateCheckbox(event){\n    this.props.update('attributes/' + event.target.id,event.target.checked);\n  }\n\n  updatetoggle(event){\n    const id = event.target.id.split('_')\n    const toggle_id = id[1]\n    //Process the attribute and value depending of the attribute\n    const toggle_attribute = id[0] === 'lang' ? id[0] : 'name_synonym';\n    const value = id[0] === 'lang' ? event.target.value : event.target.value.split(',')\n    //Update the temporal data and update it\n    var temp_availableToggles = this.props.attributes.availableToggles\n    temp_availableToggles[toggle_id].name_values[0][toggle_attribute] = value\n    if (id[0] === 'names') temp_availableToggles[toggle_id].name = value[0]\n    this.props.update('attributes/availableToggles', temp_availableToggles);\n  }\n\n  addToggle(){\n    var temp_availableToggles = this.props.attributes.availableToggles\n    temp_availableToggles.push({\n      \"name\": \"\",\n      \"name_values\": [\n        {\n          \"name_synonym\": [\"\"],\n          \"lang\": \"en\"\n        }\n      ]\n    });\n    this.props.update('attributes/availableToggles', temp_availableToggles);\n  }\n\n  render() {\n\n    const names_box = {\n      marginLeft: '20px',\n      width: '150px'\n    }\n\n    const toggles = this.props.attributes.availableToggles.map((toggle, i) => {\n      return (\n              <div key={i}>\n                <div className=\"table_row\">\n                  <div className=\"table_cel\">\n                  </div>\n                  <div className=\"table_cel\">\n                    <label>\n                      <span>Languaje: </span>\n                      <select name=\"type\" id={\"lang_\" + i} value={toggle.name_values[0].lang} placeholder=\"Name for the toggle\" onChange={this.updatetoggle}>\n                        <option value=\"es\">es</option>\n                        <option value=\"en\">en</option>\n                      </select>\n                    </label>\n                    <label>\n                      <span>Name: </span>\n                      <input type=\"text\" id={\"names_\" + i} style={names_box} defaultValue={toggle.name_values[0].name_synonym} placeholder=\"Name\" onChange={this.updatetoggle}/>\n                    </label>\n\n\n                  </div>\n                </div>\n              </div>\n            )\n    });\n\n    return (\n      <div>\n\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n\n          </div>\n          <div className=\"attribute_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"commandOnlyToggles\" defaultChecked={this.props.attributes.reversible} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>commandOnlyToggles</i></span>\n            </label>\n          </div>\n          <div className=\"attribute_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the states.</span>\n          </div>\n        </div>\n\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n          </div>\n          <div className=\"attribute_table_cel\">\n            Add a toggle <button type=\"button\" className=\"add_attribute_button\" onClick={ this.addToggle }>Add</button>\n          </div>\n        </div>\n\n        {toggles}\n\n      </div>\n    );\n  }\n}\n\nexport default Toggles\n","import React from 'react';\n\nclass Modes extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n    this.updateMode = this.updateMode.bind(this);\n    this.addMode = this.addMode.bind(this);\n  }\n\n\n  updateCheckbox(event){\n    this.props.update('attributes/' + event.target.id,event.target.checked);\n  }\n\n  updateMode(event){\n    const id = event.target.id.split('_')\n    const mode_id = id[1]\n    var temp_availableModes = this.props.attributes.availableModes\n\n    if(id[0] === 'lang'){\n      temp_availableModes[mode_id].name_values[0].lang = event.target.value;\n    } else if (id[0] === 'names'){\n      temp_availableModes[mode_id].name_values[0].name_synonym = event.target.value.split(',');\n      temp_availableModes[mode_id].name = event.target.value.split(',')[0]\n    } else if (id[0] === 'settings'){\n      var values = event.target.value.split(',')\n      var settings = []\n      for ( var i = 0; i < values.length; i ++){\n        settings.push({\n          setting_name: values[i],\n            setting_values: [{\n              setting_synonym: [values[i]],\n              lang: this.props.attributes.availableModes[mode_id].name_values[0].lang\n             }]\n        })\n      }\n      temp_availableModes[mode_id].settings = settings\n    }\n    this.props.update('attributes/availableModes', temp_availableModes);\n  }\n\n  addMode(){\n    var temp_availableModes = this.props.attributes.availableModes\n    temp_availableModes.push({\n      \"name\": \"\",\n      \"name_values\": [\n        {\n          \"name_synonym\": [\"\"],\n          \"lang\": \"en\"\n        }\n      ],\n      \"settings\": [\n        {\n          \"setting_name\": \"\",\n            \"setting_values\": [{\n              \"setting_synonym\": [\"\"],\n              \"lang\": \"en\"\n             }]\n        }\n      ]\n    });\n    this.props.update('attributes/availableModes', temp_availableModes);\n  }\n\n  render() {\n\n    const names_box = {\n      width: '150px'\n    }\n\n    const settings_box = {\n      width: '230px'\n    }\n\n\n    const modes = this.props.attributes.availableModes.map((mode, i) => {\n      const settings = mode.settings.map((setting,i) => {return setting.setting_name});\n\n      return (\n              <div key={i}>\n                <div className=\"table_row\">\n                  <div className=\"table_cel\">\n                  </div>\n                  <div className=\"table_cel\">\n                    <label>\n                      <span>Languaje: </span>\n                      <select name=\"type\" id={\"lang_\" + i} value={mode.name_values[0].lang} onChange={this.updateMode}>\n                        <option value=\"es\">es</option>\n                        <option value=\"en\">en</option>\n                      </select>\n                    </label>\n                    <label>\n                      <span>Mode name: </span>\n                      <input type=\"text\" id={\"names_\" + i} style={names_box} defaultValue={mode.name_values[0].name_synonym} placeholder=\"Mode name\" onChange={this.updateMode}/>\n                    </label>\n                    <label>\n                      <span>Mode settings: </span>\n                      <input type=\"text\" id={\"settings_\" + i} style={settings_box} defaultValue={settings} placeholder=\"Separated by commas\" onChange={this.updateMode}/>\n                    </label>\n                  </div>\n                </div>\n\n\n              </div>\n\n              )\n    });\n\n    return (\n      <div>\n\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n\n          </div>\n          <div className=\"attribute_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"commandOnlyModes\" defaultChecked={this.props.attributes.reversible} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>commandOnlyModes</i></span>\n            </label>\n          </div>\n          <div className=\"attribute_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the modes.</span>\n          </div>\n        </div>\n\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n          </div>\n          <div className=\"attribute_table_cel\">\n            Add a mode <button type=\"button\" className=\"add_attribute_button\" onClick={ this.addMode }>Add</button>\n          </div>\n\n        </div>\n\n        {modes}\n\n      </div>\n    );\n  }\n}\n\nexport default Modes\n","import React from 'react';\n\nclass HumiditySetting extends React.Component {\n  constructor(props) {\n    super(props);\n    this.update = this.update.bind(this);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n  }\n\n  update(event){\n    this.props.update('attributes/' + event.target.id,event.target.value);\n  }\n\n  updateCheckbox(event){\n    this.props.update('attributes/' + event.target.id,event.target.checked);\n  }\n\n  render() {\n    return (\n      <div>\n\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n\n          </div>\n          <div className=\"attribute_table_cel\">\n            Minimum humidity <input type=\"number\" id=\"humiditySetpointRange/minPercent\" defaultValue={ this.props.attributes.humiditySetpointRange ? this.props.attributes.humiditySetpointRange.minPercent : 0} min=\"0\" max=\"100\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"attribute_table_cel\">\n            <span className=\"attribute_advise\">Minimum humidity level as percentage.</span>\n          </div>\n        </div>\n\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n\n          </div>\n          <div className=\"attribute_table_cel\">\n            Maximum humidity <input type=\"number\" id=\"humiditySetpointRange/maxPercent\" defaultValue={this.props.attributes.humiditySetpointRange ? this.props.attributes.humiditySetpointRange.maxPercent : 0} min=\"0\" max=\"100\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"attribute_table_cel\">\n            <span className=\"attribute_advise\">Maximum humidity level as percentage.</span>\n          </div>\n        </div>\n\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n\n          </div>\n          <div className=\"attribute_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"commandOnlyHumiditySetting\" defaultChecked={this.props.attributes.commandOnlyHumiditySetting} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>commandOnlyHumiditySetting</i></span>\n            </label>\n          </div>\n          <div className=\"attribute_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the humidity.</span>\n          </div>\n        </div>\n\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n\n          </div>\n          <div className=\"attribute_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"queryOnlyHumiditySetting\" defaultChecked={this.props.attributes.queryOnlyHumiditySetting} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>queryOnlyHumiditySetting</i></span>\n            </label>\n          </div>\n          <div className=\"attribute_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Google shouldn't change the device humidity.</span>\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default HumiditySetting\n","import React from 'react';\n\nclass OpenClose extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n  }\n\n\n  updateCheckbox(event){\n    this.props.update('attributes/' + event.target.id,event.target.checked);\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n\n          </div>\n          <div className=\"attribute_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"discreteOnlyOpenClose\" defaultChecked={this.props.attributes.discreteOnlyOpenClose} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>discreteOnlyOpenClose</i></span>\n            </label>\n          </div>\n          <div className=\"attribute_table_cel\">\n            <span className=\"attribute_advise\">Enable it if the device must either be fully open or fully closed.</span>\n          </div>\n        </div>\n\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n          </div>\n          <div className=\"attribute_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"commandOnlyOpenClose\" defaultChecked={this.props.attributes.commandOnlyOpenClose} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>commandOnlyOpenClose</i></span>\n            </label>\n          </div>\n          <div className=\"attribute_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the state.</span>\n          </div>\n        </div>\n\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n          </div>\n          <div className=\"attribute_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"queryOnlyOpenClose\" defaultChecked={this.props.attributes.queryOnlyOpenClose} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>queryOnlyOpenClose</i></span>\n            </label>\n          </div>\n          <div className=\"attribute_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Google shouldn't change the device state.</span>\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default OpenClose\n","import React from 'react';\n\nclass Rotation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.update = this.update.bind(this);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n  }\n\n  update(event){\n    this.props.update('attributes/' + event.target.id,event.target.value);\n  }\n\n  updateCheckbox(event){\n    this.props.update('attributes/' + event.target.id,event.target.checked);\n  }\n\n  render() {\n    return (\n      <div>\n\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n\n          </div>\n          <div className=\"attribute_table_cel\">\n            Minimum rotation: <input type=\"number\" id=\"rotationDegreesRange/rotationDegreesMin\" defaultValue={ this.props.attributes.rotationDegreesRange ? this.props.attributes.rotationDegreesRange.rotationDegreesMin : 0} min=\"0\" max=\"100\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"attribute_table_cel\">\n            <span className=\"attribute_advise\">Minimum rotation degrees that a device can rotate.</span>\n          </div>\n        </div>\n\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n\n          </div>\n          <div className=\"attribute_table_cel\">\n            Maximum rotation: <input type=\"number\" id=\"rotationDegreesRange/rotationDegreesMax\" defaultValue={this.props.attributes.rotationDegreesRange ? this.props.attributes.rotationDegreesRange.rotationDegreesMax : 0} min=\"0\" max=\"100\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"attribute_table_cel\">\n            <span className=\"attribute_advise\">Maximum rotation degrees that a device can rotate.</span>\n          </div>\n        </div>\n\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n\n          </div>\n          <div className=\"attribute_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"commandOnlyRotation\" defaultChecked={this.props.attributes.commandOnlyRotation} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>commandOnlyRotation</i></span>\n            </label>\n          </div>\n          <div className=\"attribute_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the device.</span>\n          </div>\n        </div>\n\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n\n          </div>\n          <div className=\"attribute_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"supportsContinuousRotation\" defaultChecked={this.props.attributes.supportsContinuousRotation} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>supportsContinuousRotation</i></span>\n            </label>\n          </div>\n          <div className=\"attribute_table_cel\">\n            <span className=\"attribute_advise\">Enable it if the device supports continuous rotation.</span>\n          </div>\n        </div>\n\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n\n          </div>\n          <div className=\"attribute_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"supportsDegrees\" defaultChecked={this.props.attributes.supportsDegrees} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>supportsDegrees</i></span>\n            </label>\n          </div>\n          <div className=\"attribute_table_cel\">\n            <span className=\"attribute_advise\">Enable it if the device allows rotation by degree.</span>\n          </div>\n        </div>\n\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n\n          </div>\n          <div className=\"attribute_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"supportsPercent\" defaultChecked={this.props.attributes.supportsPercent} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>supportsPercent</i></span>\n            </label>\n          </div>\n          <div className=\"attribute_table_cel\">\n            <span className=\"attribute_advise\">Enable it if device allows rotation by percent.</span>\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default Rotation\n","import React from 'react';\n\nclass Fill extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateLevels = this.updateLevels.bind(this);\n    this.addLevel = this.addLevel.bind(this);\n  }\n\n  updateLevels(event){\n    const id = event.target.id.split('_')\n    const level_id = id[1]\n    //Process the attribute and value depending of the attribute\n    const level_attribute = id[0] === 'lang' ? id[0] : 'level_synonym';\n    const value = id[0] === 'lang' ? event.target.value : event.target.value.split(',')\n    //Update the temporal data and update it\n    var temp_availableFillLevels = this.props.attributes.availableFillLevels\n    temp_availableFillLevels.levels[level_id].level_values[0][level_attribute] = value\n    if (id[0] === 'names') temp_availableFillLevels.levels[level_id].level_name = value[0]\n    this.props.update('attributes/availableFillLevels', temp_availableFillLevels);\n  }\n\n  addLevel(){\n    var temp_availableFillLevels = this.props.attributes.availableFillLevels\n    temp_availableFillLevels.levels.push({\n      \"level_name\": \"\",\n      \"level_values\": [\n        {\n          \"level_synonym\": [\"\"],\n          \"lang\": \"en\"\n        }\n      ]\n    });\n    this.props.update('attributes/availableFillLevels', temp_availableFillLevels);\n  }\n\n  render() {\n\n    const names_box = {\n      width: '150px'\n    }\n\n    const levels = this.props.attributes.availableFillLevels.levels.map((level, i) => {\n      return (\n              <div key={i}>\n                <div className=\"table_row\" key={i}>\n                  <div className=\"table_cel\">\n                  </div>\n                  <div className=\"table_cel\">\n                    <label>\n                      <span>Languaje: </span>\n                      <select name=\"type\" id={\"lang_\" + i} value={level.level_values[0].lang} onChange={this.updateLevels}>\n                        <option value=\"es\">es</option>\n                        <option value=\"en\">en</option>\n                      </select>\n                    </label>\n                    <label>\n                      <span>Fill level name: </span>\n                      <input type=\"text\" id={\"names_\" + i} style={names_box} defaultValue={level.level_values[0].level_synonym} placeholder=\"Fill level name\" onChange={this.updateLevels}/>\n                    </label>\n                  </div>\n                </div>\n              </div>\n              )\n    });\n\n    return (\n      <div>\n\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n          </div>\n          <div className=\"attribute_table_cel\">\n            Add a level <button type=\"button\" className=\"add_attribute_button\" onClick={ this.addLevel }>Add</button>\n          </div>\n        </div>\n\n        {levels}\n\n      </div>\n    );\n  }\n}\n\nexport default Fill\n","import React from 'react';\n\nclass ArmDisarm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateSecurityLevel = this.updateSecurityLevel.bind(this);\n    this.addSecurityLevel = this.addSecurityLevel.bind(this);\n  }\n\n  updateSecurityLevel(event){\n    const id = event.target.id.split('_')\n    const level_id = id[1]\n    //Process the attribute and value depending of the attribute\n    const level_attribute = id[0] === 'lang' ? id[0] : 'level_synonym';\n    const value = id[0] === 'lang' ? event.target.value : event.target.value.split(',')\n    //Update the temporal data and update it\n    var temp_availableArmLevels = this.props.attributes.availableArmLevels\n    temp_availableArmLevels.levels[level_id].level_values[0][level_attribute] = value\n    if (id[0] === 'names') temp_availableArmLevels.levels[level_id].level_name = value[0]\n    this.props.update('attributes/availableArmLevels', temp_availableArmLevels);\n  }\n\n  addSecurityLevel(){\n    var temp_availableArmLevels = this.props.attributes.availableArmLevels\n    temp_availableArmLevels.levels.push({\n      \"level_name\": \"\",\n      \"level_values\": [\n        {\n          \"level_synonym\": [\"\"],\n          \"lang\": \"en\"\n        }\n      ]\n    });\n    this.props.update('attributes/availableArmLevels', temp_availableArmLevels);\n  }\n\n  render() {\n\n    const names_box = {\n      marginLeft: '20px',\n      width: '150px'\n    }\n\n    const levels = this.props.attributes.availableArmLevels.levels.map((level, i) => {\n      return (\n              <div key={i}>\n                <div className=\"table_row\" key={i}>\n                  <div className=\"table_cel\">\n                  </div>\n                  <div className=\"table_cel\">\n                    <label>\n                      <span>Languaje: </span>\n                      <select name=\"type\" id={\"lang_\" + i} value={level.level_values[0].lang} onChange={this.updateSecurityLevel}>\n                        <option value=\"es\">es</option>\n                        <option value=\"en\">en</option>\n                      </select>\n                    </label>\n                    <label>\n                      <span>Level name: </span>\n                      <input type=\"text\" id={\"names_\" + i} style={names_box} defaultValue={level.level_values[0].speed_synonym} placeholder=\"Security level name\" onChange={this.updateSecurityLevel}/>\n                    </label>\n                  </div>\n                </div>\n              </div>\n              )\n    });\n\n    return (\n      <div>\n\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n          </div>\n          <div className=\"attribute_table_cel\">\n            Add a security level <button type=\"button\" className=\"add_attribute_button\" onClick={ this.addSecurityLevel }>Add</button>\n          </div>\n        </div>\n\n        {levels}\n\n      </div>\n    );\n  }\n}\n\nexport default ArmDisarm\n","import React from 'react';\n\nclass StartStop extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n    this.updateArray = this.updateArray.bind(this);\n  }\n\n\n  updateCheckbox(event){\n    this.props.update('attributes/' + event.target.id,event.target.checked);\n  }\n\n  updateArray(event){\n    this.props.update('attributes/' + event.target.id,event.target.value.split(','));\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n\n          </div>\n          <div className=\"attribute_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"pausable\" defaultChecked={this.props.attributes.pausable} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>pausable</i></span>\n            </label>\n          </div>\n          <div className=\"attribute_table_cel\">\n            <span className=\"attribute_advise\">Enable it if the device can be paused.</span>\n          </div>\n        </div>\n\n        <div className=\"table_row\">\n          <div className=\"table_cel\">\n\n          </div>\n          <div className=\"table_cel\">\n            Zones: <input type=\"text\" id=\"availableThermostatModes\" defaultValue={this.props.attributes.availableZones} onChange={this.updateArray} className=\"text_input\"/>\n          </div>\n        </div>\n\n        <div className=\"table_row\">\n          <div className=\"table_cel\">\n\n          </div>\n          <div className=\"table_cel\">\n            <span className=\"attribute_advise\">Supported zones names separeted by commas.</span>\n          </div>\n        </div>\n\n\n      </div>\n    );\n  }\n}\n\nexport default StartStop\n","import React from 'react';\n\nclass Timer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n    this.update = this.update.bind(this);\n  }\n\n\n  updateCheckbox(event){\n    this.props.update('attributes/' + event.target.id,event.target.checked);\n  }\n\n  update(event){\n    this.props.update('attributes/' + event.target.id,event.target.value);\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n\n          </div>\n          <div className=\"attribute_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"commandOnlyTimer\" defaultChecked={this.props.attributes.commandOnlyTimer} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>commandOnlyTimer</i></span>\n            </label>\n          </div>\n          <div className=\"attribute_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the state.</span>\n          </div>\n        </div>\n\n        <div className=\"table_row\">\n          <div className=\"table_cel\">\n\n          </div>\n          <div className=\"table_cel\">\n            Max time: <input type=\"text\" id=\"maxTimerLimitSec\" defaultValue={this.props.attributes.maxTimerLimitSec} onChange={this.update} className=\"text_input\"/>\n          </div>\n        </div>\n\n        <div className=\"table_row\">\n          <div className=\"table_cel\">\n\n          </div>\n          <div className=\"table_cel\">\n            <span className=\"attribute_advise\">Indicates the longest timer setting in seconds available on the device.</span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Timer\n","import React from 'react';\n\nclass TemperatureControl extends React.Component {\n  constructor(props) {\n    super(props);\n    this.update = this.update.bind(this);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n  }\n\n  update(event){\n    this.props.update('attributes/' + event.target.id,event.target.value);\n  }\n\n  updateCheckbox(event){\n    this.props.update('attributes/' + event.target.id,event.target.checked);\n  }\n\n  render() {\n\n\n    return (\n      <div>\n\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n\n          </div>\n          <div className=\"attribute_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"commandOnlyTemperatureControl\" defaultChecked={this.props.attributes.commandOnlyTemperatureControl} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>commandOnlyTemperatureControl</i></span>\n            </label>\n          </div>\n          <div className=\"attribute_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the temperature.</span>\n          </div>\n        </div>\n\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n          </div>\n          <div className=\"attribute_table_cel\">\n            <label>\n              <input type=\"checkbox\" id=\"queryOnlyTemperatureControl\" defaultChecked={this.props.attributes.queryOnlyTemperatureControl} onChange={this.updateCheckbox}/>\n              <span className=\"\"><i>queryOnlyTemperatureControl</i></span>\n            </label>\n          </div>\n          <div className=\"attribute_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Google shouldn't change the device temperature settings.</span>\n          </div>\n        </div>\n\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n\n          </div>\n          <div className=\"attribute_table_cel\">\n            Minimum temperature: <input type=\"number\" id=\"temperatureRange/minThresholdCelsius\" defaultValue={ this.props.attributes.temperatureRange ? this.props.attributes.temperatureRange.minThresholdCelsius : 0} min=\"0\" max=\"400\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"attribute_table_cel\">\n            <span className=\"attribute_advise\">Minimum temperature (in Celsius) supported by the device.</span>\n          </div>\n        </div>\n\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n\n          </div>\n          <div className=\"attribute_table_cel\">\n            Maximum temperature: <input type=\"number\" id=\"temperatureRange/maxThresholdCelsius\" defaultValue={this.props.attributes.temperatureRange ? this.props.attributes.temperatureRange.maxThresholdCelsius : 0} min=\"0\" max=\"400\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"attribute_table_cel\">\n            <span className=\"attribute_advise\">Maximum temperature (in Celsius) supported by the device.</span>\n          </div>\n        </div>\n\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n\n          </div>\n          <div className=\"attribute_table_cel\">\n            Step: <input type=\"number\" id=\"temperatureStepCelsius\" defaultValue={this.props.attributes.temperatureStepCelsius} min=\"0\" max=\"400\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"attribute_table_cel\">\n            <span className=\"attribute_advise\">Specifies the relative temperature step.</span>\n          </div>\n        </div>\n\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n\n          </div>\n          <div className=\"attribute_table_cel\">\n            <select name=\"type\" id=\"temperatureUnitForUX\" className=\"table_input\" value={this.props.attributes.temperatureUnitForUX} onChange={this.update}>\n              <option value=\"C\">Celsius</option>\n              <option value=\"F\">Fahrenheit</option>\n            </select>\n          </div>\n        </div>\n\n\n\n      </div>\n    );\n  }\n}\n\nexport default TemperatureControl\n","import React from 'react';\n\nclass Cook extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateMode = this.updateMode.bind(this);\n    this.addMode = this.addMode.bind(this);\n    this.updatePreset = this.updatePreset.bind(this);\n    this.addPreset = this.addPreset.bind(this);\n  }\n\n  updateMode(event){\n    const id = event.target.id.split('_')\n    const mode_id = id[1]\n    var temp_supportedCookingModes = this.props.attributes.supportedCookingModes\n\n    if (event.target.value === 'delete'){\n      temp_supportedCookingModes.splice(mode_id, 1)\n    } else if (event.target.value !== 'select') {\n      temp_supportedCookingModes[mode_id] = event.target.value;\n    }\n\n    this.props.update('attributes/supportedCookingModes', temp_supportedCookingModes);\n  }\n\n  addMode(){\n    var temp_supportedCookingModes = this.props.attributes.supportedCookingModes\n    temp_supportedCookingModes.push(\"\");\n    this.props.update('attributes/supportedCookingModes', temp_supportedCookingModes);\n  }\n\n  updatePreset(event){\n    const id = event.target.id.split('_')\n    const preset_id = id[1]\n    var temp_foodPresets = this.props.attributes.foodPresets\n\n    if(id[0] === 'lang'){\n      temp_foodPresets[preset_id].food_synonyms[0].lang = event.target.value;\n    } else if (id[0] === 'names'){\n      temp_foodPresets[preset_id].food_synonyms[0].synonym = event.target.value.split(',');\n      temp_foodPresets[preset_id].food_preset_name = event.target.value.split(',')[0]\n    } else if (id[0] === 'units'){\n      temp_foodPresets[preset_id].supported_units[0] = event.target.value;\n    }\n    this.props.update('attributes/foodPresets', temp_foodPresets);\n  }\n\n  addPreset(){\n    var temp_foodPresets = this.props.attributes.foodPresets\n    temp_foodPresets.push({\n      \"food_preset_name\": \"\",\n      \"supported_units\": [\"\"],\n      \"food_synonyms\": [{\n        \"synonym\": [\"\"],\n        \"language\": \"en\"\n      }]\n    });\n    this.props.update('attributes/foodPresets', temp_foodPresets);\n  }\n\n  render() {\n\n    const names_box = {\n      width: '150px'\n    }\n\n    const modes = this.props.attributes.supportedCookingModes.map((mode, i) => {\n\n      return (\n              <div key={i}>\n                <div className=\"table_row\">\n                  <div className=\"table_cel\">\n                  </div>\n                  <div className=\"table_cel\">\n                    <label>\n                      <span>Mode: </span>\n                      <select name=\"type\" id={\"mode_\" + i} value={mode} onChange={this.updateMode}>\n                        <option value=\"select\">Select a mode</option>\n                        <option value=\"delete\">Delete this mode</option>\n                        <option value=\"UNKNOWN_COOKING_MODE\">UNKNOWN_COOKING_MODE</option>\n                        <option value=\"BAKE\">BAKE</option>\n                        <option value=\"BEAT\">BEAT</option>\n                        <option value=\"BLEND\">BLEND</option>\n                        <option value=\"BOIL\">BOIL</option>\n                        <option value=\"BREW\">BREW</option>\n                        <option value=\"BROIL\">BROIL</option>\n                        <option value=\"CONVECTION_BAKE\">CONVECTION_BAKE</option>\n                        <option value=\"COOK\">COOK</option>\n                        <option value=\"DEFROST\">DEFROST</option>\n                        <option value=\"DEHYDRATE\">DEHYDRATE</option>\n                        <option value=\"FERMENT\">FERMENT</option>\n                        <option value=\"FRY\">FRY</option>\n                        <option value=\"KNEAD\">KNEAD</option>\n                        <option value=\"MICROWAVE\">MICROWAVE</option>\n                        <option value=\"PRESSURE_COOK\">PRESSURE_COOK</option>\n                        <option value=\"PUREE\">PUREE</option>\n                        <option value=\"ROAST\">ROAST</option>\n                        <option value=\"SAUTE\">SAUTE</option>\n                        <option value=\"SLOW_COOK\">SLOW_COOK</option>\n                        <option value=\"SOUS_VIDE\">SOUS_VIDE</option>\n                        <option value=\"STEAM\">STEAM</option>\n                        <option value=\"STEW\">STEW</option>\n                        <option value=\"WARM\">WARM</option>\n                        <option value=\"WHIP\">WHIP</option>\n                      </select>\n                    </label>\n                  </div>\n                </div>\n              </div>\n\n              )\n    });\n\n    const presets = this.props.attributes.foodPresets.map((preset, i) => {\n\n      return (\n              <div key={i}>\n                <div className=\"table_row\">\n                  <div className=\"table_cel\">\n                  </div>\n                  <div className=\"table_cel\">\n                    <label>\n                      <span>Language: </span>\n                      <select name=\"type\" id={\"lang_\" + i} value={preset.food_synonyms[0].lang} onChange={this.updatePreset}>\n                        <option value=\"es\">es</option>\n                        <option value=\"en\">en</option>\n                      </select>\n                    </label>\n                    <label style={names_box}>\n                      <span>Preset name: </span>\n                      <input type=\"text\" id={\"names_\" + i} defaultValue={preset.food_synonyms[0].synonym} placeholder=\"Preset name\" onChange={this.updatePreset}/>\n                    </label>\n                    <label>\n                      <span>Units: </span>\n                      <select name=\"type\" id={\"units_\" + i} value={preset.supported_units[0]} onChange={this.updatePreset}>\n                        <option value=\"NO_UNITS\">No units</option>\n                        <option value=\"UNKNOWN_UNITS\">Unkown</option>\n                        <option value=\"CENTIMETERS\">Centimeters</option>\n                        <option value=\"CUPS\">Cups</option>\n                        <option value=\"DECILITERS\">Deciliters</option>\n                        <option value=\"FEET\">Feet</option>\n                        <option value=\"FLUID_OUNCES\">Fluid ounces</option>\n                        <option value=\"GALLONS\">Gallons</option>\n                        <option value=\"GRAMS\">Grams</option>\n                        <option value=\"INCHES\">Inches</option>\n                        <option value=\"KILOGRAMS\">Kilograms</option>\n                        <option value=\"LITERS\">Liters</option>\n                        <option value=\"METERS\">Meters</option>\n                        <option value=\"MILLIGRAMS\">Miligrams</option>\n                        <option value=\"MILLILITERS\">Mililiters</option>\n                        <option value=\"MILLIMETERS\">Milimeters</option>\n                        <option value=\"OUNCES\">Ounces</option>\n                        <option value=\"PINCH\">Pinch</option>\n                        <option value=\"PINTS\">Pints</option>\n                        <option value=\"PORTION\">Portion</option>\n                        <option value=\"POUNDS\">Pounds</option>\n                        <option value=\"QUARTS\">Quarts</option>\n                        <option value=\"TABLESPOONS\">Tablespoons</option>\n                        <option value=\"TEASPOONS\">Teaspoons</option>\n                      </select>\n                    </label>\n                  </div>\n                </div>\n              </div>\n              )\n    });\n\n    return (\n      <div>\n\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n          </div>\n          <div className=\"attribute_table_cel\">\n            Add a cooking mode <button type=\"button\" className=\"add_attribute_button\" onClick={ this.addMode }>Add</button>\n          </div>\n        </div>\n\n        {modes}\n\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n          </div>\n          <div className=\"attribute_table_cel\">\n            Add a preset <button type=\"button\" className=\"add_attribute_button\" onClick={ this.addPreset }>Add</button>\n          </div>\n        </div>\n\n        {presets}\n\n      </div>\n    );\n  }\n}\n\nexport default Cook\n","import React from 'react';\nimport Text from '../editor/Text'\nimport Scene from '../editor/traits/Scene'\nimport OnOff from '../editor/traits/OnOff'\nimport Brightness from '../editor/traits/Brightness'\nimport FanSpeed from '../editor/traits/FanSpeed'\nimport ColorSetting from '../editor/traits/ColorSetting'\nimport TemperatureSetting from '../editor/traits/TemperatureSetting'\nimport Toggles from '../editor/traits/Toggles'\nimport Modes from '../editor/traits/Modes'\nimport HumiditySetting from '../editor/traits/HumiditySetting'\nimport OpenClose from '../editor/traits/OpenClose'\nimport Rotation from '../editor/traits/Rotation'\nimport Fill from '../editor/traits/Fill'\nimport ArmDisarm from '../editor/traits/ArmDisarm'\nimport StartStop from '../editor/traits/StartStop'\nimport Timer from '../editor/traits/Timer'\nimport TemperatureControl from '../editor/traits/TemperatureControl'\nimport Cook from '../editor/traits/Cook'\nimport getCookieValue from '../../functions'\nimport { root, deviceReference } from '../../constants'\n\nimport './Editor.css';\n\nclass Editor extends React.Component {\n  constructor(props) {\n    super(props);\n    const id = window.location.pathname.split('/')[3];\n    var create = false;\n    if (id === \"\") create = true;\n    this.state = {\n      id: id,\n      create: create,\n      device: {\n        attributes: {},\n        deviceInfo: {},\n        id: \"\",\n        name: {\n          defaultnames: [],\n          nicknames: [],\n          name: \"\"\n        },\n        traits: [],\n        type: \"\"\n      },\n      status: {\n        online: true\n      },\n      posible_traits: [],\n      save_status: \"\"\n    }\n    this.updateNames = this.updateNames.bind(this);\n    this.update = this.update.bind(this);\n    this.updateId = this.updateId.bind(this);\n    this.updateType = this.updateType.bind(this);\n    this.updateTraits = this.updateTraits.bind(this);\n    this.save = this.save.bind(this);\n    this.delete = this.delete.bind(this);\n    this.renderAttrinutes = this.renderAttrinutes.bind(this);\n  }\n\n  componentDidMount() {\n    if (!this.state.create){\n      var http = new XMLHttpRequest();\n      http.onload = function (e) {\n        if (http.readyState === 4) {\n          if (http.status === 200) {\n            var data = JSON.parse(http.responseText);\n            this.setState({\n               device: data,\n               posible_traits: deviceReference.devices[data.type]\n             });\n          } else {\n            console.error(http.statusText);\n          }\n        }\n      }.bind(this);\n      http.open(\"GET\", root + \"api/devices/get/\" + this.state.id + \"/\");\n      http.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n      http.send();\n    }\n  }\n\n  updateNames(dumy_key, value){\n    var names = value.split(',');\n    var temp_device = this.state.device\n    temp_device.name = {\n      defaultnames: names,\n      nicknames: names,\n      name: names[0]\n    }\n    this.setState({\n      device: temp_device\n    })\n  }\n\n  update(key, value){\n    var temp_device = this.state.device\n    var keys = key.split('/');\n    if (keys.length === 1)\n      temp_device[key] = value\n    else if (keys.length === 2)\n      temp_device[keys[0]][keys[1]] = value\n    else if (keys.length === 3)\n      temp_device[keys[0]][keys[1]][keys[2]] = value\n    this.setState({\n      device: temp_device\n    })\n  }\n\n  updateId(event){\n    this.update('id',event.target.value)\n  }\n\n  updateType(event){\n    this.update('type',event.target.value)\n    this.setState({\n       posible_traits: deviceReference.devices[event.target.value]\n     });\n  }\n\n  updateTraits(event){\n    var temp_device = this.state.device\n    var temp_status = this.state.status\n    if (event.target.checked) {\n      if (this.state.device.traits.includes(event.target.id) === false){\n        //Push the trait to the device\n        temp_device.traits.push(event.target.id)\n        //Set the default values\n        var attributes = deviceReference.traits[event.target.id].attributes;\n        Object.keys(attributes).forEach((attribute, i) => {\n          temp_device.attributes[attribute] = attributes[attribute].default\n        });\n        //Set the default status params\n        var params = deviceReference.traits[event.target.id].param;\n        Object.keys(params).forEach((param, i) => {\n          temp_status[param] = params[param].default\n        });\n      }\n    } else {\n      if (this.state.device.traits.includes(event.target.id) === true){\n        temp_device.traits = temp_device.traits.filter(function(value, index, arr){ return value !== event.target.id;});\n      }\n    }\n    this.setState({\n      device: temp_device\n    })\n  }\n\n  save(){\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      if (http.readyState === 4) {\n        if (http.status === 200) {\n          JSON.parse(http.responseText);\n          this.setState({\n             save_status: \"Saved correctly.\"\n           });\n        } else {\n          console.error(http.statusText);\n          this.setState({\n             save_status: \"Error, the changes haven't been saved.\"\n           });\n        }\n        setTimeout(function(){\n          this.setState({\n             save_status: \"\"\n           });\n        }.bind(this), 5000)\n      }\n    }.bind(this);\n    var payload = {\n      \"device\": this.state.device\n    }\n    if (this.state.create){\n      http.open(\"POST\", root + \"api/devices/create/\");\n      payload.status = this.state.status\n    } else {\n      http.open(\"POST\", root + \"api/devices/update/\");\n    }\n    http.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\n    http.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    http.send(JSON.stringify(payload));\n  }\n\n  delete(){\n    if(window.confirm('Do you want to delete the device?')){\n      var http = new XMLHttpRequest();\n      http.onload = function (e) {\n        if (http.readyState === 4) {\n          if (http.status === 200) {\n            window.location.href = \"/devices/\"\n          } else {\n            console.error(http.statusText);\n            this.setState({\n               save_status: \"Error, the device hasn't been deleted.\"\n             });\n          }\n          setTimeout(function(){\n            this.setState({\n               save_status: \"\"\n             });\n          }.bind(this), 5000)\n        }\n      }.bind(this);\n      http.open(\"GET\", root + \"api/devices/delete/\" + this.state.device.id + \"/\");\n      http.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n      http.send();\n    } else {\n      this.setState({\n         save_status: \"Ok. The device is save.\"\n       });\n    }\n  }\n\n  renderAttrinutes(trait){\n    if (this.state.device.traits.includes(trait)){\n      if (trait === 'action.devices.traits.Scene')\n        return <Scene sceneReversible={this.state.device.attributes.sceneReversible} update={this.update}/>\n      else if (trait === 'action.devices.traits.OnOff')\n        return <OnOff attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.Brightness')\n        return <Brightness commandOnlyBrightness={this.state.device.attributes.commandOnlyBrightness} update={this.update}/>\n      else if (trait === 'action.devices.traits.ColorSetting')\n        return <ColorSetting attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.FanSpeed')\n        return <FanSpeed attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.TemperatureSetting')\n        return <TemperatureSetting attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.Toggles')\n        return <Toggles attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.Modes')\n        return <Modes attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.HumiditySetting')\n        return <HumiditySetting attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.OpenClose')\n        return <OpenClose attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.Rotation')\n        return <Rotation attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.Fill')\n        return <Fill attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.ArmDisarm')\n        return <ArmDisarm attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.StartStop')\n        return <StartStop attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.Timer')\n        return <Timer attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.TemperatureControl')\n        return <TemperatureControl attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.Cook')\n        return <Cook attributes={this.state.device.attributes} update={this.update}/>\n    }\n  }\n\n  render() {\n\n    const container = {\n      width: '80%',\n      marginLeft: '8%',\n      marginTop: '20px',\n      backgroundColor: 'white',\n      paddingTop: '10px',\n      paddingLeft: '20px',\n      paddingBottom: '20px',\n      paddingRight: '20px',\n      borderRadius: '20px'\n    }\n\n    const button = {\n      width: '200px'\n    }\n\n    const deleteButton = {\n      backgroundColor: 'red'\n    }\n\n    const deleteButtonDisabled = {\n      backgroundColor: 'red',\n      opacity: '0.2'\n    }\n\n    const separator = {\n      width: '70%'\n    }\n\n    const types = Object.keys(deviceReference.devicesCoolNames).map((type) => {\n      return <option key={type} value={type}>{deviceReference.devicesCoolNames[type]}</option>\n    })\n\n    const nicknames = this.state.device.name.nicknames.map((name) => {\n      return name\n    });\n\n    const traits = this.state.posible_traits.map((trait) =>\n      <div key={trait}>\n        <hr style={separator}/>\n        <div className=\"attribute_table_row\">\n          <div className=\"attribute_table_cel\">\n            {deviceReference.traitsCoolNames[trait]}\n          </div>\n          <div className=\"attribute_table_cel\">\n            <label>\n              <input type=\"checkbox\" id={trait} defaultChecked={this.state.device.traits.includes(trait)} onChange={this.updateTraits}/>\n\n            </label>\n          </div>\n          <div className=\"attribute_table_cel\">\n            Read Google's <a href={\"https://developers.google.com/assistant/smarthome/traits/\" + trait.split('.')[3].toLowerCase()} target=\"blanck\">documentation</a>\n          </div>\n        </div>\n        {this.renderAttrinutes(trait)}\n      </div>\n    );\n\n    return (\n      <div>\n\n        <div style={ container }>\n          <h2>Global settings</h2>\n          <div className=\"advise\">\n            <span>General settings of the device.</span>\n            <hr/>\n          </div>\n          <div className=\"table_row\">\n            <div className=\"table_cel\">\n              Device ID*\n            </div>\n            <div className=\"table_cel\">\n              <input type=\"text\" id=\"id\" className=\"table_input\" defaultValue={this.state.device.id} onChange={this.updateId} disabled={ this.state.create ? false : true }/>\n            </div>\n          </div>\n          <div className=\"table_row\">\n            <div className=\"table_cel\">\n              Device Type*\n            </div>\n            <div className=\"table_cel\">\n              <select name=\"type\" id=\"type\" className=\"table_input\" value={this.state.device.type} onChange={this.updateType} disabled={ this.state.create ? false : true }>\n                <option value=\"default\">Select a device</option>\n                {types}\n              </select>\n            </div>\n          </div>\n          <Text name=\"Nick names*\" data=\"nicknames\" value={nicknames} update={this.updateNames}/>\n          <Text name=\"Hardware version\" data=\"deviceInfo/hwVersion\" value={this.state.device.deviceInfo ? this.state.device.deviceInfo.hwVersion : ''} update={this.update}/>\n          <Text name=\"Software version\" data=\"deviceInfo/swVersion\" value={this.state.device.deviceInfo ? this.state.device.deviceInfo.swVersion : ''} update={this.update}/>\n          <Text name=\"Manufacturer\" data=\"deviceInfo/manufacturer\" value={this.state.device.deviceInfo ? this.state.device.deviceInfo.manufacturer : ''} update={this.update}/>\n          <Text name=\"Model\" data=\"deviceInfo/model\" value={this.state.device.deviceInfo ? this.state.device.deviceInfo.model : ''} update={this.update}/>\n          <div className=\"advise\">\n            <span>Nick names must be separeted by <i>,</i> commas.</span><br/>\n            <span>* data is required.</span>\n          </div>\n          <hr/>\n          <h2>Traits</h2>\n          <div className=\"advise\">\n            <span>The traits define what the device can do.</span>\n          </div>\n          {traits}\n          <hr/>\n          <div className=\"table_cel\">\n            <button type=\"button\" style={ this.state.create ? deleteButtonDisabled : deleteButton } onClick={ this.delete } disabled={ this.state.create ? true : false}>Delete</button>\n            <button type=\"button\" onClick={ this.save }>Save</button>\n            <span>{this.state.save_status}</span>\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default Editor\n","import React from 'react';\nimport ReactJson from 'react-json-view'\nimport getCookieValue from '../../functions'\nimport { root } from '../../constants'\n\nclass Editor extends React.Component {\n  constructor(props) {\n    super(props);\n    const id = window.location.pathname.split('/')[3];\n    this.state = {\n      id: id,\n      device: {\n        attributes: {},\n        deviceInfo: {},\n        id: \"\",\n        name: {\n          defaultnames: [],\n          nicknames: [],\n          name: \"\"\n        },\n        traits: [],\n        type: \"\"\n      },\n      status: {\n        online: true\n      }\n    }\n  }\n\n  componentDidMount() {\n    var dev = new XMLHttpRequest();\n    dev.onload = function (e) {\n      if (dev.readyState === 4) {\n        if (dev.status === 200) {\n          var data = JSON.parse(dev.responseText);\n          this.setState({\n             device: data\n           });\n        } else {\n          console.error(dev.statusText);\n        }\n      }\n    }.bind(this);\n    dev.open(\"GET\", root + \"api/devices/get/\" + this.state.id + \"/\");\n    dev.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    dev.send();\n\n    var sta = new XMLHttpRequest();\n    sta.onload = function (e) {\n      if (sta.readyState === 4) {\n        if (sta.status === 200) {\n          var data = JSON.parse(sta.responseText);\n          this.setState({\n             status: data\n           });\n        } else {\n          console.error(sta.statusText);\n        }\n      }\n    }.bind(this);\n    sta.open(\"GET\", root + \"api/status/get/\" + this.state.id + \"/\");\n    sta.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    sta.send();\n  }\n\n\n\n  render() {\n\n    const container = {\n      width: '80%',\n      marginLeft: '8%',\n      marginTop: '20px',\n      backgroundColor: 'white',\n      paddingTop: '10px',\n      paddingLeft: '20px',\n      paddingBottom: '20px',\n      paddingRight: '20px',\n      borderRadius: '20px'\n    }\n\n    const json_viewer = {\n      textAlign: 'left',\n    }\n\n    return (\n      <div>\n\n        <div style={ container }>\n          <h2>Device definition</h2>\n          <div className=\"advise\">\n            <span>General settings of the device.</span>\n            <hr/>\n          </div>\n          <div style={json_viewer}>\n            <ReactJson src={this.state.device} />\n          </div>\n        </div>\n\n        <div style={ container }>\n          <h2>Device status</h2>\n          <div className=\"advise\">\n            <span>Status of the device.</span>\n            <hr/>\n          </div>\n          <div style={json_viewer}>\n            <ReactJson src={this.state.status} />\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default Editor\n","import React from 'react';\nimport getCookieValue from '../../functions'\nimport { root } from '../../constants'\n\nimport './Tasks.css';\n\nclass Tasks extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      devices: [],\n      tasks: []\n    }\n    this.loadData = this.loadData.bind(this);\n    this.openManager = this.openManager.bind(this);\n    this.newTask = this.newTask.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  loadData(){\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      if (http.readyState === 4) {\n        if (http.status === 200) {\n          var data = JSON.parse(http.responseText);\n          console.log(data)\n          this.setState({\n             devices: data.devices,\n             tasks: data.tasks\n           });\n        } else {\n          console.error(http.statusText);\n        }\n      }\n    }.bind(this);\n    http.open(\"GET\", root + \"api/global/get/\");\n    http.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    http.send();\n  }\n\n  openManager(event){\n    window.location.href = '/tasks/manager/' +  event.target.id.split('_')[1]\n  }\n\n  newTask(){\n    window.location.href = '/tasks/manager/'\n  }\n\n  render() {\n\n    const devider = {\n      width: '80%'\n    }\n\n    const tasks = this.state.tasks.map((task, i) => {\n      return(\n        <div key={i}>\n          <div className=\"task_card\">\n            <h2 className=\"task_card_title\" id={ 'task_' + i } onClick={ this.openManager }>{ task.title }</h2>\n            <hr style={ devider }/>\n            <p>{ task.description }</p>\n          </div>\n        </div>\n      )\n    });\n\n    return (\n      <div>\n        <div className=\"task_page_title_container\">\n          <h2>Tasks</h2>\n        </div>\n\n        <div className=\"tasks_container\">\n          {tasks}\n        </div>\n\n        <div className=\"tasks_buttons_containter\">\n          <button type=\"button\" onClick={ this.newTask }>New</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Tasks\n","import React from 'react';\nimport getCookieValue from '../../functions'\nimport { root } from '../../constants'\n\nimport './Settings.css';\n\nclass Settings extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      settings: {\n        google: {},\n        ddns: {},\n        mqtt: {},\n        apikey: \"\"\n      },\n      save_status: \"\",\n      url: {\n        auth: \"\",\n        token: \"\",\n        fulfillment: \"\"\n      }\n    }\n    this.update = this.update.bind(this);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n    this.save = this.save.bind(this);\n  }\n\n  componentDidMount() {\n    if (!this.state.create){\n      var http = new XMLHttpRequest();\n      http.onload = function (e) {\n        if (http.readyState === 4) {\n          if (http.status === 200) {\n            var data = JSON.parse(http.responseText);\n            this.setState({\n               settings: data,\n               url: {\n                 auth: \"https://\" + data.ddns.hostname + \"/auth/\",\n                 token: \"https://\" + data.ddns.hostname + \"/token/\",\n                 fulfillment: \"https://\" + data.ddns.hostname + \"/smarthome/\"\n               }\n             });\n          } else {\n            console.error(http.statusText);\n          }\n        }\n      }.bind(this);\n      http.open(\"GET\", root + \"api/settings/get/\");\n      http.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n      http.send();\n    }\n  }\n\n  update(event){\n    // this.props.update('attributes/' + event.target.id,event.target.value);\n    const id = event.target.id.split(\"/\");\n    var settings = this.state.settings;\n    if (id.length === 1){\n      settings[id[0]] = event.target.value;\n    } else if (id.length === 2){\n      settings[id[0]][id[1]] = event.target.value;\n    }\n    this.setState({\n       settings: settings\n     });\n  }\n\n  updateCheckbox(event){\n    // this.props.update('attributes/' + event.target.id,event.target.value);\n    const id = event.target.id.split(\"/\");\n    var settings = this.state.settings;\n    if (id.length === 1){\n      settings[id[0]] = event.target.checked;\n    } else if (id.length === 2){\n      settings[id[0]][id[1]] = event.target.checked;\n    }\n    this.setState({\n       settings: settings\n     });\n  }\n\n  save(){\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      if (http.readyState === 4) {\n        if (http.status === 200) {\n          JSON.parse(http.responseText);\n          this.setState({\n             save_status: \"Saved correctly.\"\n           });\n        } else {\n          this.setState({\n             save_status: \"Error, the changes haven't been saved.\"\n           });\n        }\n        setTimeout(function(){\n          this.setState({\n             save_status: \"\"\n           });\n        }.bind(this), 5000)\n      }\n    }.bind(this);\n    http.open(\"POST\", root + \"api/settings/update/\");\n    http.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\n    http.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    http.send(JSON.stringify(this.state.settings));\n  }\n\n  render() {\n\n    const container = {\n      width: '80%',\n      marginLeft: '8%',\n      marginTop: '20px',\n      backgroundColor: 'white',\n      paddingTop: '10px',\n      paddingLeft: '20px',\n      paddingBottom: '20px',\n      paddingRight: '20px',\n      borderRadius: '20px'\n    }\n\n    const sub_container = {\n      width: '80%',\n      marginTop: '10px',\n      marginLeft: '10%',\n      fontSize: '18px',\n      textAlign: 'left'\n    }\n\n    const button = {\n      width: '200px'\n    }\n\n    return (\n      <div>\n\n\n        <div style={ container }>\n          <h2>Actions on Google</h2>\n          <hr/>\n          <div style={sub_container}>\n            <div className=\"settings_table_row\">\n              <div className=\"settings_table_cel\">\n                Client ID\n              </div>\n              <div className=\"settings_table_cel\">\n                <input type=\"text\" className=\"settings_input\" id=\"google/client_id\" defaultValue={this.state.settings.google.client_id} onChange={this.update}/>\n              </div>\n              <div className=\"settings_table_cel\">\n                <span className=\"advise\"></span>\n              </div>\n            </div>\n            <div className=\"settings_table_row\">\n              <div className=\"settings_table_cel\">\n                Client Secret\n              </div>\n              <div className=\"settings_table_cel\">\n                <input type=\"text\" className=\"settings_input\" id=\"google/client_secret\" defaultValue={this.state.settings.google.client_secret} onChange={this.update}/>\n              </div>\n              <div className=\"settings_table_cel\">\n                <span className=\"advise\"></span>\n              </div>\n            </div>\n            <div className=\"settings_table_row\">\n              <div className=\"settings_table_cel\">\n                Authorization URL\n              </div>\n              <div className=\"settings_table_cel\">\n                <input type=\"text\" className=\"settings_input\" defaultValue={this.state.url.auth} disabled/>\n              </div>\n              <div className=\"settings_table_cel\">\n                <span className=\"advise\"></span>\n              </div>\n            </div>\n            <div className=\"settings_table_row\">\n              <div className=\"settings_table_cel\">\n                Token URL\n              </div>\n              <div className=\"settings_table_cel\">\n                <input type=\"text\" className=\"settings_input\" defaultValue={this.state.url.token} disabled/>\n              </div>\n              <div className=\"settings_table_cel\">\n                <span className=\"advise\"></span>\n              </div>\n            </div>\n            <div className=\"settings_table_row\">\n              <div className=\"settings_table_cel\">\n                Fulfillment URL\n              </div>\n              <div className=\"settings_table_cel\">\n                <input type=\"text\" className=\"settings_input\" defaultValue={this.state.url.fulfillment} disabled/>\n              </div>\n              <div className=\"settings_table_cel\">\n                <span className=\"advise\"></span>\n              </div>\n            </div>\n          </div>\n          <div className=\"settings_buttons_container\">\n            <button type=\"button\" style={ button } onClick={ this.save }>Save</button>\n            <span>{this.state.save_status}</span>\n          </div>\n          <div className=\"advise\">\n            <span>Actions on Google settings. It is used to authenticate with Google. If you change it here, you must change it on the Actions Console &#62; Develop &#62; Account Linking.</span>\n          </div>\n        </div>\n\n\n        <div style={ container }>\n          <h2>MQTT</h2>\n          <hr/>\n          <div style={sub_container}>\n            <div className=\"settings_table_row\">\n              <div className=\"settings_table_cel\">\n                User\n              </div>\n              <div className=\"settings_table_cel\">\n                <input type=\"text\" className=\"settings_input\" id=\"mqtt/user\" defaultValue={this.state.settings.mqtt.user} onChange={this.update}/>\n              </div>\n            </div>\n            <div className=\"settings_table_row\">\n              <div className=\"settings_table_cel\">\n                Password\n              </div>\n              <div className=\"settings_table_cel\">\n                <input type=\"text\" className=\"settings_input\" id=\"mqtt/password\" defaultValue={this.state.settings.mqtt.password} onChange={this.update}/>\n              </div>\n            </div>\n          </div>\n          <div className=\"settings_buttons_container\">\n            <button type=\"button\" style={ button } onClick={ this.save }>Save</button>\n            <span>{this.state.save_status}</span>\n          </div>\n          <div className=\"advise\">\n            <span>Important. You must configure the username and password into Mosquitto manually from a terminal. This is only for telling Homeware its credentials. Clear both if you don't use credentials.</span>\n          </div>\n        </div>\n\n        <div style={ container }>\n          <h2>DDNS provider</h2>\n          <hr/>\n          <div style={sub_container}>\n            <div className=\"settings_table_row\">\n              <div className=\"settings_table_cel\">\n                Status:\n              </div>\n              <div className=\"settings_table_cel\">\n                { this.state.settings.ddns.status }\n              </div>\n            </div>\n            <div className=\"settings_table_row\">\n              <div className=\"settings_table_cel\">\n                IP and time:\n              </div>\n              <div className=\"settings_table_cel\">\n                { this.state.settings.ddns.ip + \" updated at \" + this.state.settings.ddns.last}\n              </div>\n            </div>\n          </div>\n          <hr/>\n          <div style={sub_container}>\n            <div className=\"settings_table_row\">\n              <div className=\"settings_table_cel\">\n                Enable\n              </div>\n              <div className=\"settings_table_cel\">\n                <input type=\"checkbox\" id=\"ddns/enabled\" defaultChecked={this.state.settings.ddns.enabled} onChange={this.updateCheckbox}/>\n              </div>\n            </div>\n            <div className=\"settings_table_row\">\n              <div className=\"settings_table_cel\">\n                Provider\n              </div>\n              <div className=\"settings_table_cel\">\n                <select name=\"type\" className=\"settings_select\" id=\"ddns/provider\" value={this.state.settings.ddns.provider} onChange={this.update}>\n                  <option value=\"noip\">Noip</option>\n                </select>\n              </div>\n            </div>\n            <div className=\"settings_table_row\">\n              <div className=\"settings_table_cel\">\n                Username\n              </div>\n              <div className=\"settings_table_cel\">\n                <input type=\"text\" className=\"settings_input\" id=\"ddns/username\" defaultValue={this.state.settings.ddns.username} onChange={this.update}/>\n              </div>\n            </div>\n            <div className=\"settings_table_row\">\n              <div className=\"settings_table_cel\">\n                Password\n              </div>\n              <div className=\"settings_table_cel\">\n                <input type=\"text\" className=\"settings_input\" id=\"ddns/password\" defaultValue={this.state.settings.ddns.password} onChange={this.update}/>\n              </div>\n            </div>\n            <div className=\"settings_table_row\">\n              <div className=\"settings_table_cel\">\n                Hostname\n              </div>\n              <div className=\"settings_table_cel\">\n                <input type=\"text\" className=\"settings_input\" id=\"ddns/hostname\" defaultValue={this.state.settings.ddns.hostname} onChange={this.update}/>\n              </div>\n            </div>\n          </div>\n          <div className=\"settings_buttons_container\">\n            <button type=\"button\" style={ button } onClick={ this.save }>Save</button>\n            <span>{this.state.save_status}</span>\n          </div>\n          <div className=\"advise\">\n            <span>Set up the access data to the DDNS provider account. Open an issue on Github if you want a DDNS provider that is not listed.</span>\n          </div>\n        </div>\n\n\n      </div>\n    );\n  }\n}\n\nexport default Settings\n","import React from 'react';\n\nfunction Component(props) {\n\n  const component = {\n    marginTop: '5px',\n    width: '100%',\n    display: 'grid',\n    gridTemplateColumns: '60% 20% 20%'\n  }\n\n  const textContainer = {\n    textAlign: 'left',\n    paddingTop: '4px'\n  }\n\n  const text = {\n    fontSize: '18px'\n  }\n\n  const running = {\n    fontSize: '12px',\n    fontWeight: 'bold',\n    color: 'white',\n    backgroundColor: 'green',\n    padding: '5px',\n    paddingLeft: '10px',\n    paddingRight: '10px',\n    borderRadius: '5px'\n  }\n\n  const stopped = {\n    fontSize: '12px',\n    fontWeight: 'bold',\n    color: 'white',\n    backgroundColor: 'red',\n    padding: '5px',\n    paddingLeft: '10px',\n    paddingRight: '10px',\n    borderRadius: '5px'\n  }\n\n  const power = {\n    fontSize: '18px',\n    cursor: 'pointer'\n  }\n\n  function go (){\n    window.location.href = props.href;\n  }\n\n  return (\n    <div style={ component }>\n      <div style={ textContainer }>\n        <span style={ text }>{ props.title }</span>\n      </div>\n      <div style={ textContainer }>\n        <span style={ props.status === 'Running' ? running : stopped }>{ props.status }</span>\n      </div>\n      <div style={ textContainer }>\n        <span style={ power } onClick={go}>{ props.enable ? 'Enabled' : 'Disabled' }</span>\n      </div>\n    </div>\n  );\n}\n\nexport default Component\n","import React from 'react';\nimport getCookieValue from '../../functions'\nimport { root } from '../../constants'\nimport Component from '../system/Component.js'\nconst ReactMarkdown = require('react-markdown')\n\n\nclass System extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      components: [],\n      git: {\n        version: '',\n        description: '',\n        code: 0\n      },\n      version: ''\n    }\n  }\n\n  componentDidMount() {\n    var comp = new XMLHttpRequest();\n    comp.onload = function (e) {\n      if (comp.readyState === 4) {\n        if (comp.status === 200) {\n          var response = JSON.parse(comp.responseText);\n          var components = []\n          var keys = Object.keys(response);\n          for (var i = 0; i < keys.length; i++) {\n            components.push(response[keys[i]])\n          }\n\n          this.setState({ components: components });\n        } else {\n          console.error(comp.statusText);\n        }\n      }\n    }.bind(this);\n    comp.open(\"GET\", root + \"api/system/status/\");\n    comp.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    comp.send();\n\n    var vers = new XMLHttpRequest();\n    vers.onload = function (e) {\n      if (vers.readyState === 4) {\n        if (vers.status === 200) {\n          var version = JSON.parse(vers.responseText);\n          this.setState({ version: version.version });\n        } else {\n          console.error(vers.statusText);\n        }\n      }\n    }.bind(this);\n    vers.open(\"GET\", root + \"api/global/version/\");\n    vers.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    vers.send();\n\n    var git = new XMLHttpRequest();\n    git.onload = function (e) {\n      if (git.readyState === 4) {\n        if (git.status === 200) {\n          const latestRelease = JSON.parse(git.responseText);\n          const description = latestRelease.body\n          this.setState({ git: {\n            version: latestRelease.tag_name,\n            description: description,\n            code: 200\n            }\n          });\n        } else if (git.status === 403) {\n          this.setState({ git: {\n            version: 'GitHub rate limit exceeded. You have reloaded so many times. It will reset after some time.',\n            code: 403\n            }\n          });\n        } else {\n          console.error(git.statusText);\n        }\n      }\n    }.bind(this);\n    git.open(\"GET\", 'https://api.github.com/repos/kikeelectronico/Homeware-LAN/releases/latest');\n    git.send();\n  }\n\n  upgrade(){\n    if(window.confirm('Are you sure?')){\n      window.location = root + \"files/buckup/homeware/\" + getCookieValue('token')\n      //\n      // var conn = new XMLHttpRequest();\n      // conn.onload = function (e) {\n      //   if (conn.readyState === 4) {\n      //     if (conn.status === 200) {\n      //       window.location.href = \"/upgrading\"\n      //     } else {\n      //       console.error(conn.statusText);\n      //     }\n      //   }\n      // }\n      // conn.open(\"GET\", root + \"api/system/upgrade/\");\n      // conn.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n      // conn.send();\n    }\n  }\n\n  restart(){\n    alert('WIP');\n  }\n\n  reboot(){\n    alert('WIP');\n  }\n\n  shutdown(){\n    alert('WIP');\n  }\n\n  render() {\n\n    const container = {\n      width: '80%',\n      marginLeft: '8%',\n      marginTop: '20px',\n      backgroundColor: 'white',\n      paddingTop: '10px',\n      paddingLeft: '20px',\n      paddingBottom: '20px',\n      paddingRight: '20px',\n      borderRadius: '20px'\n    }\n\n    const data_container = {\n      width: '80%',\n      marginLeft: '10%',\n      marginTop: '20px',\n      fontSize: '18px',\n      textAlign: 'left'\n    }\n\n    const version_container = {\n      width: '80%',\n      marginTop: '10px',\n      marginLeft: '10%',\n      fontSize: '18px',\n      textAlign: 'left'\n    }\n\n    const upgrade_button = {\n      width: '200px'\n    }\n\n    const git_description = {\n      marginTop: '20px',\n      marginLeft: '10%',\n      width: '80%',\n      paddingLeft: '20px',\n      paddingRight: '20px',\n      paddingBottom: '20px',\n      borderRadius: '20px',\n      border: '1px solid #aaa'\n    }\n\n    const power_button_container = {\n      width: '80%',\n      marginTop: '10px',\n      marginLeft: '10%',\n      display: 'grid',\n      gridTemplateColumns: 'repeat(auto-fill, 200px)',\n      gridGap: '20px'\n    }\n\n    const components = this.state.components.map((component) =>\n      <Component title={ component.title } status={ component.status } enable={ component.enable } key={ component.title }/>\n    );\n\n    var upgrader = ''\n    if(this.state.version !== this.state.git.version && this.state.git.code === 200){\n      upgrader = <div><b>New version:</b> { this.state.git.version} <div style={ git_description }> <ReactMarkdown source={this.state.git.description} /> <button type=\"button\" style={ upgrade_button } onClick={ this.upgrade }>Upgrade</button></div> </div>\n    } else if(this.state.git.code === 403){\n      upgrader = <div><b>New version:</b> { this.state.git.version}</div>\n    }\n\n\n    return (\n      <div>\n        <div style={ container }>\n          <h2>System status</h2>\n          <hr/>\n          <div style={data_container}>\n            { components }\n          </div>\n          <div className=\"advise\">\n            <span>These are the core elements of Homeware-LAN. All must be running.</span>\n          </div>\n        </div>\n\n        <div style={ container }>\n          <h2>Plugins</h2>\n          <hr/>\n          <div style={data_container}>\n            WIP\n          </div>\n          <div className=\"advise\">\n            <span></span>\n          </div>\n        </div>\n\n        <div style={ container }>\n          <h2>Version</h2>\n          <hr/>\n          <div style={version_container}>\n            <b>System version:</b> { this.state.version }\n            { upgrader }\n          </div>\n          <div className=\"advise\">\n            <span>Verify if there is any code update and upgrade the software if an update is available.</span>\n          </div>\n        </div>\n\n        <div style={ container }>\n          <h2>Power</h2>\n          <hr/>\n          <div style={ power_button_container }>\n            <button type=\"button\" onClick={ this.restart }>Restart Homeware-LAN</button>\n            <button type=\"button\" onClick={ this.reboot }>Reboot System</button>\n            <button type=\"button\" onClick={ this.shutdown }>Shutdown System</button>\n          </div>\n          <div className=\"advise\">\n            <span>Control the device and restart the Homeware-LAN installation.</span>\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default System\n","import React from 'react';\nimport getCookieValue from '../../functions'\nimport { root } from '../../constants'\n\nclass Backup extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    }\n  }\n\n  backup(){\n    window.location = root + \"files/buckup/homeware/\" + getCookieValue('token')\n  }\n\n  render() {\n\n    const container = {\n      width: '80%',\n      marginLeft: '8%',\n      marginTop: '20px',\n      backgroundColor: 'white',\n      paddingTop: '10px',\n      paddingLeft: '20px',\n      paddingBottom: '20px',\n      paddingRight: '20px',\n      borderRadius: '20px'\n    }\n\n    const sub_container = {\n      width: '80%',\n      marginTop: '10px',\n      marginLeft: '10%',\n      fontSize: '18px',\n      textAlign: 'left'\n    }\n\n    const form = {\n    }\n\n    const button = {\n      width: '200px'\n    }\n\n    const restore_url = root + \"files/restore/file/\" + getCookieValue('token') + \"/\";\n\n    return (\n      <div>\n\n\n        <div style={ container }>\n          <h2>Backup</h2>\n          <hr/>\n          <div style={sub_container}>\n              <button type=\"button\" style={ button } onClick={ this.backup }>Backup</button>\n          </div>\n          <div className=\"advise\">\n            <span>Download a backup file.</span>\n          </div>\n        </div>\n\n        <div style={ container }>\n          <h2>Restore</h2>\n          <hr/>\n          <div style={sub_container}>\n            <form style={ form } method=\"post\" encType=\"multipart/form-data\" action={ restore_url }>\n              <input type=\"file\" name=\"file\"/>\n              <button type=\"submit\" style={ button } onClick={ this.restart }>Restore</button>\n              </form>\n          </div>\n          <div className=\"advise\">\n            <span>Restore a backup file.</span>\n          </div>\n        </div>\n\n\n      </div>\n    );\n  }\n}\n\nexport default Backup\n","import React from 'react';\nimport getCookieValue from '../../functions'\nimport { root } from '../../constants'\n\nclass Access extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {\n        apikey: ''\n      }\n    }\n  }\n\n  componentDidMount() {\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      if (http.readyState === 4) {\n        if (http.status === 200) {\n          var data = JSON.parse(http.responseText);\n          this.setState({ data: data });\n        } else {\n          console.error(http.statusText);\n        }\n      }\n    }.bind(this);\n    http.open(\"GET\", root + \"api/access/get/\");\n    http.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    http.send();\n  }\n\n  generateAPIKey(){\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      if (http.readyState === 4) {\n        if (http.status === 200) {\n          // var data = JSON.parse(http.responseText);\n          window.location.href = \"/access\"\n        } else {\n          console.error(http.statusText);\n        }\n      }\n    };\n    http.open(\"GET\", root + \"api/settings/apikey/\");\n    http.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    http.send();\n  }\n\n  render() {\n\n    const container = {\n      width: '80%',\n      marginLeft: '8%',\n      backgroundColor: 'white',\n      paddingTop: '10px',\n      paddingLeft: '20px',\n      paddingBottom: '20px',\n      paddingRight: '20px',\n      borderRadius: '20px'\n    }\n\n    const form_container = {\n      width: '80%',\n      marginLeft: '10%',\n      marginTop: '20px',\n    }\n\n    const form_colum = {\n      width: '80%',\n      marginLeft: '10%',\n      marginTop: '20px'\n    }\n\n    const input = {\n      width: '100%'\n    }\n\n    return (\n      <div>\n        <div style={ container }>\n          <h2>API key</h2>\n          <hr/>\n          <div style={form_container}>\n            <div style={form_colum}>\n              <input type=\"text\" id=\"apikey\" style={input} value={ this.state.data.apikey } disabled/>\n            </div>\n            <div style={form_colum}>\n              <button type=\"button\" onClick={ this.generateAPIKey }>Generate</button>\n            </div>\n          </div>\n          <div className=\"advise\">\n            <span>The API Key gives you access to the Homeware's API. Please do not generate an API Key if you are not sure of what you are doing.</span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Access\n","import React from 'react';\nimport getCookieValue from '../../functions'\nimport { root } from '../../constants'\n\nclass Logs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      page: 1\n    }\n\n    this.previousPage = this.previousPage.bind(this);\n    this.nextPage = this.nextPage.bind(this);\n    this.downloadLog = this.downloadLog.bind(this);\n  }\n\n  componentDidMount() {\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      if (http.readyState === 4) {\n        if (http.status === 200) {\n          var data = JSON.parse(http.responseText);\n          this.setState({ data: data });\n        } else {\n          console.error(http.statusText);\n        }\n      }\n    }.bind(this);\n    http.open(\"GET\", root + \"api/log/get/\");\n    http.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    http.send();\n  }\n\n  previousPage() {\n    if (this.state.page > 1)\n      this.setState({ page: this.state.page - 1 });\n  }\n\n  nextPage() {\n    if (this.state.page < this.state.data.length/10-1)\n      this.setState({ page: this.state.page + 1 });\n  }\n\n  downloadLog() {\n    window.location = root + \"files/log/homeware/\" + getCookieValue('token')\n  }\n\n  render() {\n\n    const container = {\n      width: '80%',\n      marginLeft: '8%',\n      backgroundColor: 'white',\n      paddingTop: '10px',\n      paddingLeft: '20px',\n      paddingBottom: '20px',\n      paddingRight: '20px',\n      borderRadius: '20px'\n    }\n\n    const line = {\n      width: '80%',\n      marginLeft: '8%',\n      marginTop: '10px',\n      borderBottom: '1px solid #eee',\n      paddingLeft: '20px',\n      paddingBottom: '10px',\n      paddingRight: '20px',\n      textAlign: 'left'\n    }\n\n    const yellow = {\n      color: 'orange'\n    }\n\n    const red = {\n      color: 'red'\n    }\n\n    const button_container = {\n      width: '100%',\n      marginTop: '10px',\n      display: 'grid',\n      gridTemplateColumns: 'repeat(auto-fill, 200px)',\n      gridGap: '20px'\n    }\n\n    const homeware_lan_log_data = this.state.data.reverse().slice(0, this.state.page * 10);\n    const homeware_lan_log = homeware_lan_log_data.map((register, i) =>\n      <div style={ line } key={ i }>\n        { register.severity === 'Log' ? <b>{ register.severity }</b> : '' }\n        { register.severity === 'Warning' ? <b style={ yellow }>{ register.severity }</b> : '' }\n        { register.severity === 'Alert' ? <b style={ red }>{ register.severity }</b> : '' }\n         - { register.time }<br/>\n        { register.message }\n      </div>\n    );\n\n    return (\n      <div>\n        <div style={ container }>\n          <h2>Homeware-LAN log</h2>\n          <hr/>\n          <div>\n            { homeware_lan_log }\n          </div>\n          <div style={ button_container }>\n            <button type=\"button\" onClick={ this.nextPage }>Load more</button>\n            <button type=\"button\" onClick={ this.downloadLog }>Download</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Logs\n","import React from 'react';\nimport { root } from '../../constants'\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      enable_message: false,\n      message: ''\n    }\n    this.login = this.login.bind(this);\n    this.grantAccess = this.grantAccess.bind(this);\n  }\n\n  login() {\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      var response = JSON.parse(http.responseText);\n      console.log(response)\n      if(response['status'] === 'in'){\n        document.cookie = \"user=\" + response['user'] + \"; path=/\";\n        document.cookie = \"token=\" + response['token'] + \"; path=/\";\n        window.location = '/';\n      } else if (response['status'] === 'fail'){\n        this.setState({\n          enable_message: true,\n          message: 'Incorrect User or Password'\n        })\n        setTimeout(function(){\n          this.setState({\n             enable_message: false\n           });\n        }.bind(this), 5000)\n      }\n    }.bind(this);\n    http.open(\"GET\", root + \"api/user/login/\");\n    http.setRequestHeader('user', document.getElementById('user').value)\n    http.setRequestHeader('pass', document.getElementById('password').value)\n    http.send();\n  }\n\n  grantAccess() {\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      if (http.responseText !== 'fail')\n        window.location = http.responseText;\n      else {\n        this.setState({\n          enable_message: true,\n          message: 'Incorrect User or Password'\n        })\n        setTimeout(function(){\n          this.setState({\n             enable_message: false\n           });\n        }.bind(this), 5000)\n      }\n    }.bind(this);\n    http.open(\"GET\", root + \"api/user/googleSync/\");\n    http.setRequestHeader('user', document.getElementById('user').value)\n    http.setRequestHeader('pass', document.getElementById('password').value)\n    http.send();\n  }\n\n  render() {\n\n    const form_container = {\n      margin: '20%',\n    }\n\n    const element = {\n      margin: '10px'\n    }\n\n    var message = '';\n    if (this.state.enable_message){\n      message = <div className=\"alert_message\"> { this.state.message } </div>\n    }\n\n    return (\n      <div style={ form_container }>\n        { window.location.href.includes('google') ? <p>Google request access to Homeware-Lan</p> : '' }\n        <br/>\n        <span style={ element }>Username</span>\n        <input type=\"text\" name=\"user\" id=\"user\"/>\n        <span style={ element }>Password</span>\n        <input type=\"password\" name=\"password\" id=\"password\"/>\n        <button type=\"button\" style={ element } onClick={ !window.location.href.includes('google') ? this.login : this.grantAccess }>{ !window.location.href.includes('google') ? <span>Login</span> : <span>Grant access</span> }</button>\n        <br/>\n        { message }\n      </div>\n    );\n  }\n}\n\nexport default Login\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport getCookieValue from './functions'\nimport { root } from './constants'\n\nimport Welcome from './components/assistant/Welcome'\nimport User from './components/assistant/User'\nimport Domain from './components/assistant/Domain'\nimport Confignginx from './components/assistant/Confignginx'\nimport Change2domain from './components/assistant/Change2domain'\nimport Changed2domain from './components/assistant/Changed2domain'\nimport Ssl from './components/assistant/Ssl'\nimport Google from './components/assistant/Google'\nimport Initialize from './components/assistant/Initialize'\n\nimport Menu from './components/web/Menu'\nimport Devices from './components/pages/Devices'\nimport Editor from './components/pages/Editor'\nimport Info from './components/pages/Info'\nimport Tasks from './components/pages/Tasks'\nimport Settings from './components/pages/Settings'\nimport System from './components/pages/System'\nimport Backup from './components/pages/Backup'\nimport Access from './components/pages/Access'\nimport Logs from './components/pages/Logs'\nimport Login from './components/pages/Login'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      session: false,\n      version: ''\n    }\n    this.logout = this.logout.bind(this);\n  }\n\n  componentDidMount() {\n    if (!window.location.href.includes('assistant')) {\n      var http = new XMLHttpRequest();\n      http.onload = function (e) {\n        if (http.readyState === 4) {\n          if (http.status === 200) {\n            var data = JSON.parse(http.responseText);\n            if (data.status !== 'in' && !window.location.href.includes('login'))\n              window.location.href = '/login/'\n            else if (data.status === 'in')\n              this.setState({\n                session: true\n              });\n          } else {\n            console.error(http.statusText);\n          }\n        }\n      }.bind(this);\n      http.open(\"GET\", root + \"api/user/validateToken/\");\n      http.setRequestHeader('token', getCookieValue('token'))\n      http.setRequestHeader('user', getCookieValue('user'))\n      http.send();\n\n      var vers = new XMLHttpRequest();\n      vers.onload = function (e) {\n        if (vers.readyState === 4) {\n          if (vers.status === 200) {\n            var version = JSON.parse(vers.responseText);\n            this.setState({ version: version.version });\n          } else {\n            console.error(vers.statusText);\n          }\n        }\n      }.bind(this);\n      vers.open(\"GET\", root + \"api/global/version/\");\n      vers.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n      vers.send();\n    }\n  }\n\n  logout() {\n    document.cookie = \"user=; path=/\";\n    document.cookie = \"token=; path=/\";\n    this.setState({\n      session: false\n    });\n    window.location.href = '/'\n  }\n\n  render() {\n\n    if (!this.state.session && !window.location.href.includes('assistant') && !window.location.href.includes('login'))\n      return ''\n    else if (window.location.href.includes('login'))\n      return (\n        <div className=\"Clear_app\">\n          <Login/>\n        </div>\n      );\n    else if (window.location.href.includes('assistant'))\n      return (\n        <Router>\n          <div className=\"Clear_app\">\n            <Route exact={ true } path=\"/assistant/\" component={ Welcome }/>\n            <Route exact={ true } path=\"/assistant/welcome/\" component={ Welcome }/>\n            <Route exact={ true } path=\"/assistant/user\" component={ User }/>\n            <Route exact={ true } path=\"/assistant/domain\" component={ Domain }/>\n            <Route exact={ true } path=\"/assistant/confignginx\" component={ Confignginx }/>\n            <Route exact={ true } path=\"/assistant/change2domain\" component={ Change2domain }/>\n            <Route exact={ true } path=\"/assistant/changed2domain\" component={ Changed2domain }/>\n            <Route exact={ true } path=\"/assistant/ssl\" component={ Ssl }/>\n            <Route exact={ true } path=\"/assistant/google\" component={ Google }/>\n            <Route exact={ true } path=\"/assistant/initialize\" component={ Initialize }/>\n          </div>\n        </Router>\n      );\n    else\n      return (\n        <Router>\n          <div className=\"App\">\n            <div className=\"upper-menu\">\n              Homeware-LAN\n            </div>\n            <div className=\"main-app\">\n              <div className=\"menu\">\n                <div>\n                  <Menu image=\"/menu/devices_icon.png\" title=\"Devices\" href=\"/devices\"/>\n                  <Menu image=\"/menu/tasks_icon.png\" title=\"Tasks\" href=\"/tasks\"/>\n                  <Menu image=\"/menu/settings_icon.png\" title=\"Settings\" href=\"/settings\"/>\n                  <Menu image=\"/menu/status_icon.png\" title=\"System\" href=\"/system\"/>\n                  <Menu image=\"/menu/backup_icon.png\" title=\"Backup\" href=\"/backup\"/>\n                  <Menu image=\"/menu/access_icon.png\" title=\"Access\" href=\"/access\"/>\n                  <Menu image=\"/menu/logs_icon.png\" title=\"Logs\" href=\"/logs\"/>\n                  <hr/>\n                  <Menu image=\"/menu/repo_icon.png\" title=\"Repo\" href=\"/\"/>\n                  <Menu image=\"/menu/help_icon.png\" title=\"How to\" href=\"/\"/>\n                  <hr/>\n                  <Menu image=\"/menu/logout_icon.png\" title=\"Logout\" exec={ this.logout }/>\n                </div>\n                <div className=\"menu-data\">\n                  <p>Version: { this.state.version }</p>\n                </div>\n              </div>\n              <div className=\"page\">\n                <Route exact={ true } path=\"/\" component={ Devices }/>\n                <Route exact={ true } path=\"/devices\" component={ Devices }/>\n                <Route path=\"/devices/editor\" component={ Editor }/>\n                <Route path=\"/devices/info\" component={ Info }/>\n                <Route exact={ true } path=\"/tasks\" component={ Tasks }/>\n                <Route path=\"/settings\" component={ Settings }/>\n                <Route path=\"/system\" component={ System }/>\n                <Route path=\"/backup\" component={ Backup }/>\n                <Route path=\"/access\" component={ Access }/>\n                <Route path=\"/logs\" component={ Logs }/>\n              </div>\n            </div>\n          </div>\n        </Router>\n      );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}