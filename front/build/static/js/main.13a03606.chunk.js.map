{"version":3,"sources":["functions.js","constants.js","components/web/Menu.js","components/devices/traits/OnOff.js","components/devices/aux/Information.js","components/devices/aux/Connecting.js","components/devices/aux/Edit.js","components/devices/Light.js","components/devices/Outlet.js","components/devices/traits/TemperatureSetting.js","components/devices/AcUnit.js","components/devices/AirFreshener.js","components/devices/AirPurifier.js","components/devices/Bed.js","components/devices/Fan.js","components/devices/Fireplace.js","components/devices/Radiator.js","components/devices/Switch.js","components/devices/Thermostat.js","components/devices/AirCooler.js","components/devices/Bathtub.js","components/devices/Awing.js","components/devices/Blinds.js","components/devices/Closet.js","components/devices/Curtain.js","components/devices/Door.js","components/devices/Drawer.js","components/devices/Garage.js","components/devices/Pergola.js","components/devices/Shutter.js","components/devices/Valve.js","components/devices/Window.js","components/devices/Lock.js","components/devices/Gate.js","components/devices/Heater.js","components/devices/Hood.js","components/devices/SecuritySystem.js","components/devices/Blender.js","components/devices/Global.js","components/devices/Scene.js","components/pages/Devices.js","components/editor/Text.js","components/editor/traits/Scene.js","components/editor/traits/OnOff.js","components/editor/traits/Brightness.js","components/editor/traits/FanSpeed.js","components/editor/traits/ColorSetting.js","components/editor/traits/TemperatureSetting.js","components/editor/traits/Toggles.js","components/editor/traits/Modes.js","components/editor/traits/HumiditySetting.js","components/editor/traits/OpenClose.js","components/editor/traits/Rotation.js","components/editor/traits/Fill.js","components/editor/traits/ArmDisarm.js","components/editor/traits/StartStop.js","components/editor/traits/Timer.js","components/editor/traits/TemperatureControl.js","components/editor/traits/Cook.js","components/editor/traits/SensorState.js","components/pages/Editor.js","components/pages/Info.js","components/pages/Connecting.js","components/pages/Tasks.js","components/manager/Logic.js","components/manager/Trigger.js","components/manager/Triggers.js","components/manager/Time.js","components/manager/Device.js","components/manager/DeviceToDevice.js","components/manager/Assistant.js","components/manager/Target.js","components/manager/DeviceTarget.js","components/pages/Manager.js","components/pages/Settings.js","components/system/Component.js","components/pages/System.js","components/pages/Backup.js","components/pages/Access.js","components/pages/Logs.js","components/pages/Login.js","App.js","serviceWorker.js","index.js"],"names":["getCookieValue","cname","name","ca","decodeURIComponent","document","cookie","split","i","length","c","charAt","substring","indexOf","root","window","location","href","includes","deviceReference","devices","traits","attributes","commandOnlyOnOff","type","default","queryOnlyOnOff","params","commands","commandOnlyBrightness","colorModel","commandOnlyColorSetting","colorTemperatureRange","temperatureMinK","temperatureMaxK","content","availableThermostatModes","thermostatTemperatureRange","minThresholdCelsius","maxThresholdCelsius","thermostatTemperatureUnit","bufferRangeCelsius","commandOnlyTemperatureSetting","queryOnlyTemperatureSetting","discreteOnlyOpenClose","openDirection","commandOnlyOpenClose","queryOnlyOpenClose","commandOnlyRotation","supportsContinuousRotation","supportsDegrees","supportsPercent","rotationDegreesRange","rotationDegreesMin","rotationDegreesMax","command","description","sceneReversible","availableToggles","commandOnlyToggles","availableZones","pausable","maxTimerLimitSec","commandOnlyTimer","temperatureStepCelsius","temperatureUnitForUX","queryOnlyTemperatureControl","commandOnlyTemperatureControl","temperatureRange","availableFanSpeeds","speeds","ordered","reversible","commandOnlyFanSpeed","availableArmLevels","levels","availableFillLevels","humiditySetpointRange","minPercent","maxPercent","commandOnlyHumiditySetting","queryOnlyHumiditySetting","foodPresets","supportedCookingModes","availableModes","commandOnlyModes","sensorStatesSupported","thermostatTemperatureAmbient","commanded","thermostatTemperatureSetpoint","thermostatHumidityAmbient","thermostatMode","select","on","deactivate","brightness","online","color","spectrumRgb","thermostatTemperatureSetpointHigh","thermostatTemperatureSetpointLow","openPercent","rotationPercent","rotationDegrees","isLocked","isJammed","isDocked","isRunning","isPaused","activeZones","timerRemainingSec","timerPaused","temperatureSetpointCelsius","temperatureAmbientCelsius","currentFanSpeedSetting","isArmed","exitAllowance","isFilled","humiditySetpointPercent","humidityAmbientPercent","currentArmLevel","currentFillLevel","currentCookingMode","currentFoodPreset","currentFoodQuantity","currentFoodUnit","currentToggleSettings","currentModeSettings","Menu","props","text","fontSize","textDecoration","cursor","style","marginTop","display","gridTemplateColumns","src","image","alt","width","paddingTop","exec","onClick","title","to","OnOff","toggle","bind","http","XMLHttpRequest","onload","e","readyState","status","this","reload","console","error","statusText","open","setRequestHeader","send","JSON","stringify","id","float","marginLeft","React","Component","Information","Connecting","Edit","Light","device","Object","keys","toString","spectrumRGB","color_strip","height","borderRadius","backgroundColor","opacity","className","paddingLeft","Outlet","TemperatureSetting","up","down","update","temperature","marginRight","AcUnit","AirFreshener","AirPurifier","Bed","Fan","Fireplace","Radiator","Switch","Thermostat","AirCooler","Bathtub","Awing","Blinds","Closet","Curtain","Door","Drawer","Garage","Pergola","Shutter","Valve","Window","Lock","Gate","Heater","Hood","SecuritySystem","Blender","Global","Scene","Devices","state","data","loadData","setInterval","parse","responseText","setState","map","Text","event","target","value","defaultValue","onChange","updateCheckbox","checked","attribute","Brightness","FanSpeed","updateFanSpeeds","addFanSpeed","speed_id","speed_attribute","temp_availableFanSpeeds","speed_values","speed_name","push","names_box","speed","lang","speed_synonym","placeholder","supportsFanSpeedPercent","ColorSetting","min","max","updateMode","addMode","mode_id","temp_availableThermostatModes","splice","join","modes","mode","Toggles","updatetoggle","addToggle","toggle_id","toggle_attribute","temp_availableToggles","name_values","toggles","name_synonym","Modes","temp_availableModes","values","settings","setting_name","setting_values","setting_synonym","settings_box","setting","HumiditySetting","OpenClose","Rotation","Fill","updateLevels","addLevel","level_id","level_attribute","temp_availableFillLevels","level_values","level_name","level","level_synonym","ArmDisarm","updateSecurityLevel","addSecurityLevel","temp_availableArmLevels","StartStop","updateArray","Timer","TemperatureControl","Cook","updatePreset","addPreset","temp_supportedCookingModes","preset_id","temp_foodPresets","food_synonyms","synonym","food_preset_name","supported_units","presets","preset","SensorState","sensor","availableStates","rawValueUnit","numericCapabilities","Editor","pathname","create","deviceInfo","defaultNames","nicknames","device_tratis","not_recomended_traits","save_status","updateNames","updateId","updateType","updateTraits","notRecomendedTraits","save","delete","renderAttrinutes","recomended_tratis","concat","filter","trait","index","dumy_key","names","temp_device","key","temp_status","forEach","param","arr","log","setTimeout","payload","confirm","types","toLowerCase","disabled","hwVersion","swVersion","manufacturer","model","defaultnames","dev","sta","json_viewer","textAlign","topic","Tasks","tasks","task","Logic","addOr","addAnd","openTriggerAssistant","addTriggerLogic","num_operations","triggers","operation","operations","op","Trigger","renderTriggerText","week","days","Triggers","trigger","Assistant","addTriggerOperation","hour","getElementById","minute","closeTriggerAssistant","Device","updateDevice","updateParam","typeConversion","origen","int","list","bool","string","options","option","DeviceToDevice","device_a","device_b","updateDependencies","params_a","params_b","timeTigger","deiceTrigger","deviceToDeviceTrigger","Time","Target","marginBottom","addTarget","Manager","trigger_assistant_parent","deleteTrigger","deleteTarget","devices_names","tas","parent","ts","Date","now","targets","DeviceTarget","Settings","google","ddns","mqtt","apikey","url","auth","token","fulfillment","enableDdnsProvider","hostname","enabled","client_id","client_secret","user","password","ip","last","provider","username","fontWeight","padding","paddingRight","ReactMarkdown","require","System","components","show_system_message","system_message","loadComponents","upgrade","areYouAwake","restart","reboot","shutdown","COMPONENTS_CHECK_INTERVAL","comp","response","upg","awa","res","reb","shu","component","enable","version","git","code","paddingBottom","border","source","Backup","button","restore_url","backup","method","encType","action","Access","generateAPIKey","Logs","page","previousPage","nextPage","downloadLog","line","borderBottom","yellow","red","homeware_lan_log","reverse","slice","register","severity","time","message","Login","enable_message","login","grantAccess","element","margin","App","session","alert","checkoutVersion","checkoutLog","logout","menu","GIT_CHECKOUT_INTERVAL","LOG_CHECKOUT_INTERVAL","vers","latestRelease","tag_name","body","classList","Version","exact","path","Info","Boolean","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"2NAgBeA,MAhBf,SAAwBC,GAItB,IAHA,IAAIC,EAAOD,EAAQ,IAEfE,EADgBC,mBAAmBC,SAASC,QACzBC,MAAM,KACrBC,EAAI,EAAGA,EAAGL,EAAGM,OAAQD,IAAK,CAEhC,IADA,IAAIE,EAAIP,EAAGK,GACY,MAAhBE,EAAEC,OAAO,IACdD,EAAIA,EAAEE,UAAU,GAElB,GAAwB,IAApBF,EAAEG,QAAQX,GACZ,OAAOQ,EAAEE,UAAUV,EAAKO,OAAQC,EAAED,QAGtC,MAAO,ICbLK,EAAOC,OAAOC,SAASC,KAAKC,SAAS,aAAe,yBAA2B,IAE7EC,EAAkB,CACtBC,QAAS,CACP,+BAAgC,CAC9BlB,KAAM,UACNmB,OAAQ,CACN,iCACA,8BACA,6CAGJ,iCAAkC,CAChCnB,KAAM,aACNmB,OAAQ,CACN,iCACA,wCACA,8BACA,6CAGJ,oCAAqC,CACnCnB,KAAM,gBACNmB,OAAQ,CACN,8BACA,8BACA,kCAGJ,mCAAoC,CAClCnB,KAAM,eACNmB,OAAQ,CACN,8BACA,iCACA,8BACA,gCACA,sCAGJ,8BAA+B,CAC7BnB,KAAM,QACNmB,OAAQ,CACN,8BACA,oCAGJ,+BAAgC,CAC9BnB,KAAM,UACNmB,OAAQ,CACN,6BACA,gCAGJ,2BAA4B,CAC1BnB,KAAM,MACNmB,OAAQ,CACN,8BACA,kCAGJ,8BAA+B,CAC7BnB,KAAM,SACNmB,OAAQ,CACN,8BACA,oCAGJ,+BAAgC,CAC9BnB,KAAM,UACNmB,OAAQ,CACN,6BACA,8BACA,8BACA,kCACA,8BACA,kCAGJ,8BAA+B,CAC7BnB,KAAM,SACNmB,OAAQ,CACN,8BACA,2CACA,8BACA,kCAGJ,gDAAiD,CAC/CnB,KAAM,2BACNmB,OAAQ,CACN,sCAGJ,8BAA+B,CAC7BnB,KAAM,SACNmB,OAAQ,CACN,oCAGJ,mCAAoC,CAClCnB,KAAM,cACNmB,OAAQ,CACN,6BACA,8BACA,8BACA,2CACA,kCAGJ,+BAAgC,CAC9BnB,KAAM,UACNmB,OAAQ,CACN,6BACA,8BACA,8BACA,kCACA,8BACA,kCAGJ,+BAAgC,CAC9BnB,KAAM,UACNmB,OAAQ,CACN,oCAGJ,oCAAqC,CACnCnB,KAAM,eACNmB,OAAQ,CACN,iCACA,wCACA,8BACA,8BACA,iCACA,kCACA,kCAGJ,kCAAmC,CACjCnB,KAAM,aACNmB,OAAQ,CACN,6BACA,8BACA,8BACA,kCACA,8BACA,kCAGJ,kCAAmC,CACjCnB,KAAM,aACNmB,OAAQ,CACN,8BACA,kCACA,8BACA,gCACA,mCAGJ,4BAA6B,CAC3BnB,KAAM,OACNmB,OAAQ,CACN,oCAGJ,8BAA+B,CAC7BnB,KAAM,SACNmB,OAAQ,CACN,oCAGJ,6BAA8B,CAC5BnB,KAAM,QACNmB,OAAQ,CACN,8BACA,kCACA,8BACA,gCACA,mCAGJ,2BAA4B,CAC1BnB,KAAM,MACNmB,OAAQ,CACN,iCACA,8BACA,8BACA,kCAGJ,iCAAkC,CAChCnB,KAAM,YACNmB,OAAQ,CACN,8BACA,8BACA,kCAGJ,+BAAgC,CAC9BnB,KAAM,YACNmB,OAAQ,CACN,8BACA,8BACA,2CACA,kCAGJ,6BAA8B,CAC5BnB,KAAM,QACNmB,OAAQ,CACN,6BACA,8BACA,8BACA,kCACA,8BACA,kCAGJ,8BAA+B,CAC7BnB,KAAM,SACNmB,OAAQ,CACN,oCAGJ,4BAA6B,CAC3BnB,KAAM,OACNmB,OAAQ,CACN,oCAGJ,6BAA8B,CAC5BnB,KAAM,QACNmB,OAAQ,CACN,6BACA,8BACA,8BACA,kCACA,8BACA,kCAGJ,8BAA+B,CAC7BnB,KAAM,SACNmB,OAAQ,CACN,iCACA,8BACA,6CAGJ,4BAA6B,CAC3BnB,KAAM,OACNmB,OAAQ,CACN,iCACA,8BACA,8BACA,kCAGJ,kCAAmC,CACjCnB,KAAM,aACNmB,OAAQ,CACN,iCACA,wCACA,8BACA,8BACA,kCACA,kCAGJ,8BAA+B,CAC7BnB,KAAM,SACNmB,OAAQ,CACN,8BACA,8BACA,2CACA,kCAGJ,6BAA8B,CAC5BnB,KAAM,QACNmB,OAAQ,CACN,8BACA,mCACA,uCAGJ,4BAA6B,CAC3BnB,KAAM,OACNmB,OAAQ,CACN,qCAGJ,iCAAkC,CAChCnB,KAAM,YACNmB,OAAQ,CACN,6BACA,8BACA,8BACA,kCACA,8BACA,kCAGJ,2BAA4B,CAC1BnB,KAAM,MACNmB,OAAQ,CACN,6BACA,gCACA,8BACA,8BACA,iCACA,kCACA,kCAGJ,6BAA8B,CAC5BnB,KAAM,QACNmB,OAAQ,CACN,6BACA,gCACA,8BACA,8BACA,iCACA,kCACA,kCAGJ,mCAAoC,CAClCnB,KAAM,cACNmB,OAAQ,CACN,6BACA,8BACA,8BACA,kCACA,8BACA,kCAGJ,8BAA+B,CAC7BnB,KAAM,SACNmB,OAAQ,CACN,gCAGJ,4BAA6B,CAC3BnB,KAAM,OACNmB,OAAQ,CACN,6BACA,8BACA,8BACA,kCACA,2CACA,kCAGJ,+BAAgC,CAC9BnB,KAAM,UACNmB,OAAQ,CACN,kCACA,mCAGJ,sCAAuC,CACrCnB,KAAM,kBACNmB,OAAQ,CACN,6BACA,8BACA,8BACA,kCACA,8BACA,kCAGJ,gCAAiC,CAC/BnB,KAAM,WACNmB,OAAQ,CACN,8BACA,8BACA,kCAGJ,oCAAqC,CACnCnB,KAAM,eACNmB,OAAQ,CACN,8BACA,8BACA,2CACA,kCAGJ,8BAA+B,CAC7BnB,KAAM,SACNmB,OAAQ,CACN,8BACA,sCAGJ,sCAAuC,CACrCnB,KAAM,kBACNmB,OAAQ,CACN,kCACA,uCAGJ,8BAA+B,CAC7BnB,KAAM,SACNmB,OAAQ,CACN,8BACA,8BACA,kCACA,6CAGJ,+BAAgC,CAC9BnB,KAAM,UACNmB,OAAQ,CACN,8BACA,kCACA,mCAGJ,sCAAuC,CACrCnB,KAAM,iBACNmB,OAAQ,CACN,sCAGJ,gCAAiC,CAC/BnB,KAAM,YACNmB,OAAQ,CACN,6BACA,8BACA,8BACA,kCACA,8BACA,kCAGJ,iCAAkC,CAChCnB,KAAM,YACNmB,OAAQ,CACN,oCAGJ,kCAAmC,CACjCnB,KAAM,cACNmB,OAAQ,CACN,6BACA,8BACA,8BACA,kCACA,kCAGJ,8BAA+B,CAC7BnB,KAAM,SACNmB,OAAQ,CACN,gCAGJ,kCAAmC,CACjCnB,KAAM,aACNmB,OAAQ,CACN,6CAGJ,8BAA+B,CAC7BnB,KAAM,QACNmB,OAAQ,CACN,6BACA,8BACA,8BACA,kCACA,kCAGJ,6BAA8B,CAC5BnB,KAAM,QACNmB,OAAQ,CACN,oCAGJ,8BAA+B,CAC7BnB,KAAM,SACNmB,OAAQ,CACN,8BACA,8BACA,iCACA,kCACA,kCAGJ,mCAAoC,CAClCnB,KAAM,eACNmB,OAAQ,CACN,8BACA,8BACA,2CACA,kCAGJ,qCAAsC,CACpCnB,KAAM,iBACNmB,OAAQ,CACN,8BACA,8BACA,oCACA,kCAGJ,qCAAsC,CACpCnB,KAAM,iBACNmB,OAAQ,CACN,8BACA,8BACA,oCACA,kCAGJ,8BAA+B,CAC7BnB,KAAM,SACNmB,OAAQ,CACN,mCACA,oCAGJ,6BAA8B,CAC5BnB,KAAM,QACNmB,OAAQ,CACN,gCAGJ,mCAAoC,CAClCnB,KAAM,eACNmB,OAAQ,CACN,6BACA,8BACA,8BACA,kCACA,8BACA,mCAINA,OAAQ,CACN,8BAA+B,CAC7BnB,KAAM,gBACNoB,WAAY,CACVC,iBAAkB,CAChBC,KAAM,OACNC,SAAS,GAEXC,eAAgB,CACdF,KAAM,OACNC,SAAS,IAGbE,OAAQ,CAAC,MACTC,SAAU,IAEZ,mCAAoC,CAClC1B,KAAM,aACNoB,WAAY,CACVO,sBAAuB,CACrBL,KAAM,OACNC,SAAS,IAGbE,OAAQ,CAAC,cACTC,SAAU,IAEZ,qCAAsC,CACpC1B,KAAM,gBACNoB,WAAY,CACVQ,WAAY,CACVN,KAAM,SACNC,QAAS,OAEXM,wBAAyB,CACrBP,KAAM,OACNC,SAAS,GAEbO,sBAAuB,CACrBR,KAAM,SACNC,QAAS,CACPQ,gBAAiB,IACjBC,gBAAiB,MAEnBC,QAAS,CACPF,gBAAiB,CACfT,KAAM,MACNC,QAAS,KAEXS,gBAAiB,CACfV,KAAM,MACNC,QAAS,SAKjBE,OAAQ,CAAC,SACTC,SAAU,IAEZ,2CAA4C,CAC1C1B,KAAM,uBACNoB,WAAY,CACVc,yBAA0B,CACxBZ,KAAM,SACNC,QAAS,iBAEXY,2BAA4B,CAC1Bb,KAAM,SACNC,QAAS,CACPa,oBAAqB,GACrBC,oBAAqB,KAGzBC,0BAA2B,CACzBhB,KAAM,SACNC,QAAS,KAEXgB,mBAAoB,CAClBjB,KAAM,MACNC,QAAS,GAEXiB,8BAA+B,CAC7BlB,KAAM,OACNC,SAAS,GAEXkB,4BAA6B,CAC3BnB,KAAM,OACNC,SAAS,IAGbE,OAAQ,CACN,iBACA,gCACA,+BACA,oCACA,mCACA,6BAEFC,SAAU,IAEZ,kCAAmC,CACjC1B,KAAM,gBACNoB,WAAY,CACVsB,sBAAuB,CACrBpB,KAAM,OACNC,SAAS,GAEXoB,cAAe,CACbrB,KAAM,QACNC,QAAS,CAAC,KAAK,OAAO,OAAO,QAAQ,KAAK,QAE5CqB,qBAAsB,CACpBtB,KAAM,OACNC,SAAS,GAEXsB,mBAAoB,CAClBvB,KAAM,OACNC,SAAS,IAGbE,OAAQ,CAAC,eACTC,SAAU,IAEZ,iCAAkC,CAChC1B,KAAM,oCACNoB,WAAY,CACV0B,oBAAqB,CACnBxB,KAAM,OACNC,SAAS,GAEXwB,2BAA4B,CAC1BzB,KAAM,OACNC,SAAS,GAEXyB,gBAAiB,CACf1B,KAAM,OACNC,SAAS,GAEX0B,gBAAiB,CACf3B,KAAM,OACNC,SAAS,GAEX2B,qBAAsB,CACpB5B,KAAM,SACNC,QAAS,CACP4B,mBAAoB,EACpBC,mBAAoB,GAEtBnB,QAAS,CACPkB,mBAAoB,CAClB7B,KAAM,OAER8B,mBAAoB,CAClB9B,KAAM,UAKdG,OAAQ,CAAC,kBAAkB,mBAC3BC,SAAU,IAEZ,mCAAoC,CAClC1B,KAAM,iBACNoB,WAAY,GACZK,OAAQ,CAAC,WAAW,YACpBC,SAAU,CACR,CACE2B,QAAS,OACTC,YAAa,QAEf,CACED,QAAS,SACTC,YAAa,YAInB,8BAA+B,CAC7BtD,KAAM,QACNoB,WAAY,CACVmC,gBAAiB,CACfjC,KAAM,OACNC,SAAS,IAGbE,OAAQ,CAAC,cACTC,SAAU,IAEZ,6BAA8B,CAC5B1B,KAAM,OACNoB,WAAY,GACZK,OAAQ,CAAC,YACTC,SAAU,IAEZ,gCAAiC,CAC/B1B,KAAM,UACNoB,WAAY,CACVoC,iBAAkB,CAChBlC,KAAM,mBACNC,QAAS,IAEXkC,mBAAoB,CAClBnC,KAAM,OACNC,SAAS,IAGbE,OAAQ,CAAC,yBACTC,SAAU,IAEZ,kCAAmC,CACjC1B,KAAM,iBACNoB,WAAY,CACVsC,eAAgB,CACdpC,KAAM,QACNC,QAAS,IAEXoC,SAAU,CACRrC,KAAM,OACNC,SAAS,IAGbE,OAAQ,CAAC,YAAY,WAAW,eAChCC,SAAU,CACR,CACE2B,QAAS,QACTC,YAAa,qBAEf,CACED,QAAS,OACTC,YAAa,oBAEf,CACED,QAAS,QACTC,YAAa,iBAEf,CACED,QAAS,UACTC,YAAa,qBAInB,8BAA+B,CAC7BtD,KAAM,iCACNoB,WAAY,CACVwC,iBAAkB,CAChBtC,KAAM,MACNC,QAAS,KAEXsC,iBAAkB,CAChBvC,KAAM,OACNC,SAAS,IAGbE,OAAQ,CAAC,oBAAqB,eAC9BC,SAAU,IAEZ,2CAA4C,CAC1C1B,KAAM,sBACNoB,WAAY,CACV0C,uBAAwB,CACtBxC,KAAM,MACNC,QAAS,GAEXwC,qBAAsB,CACpBzC,KAAM,SACNC,QAAS,KAEXyC,4BAA6B,CAC3B1C,KAAM,OACNC,SAAS,GAEX0C,8BAA+B,CAC7B3C,KAAM,OACNC,SAAS,GAEX2C,iBAAkB,CAChB5C,KAAM,SACNC,QAAS,CACPa,oBAAqB,EACrBC,oBAAqB,KAEvBJ,QAAS,CACPG,oBAAqB,CACnBd,KAAM,OAERe,oBAAqB,CACnBf,KAAM,UAKdG,OAAQ,CAAC,6BAA6B,6BACtCC,SAAU,IAEZ,iCAAkC,CAChC1B,KAAM,YACNoB,WAAY,CACV+C,mBAAoB,CAClB7C,KAAM,mBACNC,QAAS,CACP6C,OAAQ,GACRC,SAAS,IAGbC,WAAY,CACVhD,KAAM,OACNC,SAAS,GAEXgD,oBAAqB,CACnBjD,KAAM,OACNC,SAAS,IAGbE,OAAQ,CAAC,0BACTC,SAAU,IAEZ,kCAAmC,CACjC1B,KAAM,gBACNoB,WAAY,CACVoD,mBAAoB,CAClBlD,KAAM,mBACNC,QAAS,CACPkD,OAAQ,GACRJ,SAAS,KAIf5C,OAAQ,CAAC,UAAW,kBAAkB,iBACtCC,SAAU,CACR,CACE2B,QAAS,SACTC,YAAa,oCAEf,CACED,QAAS,MACTC,YAAa,kBAEf,CACED,QAAS,SACTC,YAAa,uBAInB,6BAA8B,CAC5BtD,KAAM,OACNoB,WAAY,CACVsD,oBAAqB,CACnBpD,KAAM,mBACNC,QAAS,CACPkD,OAAQ,GACRJ,SAAS,KAIf5C,OAAQ,CAAC,WAAW,oBACpBC,SAAU,CACR,CACE2B,QAAS,OACTC,YAAa,QAEf,CACED,QAAS,QACTC,YAAa,WAInB,iCAAkC,CAChCtD,KAAM,WACNoB,WAAY,GACZK,OAAQ,GACRC,SAAU,IAEZ,qCAAsC,CACpC1B,KAAM,gBACNoB,WAAY,GACZK,OAAQ,CAAC,uBACTC,SAAU,IAEZ,wCAAyC,CACvC1B,KAAM,mBACNoB,WAAY,CACVuD,sBAAuB,CACrBrD,KAAM,SACNC,QAAS,CACPqD,WAAY,EACZC,WAAY,KAEd5C,QAAS,CACP2C,WAAY,CACVtD,KAAM,OAERuD,WAAY,CACVvD,KAAM,SAIZwD,2BAA4B,CAC1BxD,KAAM,OACNC,SAAS,GAEXwD,yBAA0B,CACxBzD,KAAM,OACNC,SAAS,IAGbE,OAAQ,CAAC,0BAA0B,0BACnCC,SAAU,IAEZ,6BAA8B,CAC5B1B,KAAM,UACNoB,WAAY,CACV4D,YAAa,CACX1D,KAAM,mBACNC,QAAS,IAEX0D,sBAAuB,CACrB3D,KAAM,gBACNC,QAAS,KAGbE,OAAQ,CAAC,qBAAqB,oBAAoB,sBAAsB,mBACxEC,SAAU,IAEZ,8BAA+B,CAC7B1B,KAAM,QACNoB,WAAY,CACV8D,eAAgB,CACd5D,KAAM,mBACNC,QAAS,IAEX4D,iBAAkB,CAChB7D,KAAM,OACNC,SAAS,IAGbE,OAAQ,CAAC,uBACTC,SAAU,CACR,CACE2B,QAAS,QACTC,YAAa,iBAEf,CACED,QAAS,OACTC,YAAa,kBAInB,gCAAiC,CAC/BtD,KAAM,UACNoB,WAAY,GAEZK,OAAQ,GACRC,SAAU,CACR,CACE2B,QAAS,UACTC,YAAa,oBAInB,oCAAqC,CACnCtD,KAAM,kCACNoB,WAAY,CACVgE,sBAAuB,CACrB9D,KAAM,SACNC,QAAS,CACP,CACEvB,KAAM,OAKdyB,OAAQ,CAAC,0BACTC,SAAU,KAGdD,OAAQ,CACN4D,6BAA8B,CAC5B/D,KAAM,MACNtB,KAAM,sBACNsF,WAAW,EACX/D,QAAS,IAEXgE,8BAA+B,CAC7BjE,KAAM,MACNtB,KAAM,wBACNsF,WAAW,EACX/D,QAAS,IAEXiE,0BAA2B,CACzBlE,KAAM,MACNtB,KAAM,mBACNsF,WAAW,EACX/D,QAAS,IAEXkE,eAAgB,CACdnE,KAAM,OACNoE,OAAQ,CAAC,OAAO,OAAO,MAAM,KAAK,WAAW,OAAO,WAAW,WAAW,MAAM,OAChF1F,KAAM,OACNsF,WAAW,EACX/D,QAAS,OAEXoE,GAAI,CACFrE,KAAM,OACNoE,OAAQ,CAAC,OAAO,SAChB1F,KAAM,QACNsF,WAAW,EACX/D,SAAS,GAEXqE,WAAY,CACVtE,KAAM,OACNoE,OAAQ,CAAC,OAAO,SAChB1F,KAAM,aACNsF,WAAW,EACX/D,SAAS,GAEXsE,WAAY,CACVvE,KAAM,MACNtB,KAAM,aACNsF,WAAW,EACX/D,QAAS,IAEXuE,OAAQ,CACNxE,KAAM,OACNoE,OAAQ,CAAC,OAAO,SAChB1F,KAAM,SACNsF,WAAW,EACX/D,SAAS,GAEXwE,MAAO,CACLzE,KAAM,QACNtB,KAAM,QACNsF,WAAW,EACX/D,QAAS,CACPyE,YAAa,WAGjBC,kCAAmC,CACjC3E,KAAM,MACNtB,KAAM,mCACNsF,WAAW,EACX/D,QAAS,IAEX2E,iCAAkC,CAChC5E,KAAM,MACNtB,KAAM,iCACNsF,WAAW,EACX/D,QAAS,IAEX4E,YAAa,CACX7E,KAAM,MACNtB,KAAM,kBACNsF,WAAW,EACX/D,QAAS,IAEX6E,gBAAiB,CACf9E,KAAM,MACNtB,KAAM,sBACNsF,WAAW,EACX/D,QAAS,IAEX8E,gBAAiB,CACf/E,KAAM,MACNtB,KAAM,iBACNsF,WAAW,EACX/D,QAAS,IAEX+E,SAAU,CACRhF,KAAM,OACNtB,KAAM,YACNsF,WAAW,EACX/D,SAAS,GAEXgF,SAAU,CACRjF,KAAM,OACNtB,KAAM,YACNsF,WAAW,EACX/D,SAAS,GAEXiF,SAAU,CACRlF,KAAM,OACNtB,KAAM,YACNsF,WAAW,EACX/D,SAAS,GAEXkF,UAAW,CACTnF,KAAM,OACNtB,KAAM,aACNsF,WAAW,EACX/D,SAAS,GAEXmF,SAAU,CACRpF,KAAM,OACNtB,KAAM,YACNsF,WAAW,EACX/D,SAAS,GAEXoF,YAAa,CACXrF,KAAM,SACNtB,KAAM,eACNsF,WAAW,EACX/D,QAAS,IAEXqF,kBAAmB,CACjBtF,KAAM,MACNtB,KAAM,2BACNsF,WAAW,EACX/D,QAAS,GAEXsF,YAAa,CACXvF,KAAM,OACNtB,KAAM,YACNsF,WAAW,EACX/D,SAAS,GAEXuF,2BAA4B,CAC1BxF,KAAM,MACNtB,KAAM,YACNsF,WAAW,EACX/D,QAAS,IAEXwF,0BAA2B,CACzBzF,KAAM,MACNtB,KAAM,UACNsF,WAAW,EACX/D,QAAS,IAEXyF,uBAAwB,CACtB1F,KAAM,SACNtB,KAAM,oBACNsF,WAAW,EACX/D,QAAS,IAEX0F,QAAS,CACP3F,KAAM,OACNtB,KAAM,WACNsF,WAAW,EACX/D,SAAS,GAEX2F,cAAe,CACb5F,KAAM,MACNtB,KAAM,gBACNsF,WAAW,EACX/D,QAAS,IAEX4F,SAAU,CACR7F,KAAM,OACNtB,KAAM,YACNsF,WAAW,EACX/D,SAAS,GAEX6F,wBAAyB,CACvB9F,KAAM,MACNtB,KAAM,qBACNsF,WAAW,EACX/D,QAAS,IAEX8F,uBAAwB,CACtB/F,KAAM,MACNtB,KAAM,mBACNsF,WAAW,EACX/D,QAAS,IAEX+F,gBAAiB,CACfhG,KAAM,SACNtB,KAAM,yBACNsF,WAAW,EACX/D,QAAS,IAEXgG,iBAAkB,CAChBjG,KAAM,SACNtB,KAAM,sBACNsF,WAAW,EACX/D,QAAS,IAEXiG,mBAAoB,CAClBlG,KAAM,SACNtB,KAAM,uBACNsF,WAAW,EACX/D,QAAS,IAEXkG,kBAAmB,CACjBnG,KAAM,SACNtB,KAAM,sBACNsF,WAAW,EACX/D,QAAS,IAEXmG,oBAAqB,CACnBpG,KAAM,MACNtB,KAAM,wBACNsF,WAAW,EACX/D,QAAS,IAEXoG,gBAAiB,CACfrG,KAAM,SACNtB,KAAM,oBACNsF,WAAW,EACX/D,QAAS,IAEXqG,sBAAuB,CACrBtG,KAAM,SACNtB,KAAM,iBACNsF,WAAW,EACX/D,QAAS,IAEXsG,oBAAqB,CACnBvG,KAAM,SACNtB,KAAM,eACNsF,WAAW,EACX/D,QAAS,MCrrCAuG,MA3Cf,SAAcC,GAEZ,IAcMC,EAAO,CACXC,SAAU,OACVC,eAAgB,OAChBC,OAAQ,UACRpC,MAAO,SAGT,OACE,sBAAKqC,MAtBM,CACXC,UAAW,MACXC,QAAS,OACTC,oBAAqB,aAmBrB,UACE,8BACE,qBAAKC,IAAMT,EAAMU,MAAQC,IAAMX,EAAMU,MAAQL,MAlBrC,CACZO,MAAO,YAmBL,qBAAKP,MAhBa,CACpBQ,WAAY,OAeV,SAEIb,EAAMc,KAEN,sBAAMT,MAAQJ,EAAOc,QAASf,EAAMc,KAApC,SAA4Cd,EAAMgB,QAElD,cAAC,IAAD,CAAMC,GAAIjB,EAAMhH,KAAMqH,MAAQJ,EAA9B,SACE,qCAAUD,EAAMgB,iBCYbE,E,kDA7Cb,WAAYlB,GAAQ,IAAD,8BACjB,cAAMA,IACDmB,OAAS,EAAKA,OAAOC,KAAZ,gBAFG,E,qDAMjB,IAAIC,EAAO,IAAIC,eACfD,EAAKE,OAAS,SAAUC,GACE,IAApBH,EAAKI,aACa,MAAhBJ,EAAKK,OACPC,KAAK3B,MAAM4B,SAEXC,QAAQC,MAAMT,EAAKU,cAGvBX,KAAKO,MACPN,EAAKW,KAAK,OAAQnJ,EAAO,sBACzBwI,EAAKY,iBAAiB,eAAgB,kCACtCZ,EAAKY,iBAAiB,gBAAiB,UAAYlK,EAAe,UAClEsJ,EAAKa,KAAKC,KAAKC,UAAU,CACvB,GAAMT,KAAK3B,MAAMqC,GACjB,MAAS,KACT,OAAUV,KAAK3B,MAAMpC,Q,+BAevB,OACE,qBAAKyC,MAVW,CAChBiC,MAAO,OACPC,WAAY,OAQZ,SACE,qBAAK9B,IAAMkB,KAAK3B,MAAMpC,GAAK,6BAA+B,8BAA+BmD,QAAUY,KAAKR,OAASR,IAAMgB,KAAK3B,MAAMU,MAAQL,MANhI,CACZO,MAAO,gB,GAnCO4B,IAAMC,WCqBXC,E,uKAVX,OACE,qBAAKrC,MAVW,CAChBiC,MAAO,OACPC,WAAY,OAQZ,SACE,cAAC,IAAD,CAAMtB,GAAI,iBAAmBU,KAAK3B,MAAMqC,GAAK,IAA7C,SACE,qBAAK5B,IAAI,2BAA2BE,IAAMgB,KAAK3B,MAAMU,MAAQL,MAPrD,CACZO,MAAO,kB,GATa4B,IAAMC,WCsBjBE,E,uKAVX,OACE,qBAAKtC,MAVW,CAChBiC,MAAO,OACPC,WAAY,OAQZ,SACE,cAAC,IAAD,CAAMtB,GAAI,uBAAyBU,KAAK3B,MAAMqC,GAAK,IAAnD,SACE,qBAAK5B,IAAI,0BAA0BE,IAAMgB,KAAK3B,MAAMU,MAAQL,MAPpD,CACZO,MAAO,kB,GATY4B,IAAMC,WCsBhBG,E,uKAVX,OACE,qBAAKvC,MAVW,CAChBiC,MAAO,OACPC,WAAY,OAQZ,SACE,cAAC,IAAD,CAAMtB,GAAI,mBAAqBU,KAAK3B,MAAMqC,GAAK,IAA/C,SACE,qBAAK5B,IAAI,oBAAoBE,IAAMgB,KAAK3B,MAAMU,MAAQL,MAP9C,CACZO,MAAO,kB,GATM4B,IAAMC,WC6CVI,E,uKAtCX,IAII7E,EAAQ,SACR2D,KAAK3B,MAAM8C,OAAO1J,OAAOH,SAAiD8J,OAAOC,KAAKrB,KAAK3B,MAAM0B,QAAQzI,SAAS,YAElH+E,EADE+E,OAAOC,KAAKrB,KAAK3B,MAAM0B,OAAO1D,OAAO/E,SAAS,eACxC,IAAM0I,KAAK3B,MAAM0B,OAAO1D,MAAMC,YAAYgF,SAAS,IAEnD,IAAMtB,KAAK3B,MAAM0B,OAAO1D,MAAMkF,YAAYD,SAAS,KAG/D,IAAME,EAAc,CAClBvC,MAAO,OACPwC,OAAQ,OACRC,aAAc,oBACdC,gBAAiBtF,EACjBuF,QAAS5B,KAAK3B,MAAM0B,OAAO9D,GAAK,IAAM,OAGxC,OACE,8BACE,sBAAK4F,UAAU,cAAf,UACE,qBAAKnD,MAAQ8C,IACb,oBAAIK,UAAU,oBAAd,SAAoC7B,KAAK3B,MAAM8C,OAAO7K,KAAKA,OAC3D,oBAAIuL,UAAU,wBACd,sBAAKnD,MA1Bc,CACvBoD,YAAa,QAyBT,UACE,cAAC,EAAD,CAAOpB,GAAKV,KAAK3B,MAAM8C,OAAOT,GAAKzE,GAAK+D,KAAK3B,MAAM0B,OAAO9D,GAAKgE,OAASD,KAAK3B,MAAM4B,SACnF,cAAC,EAAD,CAAaS,GAAKV,KAAK3B,MAAM8C,OAAOT,KACpC,cAAC,EAAD,CAAYA,GAAKV,KAAK3B,MAAM8C,OAAOT,KACnC,cAAC,EAAD,CAAMA,GAAKV,KAAK3B,MAAM8C,OAAOT,iB,GAlCrBG,IAAMC,WCkCXiB,E,uKA9BX,IAIMP,EAAc,CAClBvC,MAAO,OACPwC,OAAQ,OACRC,aAAc,oBACdC,gBAAiB,OACjBC,QAAS5B,KAAK3B,MAAM0B,OAAO9D,GAAK,IAAM,OAGxC,OACE,8BACE,sBAAK4F,UAAU,cAAf,UACE,qBAAKnD,MAAQ8C,IACb,oBAAIK,UAAU,oBAAd,SAAoC7B,KAAK3B,MAAM8C,OAAO7K,KAAKA,OAC3D,oBAAIuL,UAAU,wBACd,sBAAKnD,MAlBc,CACvBoD,YAAa,QAiBT,UACE,cAAC,EAAD,CAAOpB,GAAKV,KAAK3B,MAAM8C,OAAOT,GAAKzE,GAAK+D,KAAK3B,MAAM0B,OAAO9D,GAAKgE,OAASD,KAAK3B,MAAM4B,SACnF,cAAC,EAAD,CAAaS,GAAKV,KAAK3B,MAAM8C,OAAOT,KACpC,cAAC,EAAD,CAAYA,GAAKV,KAAK3B,MAAM8C,OAAOT,KACnC,cAAC,EAAD,CAAMA,GAAKV,KAAK3B,MAAM8C,OAAOT,iB,GA1BpBG,IAAMC,WCiEZkB,E,kDAlEb,WAAY3D,GAAQ,IAAD,8BACjB,cAAMA,IACD4D,GAAK,EAAKA,GAAGxC,KAAR,gBACV,EAAKyC,KAAO,EAAKA,KAAKzC,KAAV,gBACZ,EAAK0C,OAAS,EAAKA,OAAO1C,KAAZ,gBAJG,E,iDAQjB,IAAI2C,EAAcpC,KAAK3B,MAAM0B,OAAOlE,8BAAgC,EACpEmE,KAAKmC,OAAOC,K,6BAIZ,IAAIA,EAAcpC,KAAK3B,MAAM0B,OAAOlE,8BAAgC,EACpEmE,KAAKmC,OAAOC,K,6BAGPA,GACL,IAAI1C,EAAO,IAAIC,eACfD,EAAKE,OAAS,SAAUC,GACE,IAApBH,EAAKI,aACa,MAAhBJ,EAAKK,OACPC,KAAK3B,MAAM4B,SAEXC,QAAQC,MAAMT,EAAKU,cAGvBX,KAAKO,MACPN,EAAKW,KAAK,OAAQnJ,EAAO,sBACzBwI,EAAKY,iBAAiB,eAAgB,kCACtCZ,EAAKY,iBAAiB,gBAAiB,UAAYlK,EAAe,UAClEsJ,EAAKa,KAAKC,KAAKC,UAAU,CACvB,GAAMT,KAAK3B,MAAMqC,GACjB,MAAS,gCACT,MAAS0B,O,+BAMX,IAKMrD,EAAQ,CACZE,MAAO,QAUT,OACE,sBAAKP,MAjBW,CAChBiC,MAAO,OACPC,WAAY,OAeZ,UACE,qBAAK9B,IAAI,0BAA0BM,QAAUY,KAAKkC,KAAOlD,IAAI,WAAWN,MAAQK,IAChF,sBAAML,MAVU,CAClBH,SAAU,OACVqC,WAAY,MACZyB,YAAa,MACbhG,MAAO,QAML,SAA2B2D,KAAK3B,MAAM0B,OAAOlE,gCAC7C,qBAAKiD,IAAI,wBAAwBM,QAAUY,KAAKiC,GAAKjD,IAAI,aAAaN,MAAQK,W,GA7DrD8B,IAAMC,WC6DxBwB,E,uKAtDX,IAIIjG,EAAQ,SAC6B,QAArC2D,KAAK3B,MAAM0B,OAAOhE,eACpBM,EAAQ,OACoC,SAArC2D,KAAK3B,MAAM0B,OAAOhE,eACzBM,EAAQ,MACoC,SAArC2D,KAAK3B,MAAM0B,OAAOhE,eACzBM,EAAQ,YACoC,OAArC2D,KAAK3B,MAAM0B,OAAOhE,eACzBM,EAAQ,SACoC,aAArC2D,KAAK3B,MAAM0B,OAAOhE,eACzBM,EAAQ,UACoC,SAArC2D,KAAK3B,MAAM0B,OAAOhE,eACzBM,EAAQ,UACoC,aAArC2D,KAAK3B,MAAM0B,OAAOhE,eACzBM,EAAQ,OACoC,aAArC2D,KAAK3B,MAAM0B,OAAOhE,eACzBM,EAAQ,UACoC,QAArC2D,KAAK3B,MAAM0B,OAAOhE,eACzBM,EAAQ,QACoC,QAArC2D,KAAK3B,MAAM0B,OAAOhE,iBACzBM,EAAQ,WAGV,IAAMmF,EAAc,CAClBvC,MAAO,OACPwC,OAAQ,OACRC,aAAc,oBACdC,gBAAiBtF,EACjBuF,QAAS5B,KAAK3B,MAAM0B,OAAO9D,GAAK,IAAM,OAGxC,OACE,8BACE,sBAAK4F,UAAU,cAAf,UACE,qBAAKnD,MAAQ8C,IACb,oBAAIK,UAAU,oBAAd,SAAoC7B,KAAK3B,MAAM8C,OAAO7K,KAAKA,OAC3D,oBAAIuL,UAAU,wBACd,sBAAKnD,MAzCc,CACvBoD,YAAa,QAwCT,UACE,cAAC,EAAD,CAAoBpB,GAAKV,KAAK3B,MAAM8C,OAAOT,GAAKX,OAAQC,KAAK3B,MAAM0B,OAAQ9D,GAAK+D,KAAK3B,MAAM0B,OAASE,OAASD,KAAK3B,MAAM4B,SACxH,cAAC,EAAD,CAAOS,GAAKV,KAAK3B,MAAM8C,OAAOT,GAAKzE,GAAK+D,KAAK3B,MAAM0B,OAAO9D,GAAKgE,OAASD,KAAK3B,MAAM4B,SACnF,cAAC,EAAD,CAAaS,GAAKV,KAAK3B,MAAM8C,OAAOT,KACpC,cAAC,EAAD,CAAYA,GAAKV,KAAK3B,MAAM8C,OAAOT,KACnC,cAAC,EAAD,CAAMA,GAAKV,KAAK3B,MAAM8C,OAAOT,iB,GAlDpBG,IAAMC,WCiCZyB,E,uKA9BX,IAIMf,EAAc,CAClBvC,MAAO,OACPwC,OAAQ,OACRC,aAAc,oBACdC,gBAAiB,SACjBC,QAAS5B,KAAK3B,MAAM0B,OAAO9D,GAAK,IAAM,OAGxC,OACE,8BACE,sBAAK4F,UAAU,cAAf,UACE,qBAAKnD,MAAQ8C,IACb,oBAAIK,UAAU,oBAAd,SAAoC7B,KAAK3B,MAAM8C,OAAO7K,KAAKA,OAC3D,oBAAIuL,UAAU,wBACd,sBAAKnD,MAlBc,CACvBoD,YAAa,QAiBT,UACE,cAAC,EAAD,CAAOpB,GAAKV,KAAK3B,MAAM8C,OAAOT,GAAKzE,GAAK+D,KAAK3B,MAAM0B,OAAO9D,GAAKgE,OAASD,KAAK3B,MAAM4B,SACnF,cAAC,EAAD,CAAaS,GAAKV,KAAK3B,MAAM8C,OAAOT,KACpC,cAAC,EAAD,CAAYA,GAAKV,KAAK3B,MAAM8C,OAAOT,KACnC,cAAC,EAAD,CAAMA,GAAKV,KAAK3B,MAAM8C,OAAOT,iB,GA1BdG,IAAMC,WCkClB0B,E,uKA9BX,IAIMhB,EAAc,CAClBvC,MAAO,OACPwC,OAAQ,OACRC,aAAc,oBACdC,gBAAiB,SACjBC,QAAS5B,KAAK3B,MAAM0B,OAAO9D,GAAK,IAAM,OAGxC,OACE,8BACE,sBAAK4F,UAAU,cAAf,UACE,qBAAKnD,MAAQ8C,IACb,oBAAIK,UAAU,oBAAd,SAAoC7B,KAAK3B,MAAM8C,OAAO7K,KAAKA,OAC3D,oBAAIuL,UAAU,wBACd,sBAAKnD,MAlBc,CACvBoD,YAAa,QAiBT,UACE,cAAC,EAAD,CAAOpB,GAAKV,KAAK3B,MAAM8C,OAAOT,GAAKzE,GAAK+D,KAAK3B,MAAM0B,OAAO9D,GAAKgE,OAASD,KAAK3B,MAAM4B,SACnF,cAAC,EAAD,CAAaS,GAAKV,KAAK3B,MAAM8C,OAAOT,KACpC,cAAC,EAAD,CAAYA,GAAKV,KAAK3B,MAAM8C,OAAOT,KACnC,cAAC,EAAD,CAAMA,GAAKV,KAAK3B,MAAM8C,OAAOT,iB,GA1BfG,IAAMC,WC+BjB2B,E,uKAjBX,OACE,8BACE,sBAAKZ,UAAU,cAAf,UACE,qBAAKnD,MAVS,CAClBO,MAAO,OACPwC,OAAQ,OACRC,aAAc,oBACdC,gBAAiB,WAOb,oBAAIE,UAAU,oBAAd,SAAoC7B,KAAK3B,MAAM8C,OAAO7K,KAAKA,OAC3D,oBAAIuL,UAAU,wBACd,sBAAKnD,MAjBc,CACvBoD,YAAa,QAgBT,UACE,cAAC,EAAD,CAAapB,GAAKV,KAAK3B,MAAM8C,OAAOT,KACpC,cAAC,EAAD,CAAYA,GAAKV,KAAK3B,MAAM8C,OAAOT,KACnC,cAAC,EAAD,CAAMA,GAAKV,KAAK3B,MAAM8C,OAAOT,iB,GAxBvBG,IAAMC,WCmCT4B,E,uKA9BX,IAIMlB,EAAc,CAClBvC,MAAO,OACPwC,OAAQ,OACRC,aAAc,oBACdC,gBAAiB,SACjBC,QAAS5B,KAAK3B,MAAM0B,OAAO9D,GAAK,IAAM,OAGxC,OACE,8BACE,sBAAK4F,UAAU,cAAf,UACE,qBAAKnD,MAAQ8C,IACb,oBAAIK,UAAU,oBAAd,SAAoC7B,KAAK3B,MAAM8C,OAAO7K,KAAKA,OAC3D,oBAAIuL,UAAU,wBACd,sBAAKnD,MAlBc,CACvBoD,YAAa,QAiBT,UACE,cAAC,EAAD,CAAOpB,GAAKV,KAAK3B,MAAM8C,OAAOT,GAAKzE,GAAK+D,KAAK3B,MAAM0B,OAAO9D,GAAKgE,OAASD,KAAK3B,MAAM4B,SACnF,cAAC,EAAD,CAAaS,GAAKV,KAAK3B,MAAM8C,OAAOT,KACpC,cAAC,EAAD,CAAYA,GAAKV,KAAK3B,MAAM8C,OAAOT,KACnC,cAAC,EAAD,CAAMA,GAAKV,KAAK3B,MAAM8C,OAAOT,iB,GA1BvBG,IAAMC,WCkCT6B,E,uKA9BX,IAIMnB,EAAc,CAClBvC,MAAO,OACPwC,OAAQ,OACRC,aAAc,oBACdC,gBAAiB,SACjBC,QAAS5B,KAAK3B,MAAM0B,OAAO9D,GAAK,IAAM,OAGxC,OACE,8BACE,sBAAK4F,UAAU,cAAf,UACE,qBAAKnD,MAAQ8C,IACb,oBAAIK,UAAU,oBAAd,SAAoC7B,KAAK3B,MAAM8C,OAAO7K,KAAKA,OAC3D,oBAAIuL,UAAU,wBACd,sBAAKnD,MAlBc,CACvBoD,YAAa,QAiBT,UACE,cAAC,EAAD,CAAOpB,GAAKV,KAAK3B,MAAM8C,OAAOT,GAAKzE,GAAK+D,KAAK3B,MAAM0B,OAAO9D,GAAKgE,OAASD,KAAK3B,MAAM4B,SACnF,cAAC,EAAD,CAAaS,GAAKV,KAAK3B,MAAM8C,OAAOT,KACpC,cAAC,EAAD,CAAYA,GAAKV,KAAK3B,MAAM8C,OAAOT,KACnC,cAAC,EAAD,CAAMA,GAAKV,KAAK3B,MAAM8C,OAAOT,iB,GA1BjBG,IAAMC,WCkCf8B,E,uKA9BX,IAIMpB,EAAc,CAClBvC,MAAO,OACPwC,OAAQ,OACRC,aAAc,oBACdC,gBAAiB,SACjBC,QAAS5B,KAAK3B,MAAM0B,OAAO9D,GAAK,IAAM,OAGxC,OACE,8BACE,sBAAK4F,UAAU,cAAf,UACE,qBAAKnD,MAAQ8C,IACb,oBAAIK,UAAU,oBAAd,SAAoC7B,KAAK3B,MAAM8C,OAAO7K,KAAKA,OAC3D,oBAAIuL,UAAU,wBACd,sBAAKnD,MAlBc,CACvBoD,YAAa,QAiBT,UACE,cAAC,EAAD,CAAOpB,GAAKV,KAAK3B,MAAM8C,OAAOT,GAAKzE,GAAK+D,KAAK3B,MAAM0B,OAAO9D,GAAKgE,OAASD,KAAK3B,MAAM4B,SACnF,cAAC,EAAD,CAAaS,GAAKV,KAAK3B,MAAM8C,OAAOT,KACpC,cAAC,EAAD,CAAYA,GAAKV,KAAK3B,MAAM8C,OAAOT,KACnC,cAAC,EAAD,CAAMA,GAAKV,KAAK3B,MAAM8C,OAAOT,iB,GA1BlBG,IAAMC,WCkCd+B,E,uKA9BX,IAIMrB,EAAc,CAClBvC,MAAO,OACPwC,OAAQ,OACRC,aAAc,oBACdC,gBAAiB,SACjBC,QAAS5B,KAAK3B,MAAM0B,OAAO9D,GAAK,IAAM,OAGxC,OACE,8BACE,sBAAK4F,UAAU,cAAf,UACE,qBAAKnD,MAAQ8C,IACb,oBAAIK,UAAU,oBAAd,SAAoC7B,KAAK3B,MAAM8C,OAAO7K,KAAKA,OAC3D,oBAAIuL,UAAU,wBACd,sBAAKnD,MAlBc,CACvBoD,YAAa,QAiBT,UACE,cAAC,EAAD,CAAOpB,GAAKV,KAAK3B,MAAM8C,OAAOT,GAAKzE,GAAK+D,KAAK3B,MAAM0B,OAAO9D,GAAKgE,OAASD,KAAK3B,MAAM4B,SACnF,cAAC,EAAD,CAAaS,GAAKV,KAAK3B,MAAM8C,OAAOT,KACpC,cAAC,EAAD,CAAYA,GAAKV,KAAK3B,MAAM8C,OAAOT,KACnC,cAAC,EAAD,CAAMA,GAAKV,KAAK3B,MAAM8C,OAAOT,iB,GA1BpBG,IAAMC,WCwDZgC,E,uKApDX,IAIIzG,EAAQ,SAC6B,QAArC2D,KAAK3B,MAAM0B,OAAOhE,eACpBM,EAAQ,OACoC,SAArC2D,KAAK3B,MAAM0B,OAAOhE,eACzBM,EAAQ,MACoC,SAArC2D,KAAK3B,MAAM0B,OAAOhE,eACzBM,EAAQ,YACoC,OAArC2D,KAAK3B,MAAM0B,OAAOhE,eACzBM,EAAQ,SACoC,aAArC2D,KAAK3B,MAAM0B,OAAOhE,eACzBM,EAAQ,UACoC,SAArC2D,KAAK3B,MAAM0B,OAAOhE,eACzBM,EAAQ,UACoC,aAArC2D,KAAK3B,MAAM0B,OAAOhE,eACzBM,EAAQ,OACoC,aAArC2D,KAAK3B,MAAM0B,OAAOhE,eACzBM,EAAQ,UACoC,QAArC2D,KAAK3B,MAAM0B,OAAOhE,eACzBM,EAAQ,QACoC,QAArC2D,KAAK3B,MAAM0B,OAAOhE,iBACzBM,EAAQ,WAGV,IAAMmF,EAAc,CAClBvC,MAAO,OACPwC,OAAQ,OACRC,aAAc,oBACdC,gBAAiBtF,GAGnB,OACE,8BACE,sBAAKwF,UAAU,cAAf,UACE,qBAAKnD,MAAQ8C,IACb,oBAAIK,UAAU,oBAAd,SAAoC7B,KAAK3B,MAAM8C,OAAO7K,KAAKA,OAC3D,oBAAIuL,UAAU,wBACd,sBAAKnD,MAxCc,CACvBoD,YAAa,QAuCT,UACE,cAAC,EAAD,CAAoBpB,GAAKV,KAAK3B,MAAM8C,OAAOT,GAAKX,OAAQC,KAAK3B,MAAM0B,OAAQ9D,GAAK+D,KAAK3B,MAAM0B,OAASE,OAASD,KAAK3B,MAAM4B,SACxH,cAAC,EAAD,CAAaS,GAAKV,KAAK3B,MAAM8C,OAAOT,KACpC,cAAC,EAAD,CAAYA,GAAKV,KAAK3B,MAAM8C,OAAOT,KACnC,cAAC,EAAD,CAAMA,GAAKV,KAAK3B,MAAM8C,OAAOT,iB,GAhDhBG,IAAMC,WCuChBiC,E,uKAnCX,IAII1G,EAAQ,SACR2D,KAAK3B,MAAM8C,OAAO1J,OAAOH,SAAS,wCACpC+E,EAAQ,IAAM2D,KAAK3B,MAAM0B,OAAO1D,MAAMC,YAAYgF,SAAS,KAG7D,IAAME,EAAc,CAClBvC,MAAO,OACPwC,OAAQ,OACRC,aAAc,oBACdC,gBAAiBtF,EACjBuF,QAAS5B,KAAK3B,MAAM0B,OAAO9D,GAAK,IAAM,OAGxC,OACE,8BACE,sBAAK4F,UAAU,cAAf,UACE,qBAAKnD,MAAQ8C,IACb,oBAAIK,UAAU,oBAAd,SAAoC7B,KAAK3B,MAAM8C,OAAO7K,KAAKA,OAC3D,oBAAIuL,UAAU,wBACd,sBAAKnD,MAvBc,CACvBoD,YAAa,QAsBT,UACE,cAAC,EAAD,CAAOpB,GAAKV,KAAK3B,MAAM8C,OAAOT,GAAKzE,GAAK+D,KAAK3B,MAAM0B,OAAO9D,GAAKgE,OAASD,KAAK3B,MAAM4B,SACnF,cAAC,EAAD,CAAaS,GAAKV,KAAK3B,MAAM8C,OAAOT,KACpC,cAAC,EAAD,CAAYA,GAAKV,KAAK3B,MAAM8C,OAAOT,KACnC,cAAC,EAAD,CAAMA,GAAKV,KAAK3B,MAAM8C,OAAOT,iB,GA/BjBG,IAAMC,WCuCfkC,E,uKAnCX,IAII3G,EAAQ,SACR2D,KAAK3B,MAAM8C,OAAO1J,OAAOH,SAAS,wCACpC+E,EAAQ,IAAM2D,KAAK3B,MAAM0B,OAAO1D,MAAMC,YAAYgF,SAAS,KAG7D,IAAME,EAAc,CAClBvC,MAAO,OACPwC,OAAQ,OACRC,aAAc,oBACdC,gBAAiBtF,EACjBuF,QAAS5B,KAAK3B,MAAM0B,OAAO9D,GAAK,IAAM,OAGxC,OACE,8BACE,sBAAK4F,UAAU,cAAf,UACE,qBAAKnD,MAAQ8C,IACb,oBAAIK,UAAU,oBAAd,SAAoC7B,KAAK3B,MAAM8C,OAAO7K,KAAKA,OAC3D,oBAAIuL,UAAU,wBACd,sBAAKnD,MAvBc,CACvBoD,YAAa,QAsBT,UACE,cAAC,EAAD,CAAOpB,GAAKV,KAAK3B,MAAM8C,OAAOT,GAAKzE,GAAK+D,KAAK3B,MAAM0B,OAAO9D,GAAKgE,OAASD,KAAK3B,MAAM4B,SACnF,cAAC,EAAD,CAAaS,GAAKV,KAAK3B,MAAM8C,OAAOT,KACpC,cAAC,EAAD,CAAYA,GAAKV,KAAK3B,MAAM8C,OAAOT,KACnC,cAAC,EAAD,CAAMA,GAAKV,KAAK3B,MAAM8C,OAAOT,iB,GA/BnBG,IAAMC,WC+BbmC,E,uKAjBX,OACE,8BACE,sBAAKpB,UAAU,cAAf,UACE,qBAAKnD,MAVS,CAClBO,MAAO,OACPwC,OAAQ,OACRC,aAAc,oBACdC,gBAAiB,WAOb,oBAAIE,UAAU,oBAAd,SAAoC7B,KAAK3B,MAAM8C,OAAO7K,KAAKA,OAC3D,oBAAIuL,UAAU,wBACd,sBAAKnD,MAjBc,CACvBoD,YAAa,QAgBT,UACE,cAAC,EAAD,CAAapB,GAAKV,KAAK3B,MAAM8C,OAAOT,KACpC,cAAC,EAAD,CAAYA,GAAKV,KAAK3B,MAAM8C,OAAOT,KACnC,cAAC,EAAD,CAAMA,GAAKV,KAAK3B,MAAM8C,OAAOT,iB,GAxBrBG,IAAMC,WCgCXoC,E,uKAjBX,OACE,8BACE,sBAAKrB,UAAU,cAAf,UACE,qBAAKnD,MAVS,CAClBO,MAAO,OACPwC,OAAQ,OACRC,aAAc,oBACdC,gBAAiB,WAOb,oBAAIE,UAAU,oBAAd,SAAoC7B,KAAK3B,MAAM8C,OAAO7K,KAAKA,OAC3D,oBAAIuL,UAAU,wBACd,sBAAKnD,MAjBc,CACvBoD,YAAa,QAgBT,UACE,cAAC,EAAD,CAAapB,GAAKV,KAAK3B,MAAM8C,OAAOT,KACpC,cAAC,EAAD,CAAYA,GAAKV,KAAK3B,MAAM8C,OAAOT,KACnC,cAAC,EAAD,CAAMA,GAAKV,KAAK3B,MAAM8C,OAAOT,iB,GAxBpBG,IAAMC,WCgCZqC,E,uKAjBX,OACE,8BACE,sBAAKtB,UAAU,cAAf,UACE,qBAAKnD,MAVS,CAClBO,MAAO,OACPwC,OAAQ,OACRC,aAAc,oBACdC,gBAAiB,WAOb,oBAAIE,UAAU,oBAAd,SAAoC7B,KAAK3B,MAAM8C,OAAO7K,KAAKA,OAC3D,oBAAIuL,UAAU,wBACd,sBAAKnD,MAjBc,CACvBoD,YAAa,QAgBT,UACE,cAAC,EAAD,CAAapB,GAAKV,KAAK3B,MAAM8C,OAAOT,KACpC,cAAC,EAAD,CAAYA,GAAKV,KAAK3B,MAAM8C,OAAOT,KACnC,cAAC,EAAD,CAAMA,GAAKV,KAAK3B,MAAM8C,OAAOT,iB,GAxBpBG,IAAMC,WCgCZsC,E,uKAjBX,OACE,8BACE,sBAAKvB,UAAU,cAAf,UACE,qBAAKnD,MAVS,CAClBO,MAAO,OACPwC,OAAQ,OACRC,aAAc,oBACdC,gBAAiB,WAOb,oBAAIE,UAAU,oBAAd,SAAoC7B,KAAK3B,MAAM8C,OAAO7K,KAAKA,OAC3D,oBAAIuL,UAAU,wBACd,sBAAKnD,MAjBc,CACvBoD,YAAa,QAgBT,UACE,cAAC,EAAD,CAAapB,GAAKV,KAAK3B,MAAM8C,OAAOT,KACpC,cAAC,EAAD,CAAYA,GAAKV,KAAK3B,MAAM8C,OAAOT,KACnC,cAAC,EAAD,CAAMA,GAAKV,KAAK3B,MAAM8C,OAAOT,iB,GAxBnBG,IAAMC,WCgCbuC,E,uKAjBX,OACE,8BACE,sBAAKxB,UAAU,cAAf,UACE,qBAAKnD,MAVS,CAClBO,MAAO,OACPwC,OAAQ,OACRC,aAAc,oBACdC,gBAAiB,WAOb,oBAAIE,UAAU,oBAAd,SAAoC7B,KAAK3B,MAAM8C,OAAO7K,KAAKA,OAC3D,oBAAIuL,UAAU,wBACd,sBAAKnD,MAjBc,CACvBoD,YAAa,QAgBT,UACE,cAAC,EAAD,CAAapB,GAAKV,KAAK3B,MAAM8C,OAAOT,KACpC,cAAC,EAAD,CAAYA,GAAKV,KAAK3B,MAAM8C,OAAOT,KACnC,cAAC,EAAD,CAAMA,GAAKV,KAAK3B,MAAM8C,OAAOT,iB,GAxBtBG,IAAMC,WCgCVwC,E,uKAjBX,OACE,8BACE,sBAAKzB,UAAU,cAAf,UACE,qBAAKnD,MAVS,CAClBO,MAAO,OACPwC,OAAQ,OACRC,aAAc,oBACdC,gBAAiB,WAOb,oBAAIE,UAAU,oBAAd,SAAoC7B,KAAK3B,MAAM8C,OAAO7K,KAAKA,OAC3D,oBAAIuL,UAAU,wBACd,sBAAKnD,MAjBc,CACvBoD,YAAa,QAgBT,UACE,cAAC,EAAD,CAAapB,GAAKV,KAAK3B,MAAM8C,OAAOT,KACpC,cAAC,EAAD,CAAYA,GAAKV,KAAK3B,MAAM8C,OAAOT,KACnC,cAAC,EAAD,CAAMA,GAAKV,KAAK3B,MAAM8C,OAAOT,iB,GAxBpBG,IAAMC,WCgCZyC,E,uKAjBX,OACE,8BACE,sBAAK1B,UAAU,cAAf,UACE,qBAAKnD,MAVS,CAClBO,MAAO,OACPwC,OAAQ,OACRC,aAAc,oBACdC,gBAAiB,WAOb,oBAAIE,UAAU,oBAAd,SAAoC7B,KAAK3B,MAAM8C,OAAO7K,KAAKA,OAC3D,oBAAIuL,UAAU,wBACd,sBAAKnD,MAjBc,CACvBoD,YAAa,QAgBT,UACE,cAAC,EAAD,CAAapB,GAAKV,KAAK3B,MAAM8C,OAAOT,KACpC,cAAC,EAAD,CAAYA,GAAKV,KAAK3B,MAAM8C,OAAOT,KACnC,cAAC,EAAD,CAAMA,GAAKV,KAAK3B,MAAM8C,OAAOT,iB,GAxBpBG,IAAMC,WCgCZ0C,E,uKAjBX,OACE,8BACE,sBAAK3B,UAAU,cAAf,UACE,qBAAKnD,MAVS,CAClBO,MAAO,OACPwC,OAAQ,OACRC,aAAc,oBACdC,gBAAiB,WAOb,oBAAIE,UAAU,oBAAd,SAAoC7B,KAAK3B,MAAM8C,OAAO7K,KAAKA,OAC3D,oBAAIuL,UAAU,wBACd,sBAAKnD,MAjBc,CACvBoD,YAAa,QAgBT,UACE,cAAC,EAAD,CAAapB,GAAKV,KAAK3B,MAAM8C,OAAOT,KACpC,cAAC,EAAD,CAAYA,GAAKV,KAAK3B,MAAM8C,OAAOT,KACnC,cAAC,EAAD,CAAMA,GAAKV,KAAK3B,MAAM8C,OAAOT,iB,GAxBnBG,IAAMC,WCgCb2C,E,uKAjBX,OACE,8BACE,sBAAK5B,UAAU,cAAf,UACE,qBAAKnD,MAVS,CAClBO,MAAO,OACPwC,OAAQ,OACRC,aAAc,oBACdC,gBAAiB,WAOb,oBAAIE,UAAU,oBAAd,SAAoC7B,KAAK3B,MAAM8C,OAAO7K,KAAKA,OAC3D,oBAAIuL,UAAU,wBACd,sBAAKnD,MAjBc,CACvBoD,YAAa,QAgBT,UACE,cAAC,EAAD,CAAapB,GAAKV,KAAK3B,MAAM8C,OAAOT,KACpC,cAAC,EAAD,CAAYA,GAAKV,KAAK3B,MAAM8C,OAAOT,KACnC,cAAC,EAAD,CAAMA,GAAKV,KAAK3B,MAAM8C,OAAOT,iB,GAxBnBG,IAAMC,WCgCb4C,E,uKAjBX,OACE,8BACE,sBAAK7B,UAAU,cAAf,UACE,qBAAKnD,MAVS,CAClBO,MAAO,OACPwC,OAAQ,OACRC,aAAc,oBACdC,gBAAiB,WAOb,oBAAIE,UAAU,oBAAd,SAAoC7B,KAAK3B,MAAM8C,OAAO7K,KAAKA,OAC3D,oBAAIuL,UAAU,wBACd,sBAAKnD,MAjBc,CACvBoD,YAAa,QAgBT,UACE,cAAC,EAAD,CAAapB,GAAKV,KAAK3B,MAAM8C,OAAOT,KACpC,cAAC,EAAD,CAAYA,GAAKV,KAAK3B,MAAM8C,OAAOT,KACnC,cAAC,EAAD,CAAMA,GAAKV,KAAK3B,MAAM8C,OAAOT,iB,GAxBrBG,IAAMC,WCgCX6C,E,uKAjBX,OACE,8BACE,sBAAK9B,UAAU,cAAf,UACE,qBAAKnD,MAVS,CAClBO,MAAO,OACPwC,OAAQ,OACRC,aAAc,oBACdC,gBAAiB,WAOb,oBAAIE,UAAU,oBAAd,SAAoC7B,KAAK3B,MAAM8C,OAAO7K,KAAKA,OAC3D,oBAAIuL,UAAU,wBACd,sBAAKnD,MAjBc,CACvBoD,YAAa,QAgBT,UACE,cAAC,EAAD,CAAapB,GAAKV,KAAK3B,MAAM8C,OAAOT,KACpC,cAAC,EAAD,CAAYA,GAAKV,KAAK3B,MAAM8C,OAAOT,KACnC,cAAC,EAAD,CAAMA,GAAKV,KAAK3B,MAAM8C,OAAOT,iB,GAxBpBG,IAAMC,WCgCZ8C,E,uKAjBX,OACE,8BACE,sBAAK/B,UAAU,cAAf,UACE,qBAAKnD,MAVS,CAClBO,MAAO,OACPwC,OAAQ,OACRC,aAAc,oBACdC,gBAAiB,WAOb,oBAAIE,UAAU,oBAAd,SAAoC7B,KAAK3B,MAAM8C,OAAO7K,KAAKA,OAC3D,oBAAIuL,UAAU,wBACd,sBAAKnD,MAjBc,CACvBoD,YAAa,QAgBT,UACE,cAAC,EAAD,CAAapB,GAAKV,KAAK3B,MAAM8C,OAAOT,KACpC,cAAC,EAAD,CAAYA,GAAKV,KAAK3B,MAAM8C,OAAOT,KACnC,cAAC,EAAD,CAAMA,GAAKV,KAAK3B,MAAM8C,OAAOT,iB,GAxBtBG,IAAMC,WCgCV+C,E,uKAjBX,OACE,8BACE,sBAAKhC,UAAU,cAAf,UACE,qBAAKnD,MAVS,CAClBO,MAAO,OACPwC,OAAQ,OACRC,aAAc,oBACdC,gBAAiB,WAOb,oBAAIE,UAAU,oBAAd,SAAoC7B,KAAK3B,MAAM8C,OAAO7K,KAAKA,OAC3D,oBAAIuL,UAAU,wBACd,sBAAKnD,MAjBc,CACvBoD,YAAa,QAgBT,UACE,cAAC,EAAD,CAAapB,GAAKV,KAAK3B,MAAM8C,OAAOT,KACpC,cAAC,EAAD,CAAYA,GAAKV,KAAK3B,MAAM8C,OAAOT,KACnC,cAAC,EAAD,CAAMA,GAAKV,KAAK3B,MAAM8C,OAAOT,iB,GAxBtBG,IAAMC,WCwCVgD,E,uKAnCX,IAIIzH,EAAQ,SACR2D,KAAK3B,MAAM8C,OAAO1J,OAAOH,SAAS,wCACpC+E,EAAQ,IAAM2D,KAAK3B,MAAM0B,OAAO1D,MAAMC,YAAYgF,SAAS,KAG7D,IAAME,EAAc,CAClBvC,MAAO,OACPwC,OAAQ,OACRC,aAAc,oBACdC,gBAAiBtF,EACjBuF,QAAS5B,KAAK3B,MAAM0B,OAAO9D,GAAK,IAAM,OAGxC,OACE,8BACE,sBAAK4F,UAAU,cAAf,UACE,qBAAKnD,MAAQ8C,IACb,oBAAIK,UAAU,oBAAd,SAAoC7B,KAAK3B,MAAM8C,OAAO7K,KAAKA,OAC3D,oBAAIuL,UAAU,wBACd,sBAAKnD,MAvBc,CACvBoD,YAAa,QAsBT,UACE,cAAC,EAAD,CAAOpB,GAAKV,KAAK3B,MAAM8C,OAAOT,GAAKzE,GAAK+D,KAAK3B,MAAM0B,OAAO9D,GAAKgE,OAASD,KAAK3B,MAAM4B,SACnF,cAAC,EAAD,CAAaS,GAAKV,KAAK3B,MAAM8C,OAAOT,KACpC,cAAC,EAAD,CAAYA,GAAKV,KAAK3B,MAAM8C,OAAOT,KACnC,cAAC,EAAD,CAAMA,GAAKV,KAAK3B,MAAM8C,OAAOT,iB,GA/BpBG,IAAMC,WCuCZiD,E,uKAnCX,IAII1H,EAAQ,SACR2D,KAAK3B,MAAM8C,OAAO1J,OAAOH,SAAS,wCACpC+E,EAAQ,IAAM2D,KAAK3B,MAAM0B,OAAO1D,MAAMC,YAAYgF,SAAS,KAG7D,IAAME,EAAc,CAClBvC,MAAO,OACPwC,OAAQ,OACRC,aAAc,oBACdC,gBAAiBtF,EACjBuF,QAAS5B,KAAK3B,MAAM0B,OAAO9D,GAAK,IAAM,OAGxC,OACE,8BACE,sBAAK4F,UAAU,cAAf,UACE,qBAAKnD,MAAQ8C,IACb,oBAAIK,UAAU,oBAAd,SAAoC7B,KAAK3B,MAAM8C,OAAO7K,KAAKA,OAC3D,oBAAIuL,UAAU,wBACd,sBAAKnD,MAvBc,CACvBoD,YAAa,QAsBT,UACE,cAAC,EAAD,CAAOpB,GAAKV,KAAK3B,MAAM8C,OAAOT,GAAKzE,GAAK+D,KAAK3B,MAAM0B,OAAO9D,GAAKgE,OAASD,KAAK3B,MAAM4B,SACnF,cAAC,EAAD,CAAaS,GAAKV,KAAK3B,MAAM8C,OAAOT,KACpC,cAAC,EAAD,CAAYA,GAAKV,KAAK3B,MAAM8C,OAAOT,KACnC,cAAC,EAAD,CAAMA,GAAKV,KAAK3B,MAAM8C,OAAOT,iB,GA/BtBG,IAAMC,WC+BVkD,E,uKAjBX,OACE,8BACE,sBAAKnC,UAAU,cAAf,UACE,qBAAKnD,MAVS,CAClBO,MAAO,OACPwC,OAAQ,OACRC,aAAc,oBACdC,gBAAiB,WAOb,oBAAIE,UAAU,oBAAd,SAAoC7B,KAAK3B,MAAM8C,OAAO7K,KAAKA,OAC3D,oBAAIuL,UAAU,wBACd,sBAAKnD,MAjBc,CACvBoD,YAAa,QAgBT,UACE,cAAC,EAAD,CAAapB,GAAKV,KAAK3B,MAAM8C,OAAOT,KACpC,cAAC,EAAD,CAAYA,GAAKV,KAAK3B,MAAM8C,OAAOT,KACnC,cAAC,EAAD,CAAMA,GAAKV,KAAK3B,MAAM8C,OAAOT,iB,GAxBZG,IAAMC,WCwCpBmD,E,uKAnCX,IAII5H,EAAQ,SACR2D,KAAK3B,MAAM8C,OAAO1J,OAAOH,SAAS,wCACpC+E,EAAQ,IAAM2D,KAAK3B,MAAM0B,OAAO1D,MAAMC,YAAYgF,SAAS,KAG7D,IAAME,EAAc,CAClBvC,MAAO,OACPwC,OAAQ,OACRC,aAAc,oBACdC,gBAAiBtF,EACjBuF,QAAS5B,KAAK3B,MAAM0B,OAAO9D,GAAK,IAAM,OAGxC,OACE,8BACE,sBAAK4F,UAAU,cAAf,UACE,qBAAKnD,MAAQ8C,IACb,oBAAIK,UAAU,oBAAd,SAAoC7B,KAAK3B,MAAM8C,OAAO7K,KAAKA,OAC3D,oBAAIuL,UAAU,wBACd,sBAAKnD,MAvBc,CACvBoD,YAAa,QAsBT,UACE,cAAC,EAAD,CAAOpB,GAAKV,KAAK3B,MAAM8C,OAAOT,GAAKzE,GAAK+D,KAAK3B,MAAM0B,OAAO9D,GAAKgE,OAASD,KAAK3B,MAAM4B,SACnF,cAAC,EAAD,CAAaS,GAAKV,KAAK3B,MAAM8C,OAAOT,KACpC,cAAC,EAAD,CAAYA,GAAKV,KAAK3B,MAAM8C,OAAOT,KACnC,cAAC,EAAD,CAAMA,GAAKV,KAAK3B,MAAM8C,OAAOT,iB,GA/BnBG,IAAMC,WCiCboD,G,uKA9BX,IAMM1C,EAAc,CAClBvC,MAAO,OACPwC,OAAQ,OACRC,aAAc,oBACdC,gBANU,SASZ,OACE,8BACE,sBAAKE,UAAU,cAAf,UACE,qBAAKnD,MAAQ8C,IACb,oBAAIK,UAAU,oBAAd,SAAoC7B,KAAK3B,MAAM8C,OAAO7K,KAAKA,OAC3D,oBAAIuL,UAAU,wBACd,sBAAKnD,MAnBc,CACvBoD,YAAa,QAkBT,UACE,cAAC,EAAD,CAAapB,GAAKV,KAAK3B,MAAM8C,OAAOT,KACpC,cAAC,EAAD,CAAYA,GAAKV,KAAK3B,MAAM8C,OAAOT,KACnC,cAAC,EAAD,CAAMA,GAAKV,KAAK3B,MAAM8C,OAAOT,iB,GA1BpBG,IAAMC,WCkCZqD,G,uKA9BX,IAMM3C,EAAc,CAClBvC,MAAO,OACPwC,OAAQ,OACRC,aAAc,oBACdC,gBANU,SASZ,OACE,8BACE,sBAAKE,UAAU,cAAf,UACE,qBAAKnD,MAAQ8C,IACb,qBAAIK,UAAU,oBAAd,oBAA2C7B,KAAK3B,MAAM8C,OAAO7K,KAAKA,QAClE,oBAAIuL,UAAU,wBACd,sBAAKnD,MAnBc,CACvBoD,YAAa,QAkBT,UACE,cAAC,EAAD,CAAapB,GAAKV,KAAK3B,MAAM8C,OAAOT,KACpC,cAAC,EAAD,CAAYA,GAAKV,KAAK3B,MAAM8C,OAAOT,KACnC,cAAC,EAAD,CAAMA,GAAKV,KAAK3B,MAAM8C,OAAOT,iB,GA1BrBG,IAAMC,WCgKXsD,I,wDA7Hb,WAAY/F,GAAQ,IAAD,8BACjB,cAAMA,IACDgG,MAAQ,CACXC,KAAM,GACN9M,QAAS,IAEX,EAAK+M,SAAW,EAAKA,SAAS9E,KAAd,gBANC,E,gEAUjBO,KAAKuE,WACLC,YAAYxE,KAAKuE,SAAS,O,iCAI1B,IAAI7E,EAAO,IAAIC,eACfD,EAAKE,OAAS,SAAUC,GACtB,GAAwB,IAApBH,EAAKI,WACP,GAAoB,MAAhBJ,EAAKK,OAAgB,CACvB,IAAIuE,EAAO9D,KAAKiE,MAAM/E,EAAKgF,cAC3B1E,KAAK2E,SAAS,CACXL,KAAMA,EACN9M,QAAS8M,EAAK9M,eAGjB0I,QAAQC,MAAMT,EAAKU,aAGvBX,KAAKO,MACPN,EAAKW,KAAK,MAAOnJ,EAAO,mBACxBwI,EAAKY,iBAAiB,gBAAiB,UAAYlK,EAAe,UAClEsJ,EAAKa,S,+BAGG,IAAD,OAED/I,EAAUwI,KAAKqE,MAAM7M,QAAQoN,KAAI,SAACzD,GACtC,MAAmB,+BAAhBA,EAAOvJ,KACD,cAAC,EAAD,CAAuBuJ,OAAQA,EAAQpB,OAAS,EAAKsE,MAAMC,KAAKvE,OAAOoB,EAAOT,IAAMT,OAAS,EAAKsE,UAAtFpD,EAAOT,IACJ,gCAAhBS,EAAOvJ,KACN,cAAC,EAAD,CAAwBuJ,OAAQA,EAAQpB,OAAS,EAAKsE,MAAMC,KAAKvE,OAAOoB,EAAOT,IAAMT,OAAS,EAAKsE,UAAtFpD,EAAOT,IACL,iCAAhBS,EAAOvJ,KACN,cAAC,EAAD,CAAwBuJ,OAAQA,EAAQpB,OAAS,EAAKsE,MAAMC,KAAKvE,OAAOoB,EAAOT,IAAMT,OAAS,EAAKsE,UAAtFpD,EAAOT,IACL,sCAAhBS,EAAOvJ,KACN,cAAC,EAAD,CAA8BuJ,OAAQA,EAAQpB,OAAS,EAAKsE,MAAMC,KAAKvE,OAAOoB,EAAOT,IAAMT,OAAS,EAAKsE,UAAtFpD,EAAOT,IACX,qCAAhBS,EAAOvJ,KACN,cAAC,EAAD,CAA6BuJ,OAAQA,EAAQpB,OAAS,EAAKsE,MAAMC,KAAKvE,OAAOoB,EAAOT,IAAMT,OAAS,EAAKsE,UAAtFpD,EAAOT,IACV,6BAAhBS,EAAOvJ,KACN,cAAC,EAAD,CAAqBuJ,OAAQA,EAAQpB,OAAS,EAAKsE,MAAMC,KAAKvE,OAAOoB,EAAOT,IAAMT,OAAS,EAAKsE,UAAtFpD,EAAOT,IACF,6BAAhBS,EAAOvJ,KACN,cAAC,EAAD,CAAqBuJ,OAAQA,EAAQpB,OAAS,EAAKsE,MAAMC,KAAKvE,OAAOoB,EAAOT,IAAMT,OAAS,EAAKsE,UAAtFpD,EAAOT,IACF,mCAAhBS,EAAOvJ,KACN,cAAC,EAAD,CAA2BuJ,OAAQA,EAAQpB,OAAS,EAAKsE,MAAMC,KAAKvE,OAAOoB,EAAOT,IAAMT,OAAS,EAAKsE,UAAtFpD,EAAOT,IACR,kCAAhBS,EAAOvJ,KACN,cAAC,EAAD,CAA0BuJ,OAAQA,EAAQpB,OAAS,EAAKsE,MAAMC,KAAKvE,OAAOoB,EAAOT,IAAMT,OAAS,EAAKsE,UAAtFpD,EAAOT,IACP,gCAAhBS,EAAOvJ,KACN,cAAC,EAAD,CAAwBuJ,OAAQA,EAAQpB,OAAS,EAAKsE,MAAMC,KAAKvE,OAAOoB,EAAOT,IAAMT,OAAS,EAAKsE,UAAtFpD,EAAOT,IACL,oCAAhBS,EAAOvJ,KACN,cAAC,EAAD,CAA4BuJ,OAAQA,EAAQpB,OAAS,EAAKsE,MAAMC,KAAKvE,OAAOoB,EAAOT,IAAMT,OAAS,EAAKsE,UAAtFpD,EAAOT,IACT,mCAAhBS,EAAOvJ,KACN,cAAC,EAAD,CAA2BuJ,OAAQA,EAAQpB,OAAS,EAAKsE,MAAMC,KAAKvE,OAAOoB,EAAOT,IAAMT,OAAS,EAAKsE,UAAtFpD,EAAOT,IACR,iCAAhBS,EAAOvJ,KACN,cAAC,EAAD,CAAyBuJ,OAAQA,EAAQpB,OAAS,EAAKsE,MAAMC,KAAKvE,OAAOoB,EAAOT,IAAMT,OAAS,EAAKsE,UAAtFpD,EAAOT,IACN,+BAAhBS,EAAOvJ,KACN,cAAC,EAAD,CAAuBuJ,OAAQA,EAAQpB,OAAS,EAAKsE,MAAMC,KAAKvE,OAAOoB,EAAOT,IAAMT,OAAS,EAAKsE,UAAtFpD,EAAOT,IACJ,mCAAhBS,EAAOvJ,KACN,cAAC,EAAD,CAA2BuJ,OAAQA,EAAQpB,OAAS,EAAKsE,MAAMC,KAAKvE,OAAOoB,EAAOT,IAAMT,OAAS,EAAKsE,UAAtFpD,EAAOT,IACR,gCAAhBS,EAAOvJ,KACN,cAAC,EAAD,CAAwBuJ,OAAQA,EAAQpB,OAAS,EAAKsE,MAAMC,KAAKvE,OAAOoB,EAAOT,IAAMT,OAAS,EAAKsE,UAAtFpD,EAAOT,IACL,gCAAhBS,EAAOvJ,KACN,cAAC,EAAD,CAAwBuJ,OAAQA,EAAQpB,OAAS,EAAKsE,MAAMC,KAAKvE,OAAOoB,EAAOT,IAAMT,OAAS,EAAKsE,UAAtFpD,EAAOT,IACL,iCAAhBS,EAAOvJ,KACN,cAAC,EAAD,CAAyBuJ,OAAQA,EAAQpB,OAAS,EAAKsE,MAAMC,KAAKvE,OAAOoB,EAAOT,IAAMT,OAAS,EAAKsE,UAAtFpD,EAAOT,IACN,8BAAhBS,EAAOvJ,KACN,cAAC,EAAD,CAAsBuJ,OAAQA,EAAQpB,OAAS,EAAKsE,MAAMC,KAAKvE,OAAOoB,EAAOT,IAAMT,OAAS,EAAKsE,UAAtFpD,EAAOT,IACH,gCAAhBS,EAAOvJ,KACN,cAAC,EAAD,CAAwBuJ,OAAQA,EAAQpB,OAAS,EAAKsE,MAAMC,KAAKvE,OAAOoB,EAAOT,IAAMT,OAAS,EAAKsE,UAAtFpD,EAAOT,IACL,gCAAhBS,EAAOvJ,KACN,cAAC,EAAD,CAAwBuJ,OAAQA,EAAQpB,OAAS,EAAKsE,MAAMC,KAAKvE,OAAOoB,EAAOT,IAAMT,OAAS,EAAKsE,UAAtFpD,EAAOT,IACL,8BAAhBS,EAAOvJ,KACN,cAAC,EAAD,CAAsBuJ,OAAQA,EAAQpB,OAAS,EAAKsE,MAAMC,KAAKvE,OAAOoB,EAAOT,IAAMT,OAAS,EAAKsE,UAAtFpD,EAAOT,IACH,iCAAhBS,EAAOvJ,KACN,cAAC,EAAD,CAAyBuJ,OAAQA,EAAQpB,OAAS,EAAKsE,MAAMC,KAAKvE,OAAOoB,EAAOT,IAAMT,OAAS,EAAKsE,UAAtFpD,EAAOT,IACN,iCAAhBS,EAAOvJ,KACN,cAAC,EAAD,CAAyBuJ,OAAQA,EAAQpB,OAAS,EAAKsE,MAAMC,KAAKvE,OAAOoB,EAAOT,IAAMT,OAAS,EAAKsE,UAAtFpD,EAAOT,IACN,+BAAhBS,EAAOvJ,KACN,cAAC,EAAD,CAAuBuJ,OAAQA,EAAQpB,OAAS,EAAKsE,MAAMC,KAAKvE,OAAOoB,EAAOT,IAAMT,OAAS,EAAKsE,UAAtFpD,EAAOT,IACJ,gCAAhBS,EAAOvJ,KACN,cAAC,EAAD,CAAwBuJ,OAAQA,EAAQpB,OAAS,EAAKsE,MAAMC,KAAKvE,OAAOoB,EAAOT,IAAMT,OAAS,EAAKsE,UAAtFpD,EAAOT,IACL,8BAAhBS,EAAOvJ,KACN,cAAC,EAAD,CAAsBuJ,OAAQA,EAAQpB,OAAS,EAAKsE,MAAMC,KAAKvE,OAAOoB,EAAOT,IAAMT,OAAS,EAAKsE,UAAtFpD,EAAOT,IACH,gCAAhBS,EAAOvJ,KACN,cAAC,EAAD,CAAwBuJ,OAAQA,EAAQpB,OAAS,EAAKsE,MAAMC,KAAKvE,OAAOoB,EAAOT,IAAMT,OAAS,EAAKsE,UAAtFpD,EAAOT,IACL,8BAAhBS,EAAOvJ,KACN,cAAC,EAAD,CAAsBuJ,OAAQA,EAAQpB,OAAS,EAAKsE,MAAMC,KAAKvE,OAAOoB,EAAOT,IAAMT,OAAS,EAAKsE,UAAtFpD,EAAOT,IACH,wCAAhBS,EAAOvJ,KACN,cAAC,EAAD,CAAgCuJ,OAAQA,EAAQpB,OAAS,EAAKsE,MAAMC,KAAKvE,OAAOoB,EAAOT,IAAMT,OAAS,EAAKsE,UAAtFpD,EAAOT,IACb,iCAAhBS,EAAOvJ,KACN,cAAC,EAAD,CAAyBuJ,OAAQA,EAAQpB,OAAS,EAAKsE,MAAMC,KAAKvE,OAAOoB,EAAOT,IAAMT,OAAS,EAAKsE,UAAtFpD,EAAOT,IACN,+BAAhBS,EAAOvJ,KACN,cAAC,GAAD,CAAuBuJ,OAAQA,EAAQpB,OAAS,EAAKsE,MAAMC,KAAKvE,OAAOoB,EAAOT,IAAMT,OAAS,EAAKsE,UAAtFpD,EAAOT,IAEnB,cAAC,GAAD,CAAwBS,OAAQA,EAAQpB,OAAS,EAAKsE,MAAMC,KAAKvE,OAAOoB,EAAOT,IAAMT,OAAS,EAAKsE,UAAtFpD,EAAOT,OAG/B,OACE,gCACE,qBAAKmB,UAAU,uBAAf,SACE,uDAGF,qBAAKA,UAAU,uBAAf,SACIrK,IAGJ,qBAAKqK,UAAU,0BAAf,SACE,cAAC,IAAD,CAAMvC,GAAG,mBAAT,SACE,wBAAQ1H,KAAK,SAAb,4B,GAtHUiJ,IAAMC,Y,mBCVb+D,I,wDAxBb,WAAYxG,GAAQ,IAAD,8BACjB,cAAMA,IACD8D,OAAS,EAAKA,OAAO1C,KAAZ,gBAFG,E,mDAMZqF,GACL9E,KAAK3B,MAAM8D,OAAOnC,KAAK3B,MAAMiG,KAAKQ,EAAMC,OAAOC,S,+BAI/C,OACE,sBAAKnD,UAAU,gBAAf,UACE,qBAAKA,UAAU,gBAAf,SACG7B,KAAK3B,MAAM/H,OAEd,qBAAKuL,UAAU,gBAAf,SACE,uBAAOjK,KAAK,OAAOiK,UAAU,YAAYnB,GAAIV,KAAK3B,MAAMiG,KAAMW,aAAcjF,KAAK3B,MAAM2G,MAAOE,SAAUlF,KAAKmC,kB,GAlBpGtB,IAAMC,YC+BVqD,G,kDA/Bb,WAAY9F,GAAQ,IAAD,8BACjB,cAAMA,IACD8G,eAAiB,EAAKA,eAAe1F,KAApB,gBAFL,E,2DAMJ2F,EAASC,GACtBrF,KAAK3B,MAAM8D,OAAO,cAAgBkD,EAAUD,K,+BAGpC,IAAD,OAGP,OACE,8BACE,sBAAKvD,UAAU,kBAAf,UACE,qBAAKA,UAAU,8BAAf,SACE,kDAEF,qBAAKA,UAAU,kBAAf,SACE,cAAC,KAAD,CAAQqD,SAAU,SAACE,GAAa,EAAKD,eAAeC,EAAQ,oBAAqBA,QAASpF,KAAK3B,MAAM3G,WAAWmC,oBAElH,qBAAKgI,UAAU,kBAAf,SACE,sBAAMA,UAAU,mBAAhB,gE,GAxBQhB,IAAMC,WCyCXvB,G,kDAxCb,WAAYlB,GAAQ,IAAD,8BACjB,cAAMA,IACD8G,eAAiB,EAAKA,eAAe1F,KAApB,gBAFL,E,2DAMJ2F,EAASC,GACtBrF,KAAK3B,MAAM8D,OAAO,cAAgBkD,EAAUD,K,+BAGpC,IAAD,OACP,OACE,gCACE,sBAAKvD,UAAU,kBAAf,UACE,qBAAKA,UAAU,8BAAf,SACE,mDAEF,qBAAKA,UAAU,kBAAf,SACE,cAAC,KAAD,CAAQqD,SAAU,SAACE,GAAa,EAAKD,eAAeC,EAAQ,qBAAsBA,QAASpF,KAAK3B,MAAM3G,WAAWC,qBAEnH,qBAAKkK,UAAU,kBAAf,SACE,sBAAMA,UAAU,mBAAhB,0FAGJ,sBAAKA,UAAU,kBAAf,UACE,qBAAKA,UAAU,8BAAf,SACE,iDAEF,qBAAKA,UAAU,kBAAf,SACE,cAAC,KAAD,CAAQqD,SAAU,SAACE,GAAa,EAAKD,eAAeC,EAAQ,mBAAoBA,QAASpF,KAAK3B,MAAM3G,WAAWI,mBAEjH,qBAAK+J,UAAU,kBAAf,SACE,sBAAMA,UAAU,mBAAhB,gF,GAjCQhB,IAAMC,WCgCXwE,G,kDA/Bb,WAAYjH,GAAQ,IAAD,8BACjB,cAAMA,IACD8G,eAAiB,EAAKA,eAAe1F,KAApB,gBAFL,E,2DAMJ2F,EAASC,GACtBrF,KAAK3B,MAAM8D,OAAO,cAAgBkD,EAAUD,K,+BAGpC,IAAD,OAGP,OACE,8BACE,sBAAKvD,UAAU,kBAAf,UACE,qBAAKA,UAAU,8BAAf,SACE,wDAEF,qBAAKA,UAAU,kBAAf,SACE,cAAC,KAAD,CAAQqD,SAAU,SAACE,GAAa,EAAKD,eAAeC,EAAQ,0BAA2BA,QAASpF,KAAK3B,MAAMpG,0BAE7G,qBAAK4J,UAAU,kBAAf,SACE,sBAAMA,UAAU,mBAAhB,qG,GAxBahB,IAAMC,WC6HhByE,G,kDA5Hb,WAAYlH,GAAQ,IAAD,8BACjB,cAAMA,IACD8G,eAAiB,EAAKA,eAAe1F,KAApB,gBACtB,EAAK+F,gBAAkB,EAAKA,gBAAgB/F,KAArB,gBACvB,EAAKgG,YAAc,EAAKA,YAAYhG,KAAjB,gBAJF,E,2DAQJ2F,EAASC,GACtBrF,KAAK3B,MAAM8D,OAAO,cAAgBkD,EAAUD,K,sCAG9BN,GACd,IAAMpE,EAAKoE,EAAMC,OAAOrE,GAAG/J,MAAM,KAC3B+O,EAAWhF,EAAG,GAEdiF,EAA4B,SAAVjF,EAAG,GAAgBA,EAAG,GAAK,gBAC7CsE,EAAkB,SAAVtE,EAAG,GAAgBoE,EAAMC,OAAOC,MAAQF,EAAMC,OAAOC,MAAMrO,MAAM,KAE3EiP,EAA0B5F,KAAK3B,MAAM3G,WAAW+C,mBACpDmL,EAAwBlL,OAAOgL,GAAUG,aAAa,GAAGF,GAAmBX,EAC9D,UAAVtE,EAAG,KAAgBkF,EAAwBlL,OAAOgL,GAAUI,WAAad,EAAM,IACnFhF,KAAK3B,MAAM8D,OAAO,gCAAiCyD,K,oCAInD,IAAIA,EAA0B5F,KAAK3B,MAAM3G,WAAW+C,mBACpDmL,EAAwBlL,OAAOqL,KAAK,CAClC,WAAc,GACd,aAAgB,CACd,CACE,cAAiB,CAAC,IAClB,KAAQ,SAId/F,KAAK3B,MAAM8D,OAAO,gCAAiCyD,K,+BAG3C,IAAD,OAEDI,EAAY,CAChB/G,MAAO,SAGHvE,EAASsF,KAAK3B,MAAM3G,WAAW+C,mBAAmBC,OAAOkK,KAAI,SAACqB,EAAOrP,GACzE,OACQ,8BACE,sBAAKiL,UAAU,gBAAf,UACE,qBAAKA,UAAU,kBAEf,sBAAKA,UAAU,gBAAf,UACE,kCACE,8CACA,yBAAQvL,KAAK,OAAOoK,GAAI,QAAU9J,EAAGoO,MAAOiB,EAAMJ,aAAa,GAAGK,KAAMhB,SAAU,EAAKM,gBAAvF,UACE,wBAAQR,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,sBAGJ,kCACE,gDACA,uBAAOpN,KAAK,OAAO8I,GAAI,SAAW9J,EAAG8H,MAAOsH,EAAWf,aAAcgB,EAAMJ,aAAa,GAAGM,cAAeC,YAAY,aAAalB,SAAU,EAAKM,0BAbpH5O,IAD5BA,MAsBpB,OACE,gCAEE,sBAAKiL,UAAU,kBAAf,UACE,qBAAKA,UAAU,8BAAf,SACE,6CAEF,qBAAKA,UAAU,kBAAf,SACE,cAAC,KAAD,CAAQqD,SAAU,SAACE,GAAa,EAAKD,eAAeC,EAAQ,eAAgBA,QAASpF,KAAK3B,MAAM3G,WAAWkD,eAE7G,qBAAKiH,UAAU,kBAAf,SACE,sBAAMA,UAAU,mBAAhB,4EAIJ,sBAAKA,UAAU,kBAAf,UACE,qBAAKA,UAAU,8BAAf,SACE,0DAEF,qBAAKA,UAAU,kBAAf,SACE,cAAC,KAAD,CAAQqD,SAAU,SAACE,GAAa,EAAKD,eAAeC,EAAQ,4BAA6BA,QAASpF,KAAK3B,MAAM3G,WAAW2O,4BAE1H,qBAAKxE,UAAU,kBAAf,SACE,sBAAMA,UAAU,mBAAhB,wFAIJ,sBAAKA,UAAU,kBAAf,UACE,qBAAKA,UAAU,8BAAf,SACE,sDAEF,qBAAKA,UAAU,kBAAf,SACE,cAAC,KAAD,CAAQqD,SAAU,SAACE,GAAa,EAAKD,eAAeC,EAAQ,wBAAyBA,QAASpF,KAAK3B,MAAM3G,WAAWmD,wBAEtH,qBAAKgH,UAAU,kBAAf,SACE,sBAAMA,UAAU,mBAAhB,8FAIJ,sBAAKA,UAAU,kBAAf,UACE,qBAAKA,UAAU,8BAAf,yBAGA,qBAAKA,UAAU,kBAAf,SACE,wBAAQjK,KAAK,SAASiK,UAAU,uBAAuBzC,QAAUY,KAAKyF,YAAtE,sBAIH/K,S,GAtHcmG,IAAMC,WCyEdwF,G,kDAxEb,WAAYjI,GAAQ,IAAD,8BACjB,cAAMA,IACD8D,OAAS,EAAKA,OAAO1C,KAAZ,gBACd,EAAK0F,eAAiB,EAAKA,eAAe1F,KAApB,gBAHL,E,mDAMZqF,GACL9E,KAAK3B,MAAM8D,OAAO,cAAgB2C,EAAMC,OAAOrE,GAAGoE,EAAMC,OAAOC,S,qCAGlDI,EAASC,GACtBrF,KAAK3B,MAAM8D,OAAO,cAAgBkD,EAAUD,K,+BAGpC,IAAD,OACP,OACE,gCACE,sBAAKvD,UAAU,kBAAf,UACE,qBAAKA,UAAU,8BAAf,SACE,6CAEF,qBAAKA,UAAU,kBAAf,SACE,yBAAQvL,KAAK,OAAOoK,GAAG,aAAamB,UAAU,cAAcmD,MAAOhF,KAAK3B,MAAM3G,WAAWQ,WAAYgN,SAAUlF,KAAKmC,OAApH,UACE,wBAAQ6C,MAAM,GAAd,oBACA,wBAAQA,MAAM,MAAd,uBACA,wBAAQA,MAAM,MAAd,uBACA,wBAAQA,MAAM,GAAd,oCAGJ,qBAAKnD,UAAU,kBAAf,SACE,sBAAMA,UAAU,0BAGpB,sBAAKA,UAAU,kBAAf,UACE,qBAAKA,UAAU,8BAAf,iCAGA,qBAAKA,UAAU,kBAAf,SACE,uBAAOjK,KAAK,SAAS8I,GAAG,wCAAwCuE,aAAejF,KAAK3B,MAAM3G,WAAWU,sBAAwB4H,KAAK3B,MAAM3G,WAAWU,sBAAsBC,gBAAkB,EAAGkO,IAAI,IAAIC,IAAI,QAAQtB,SAAUlF,KAAKmC,OAAQN,UAAU,gBAErP,qBAAKA,UAAU,kBAAf,SACE,sBAAMA,UAAU,mBAAhB,iFAGJ,sBAAKA,UAAU,kBAAf,UACE,qBAAKA,UAAU,8BAAf,iCAGA,qBAAKA,UAAU,kBAAf,SACE,uBAAOjK,KAAK,SAAS8I,GAAG,wCAAwCuE,aAAcjF,KAAK3B,MAAM3G,WAAWU,sBAAwB4H,KAAK3B,MAAM3G,WAAWU,sBAAsBE,gBAAkB,EAAGiO,IAAI,IAAIC,IAAI,QAAQtB,SAAUlF,KAAKmC,OAAQN,UAAU,gBAEpP,qBAAKA,UAAU,kBAAf,SACE,sBAAMA,UAAU,mBAAhB,iFAGJ,sBAAKA,UAAU,kBAAf,UACE,qBAAKA,UAAU,8BAAf,SACE,0DAEF,qBAAKA,UAAU,kBAAf,SACE,cAAC,KAAD,CAAQqD,SAAU,SAACE,GAAa,EAAKD,eAAeC,EAAQ,4BAA6BA,QAASpF,KAAK3B,MAAM3G,WAAWS,4BAE1H,qBAAK0J,UAAU,kBAAf,SACE,sBAAMA,UAAU,mBAAhB,iG,GAhEehB,IAAMC,WCqKlBkB,G,kDApKb,WAAY3D,GAAQ,IAAD,8BACjB,cAAMA,IACD8D,OAAS,EAAKA,OAAO1C,KAAZ,gBACd,EAAKgH,WAAa,EAAKA,WAAWhH,KAAhB,gBAClB,EAAKiH,QAAU,EAAKA,QAAQjH,KAAb,gBACf,EAAK0F,eAAiB,EAAKA,eAAe1F,KAApB,gBALL,E,mDAQZqF,GACL9E,KAAK3B,MAAM8D,OAAO,cAAgB2C,EAAMC,OAAOrE,GAAGoE,EAAMC,OAAOC,S,iCAGtDF,GACT,IACM6B,EADK7B,EAAMC,OAAOrE,GAAG/J,MAAM,KACd,GACfiQ,EAAgC5G,KAAK3B,MAAM3G,WAAWc,yBAAyB7B,MAAM,KAE9D,WAAvBmO,EAAMC,OAAOC,MACf4B,EAA8BC,OAAOF,EAAS,GACd,WAAvB7B,EAAMC,OAAOC,QACtB4B,EAA8BD,GAAW7B,EAAMC,OAAOC,OAGxDhF,KAAK3B,MAAM8D,OAAO,sCAAuCyE,EAA8BE,KAAK,Q,gCAI5F,IAAIF,EAAgC5G,KAAK3B,MAAM3G,WAAWc,yBAC1DoO,GAAiC,IACjC5G,KAAK3B,MAAM8D,OAAO,sCAAuCyE,K,qCAG5CxB,EAASC,GACtBrF,KAAK3B,MAAM8D,OAAO,cAAgBkD,EAAUD,K,+BAIpC,IAAD,OAED2B,EAAQ/G,KAAK3B,MAAM3G,WAAWc,yBAAyB7B,MAAM,KAAKiO,KAAI,SAACoC,EAAMpQ,GAEjF,OACI,8BACE,sBAAKiL,UAAU,gBAAf,UACE,qBAAKA,UAAU,kBAEf,qBAAKA,UAAU,gBAAf,SACE,kCACE,0CACA,yBAAQvL,KAAK,OAAOoK,GAAI,QAAU9J,EAAGoO,MAAOgC,EAAM9B,SAAU,EAAKuB,WAAjE,UACE,wBAAQzB,MAAM,SAAd,2BACA,wBAAQA,MAAM,SAAd,8BACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,6BAnBApO,MA6BhB,OACE,gCAEE,sBAAKiL,UAAU,kBAAf,UACE,qBAAKA,UAAU,8BAAf,mCAGA,qBAAKA,UAAU,kBAAf,SACE,wBAAQjK,KAAK,SAASiK,UAAU,uBAAuBzC,QAAUY,KAAK0G,QAAtE,sBAIHK,EAED,sBAAKlF,UAAU,kBAAf,UACE,qBAAKA,UAAU,8BAAf,SACE,gEAEF,qBAAKA,UAAU,kBAAf,SACE,cAAC,KAAD,CAAQqD,SAAU,SAACE,GAAa,EAAKD,eAAeC,EAAQ,kCAAmCA,QAASpF,KAAK3B,MAAM3G,WAAWoB,kCAEhI,qBAAK+I,UAAU,kBAAf,SACE,sBAAMA,UAAU,mBAAhB,gGAIJ,sBAAKA,UAAU,kBAAf,UACE,qBAAKA,UAAU,8BAAf,SACE,8DAEF,qBAAKA,UAAU,kBAAf,SACE,cAAC,KAAD,CAAQqD,SAAU,SAACE,GAAa,EAAKD,eAAeC,EAAQ,gCAAiCA,QAASpF,KAAK3B,MAAM3G,WAAWqB,gCAE9H,qBAAK8I,UAAU,kBAAf,SACE,sBAAMA,UAAU,mBAAhB,wFAIJ,sBAAKA,UAAU,kBAAf,UACE,qBAAKA,UAAU,8BAAf,iCAGA,qBAAKA,UAAU,kBAAf,SACE,uBAAOjK,KAAK,SAAS8I,GAAG,iDAAiDuE,aAAejF,KAAK3B,MAAM3G,WAAWe,2BAA6BuH,KAAK3B,MAAM3G,WAAWe,2BAA2BC,oBAAsB,EAAG6N,IAAI,IAAIC,IAAI,KAAKtB,SAAUlF,KAAKmC,OAAQN,UAAU,gBAEzQ,qBAAKA,UAAU,kBAAf,SACE,sBAAMA,UAAU,mBAAhB,4EAIJ,sBAAKA,UAAU,kBAAf,UACE,qBAAKA,UAAU,8BAAf,iCAGA,qBAAKA,UAAU,kBAAf,SACE,uBAAOjK,KAAK,SAAS8I,GAAG,iDAAiDuE,aAAcjF,KAAK3B,MAAM3G,WAAWe,2BAA6BuH,KAAK3B,MAAM3G,WAAWe,2BAA2BE,oBAAsB,EAAG4N,IAAI,IAAIC,IAAI,KAAKtB,SAAUlF,KAAKmC,OAAQN,UAAU,gBAExQ,qBAAKA,UAAU,kBAAf,SACE,sBAAMA,UAAU,mBAAhB,4EAIJ,sBAAKA,UAAU,kBAAf,UACE,qBAAKA,UAAU,8BAAf,mBAGA,qBAAKA,UAAU,kBAAf,SACE,uBAAOjK,KAAK,SAAS8I,GAAG,qBAAqBuE,aAAcjF,KAAK3B,MAAM3G,WAAWmB,mBAAoB0N,IAAI,IAAIC,IAAI,KAAKtB,SAAUlF,KAAKmC,OAAQN,UAAU,gBAEzJ,qBAAKA,UAAU,kBAAf,SACE,sBAAMA,UAAU,mBAAhB,uFAIJ,sBAAKA,UAAU,kBAAf,UACE,qBAAKA,UAAU,8BAAf,mBAGA,qBAAKA,UAAU,kBAAf,SACE,yBAAQvL,KAAK,OAAOoK,GAAG,4BAA4BmB,UAAU,cAAcmD,MAAOhF,KAAK3B,MAAM3G,WAAWkB,0BAA2BsM,SAAUlF,KAAKmC,OAAlJ,UACE,wBAAQ6C,MAAM,IAAd,qBACA,wBAAQA,MAAM,IAAd,uC,GAzJmBnE,IAAMC,WCwGxBmG,G,kDAvGb,WAAY5I,GAAQ,IAAD,8BACjB,cAAMA,IACD8G,eAAiB,EAAKA,eAAe1F,KAApB,gBACtB,EAAKyH,aAAe,EAAKA,aAAazH,KAAlB,gBACpB,EAAK0H,UAAY,EAAKA,UAAU1H,KAAf,gBAJA,E,2DAQJ2F,EAASC,GACtBrF,KAAK3B,MAAM8D,OAAO,cAAgBkD,EAAUD,K,mCAGjCN,GACX,IAAMpE,EAAKoE,EAAMC,OAAOrE,GAAG/J,MAAM,KAC3ByQ,EAAY1G,EAAG,GAEf2G,EAA6B,SAAV3G,EAAG,GAAgBA,EAAG,GAAK,eAC9CsE,EAAkB,SAAVtE,EAAG,GAAgBoE,EAAMC,OAAOC,MAAQF,EAAMC,OAAOC,MAAMrO,MAAM,KAE3E2Q,EAAwBtH,KAAK3B,MAAM3G,WAAWoC,iBAClDwN,EAAsBF,GAAWG,YAAY,GAAGF,GAAoBrC,EACtD,UAAVtE,EAAG,KAAgB4G,EAAsBF,GAAW9Q,KAAO0O,EAAM,IACrEhF,KAAK3B,MAAM8D,OAAO,8BAA+BmF,K,kCAIjD,IAAIA,EAAwBtH,KAAK3B,MAAM3G,WAAWoC,iBAClDwN,EAAsBvB,KAAK,CACzB,KAAQ,GACR,YAAe,CACb,CACE,aAAgB,CAAC,IACjB,KAAQ,SAId/F,KAAK3B,MAAM8D,OAAO,8BAA+BmF,K,+BAGzC,IAAD,OAEDtB,EAAY,CAChBpF,WAAY,OACZ3B,MAAO,SAGHuI,EAAUxH,KAAK3B,MAAM3G,WAAWoC,iBAAiB8K,KAAI,SAACpF,EAAQ5I,GAClE,OACQ,8BACE,sBAAKiL,UAAU,gBAAf,UACE,qBAAKA,UAAU,kBAEf,sBAAKA,UAAU,gBAAf,UACE,kCACE,8CACA,yBAAQvL,KAAK,OAAOoK,GAAI,QAAU9J,EAAGoO,MAAOxF,EAAO+H,YAAY,GAAGrB,KAAME,YAAY,sBAAsBlB,SAAU,EAAKgC,aAAzH,UACE,wBAAQlC,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,sBAGJ,kCACE,0CACA,uBAAOpN,KAAK,OAAO8I,GAAI,SAAW9J,EAAG8H,MAAOsH,EAAWf,aAAczF,EAAO+H,YAAY,GAAGE,aAAcrB,YAAY,OAAOlB,SAAU,EAAKgC,yBAdzItQ,MAwBpB,OACE,gCAEE,sBAAKiL,UAAU,kBAAf,UACE,qBAAKA,UAAU,8BAAf,SACE,qDAEF,qBAAKA,UAAU,kBAAf,SACE,cAAC,KAAD,CAAQqD,SAAU,SAACE,GAAa,EAAKD,eAAeC,EAAQ,uBAAwBA,QAASpF,KAAK3B,MAAM3G,WAAWqC,uBAErH,qBAAK8H,UAAU,kBAAf,SACE,sBAAMA,UAAU,mBAAhB,2FAIJ,sBAAKA,UAAU,kBAAf,UACE,qBAAKA,UAAU,8BAAf,0BAGA,qBAAKA,UAAU,kBAAf,SACE,wBAAQjK,KAAK,SAASiK,UAAU,uBAAuBzC,QAAUY,KAAKmH,UAAtE,sBAIHK,S,GAjGa3G,IAAMC,WC0Ib4G,G,kDAzIb,WAAYrJ,GAAQ,IAAD,8BACjB,cAAMA,IACD8G,eAAiB,EAAKA,eAAe1F,KAApB,gBACtB,EAAKgH,WAAa,EAAKA,WAAWhH,KAAhB,gBAClB,EAAKiH,QAAU,EAAKA,QAAQjH,KAAb,gBAJE,E,2DAQJ2F,EAASC,GACtBrF,KAAK3B,MAAM8D,OAAO,cAAgBkD,EAAUD,K,iCAGnCN,GACT,IAAMpE,EAAKoE,EAAMC,OAAOrE,GAAG/J,MAAM,KAC3BgQ,EAAUjG,EAAG,GACfiH,EAAsB3H,KAAK3B,MAAM3G,WAAW8D,eAEhD,GAAa,SAAVkF,EAAG,GACJiH,EAAoBhB,GAASY,YAAY,GAAGrB,KAAOpB,EAAMC,OAAOC,WAC3D,GAAc,UAAVtE,EAAG,GACZiH,EAAoBhB,GAASY,YAAY,GAAGE,aAAe3C,EAAMC,OAAOC,MAAMrO,MAAM,KACpFgR,EAAoBhB,GAASrQ,KAAOwO,EAAMC,OAAOC,MAAMrO,MAAM,KAAK,QAC7D,GAAc,aAAV+J,EAAG,GAAkB,CAG9B,IAFA,IAAIkH,EAAS9C,EAAMC,OAAOC,MAAMrO,MAAM,KAClCkR,EAAW,GACLjR,EAAI,EAAGA,EAAIgR,EAAO/Q,OAAQD,IAClCiR,EAAS9B,KAAK,CACZ+B,aAAcF,EAAOhR,GACnBmR,eAAgB,CAAC,CACfC,gBAAiB,CAACJ,EAAOhR,IACzBsP,KAAMlG,KAAK3B,MAAM3G,WAAW8D,eAAemL,GAASY,YAAY,GAAGrB,SAI3EyB,EAAoBhB,GAASkB,SAAWA,EAE1C7H,KAAK3B,MAAM8D,OAAO,4BAA6BwF,K,gCAI/C,IAAIA,EAAsB3H,KAAK3B,MAAM3G,WAAW8D,eAChDmM,EAAoB5B,KAAK,CACvB,KAAQ,GACR,YAAe,CACb,CACE,aAAgB,CAAC,IACjB,KAAQ,OAGZ,SAAY,CACV,CACE,aAAgB,GACd,eAAkB,CAAC,CACjB,gBAAmB,CAAC,IACpB,KAAQ,WAKlB/F,KAAK3B,MAAM8D,OAAO,4BAA6BwF,K,+BAGvC,IAAD,OAED3B,EAAY,CAChB/G,MAAO,SAGHgJ,EAAe,CACnBhJ,MAAO,SAIH8H,EAAQ/G,KAAK3B,MAAM3G,WAAW8D,eAAeoJ,KAAI,SAACoC,EAAMpQ,GAC5D,IAAMiR,EAAWb,EAAKa,SAASjD,KAAI,SAACsD,EAAQtR,GAAO,OAAOsR,EAAQJ,gBAElE,OACQ,8BACE,sBAAKjG,UAAU,gBAAf,UACE,qBAAKA,UAAU,kBAEf,sBAAKA,UAAU,gBAAf,UACE,kCACE,8CACA,yBAAQvL,KAAK,OAAOoK,GAAI,QAAU9J,EAAGoO,MAAOgC,EAAKO,YAAY,GAAGrB,KAAMhB,SAAU,EAAKuB,WAArF,UACE,wBAAQzB,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,sBAGJ,kCACE,+CACA,uBAAOpN,KAAK,OAAO8I,GAAI,SAAW9J,EAAG8H,MAAOsH,EAAWf,aAAc+B,EAAKO,YAAY,GAAGE,aAAcrB,YAAY,YAAYlB,SAAU,EAAKuB,gBAEhJ,kCACE,mDACA,uBAAO7O,KAAK,OAAO8I,GAAI,YAAc9J,EAAG8H,MAAOuJ,EAAchD,aAAc4C,EAAUzB,YAAY,sBAAsBlB,SAAU,EAAKuB,uBAlBpI7P,MA6BpB,OACE,gCAEE,sBAAKiL,UAAU,kBAAf,UACE,qBAAKA,UAAU,8BAAf,SACE,mDAEF,qBAAKA,UAAU,kBAAf,SACE,cAAC,KAAD,CAAQqD,SAAU,SAACE,GAAa,EAAKD,eAAeC,EAAQ,qBAAsBA,QAASpF,KAAK3B,MAAM3G,WAAW+D,qBAEnH,qBAAKoG,UAAU,kBAAf,SACE,sBAAMA,UAAU,mBAAhB,0FAIJ,sBAAKA,UAAU,kBAAf,UACE,qBAAKA,UAAU,8BAAf,wBAGA,qBAAKA,UAAU,kBAAf,SACE,wBAAQjK,KAAK,SAASiK,UAAU,uBAAuBzC,QAAUY,KAAK0G,QAAtE,sBAIHK,S,GAnIWlG,IAAMC,WCwEXqH,G,kDAvEb,WAAY9J,GAAQ,IAAD,8BACjB,cAAMA,IACD8D,OAAS,EAAKA,OAAO1C,KAAZ,gBACd,EAAK0F,eAAiB,EAAKA,eAAe1F,KAApB,gBAHL,E,mDAMZqF,GACL9E,KAAK3B,MAAM8D,OAAO,cAAgB2C,EAAMC,OAAOrE,GAAGoE,EAAMC,OAAOC,S,qCAGlDI,EAASC,GACtBrF,KAAK3B,MAAM8D,OAAO,cAAgBkD,EAAUD,K,+BAGpC,IAAD,OACP,OACE,gCAEE,sBAAKvD,UAAU,kBAAf,UACE,qBAAKA,UAAU,8BAAf,8BAGA,qBAAKA,UAAU,kBAAf,SACE,uBAAOjK,KAAK,SAAS8I,GAAG,mCAAmCuE,aAAejF,KAAK3B,MAAM3G,WAAWuD,sBAAwB+E,KAAK3B,MAAM3G,WAAWuD,sBAAsBC,WAAa,EAAGqL,IAAI,IAAIC,IAAI,MAAMtB,SAAUlF,KAAKmC,OAAQN,UAAU,gBAEzO,qBAAKA,UAAU,kBAAf,SACE,sBAAMA,UAAU,mBAAhB,wDAIJ,sBAAKA,UAAU,kBAAf,UACE,qBAAKA,UAAU,8BAAf,8BAGA,qBAAKA,UAAU,kBAAf,SACE,uBAAOjK,KAAK,SAAS8I,GAAG,mCAAmCuE,aAAcjF,KAAK3B,MAAM3G,WAAWuD,sBAAwB+E,KAAK3B,MAAM3G,WAAWuD,sBAAsBE,WAAa,EAAGoL,IAAI,IAAIC,IAAI,MAAMtB,SAAUlF,KAAKmC,OAAQN,UAAU,gBAExO,qBAAKA,UAAU,kBAAf,SACE,sBAAMA,UAAU,mBAAhB,wDAIJ,sBAAKA,UAAU,kBAAf,UACE,qBAAKA,UAAU,8BAAf,SACE,6DAEF,qBAAKA,UAAU,kBAAf,SACE,cAAC,KAAD,CAAQqD,SAAU,SAACE,GAAa,EAAKD,eAAeC,EAAQ,+BAAgCA,QAASpF,KAAK3B,MAAM3G,WAAW0D,+BAE7H,qBAAKyG,UAAU,kBAAf,SACE,sBAAMA,UAAU,mBAAhB,6FAIJ,sBAAKA,UAAU,kBAAf,UACE,qBAAKA,UAAU,8BAAf,SACE,2DAEF,qBAAKA,UAAU,kBAAf,SACE,cAAC,KAAD,CAAQqD,SAAU,SAACE,GAAa,EAAKD,eAAeC,EAAQ,6BAA8BA,QAASpF,KAAK3B,MAAM3G,WAAW2D,6BAE3H,qBAAKwG,UAAU,kBAAf,SACE,sBAAMA,UAAU,mBAAhB,mF,GA/DkBhB,IAAMC,WCuDrBsH,G,kDAtDb,WAAY/J,GAAQ,IAAD,8BACjB,cAAMA,IACD8G,eAAiB,EAAKA,eAAe1F,KAApB,gBAFL,E,2DAMJ2F,EAASC,GACtBrF,KAAK3B,MAAM8D,OAAO,cAAgBkD,EAAUD,K,+BAGpC,IAAD,OACP,OACE,gCACE,sBAAKvD,UAAU,kBAAf,UACE,qBAAKA,UAAU,8BAAf,SACE,wDAEF,qBAAKA,UAAU,kBAAf,SACE,cAAC,KAAD,CAAQqD,SAAU,SAACE,GAAa,EAAKD,eAAeC,EAAQ,0BAA2BA,QAASpF,KAAK3B,MAAM3G,WAAWsB,0BAExH,qBAAK6I,UAAU,kBAAf,SACE,sBAAMA,UAAU,mBAAhB,qFAIJ,sBAAKA,UAAU,kBAAf,UACE,qBAAKA,UAAU,8BAAf,SACE,uDAEF,qBAAKA,UAAU,kBAAf,SACE,cAAC,KAAD,CAAQqD,SAAU,SAACE,GAAa,EAAKD,eAAeC,EAAQ,yBAA0BA,QAASpF,KAAK3B,MAAM3G,WAAWwB,yBAEvH,qBAAK2I,UAAU,kBAAf,SACE,sBAAMA,UAAU,mBAAhB,0FAIJ,sBAAKA,UAAU,kBAAf,UACE,qBAAKA,UAAU,8BAAf,SACE,qDAEF,qBAAKA,UAAU,kBAAf,SACE,cAAC,KAAD,CAAQqD,SAAU,SAACE,GAAa,EAAKD,eAAeC,EAAQ,uBAAwBA,QAASpF,KAAK3B,MAAM3G,WAAWyB,uBAErH,qBAAK0I,UAAU,kBAAf,SACE,sBAAMA,UAAU,mBAAhB,gF,GA9CYhB,IAAMC,WCgGfuH,G,kDA/Fb,WAAYhK,GAAQ,IAAD,8BACjB,cAAMA,IACD8D,OAAS,EAAKA,OAAO1C,KAAZ,gBACd,EAAK0F,eAAiB,EAAKA,eAAe1F,KAApB,gBAHL,E,mDAMZqF,GACL9E,KAAK3B,MAAM8D,OAAO,cAAgB2C,EAAMC,OAAOrE,GAAGoE,EAAMC,OAAOC,S,qCAGlDI,EAASC,GACtBrF,KAAK3B,MAAM8D,OAAO,cAAgBkD,EAAUD,K,+BAGpC,IAAD,OACP,OACE,gCAEE,sBAAKvD,UAAU,kBAAf,UACE,qBAAKA,UAAU,8BAAf,8BAGA,qBAAKA,UAAU,kBAAf,SACE,uBAAOjK,KAAK,SAAS8I,GAAG,0CAA0CuE,aAAejF,KAAK3B,MAAM3G,WAAW8B,qBAAuBwG,KAAK3B,MAAM3G,WAAW8B,qBAAqBC,mBAAqB,EAAG8M,IAAI,IAAIC,IAAI,MAAMtB,SAAUlF,KAAKmC,OAAQN,UAAU,gBAEtP,qBAAKA,UAAU,kBAAf,SACE,sBAAMA,UAAU,mBAAhB,qEAIJ,sBAAKA,UAAU,kBAAf,UACE,qBAAKA,UAAU,8BAAf,8BAGA,qBAAKA,UAAU,kBAAf,SACE,uBAAOjK,KAAK,SAAS8I,GAAG,0CAA0CuE,aAAcjF,KAAK3B,MAAM3G,WAAW8B,qBAAuBwG,KAAK3B,MAAM3G,WAAW8B,qBAAqBE,mBAAqB,EAAG6M,IAAI,IAAIC,IAAI,MAAMtB,SAAUlF,KAAKmC,OAAQN,UAAU,gBAErP,qBAAKA,UAAU,kBAAf,SACE,sBAAMA,UAAU,mBAAhB,qEAIJ,sBAAKA,UAAU,kBAAf,UACE,qBAAKA,UAAU,8BAAf,SACE,sDAEF,qBAAKA,UAAU,kBAAf,SACE,cAAC,KAAD,CAAQqD,SAAU,SAACE,GAAa,EAAKD,eAAeC,EAAQ,wBAAyBA,QAASpF,KAAK3B,MAAM3G,WAAW0B,wBAEtH,qBAAKyI,UAAU,kBAAf,SACE,sBAAMA,UAAU,mBAAhB,2FAIJ,sBAAKA,UAAU,kBAAf,UACE,qBAAKA,UAAU,8BAAf,SACE,6DAEF,qBAAKA,UAAU,kBAAf,SACE,cAAC,KAAD,CAAQqD,SAAU,SAACE,GAAa,EAAKD,eAAeC,EAAQ,+BAAgCA,QAASpF,KAAK3B,MAAM3G,WAAW2B,+BAE7H,qBAAKwI,UAAU,kBAAf,SACE,sBAAMA,UAAU,mBAAhB,wEAIJ,sBAAKA,UAAU,kBAAf,UACE,qBAAKA,UAAU,8BAAf,SACE,kDAEF,qBAAKA,UAAU,kBAAf,SACE,cAAC,KAAD,CAAQqD,SAAU,SAACE,GAAa,EAAKD,eAAeC,EAAQ,oBAAqBA,QAASpF,KAAK3B,MAAM3G,WAAW4B,oBAElH,qBAAKuI,UAAU,kBAAf,SACE,sBAAMA,UAAU,mBAAhB,qEAIJ,sBAAKA,UAAU,kBAAf,UACE,qBAAKA,UAAU,8BAAf,SACE,kDAEF,qBAAKA,UAAU,kBAAf,SACE,cAAC,KAAD,CAAQqD,SAAU,SAACE,GAAa,EAAKD,eAAeC,EAAQ,oBAAqBA,QAASpF,KAAK3B,MAAM3G,WAAW6B,oBAElH,qBAAKsI,UAAU,kBAAf,SACE,sBAAMA,UAAU,mBAAhB,yE,GAvFWhB,IAAMC,WCkFdwH,G,kDAlFb,WAAYjK,GAAQ,IAAD,8BACjB,cAAMA,IACDkK,aAAe,EAAKA,aAAa9I,KAAlB,gBACpB,EAAK+I,SAAW,EAAKA,SAAS/I,KAAd,gBAHC,E,yDAMNqF,GACX,IAAMpE,EAAKoE,EAAMC,OAAOrE,GAAG/J,MAAM,KAC3B8R,EAAW/H,EAAG,GAEdgI,EAA4B,SAAVhI,EAAG,GAAgBA,EAAG,GAAK,gBAC7CsE,EAAkB,SAAVtE,EAAG,GAAgBoE,EAAMC,OAAOC,MAAQF,EAAMC,OAAOC,MAAMrO,MAAM,KAE3EgS,EAA2B3I,KAAK3B,MAAM3G,WAAWsD,oBACrD2N,EAAyB5N,OAAO0N,GAAUG,aAAa,GAAGF,GAAmB1D,EAC/D,UAAVtE,EAAG,KAAgBiI,EAAyB5N,OAAO0N,GAAUI,WAAa7D,EAAM,IACpFhF,KAAK3B,MAAM8D,OAAO,iCAAkCwG,K,iCAIpD,IAAIA,EAA2B3I,KAAK3B,MAAM3G,WAAWsD,oBACrD2N,EAAyB5N,OAAOgL,KAAK,CACnC,WAAc,GACd,aAAgB,CACd,CACE,cAAiB,CAAC,IAClB,KAAQ,SAId/F,KAAK3B,MAAM8D,OAAO,iCAAkCwG,K,+BAG5C,IAAD,OAED3C,EAAY,CAChB/G,MAAO,SAGHlE,EAASiF,KAAK3B,MAAM3G,WAAWsD,oBAAoBD,OAAO6J,KAAI,SAACkE,EAAOlS,GAC1E,OACQ,8BACE,sBAAKiL,UAAU,gBAAf,UACE,qBAAKA,UAAU,kBAEf,sBAAKA,UAAU,gBAAf,UACE,kCACE,8CACA,yBAAQvL,KAAK,OAAOoK,GAAI,QAAU9J,EAAGoO,MAAO8D,EAAMF,aAAa,GAAG1C,KAAMhB,SAAU,EAAKqD,aAAvF,UACE,wBAAQvD,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,sBAGJ,kCACE,qDACA,uBAAOpN,KAAK,OAAO8I,GAAI,SAAW9J,EAAG8H,MAAOsH,EAAWf,aAAc6D,EAAMF,aAAa,GAAGG,cAAe3C,YAAY,kBAAkBlB,SAAU,EAAKqD,uBAbzH3R,IAD5BA,MAsBpB,OACE,gCAEE,sBAAKiL,UAAU,kBAAf,UACE,qBAAKA,UAAU,8BAAf,yBAGA,qBAAKA,UAAU,kBAAf,SACE,wBAAQjK,KAAK,SAASiK,UAAU,uBAAuBzC,QAAUY,KAAKwI,SAAtE,sBAIHzN,S,GA5EU8F,IAAMC,WCoFVkI,G,kDAnFb,WAAY3K,GAAQ,IAAD,8BACjB,cAAMA,IACD4K,oBAAsB,EAAKA,oBAAoBxJ,KAAzB,gBAC3B,EAAKyJ,iBAAmB,EAAKA,iBAAiBzJ,KAAtB,gBAHP,E,gEAMCqF,GAClB,IAAMpE,EAAKoE,EAAMC,OAAOrE,GAAG/J,MAAM,KAC3B8R,EAAW/H,EAAG,GAEdgI,EAA4B,SAAVhI,EAAG,GAAgBA,EAAG,GAAK,gBAC7CsE,EAAkB,SAAVtE,EAAG,GAAgBoE,EAAMC,OAAOC,MAAQF,EAAMC,OAAOC,MAAMrO,MAAM,KAE3EwS,EAA0BnJ,KAAK3B,MAAM3G,WAAWoD,mBACpDqO,EAAwBpO,OAAO0N,GAAUG,aAAa,GAAGF,GAAmB1D,EAC9D,UAAVtE,EAAG,KAAgByI,EAAwBpO,OAAO0N,GAAUI,WAAa7D,EAAM,IACnFhF,KAAK3B,MAAM8D,OAAO,gCAAiCgH,K,yCAInD,IAAIA,EAA0BnJ,KAAK3B,MAAM3G,WAAWoD,mBACpDqO,EAAwBpO,OAAOgL,KAAK,CAClC,WAAc,GACd,aAAgB,CACd,CACE,cAAiB,CAAC,IAClB,KAAQ,SAId/F,KAAK3B,MAAM8D,OAAO,gCAAiCgH,K,+BAG3C,IAAD,OAEDnD,EAAY,CAChBpF,WAAY,OACZ3B,MAAO,SAGHlE,EAASiF,KAAK3B,MAAM3G,WAAWoD,mBAAmBC,OAAO6J,KAAI,SAACkE,EAAOlS,GACzE,OACQ,8BACE,sBAAKiL,UAAU,gBAAf,UACE,qBAAKA,UAAU,kBAEf,sBAAKA,UAAU,gBAAf,UACE,kCACE,8CACA,yBAAQvL,KAAK,OAAOoK,GAAI,QAAU9J,EAAGoO,MAAO8D,EAAMF,aAAa,GAAG1C,KAAMhB,SAAU,EAAK+D,oBAAvF,UACE,wBAAQjE,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,sBAGJ,kCACE,gDACA,uBAAOpN,KAAK,OAAO8I,GAAI,SAAW9J,EAAG8H,MAAOsH,EAAWf,aAAc6D,EAAMF,aAAa,GAAGG,cAAe3C,YAAY,sBAAsBlB,SAAU,EAAK+D,8BAb7HrS,IAD5BA,MAsBpB,OACE,gCAEE,sBAAKiL,UAAU,kBAAf,UACE,qBAAKA,UAAU,8BAAf,kCAGA,qBAAKA,UAAU,kBAAf,SACE,wBAAQjK,KAAK,SAASiK,UAAU,uBAAuBzC,QAAUY,KAAKkJ,iBAAtE,sBAIHnO,S,GA7Ee8F,IAAMC,WCwDfsI,G,kDAtDb,WAAY/K,GAAQ,IAAD,8BACjB,cAAMA,IACD8G,eAAiB,EAAKA,eAAe1F,KAApB,gBACtB,EAAK4J,YAAc,EAAKA,YAAY5J,KAAjB,gBAHF,E,2DAOJ2F,EAASC,GACtBrF,KAAK3B,MAAM8D,OAAO,cAAgBkD,EAAUD,K,kCAGlCN,GACV9E,KAAK3B,MAAM8D,OAAO,cAAgB2C,EAAMC,OAAOrE,GAAGoE,EAAMC,OAAOC,MAAMrO,MAAM,Q,+BAGnE,IAAD,OACP,OACE,gCACE,sBAAKkL,UAAU,kBAAf,UACE,qBAAKA,UAAU,8BAAf,SACE,2CAEF,qBAAKA,UAAU,kBAAf,SACE,cAAC,KAAD,CAAQqD,SAAU,SAACE,GAAa,EAAKD,eAAeC,EAAQ,aAAcA,QAASpF,KAAK3B,MAAM3G,WAAWuC,aAE3G,qBAAK4H,UAAU,kBAAf,SACE,sBAAMA,UAAU,mBAAhB,yDAIJ,sBAAKA,UAAU,gBAAf,UACE,qBAAKA,UAAU,4BAAf,mBAGA,qBAAKA,UAAU,gBAAf,SACE,uBAAOjK,KAAK,OAAO8I,GAAG,2BAA2BuE,aAAcjF,KAAK3B,MAAM3G,WAAWsC,eAAgBkL,SAAUlF,KAAKqJ,YAAaxH,UAAU,oBAI/I,sBAAKA,UAAU,gBAAf,UACE,qBAAKA,UAAU,kBAGf,qBAAKA,UAAU,gBAAf,SACE,sBAAMA,UAAU,mBAAhB,oE,GA7CYhB,IAAMC,WCqDfwI,G,kDApDb,WAAYjL,GAAQ,IAAD,8BACjB,cAAMA,IACD8G,eAAiB,EAAKA,eAAe1F,KAApB,gBACtB,EAAK0C,OAAS,EAAKA,OAAO1C,KAAZ,gBAHG,E,2DAOJ2F,EAASC,GACtBrF,KAAK3B,MAAM8D,OAAO,cAAgBkD,EAAUD,K,6BAGvCN,GACL9E,KAAK3B,MAAM8D,OAAO,cAAgB2C,EAAMC,OAAOrE,GAAGoE,EAAMC,OAAOC,S,+BAGvD,IAAD,OACP,OACE,gCACE,sBAAKnD,UAAU,kBAAf,UACE,qBAAKA,UAAU,8BAAf,SACE,mDAEF,qBAAKA,UAAU,kBAAf,SACE,cAAC,KAAD,CAAQqD,SAAU,SAACE,GAAa,EAAKD,eAAeC,EAAQ,qBAAsBA,QAASpF,KAAK3B,MAAM3G,WAAWyC,qBAEnH,qBAAK0H,UAAU,kBAAf,SACE,sBAAMA,UAAU,mBAAhB,0FAIJ,sBAAKA,UAAU,gBAAf,UACE,qBAAKA,UAAU,4BAAf,sBAGA,qBAAKA,UAAU,gBAAf,SACE,uBAAOjK,KAAK,OAAO8I,GAAG,mBAAmBuE,aAAcjF,KAAK3B,MAAM3G,WAAWwC,iBAAkBgL,SAAUlF,KAAKmC,OAAQN,UAAU,oBAIpI,sBAAKA,UAAU,gBAAf,UACE,qBAAKA,UAAU,kBAGf,qBAAKA,UAAU,gBAAf,SACE,sBAAMA,UAAU,mBAAhB,iG,GA7CQhB,IAAMC,WCoGXyI,G,kDAnGb,WAAYlL,GAAQ,IAAD,8BACjB,cAAMA,IACD8D,OAAS,EAAKA,OAAO1C,KAAZ,gBACd,EAAK0F,eAAiB,EAAKA,eAAe1F,KAApB,gBAHL,E,mDAMZqF,GACL9E,KAAK3B,MAAM8D,OAAO,cAAgB2C,EAAMC,OAAOrE,GAAGoE,EAAMC,OAAOC,S,qCAGlDI,EAASC,GACtBrF,KAAK3B,MAAM8D,OAAO,cAAgBkD,EAAUD,K,+BAGpC,IAAD,OAGP,OACE,gCAEE,sBAAKvD,UAAU,kBAAf,UACE,qBAAKA,UAAU,8BAAf,SACE,gEAEF,qBAAKA,UAAU,kBAAf,SACE,cAAC,KAAD,CAAQqD,SAAU,SAACE,GAAa,EAAKD,eAAeC,EAAQ,kCAAmCA,QAASpF,KAAK3B,MAAM3G,WAAW6C,kCAEhI,qBAAKsH,UAAU,kBAAf,SACE,sBAAMA,UAAU,mBAAhB,gGAIJ,sBAAKA,UAAU,kBAAf,UACE,qBAAKA,UAAU,8BAAf,SACE,8DAEF,qBAAKA,UAAU,kBAAf,SACE,cAAC,KAAD,CAAQqD,SAAU,SAACE,GAAa,EAAKD,eAAeC,EAAQ,gCAAiCA,QAASpF,KAAK3B,MAAM3G,WAAW4C,gCAE9H,qBAAKuH,UAAU,kBAAf,SACE,sBAAMA,UAAU,mBAAhB,wFAIJ,sBAAKA,UAAU,kBAAf,UACE,qBAAKA,UAAU,8BAAf,iCAGA,qBAAKA,UAAU,kBAAf,SACE,uBAAOjK,KAAK,SAAS8I,GAAG,uCAAuCuE,aAAejF,KAAK3B,MAAM3G,WAAW8C,iBAAmBwF,KAAK3B,MAAM3G,WAAW8C,iBAAiB9B,oBAAsB,EAAG6N,IAAI,IAAIC,IAAI,MAAMtB,SAAUlF,KAAKmC,OAAQN,UAAU,gBAE5O,qBAAKA,UAAU,kBAAf,SACE,sBAAMA,UAAU,mBAAhB,4EAIJ,sBAAKA,UAAU,kBAAf,UACE,qBAAKA,UAAU,8BAAf,iCAGA,qBAAKA,UAAU,kBAAf,SACE,uBAAOjK,KAAK,SAAS8I,GAAG,uCAAuCuE,aAAcjF,KAAK3B,MAAM3G,WAAW8C,iBAAmBwF,KAAK3B,MAAM3G,WAAW8C,iBAAiB7B,oBAAsB,EAAG4N,IAAI,IAAIC,IAAI,MAAMtB,SAAUlF,KAAKmC,OAAQN,UAAU,gBAE3O,qBAAKA,UAAU,kBAAf,SACE,sBAAMA,UAAU,mBAAhB,4EAIJ,sBAAKA,UAAU,kBAAf,UACE,qBAAKA,UAAU,8BAAf,kBAGA,qBAAKA,UAAU,kBAAf,SACE,uBAAOjK,KAAK,SAAS8I,GAAG,yBAAyBuE,aAAcjF,KAAK3B,MAAM3G,WAAW0C,uBAAwBmM,IAAI,IAAIC,IAAI,MAAMtB,SAAUlF,KAAKmC,OAAQN,UAAU,gBAElK,qBAAKA,UAAU,kBAAf,SACE,sBAAMA,UAAU,mBAAhB,2DAIJ,sBAAKA,UAAU,kBAAf,UACE,qBAAKA,UAAU,8BAAf,mBAGA,qBAAKA,UAAU,kBAAf,SACE,yBAAQvL,KAAK,OAAOoK,GAAG,uBAAuBmB,UAAU,cAAcmD,MAAOhF,KAAK3B,MAAM3G,WAAW2C,qBAAsB6K,SAAUlF,KAAKmC,OAAxI,UACE,wBAAQ6C,MAAM,IAAd,qBACA,wBAAQA,MAAM,IAAd,uC,GAxFmBnE,IAAMC,WCkMxB0I,G,kDAlMb,WAAYnL,GAAQ,IAAD,8BACjB,cAAMA,IACDoI,WAAa,EAAKA,WAAWhH,KAAhB,gBAClB,EAAKiH,QAAU,EAAKA,QAAQjH,KAAb,gBACf,EAAKgK,aAAe,EAAKA,aAAahK,KAAlB,gBACpB,EAAKiK,UAAY,EAAKA,UAAUjK,KAAf,gBALA,E,uDAQRqF,GACT,IACM6B,EADK7B,EAAMC,OAAOrE,GAAG/J,MAAM,KACd,GACfgT,EAA6B3J,KAAK3B,MAAM3G,WAAW6D,sBAE5B,WAAvBuJ,EAAMC,OAAOC,MACf2E,EAA2B9C,OAAOF,EAAS,GACX,WAAvB7B,EAAMC,OAAOC,QACtB2E,EAA2BhD,GAAW7B,EAAMC,OAAOC,OAGrDhF,KAAK3B,MAAM8D,OAAO,mCAAoCwH,K,gCAItD,IAAIA,EAA6B3J,KAAK3B,MAAM3G,WAAW6D,sBACvDoO,EAA2B5D,KAAK,IAChC/F,KAAK3B,MAAM8D,OAAO,mCAAoCwH,K,mCAG3C7E,GACX,IAAMpE,EAAKoE,EAAMC,OAAOrE,GAAG/J,MAAM,KAC3BiT,EAAYlJ,EAAG,GACjBmJ,EAAmB7J,KAAK3B,MAAM3G,WAAW4D,YAEhC,SAAVoF,EAAG,GACJmJ,EAAiBD,GAAWE,cAAc,GAAG5D,KAAOpB,EAAMC,OAAOC,MAC9C,UAAVtE,EAAG,IACZmJ,EAAiBD,GAAWE,cAAc,GAAGC,QAAUjF,EAAMC,OAAOC,MAAMrO,MAAM,KAChFkT,EAAiBD,GAAWI,iBAAmBlF,EAAMC,OAAOC,MAAMrO,MAAM,KAAK,IAC1D,UAAV+J,EAAG,KACZmJ,EAAiBD,GAAWK,gBAAgB,GAAKnF,EAAMC,OAAOC,OAEhEhF,KAAK3B,MAAM8D,OAAO,yBAA0B0H,K,kCAI5C,IAAIA,EAAmB7J,KAAK3B,MAAM3G,WAAW4D,YAC7CuO,EAAiB9D,KAAK,CACpB,iBAAoB,GACpB,gBAAmB,CAAC,IACpB,cAAiB,CAAC,CAChB,QAAW,CAAC,IACZ,SAAY,SAGhB/F,KAAK3B,MAAM8D,OAAO,yBAA0B0H,K,+BAGpC,IAAD,OAED7D,EAAY,CAChB/G,MAAO,SAGH8H,EAAQ/G,KAAK3B,MAAM3G,WAAW6D,sBAAsBqJ,KAAI,SAACoC,EAAMpQ,GAEnE,OACQ,8BACE,sBAAKiL,UAAU,gBAAf,UACE,qBAAKA,UAAU,kBAEf,qBAAKA,UAAU,gBAAf,SACE,kCACE,0CACA,yBAAQvL,KAAK,OAAOoK,GAAI,QAAU9J,EAAGoO,MAAOgC,EAAM9B,SAAU,EAAKuB,WAAjE,UACE,wBAAQzB,MAAM,SAAd,2BACA,wBAAQA,MAAM,SAAd,8BACA,wBAAQA,MAAM,uBAAd,kCACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,kBAAd,6BACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,gBAAd,2BACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,8BAlCApO,MA4CdsT,EAAUlK,KAAK3B,MAAM3G,WAAW4D,YAAYsJ,KAAI,SAACuF,EAAQvT,GAE7D,OACQ,8BACE,sBAAKiL,UAAU,gBAAf,UACE,qBAAKA,UAAU,kBAEf,sBAAKA,UAAU,gBAAf,UACE,kCACE,8CACA,yBAAQvL,KAAK,OAAOoK,GAAI,QAAU9J,EAAGoO,MAAOmF,EAAOL,cAAc,GAAG5D,KAAMhB,SAAU,EAAKuE,aAAzF,UACE,wBAAQzE,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,sBAGJ,wBAAOtG,MAAOsH,EAAd,UACE,iDACA,uBAAOpO,KAAK,OAAO8I,GAAI,SAAW9J,EAAGqO,aAAckF,EAAOL,cAAc,GAAGC,QAAS3D,YAAY,cAAclB,SAAU,EAAKuE,kBAE/H,kCACE,2CACA,yBAAQnT,KAAK,OAAOoK,GAAI,SAAW9J,EAAGoO,MAAOmF,EAAOF,gBAAgB,GAAI/E,SAAU,EAAKuE,aAAvF,UACE,wBAAQzE,MAAM,WAAd,sBACA,wBAAQA,MAAM,gBAAd,oBACA,wBAAQA,MAAM,cAAd,yBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,aAAd,wBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,eAAd,0BACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,aAAd,uBACA,wBAAQA,MAAM,cAAd,wBACA,wBAAQA,MAAM,cAAd,wBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,cAAd,yBACA,wBAAQA,MAAM,YAAd,oCA1CApO,MAmDpB,OACE,gCAEE,sBAAKiL,UAAU,kBAAf,UACE,qBAAKA,UAAU,8BAAf,gCAGA,qBAAKA,UAAU,kBAAf,SACE,wBAAQjK,KAAK,SAASiK,UAAU,uBAAuBzC,QAAUY,KAAK0G,QAAtE,sBAIHK,EAED,sBAAKlF,UAAU,kBAAf,UACE,qBAAKA,UAAU,8BAAf,0BAGA,qBAAKA,UAAU,kBAAf,SACE,wBAAQjK,KAAK,SAASiK,UAAU,uBAAuBzC,QAAUY,KAAK0J,UAAtE,sBAIHQ,S,GA5LUrJ,IAAMC,WC4HVsJ,G,kDA3Hb,WAAY/L,GAAQ,IAAD,8BACjB,cAAMA,IACD8D,OAAS,EAAKA,OAAO1C,KAAZ,gBAFG,E,mDAKZqF,GACL,IAAME,EAAQF,EAAMC,OAAOC,MACvBqF,EAAS,CACX/T,KAAM0O,GAGR,OAAQA,GACN,QAMA,IAAK,aACHqF,EAAM,wBAA8B,CAClCC,gBAAiB,CAAC,OAAO,OAAO,UAAU,WAAW,OAAO,SAAS,YAAY,iCAAiC,YAAY,iBAAiB,YAEjJD,EAAM,oBAAyB,CAAEE,aAAc,OAC/C,MACF,IAAK,qBACHF,EAAM,wBAA8B,CAClCG,oBAAqB,CAAED,aAAc,sBAEvC,MACF,IAAK,sBACHF,EAAM,wBAA8B,CAClCC,gBAAiB,CAAC,2BAA2B,OAAO,8BAA8B,YAEpFD,EAAM,oBAAyB,CAAEE,aAAc,qBAC/C,MACF,IAAK,oBACHF,EAAM,wBAA8B,CAClCC,gBAAiB,CAAC,QAAQ,QAAQ,oBAAoB,YAExD,MACF,IAAK,iBACHD,EAAM,wBAA8B,CAClCC,gBAAiB,CAAC,OAAO,MAAM,eAAe,cAAc,YAE9DD,EAAM,oBAAyB,CAAEE,aAAc,cAC/C,MACF,IAAK,qBAGL,IAAK,qBACHF,EAAM,oBAAyB,CAAEE,aAAc,cAC/C,MACF,IAAK,QAGL,IAAK,OACHF,EAAM,oBAAyB,CAAEE,aAAc,8BAC/C,MACF,IAAK,oBACHF,EAAM,oBAAyB,CAAEE,aAAc,cAC/C,MACF,IAAK,aACHF,EAAM,wBAA8B,CAClCC,gBAAiB,CAAC,iBAAiB,OAAO,oBAAoB,YAEhED,EAAM,oBAAyB,CAAEE,aAAc,qBAC/C,MACF,IAAK,YACHF,EAAM,wBAA8B,CAClCC,gBAAiB,CAAC,OAAO,UAAU,YAErC,MACF,IAAK,gBACHD,EAAM,wBAA8B,CAClCC,gBAAiB,CAAC,gBAAgB,mBAAmB,YAEvD,MACF,IAAK,2BACHD,EAAM,oBAAyB,CAAEE,aAAc,qBAInD,IAAI7O,EAAwB,GAC5BA,EAAsBqK,KAAKsE,GAC3BrK,KAAK3B,MAAM8D,OAAO,cAAgB2C,EAAMC,OAAOrE,GAAGhF,K,+BAIlD,OACE,8BACE,sBAAKmG,UAAU,kBAAf,UACE,qBAAKA,UAAU,8BAAf,yBAGA,qBAAKA,UAAU,kBAAf,SACE,yBAAQvL,KAAK,OAAOoK,GAAG,wBAAwBmB,UAAU,cAAcmD,MAAOhF,KAAK3B,MAAM3G,WAAWgE,sBAAsB,GAAGpF,KAAM4O,SAAUlF,KAAKmC,OAAlJ,UACE,wBAAQ6C,MAAM,GAAd,oBACA,wBAAQA,MAAM,aAAd,yBACA,wBAAQA,MAAM,qBAAd,kCACA,wBAAQA,MAAM,sBAAd,mCACA,wBAAQA,MAAM,oBAAd,iCACA,wBAAQA,MAAM,iBAAd,8BACA,wBAAQA,MAAM,qBAAd,mCACA,wBAAQA,MAAM,qBAAd,mCACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,oBAAd,iCACA,wBAAQA,MAAM,aAAd,yBACA,wBAAQA,MAAM,YAAd,wBACA,wBAAQA,MAAM,gBAAd,4BACA,wBAAQA,MAAM,2BAAd,6CAGJ,qBAAKnD,UAAU,kBAAf,SACE,sBAAMA,UAAU,gC,GAnHFhB,IAAMC,WC2XjB2J,G,kDAlWb,WAAYpM,GAAQ,IAAD,sBACjB,cAAMA,GACN,IAAMqC,EAAKvJ,OAAOC,SAASsT,SAAS/T,MAAM,KAAK,GAC3CgU,GAAS,EAHI,MAIN,KAAPjK,IAAWiK,GAAS,GACxB,EAAKtG,MAAQ,CACX3D,GAAIA,EACJiK,OAAQA,EACRxJ,OAAQ,CACNzJ,WAAY,GACZkT,WAAY,GACZlK,GAAI,GACJpK,KAAM,CACJuU,aAAc,GACdC,UAAW,GACXxU,KAAM,IAERmB,OAAQ,GACRG,KAAM,IAERmI,OAAQ,CACN3D,QAAQ,GAEV2O,cAAe,GACfC,uBAAuB,EACvBC,YAAa,IAEf,EAAKC,YAAc,EAAKA,YAAYzL,KAAjB,gBACnB,EAAK0C,OAAS,EAAKA,OAAO1C,KAAZ,gBACd,EAAK0L,SAAW,EAAKA,SAAS1L,KAAd,gBAChB,EAAK2L,WAAa,EAAKA,WAAW3L,KAAhB,gBAClB,EAAK4L,aAAe,EAAKA,aAAa5L,KAAlB,gBACpB,EAAK6L,oBAAsB,EAAKA,oBAAoB7L,KAAzB,gBAC3B,EAAK8L,KAAO,EAAKA,KAAK9L,KAAV,gBACZ,EAAK+L,OAAS,EAAKA,OAAO/L,KAAZ,gBACd,EAAKgM,iBAAmB,EAAKA,iBAAiBhM,KAAtB,gBAnCP,E,gEAuCjB,IAAKO,KAAKqE,MAAMsG,OAAO,CACrB,IAAIjL,EAAO,IAAIC,eACfD,EAAKE,OAAS,SAAUC,GACtB,GAAwB,IAApBH,EAAKI,WACP,GAAoB,MAAhBJ,EAAKK,OAAgB,CACvB,IAAIuE,EAAO9D,KAAKiE,MAAM/E,EAAKgF,cACvBgH,EAAoBnU,EAAgBC,QAAQ8M,EAAK1M,MAAMH,OACvDsT,EAAgBzG,EAAK7M,OAAOkU,OAAOD,GACvCX,EAAgBA,EAAca,QAAO,SAACC,EAAMC,GAC1C,OAAQf,EAAc9T,QAAQ4U,KAAWC,KAE3C9L,KAAK2E,SAAS,CACXxD,OAAQmD,EACRyG,cAAeA,SAGlB7K,QAAQC,MAAMT,EAAKU,aAGvBX,KAAKO,MACPN,EAAKW,KAAK,MAAOnJ,EAAO,mBAAqB8I,KAAKqE,MAAM3D,GAAK,KAC7DhB,EAAKY,iBAAiB,gBAAiB,UAAYlK,EAAe,UAClEsJ,EAAKa,U,kCAIGwL,EAAU/G,GACpB,IAAIgH,EAAQhH,EAAMrO,MAAM,KACpBsV,EAAcjM,KAAKqE,MAAMlD,OAC7B8K,EAAY3V,KAAO,CACjBuU,aAAcmB,EACdlB,UAAWkB,EACX1V,KAAM0V,EAAM,IAEdhM,KAAK2E,SAAS,CACZxD,OAAQ8K,M,6BAILC,EAAKlH,GACV,IAAIiH,EAAcjM,KAAKqE,MAAMlD,OACzBE,EAAO6K,EAAIvV,MAAM,KACD,IAAhB0K,EAAKxK,OACPoV,EAAYC,GAAOlH,EACI,IAAhB3D,EAAKxK,OACZoV,EAAY5K,EAAK,IAAIA,EAAK,IAAM2D,EACT,IAAhB3D,EAAKxK,SACZoV,EAAY5K,EAAK,IAAIA,EAAK,IAAIA,EAAK,IAAM2D,GAC3ChF,KAAK2E,SAAS,CACZxD,OAAQ8K,M,+BAIHnH,GACP9E,KAAKmC,OAAO,KAAK2C,EAAMC,OAAOC,S,iCAGrBF,GACT9E,KAAKmC,OAAO,OAAO2C,EAAMC,OAAOC,OAChChF,KAAK2E,SAAS,CACXoG,cAAexT,EAAgBC,QAAQsN,EAAMC,OAAOC,OAAOvN,W,mCAInD2N,EAASyG,GACpB,IAAII,EAAcjM,KAAKqE,MAAMlD,OACzBgL,EAAcnM,KAAKqE,MAAMtE,OAC7B,GAAIqF,GACF,IAAiD,IAA7CpF,KAAKqE,MAAMlD,OAAO1J,OAAOH,SAASuU,GAAiB,CAErDI,EAAYxU,OAAOsO,KAAK8F,GAExB,IAAInU,EAAaH,EAAgBE,OAAOoU,GAAOnU,WAC/C0J,OAAOC,KAAK3J,GAAY0U,SAAQ,SAAC/G,EAAWzO,GAC1CqV,EAAYvU,WAAW2N,GAAa3N,EAAW2N,GAAWxN,WAG/CN,EAAgBE,OAAOoU,GAAO9T,OACpCqU,SAAQ,SAACC,EAAOzV,GACrBuV,EAAYE,GAAS9U,EAAgBQ,OAAOsU,GAAOxU,iBAIN,IAA7CmI,KAAKqE,MAAMlD,OAAO1J,OAAOH,SAASuU,KACpCI,EAAYxU,OAASwU,EAAYxU,OAAOmU,QAAO,SAAS5G,EAAO8G,EAAOQ,GAAM,OAAOtH,IAAU6G,MAGjG3L,QAAQqM,IAAIN,GACZ/L,QAAQqM,IAAIV,GACZ7L,KAAK2E,SAAS,CACZxD,OAAQ8K,EACRlM,OAAQoM,M,4CAKVnM,KAAK2E,SAAS,CACZoG,cAAe3J,OAAOC,KAAK9J,EAAgBE,QAC3CuT,uBAAuB,M,6BAKzB,IAAItL,EAAO,IAAIC,eACfD,EAAKE,OAAS,SAAUC,GACE,IAApBH,EAAKI,aACa,MAAhBJ,EAAKK,QACPS,KAAKiE,MAAM/E,EAAKgF,cAChB1E,KAAK2E,SAAS,CACXsG,YAAa,qBAEXjL,KAAKqE,MAAMsG,SACbxT,OAAOC,SAASC,KAAO,cAG1B6I,QAAQC,MAAMT,EAAKU,YACnBJ,KAAK2E,SAAS,CACXsG,YAAa,4CAGlBuB,WAAW,WACTxM,KAAK2E,SAAS,CACXsG,YAAa,MAEhBxL,KAAKO,MAAO,OAEhBP,KAAKO,MACP,IAAIyM,EAAU,CACZ,OAAUzM,KAAKqE,MAAMlD,QAEnBnB,KAAKqE,MAAMsG,QACbjL,EAAKW,KAAK,OAAQnJ,EAAO,uBACzBuV,EAAQ1M,OAASC,KAAKqE,MAAMtE,QAE5BL,EAAKW,KAAK,OAAQnJ,EAAO,uBAE3BwI,EAAKY,iBAAiB,eAAgB,kCACtCZ,EAAKY,iBAAiB,gBAAiB,UAAYlK,EAAe,UAClEsJ,EAAKa,KAAKC,KAAKC,UAAUgM,M,+BAIzB,GAAGtV,OAAOuV,QAAQ,qCAAqC,CACrD,IAAIhN,EAAO,IAAIC,eACfD,EAAKE,OAAS,SAAUC,GACE,IAApBH,EAAKI,aACa,MAAhBJ,EAAKK,OACP5I,OAAOC,SAASC,KAAO,aAEvB6I,QAAQC,MAAMT,EAAKU,YACnBJ,KAAK2E,SAAS,CACXsG,YAAa,4CAGlBuB,WAAW,WACTxM,KAAK2E,SAAS,CACXsG,YAAa,MAEhBxL,KAAKO,MAAO,OAEhBP,KAAKO,MACPN,EAAKW,KAAK,MAAOnJ,EAAO,sBAAwB8I,KAAKqE,MAAMlD,OAAOT,GAAK,KACvEhB,EAAKY,iBAAiB,gBAAiB,UAAYlK,EAAe,UAClEsJ,EAAKa,YAELP,KAAK2E,SAAS,CACXsG,YAAa,8B,uCAKHY,GACf,GAAI7L,KAAKqE,MAAMlD,OAAO1J,OAAOH,SAASuU,GAAO,CAC3C,GAAc,gCAAVA,EACF,OAAO,cAAC,GAAD,CAAOnU,WAAYsI,KAAKqE,MAAMlD,OAAOzJ,WAAYyK,OAAQnC,KAAKmC,SAClE,GAAc,gCAAV0J,EACP,OAAO,cAAC,GAAD,CAAOnU,WAAYsI,KAAKqE,MAAMlD,OAAOzJ,WAAYyK,OAAQnC,KAAKmC,SAClE,GAAc,qCAAV0J,EACP,OAAO,cAAC,GAAD,CAAY5T,sBAAuB+H,KAAKqE,MAAMlD,OAAOzJ,WAAWO,sBAAuBkK,OAAQnC,KAAKmC,SACxG,GAAc,uCAAV0J,EACP,OAAO,cAAC,GAAD,CAAcnU,WAAYsI,KAAKqE,MAAMlD,OAAOzJ,WAAYyK,OAAQnC,KAAKmC,SACzE,GAAc,mCAAV0J,EACP,OAAO,cAAC,GAAD,CAAUnU,WAAYsI,KAAKqE,MAAMlD,OAAOzJ,WAAYyK,OAAQnC,KAAKmC,SACrE,GAAc,6CAAV0J,EACP,OAAO,cAAC,GAAD,CAAoBnU,WAAYsI,KAAKqE,MAAMlD,OAAOzJ,WAAYyK,OAAQnC,KAAKmC,SAC/E,GAAc,kCAAV0J,EACP,OAAO,cAAC,GAAD,CAASnU,WAAYsI,KAAKqE,MAAMlD,OAAOzJ,WAAYyK,OAAQnC,KAAKmC,SACpE,GAAc,gCAAV0J,EACP,OAAO,cAAC,GAAD,CAAOnU,WAAYsI,KAAKqE,MAAMlD,OAAOzJ,WAAYyK,OAAQnC,KAAKmC,SAClE,GAAc,0CAAV0J,EACP,OAAO,cAAC,GAAD,CAAiBnU,WAAYsI,KAAKqE,MAAMlD,OAAOzJ,WAAYyK,OAAQnC,KAAKmC,SAC5E,GAAc,oCAAV0J,EACP,OAAO,cAAC,GAAD,CAAWnU,WAAYsI,KAAKqE,MAAMlD,OAAOzJ,WAAYyK,OAAQnC,KAAKmC,SACtE,GAAc,mCAAV0J,EACP,OAAO,cAAC,GAAD,CAAUnU,WAAYsI,KAAKqE,MAAMlD,OAAOzJ,WAAYyK,OAAQnC,KAAKmC,SACrE,GAAc,+BAAV0J,EACP,OAAO,cAAC,GAAD,CAAMnU,WAAYsI,KAAKqE,MAAMlD,OAAOzJ,WAAYyK,OAAQnC,KAAKmC,SACjE,GAAc,oCAAV0J,EACP,OAAO,cAAC,GAAD,CAAWnU,WAAYsI,KAAKqE,MAAMlD,OAAOzJ,WAAYyK,OAAQnC,KAAKmC,SACtE,GAAc,oCAAV0J,EACP,OAAO,cAAC,GAAD,CAAWnU,WAAYsI,KAAKqE,MAAMlD,OAAOzJ,WAAYyK,OAAQnC,KAAKmC,SACtE,GAAc,gCAAV0J,EACP,OAAO,cAAC,GAAD,CAAOnU,WAAYsI,KAAKqE,MAAMlD,OAAOzJ,WAAYyK,OAAQnC,KAAKmC,SAClE,GAAc,6CAAV0J,EACP,OAAO,cAAC,GAAD,CAAoBnU,WAAYsI,KAAKqE,MAAMlD,OAAOzJ,WAAYyK,OAAQnC,KAAKmC,SAC/E,GAAc,+BAAV0J,EACP,OAAO,cAAC,GAAD,CAAMnU,WAAYsI,KAAKqE,MAAMlD,OAAOzJ,WAAYyK,OAAQnC,KAAKmC,SACjE,GAAc,sCAAV0J,EACP,OAAO,cAAC,GAAD,CAAanU,WAAYsI,KAAKqE,MAAMlD,OAAOzJ,WAAYyK,OAAQnC,KAAKmC,Y,+BAIvE,IAAD,OAWDwK,EAAQvL,OAAOC,KAAK9J,EAAgBC,SAASoN,KAAI,SAAChN,GACtD,OAAO,wBAAmBoN,MAAOpN,EAA1B,SAAiCL,EAAgBC,QAAQI,GAAMtB,MAAlDsB,MAGhBkT,EAAY9K,KAAKqE,MAAMlD,OAAO7K,KAAKwU,UAAUlG,KAAI,SAACtO,GACtD,OAAOA,KAGHmB,EAASuI,KAAKqE,MAAM0G,cAAcnG,KAAI,SAACiH,GAAD,OAC1C,gCACE,oBAAIhK,UAAU,cACd,sBAAKA,UAAU,kBAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,4BAAItK,EAAgBE,OAAOoU,GAAOvV,SAEpC,qBAAKuL,UAAU,kBAAf,SACE,cAAC,KAAD,CAAQqD,SAAU,SAACE,GAAa,EAAKiG,aAAajG,EAAQyG,IAASzG,QAAS,EAAKf,MAAMlD,OAAO1J,OAAOH,SAASuU,OAEhH,sBAAKhK,UAAU,kBAAf,2BACgB,mBAAGxK,KAAM,4DAA8DwU,EAAMlV,MAAM,KAAK,GAAGiW,cAAe7H,OAAO,SAAjH,iCAGjB,EAAK0G,iBAAiBI,KAbfA,MAiBZ,OACE,8BAEE,sBAAKhK,UAAU,uBAAf,UACE,iDACA,sBAAKA,UAAU,SAAf,UACE,mEACA,0BAEF,sBAAKA,UAAU,+BAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,qBAAKA,UAAU,gBAAf,wBAGA,qBAAKA,UAAU,gBAAf,SACE,uBAAOjK,KAAK,OAAOiK,UAAU,YAAYnB,GAAG,KAAKuE,aAAcjF,KAAKqE,MAAMlD,OAAOT,GAAIwE,SAAUlF,KAAKmL,SAAU0B,UAAW7M,KAAKqE,MAAMsG,cAGxI,sBAAK9I,UAAU,gBAAf,UACE,qBAAKA,UAAU,gBAAf,0BAGA,qBAAKA,UAAU,gBAAf,SACE,yBAAQvL,KAAK,OAAOuL,UAAU,YAAYnB,GAAG,OAAOsE,MAAOhF,KAAKqE,MAAMlD,OAAOvJ,KAAMsN,SAAUlF,KAAKoL,WAAYyB,UAAW7M,KAAKqE,MAAMsG,OAApI,UACE,wBAAQ3F,MAAM,UAAd,6BACC2H,UAIP,cAAC,GAAD,CAAMrW,KAAK,cAAcgO,KAAK,YAAYU,MAAO8F,EAAW3I,OAAQnC,KAAKkL,cACzE,cAAC,GAAD,CAAM5U,KAAK,mBAAmBgO,KAAK,uBAAuBU,MAAOhF,KAAKqE,MAAMlD,OAAOyJ,WAAa5K,KAAKqE,MAAMlD,OAAOyJ,WAAWkC,UAAY,GAAI3K,OAAQnC,KAAKmC,SAC1J,cAAC,GAAD,CAAM7L,KAAK,mBAAmBgO,KAAK,uBAAuBU,MAAOhF,KAAKqE,MAAMlD,OAAOyJ,WAAa5K,KAAKqE,MAAMlD,OAAOyJ,WAAWmC,UAAY,GAAI5K,OAAQnC,KAAKmC,SAC1J,cAAC,GAAD,CAAM7L,KAAK,eAAegO,KAAK,0BAA0BU,MAAOhF,KAAKqE,MAAMlD,OAAOyJ,WAAa5K,KAAKqE,MAAMlD,OAAOyJ,WAAWoC,aAAe,GAAI7K,OAAQnC,KAAKmC,SAC5J,cAAC,GAAD,CAAM7L,KAAK,QAAQgO,KAAK,mBAAmBU,MAAOhF,KAAKqE,MAAMlD,OAAOyJ,WAAa5K,KAAKqE,MAAMlD,OAAOyJ,WAAWqC,MAAQ,GAAI9K,OAAQnC,KAAKmC,SACvI,sBAAKN,UAAU,SAAf,UACE,oEAAsC,kCAAtC,cAA6D,uBAC7D,0DAEF,uBACA,wCACA,qBAAKA,UAAU,SAAf,SACE,+EAEDpK,EAECuI,KAAKqE,MAAM2G,sBAET,GAEA,wBAAQpT,KAAK,SAASwH,QAAUY,KAAKsL,oBAArC,yBAGJ,uBACA,sBAAKzJ,UAAU,gBAAf,UACE,wBAAQjK,KAAK,SAAS8G,MAAQsB,KAAKqE,MAAMsG,OArFtB,CAC3BhJ,gBAAiB,MACjBC,QAAS,OANU,CACnBD,gBAAiB,OAwF+EvC,QAAUY,KAAKwL,OAASqB,WAAW7M,KAAKqE,MAAMsG,OAAtI,oBACA,wBAAQ/S,KAAK,SAASwH,QAAUY,KAAKuL,KAArC,kBACA,+BAAOvL,KAAKqE,MAAM4G,6B,GAzVXpK,IAAMC,W,oBC6EZ2J,G,kDAjGb,WAAYpM,GAAQ,IAAD,sBACjB,cAAMA,GACN,IAAMqC,EAAKvJ,OAAOC,SAASsT,SAAS/T,MAAM,KAAK,GAF9B,OAGjB,EAAK0N,MAAQ,CACX3D,GAAIA,EACJS,OAAQ,CACNzJ,WAAY,GACZkT,WAAY,GACZlK,GAAI,GACJpK,KAAM,CACJ4W,aAAc,GACdpC,UAAW,GACXxU,KAAM,IAERmB,OAAQ,GACRG,KAAM,IAERmI,OAAQ,CACN3D,QAAQ,IAlBK,E,gEAwBjB,IAAI+Q,EAAM,IAAIxN,eACdwN,EAAIvN,OAAS,SAAUC,GACrB,GAAuB,IAAnBsN,EAAIrN,WACN,GAAmB,MAAfqN,EAAIpN,OAAgB,CACtB,IAAIuE,EAAO9D,KAAKiE,MAAM0I,EAAIzI,cAC1B1E,KAAK2E,SAAS,CACXxD,OAAQmD,SAGXpE,QAAQC,MAAMgN,EAAI/M,aAGtBX,KAAKO,MACPmN,EAAI9M,KAAK,MAAOnJ,EAAO,mBAAqB8I,KAAKqE,MAAM3D,GAAK,KAC5DyM,EAAI7M,iBAAiB,gBAAiB,UAAYlK,EAAe,UACjE+W,EAAI5M,OAEJ,IAAI6M,EAAM,IAAIzN,eACdyN,EAAIxN,OAAS,SAAUC,GACrB,GAAuB,IAAnBuN,EAAItN,WACN,GAAmB,MAAfsN,EAAIrN,OAAgB,CACtB,IAAIuE,EAAO9D,KAAKiE,MAAM2I,EAAI1I,cAC1B1E,KAAK2E,SAAS,CACX5E,OAAQuE,SAGXpE,QAAQC,MAAMiN,EAAIhN,aAGtBX,KAAKO,MACPoN,EAAI/M,KAAK,MAAOnJ,EAAO,kBAAoB8I,KAAKqE,MAAM3D,GAAK,KAC3D0M,EAAI9M,iBAAiB,gBAAiB,UAAYlK,EAAe,UACjEgX,EAAI7M,S,+BAOJ,IAAM8M,EAAc,CAClBC,UAAW,QAGb,OACE,gCAEE,sBAAKzL,UAAU,uBAAf,UACE,mDACA,sBAAKA,UAAU,SAAf,UACE,mEACA,0BAEF,qBAAKnD,MAAO2O,EAAZ,SACE,cAAC,KAAD,CAAWvO,IAAKkB,KAAKqE,MAAMlD,cAI/B,sBAAKU,UAAU,uBAAf,UACE,+CACA,sBAAKA,UAAU,SAAf,UACE,yDACA,0BAEF,qBAAKnD,MAAO2O,EAAZ,SACE,cAAC,KAAD,CAAWvO,IAAKkB,KAAKqE,MAAMtE,qB,GAzFlBc,IAAMC,WCwHZE,I,wDArHb,WAAY3C,GAAQ,IAAD,sBACjB,cAAMA,GACN,IAAMqC,EAAKvJ,OAAOC,SAASsT,SAAS/T,MAAM,KAAK,GAF9B,OAGjB,EAAK0N,MAAQ,CACX3D,GAAIA,EACJjJ,OAAQ,GACRM,OAAQ,GACRC,SAAU,IAPK,E,gEAYjB,IAAImV,EAAM,IAAIxN,eACdwN,EAAIvN,OAAS,SAAUC,GACrB,GAAuB,IAAnBsN,EAAIrN,WACN,GAAmB,MAAfqN,EAAIpN,OAAgB,CACtB,IACMtI,EADO+I,KAAKiE,MAAM0I,EAAIzI,cACRjN,OAChBO,EAAW,GACXD,EAAS,GACbN,EAAO2U,SAAQ,SAACP,GACd9T,EAASA,EAAO4T,OAAOpU,EAAgBE,OAAOoU,GAAO9T,QACrDC,EAAWA,EAAS2T,OAAOpU,EAAgBE,OAAOoU,GAAO7T,aAE3DgI,KAAK2E,SAAS,CACXlN,OAAQA,EACRM,OAAQA,EACRC,SAAUA,SAGbkI,QAAQC,MAAMgN,EAAI/M,aAGtBX,KAAKO,MACPmN,EAAI9M,KAAK,MAAOnJ,EAAO,mBAAqB8I,KAAKqE,MAAM3D,GAAK,KAC5DyM,EAAI7M,iBAAiB,gBAAiB,UAAYlK,EAAe,UACjE+W,EAAI5M,S,+BAGI,IAAD,OAEDxI,EAASiI,KAAKqE,MAAMtM,OAAO6M,KAAI,SAACyH,EAAOzV,GAC3C,IAAIgB,EAAOL,EAAgBQ,OAAOsU,GAAOzU,KAC5B,SAATA,IACFA,EAAO,UAET,IAAI2V,EAAQ,uCAIZ,OAHIhW,EAAgBQ,OAAOsU,GAAOzQ,YAChC2R,EAAQ,UAAY,EAAKlJ,MAAM3D,GAAK,IAAM2L,GAG1C,sBAAaxK,UAAU,kBAAvB,UACE,qBAAKA,UAAU,kBAAf,SAAkCwK,IAClC,qBAAKxK,UAAU,kBAAf,SAAkC0L,IAClC,qBAAK1L,UAAU,kBAAf,SAAkCjK,MAH1BhB,MAQRoB,EAAWgI,KAAKqE,MAAMrM,SAAS4M,KAAI,SAACjL,EAAS/C,GACjD,OACE,sBAAaiL,UAAU,oBAAvB,UACE,qBAAKA,UAAU,oBAAf,SAAoClI,EAAQA,UAC5C,qBAAKkI,UAAU,oBAAf,SAAoC,UAAY,EAAKwC,MAAM3D,GAAK,aAChE,qBAAKmB,UAAU,oBAAf,SAAoClI,EAAQC,gBAHpChD,MAad,OACE,gCAEE,sBAAKiL,UAAU,uBAAf,UACE,wCACA,sBAAKA,UAAU,SAAf,UACE,6HACA,kLACA,uIACA,0BAEF,sBAAKA,UAAU,qCAAf,UACE,qBAAKA,UAAU,kBAAf,SAAiC,wCACjC,qBAAKA,UAAU,kBAAf,SAAiC,sDACjC,qBAAKA,UAAU,kBAAf,SAAiC,0CAElC9J,EACD,sBAAK8J,UAAU,SAASnD,MArBjB,CACX4O,UAAW,QAoBP,UACE,uBACA,0IACA,cAAC,KAAD,CAAWxO,IAzBL,CAAC,GAAK,WAAW,MAAQ,aAAa,MAAQ,KAAK,OAAS,mBA6BtE,sBAAK+C,UAAU,uBAAf,UACE,0CACA,sBAAKA,UAAU,SAAf,UACE,uIACA,0BAEF,sBAAKA,UAAU,yCAAf,UACE,qBAAKA,UAAU,oBAAf,SAAmC,0CACnC,qBAAKA,UAAU,oBAAf,SAAmC,sDACnC,qBAAKA,UAAU,oBAAf,SAAmC,iDAEpC7J,Y,GA9Gc6I,IAAMC,YCoEhB0M,I,wDAnEb,WAAYnP,GAAQ,IAAD,8BACjB,cAAMA,IACDgG,MAAQ,CACX7M,QAAS,GACTiW,MAAO,IAET,EAAKlJ,SAAW,EAAKA,SAAS9E,KAAd,gBANC,E,gEAUjBO,KAAKuE,a,iCAIL,IAAI7E,EAAO,IAAIC,eACfD,EAAKE,OAAS,SAAUC,GACtB,GAAwB,IAApBH,EAAKI,WACP,GAAoB,MAAhBJ,EAAKK,OAAgB,CACvB,IAAIuE,EAAO9D,KAAKiE,MAAM/E,EAAKgF,cAC3B1E,KAAK2E,SAAS,CACXnN,QAAS8M,EAAK9M,QACdiW,MAAOnJ,EAAKmJ,aAGfvN,QAAQC,MAAMT,EAAKU,aAGvBX,KAAKO,MACPN,EAAKW,KAAK,MAAOnJ,EAAO,mBACxBwI,EAAKY,iBAAiB,gBAAiB,UAAYlK,EAAe,UAClEsJ,EAAKa,S,+BAKL,IAAMkN,EAAQzN,KAAKqE,MAAMoJ,MAAM7I,KAAI,SAAC8I,EAAM9W,GACxC,OACE,cAAC,IAAD,CAAc0I,GAAI,kBAAoB1I,EAAGiL,UAAU,YAAnD,SACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,kBAAkBnB,GAAK,QAAU9J,EAA/C,SAAqD8W,EAAKrO,QAC1D,oBAAIwC,UAAU,sBACd,4BAAK6L,EAAK9T,kBAJHhD,MAUf,OACE,gCACE,qBAAKiL,UAAU,uBAAf,SACE,yCAGF,qBAAKA,UAAU,uBAAf,SACG4L,IAGH,qBAAK5L,UAAU,0BAAf,SACE,cAAC,IAAD,CAAMvC,GAAG,kBAAT,SACE,wBAAQ1H,KAAK,SAAb,4B,GA5DQiJ,IAAMC,YCiDX6M,I,wDAlDb,WAAYtP,GAAQ,IAAD,8BACjB,cAAMA,IACDmN,OAAS,EAAKA,OAAO/L,KAAZ,gBACd,EAAKmO,MAAQ,EAAKA,MAAMnO,KAAX,gBACb,EAAKoO,OAAS,EAAKA,OAAOpO,KAAZ,gBACd,EAAKqO,qBAAuB,EAAKA,qBAAqBrO,KAA1B,gBALX,E,qDASjBO,KAAK3B,MAAMmN,OAAOxL,KAAK3B,MAAMqC,M,8BAI7BV,KAAK3B,MAAM0P,gBAAgB,KAAK/N,KAAK3B,MAAMqC,M,+BAI3CV,KAAK3B,MAAM0P,gBAAgB,MAAM/N,KAAK3B,MAAMqC,M,6CAI5CV,KAAK3B,MAAMyP,qBAAqB9N,KAAK3B,MAAMqC,M,+BAGnC,IAAD,OAEDsN,EAAiBhO,KAAK3B,MAAM4P,SAASjO,KAAK3B,MAAMqC,IAAIwN,UAAUrX,OAAO,EACrEsX,EAAanO,KAAK3B,MAAM4P,SAASjO,KAAK3B,MAAMqC,IAAIwN,UAAUtJ,KAAI,SAACwJ,EAAIxX,GACvE,OACE,gCACE,cAAC,GAAD,CAAU8J,GAAI0N,EAAIH,SAAU,EAAK5P,MAAM4P,SAAUzW,QAAS,EAAK6G,MAAM7G,QAASgU,OAAQ,EAAKnN,MAAMmN,OAAQuC,gBAAiB,EAAK1P,MAAM0P,gBAAkBD,qBAAsB,EAAKzP,MAAMyP,uBACvLlX,EAAIoX,EAAiB,oBAAInM,UAAU,sBAAd,SAAqC,EAAKxD,MAAM4P,SAAS,EAAK5P,MAAMqC,IAAI9I,OAAa,KAFnGwW,EAAKxX,MAOnB,OACE,sBAAKiL,UAAU,0BAAf,UACKsM,EACD,sBAAKtM,UAAU,kCAAf,UACE,wBAAQjK,KAAK,SAASiK,UAAU,uBAAuBzC,QAAUY,KAAK4N,MAAtE,gBACA,wBAAQhW,KAAK,SAASiK,UAAU,uBAAuBzC,QAAUY,KAAK6N,OAAtE,iBACA,wBAAQjW,KAAK,SAASiK,UAAU,uBAAuBzC,QAAUY,KAAK8N,qBAAtE,qBACA,wBAAQlW,KAAK,SAASiK,UAAU,kCAAkCzC,QAAUY,KAAKwL,OAAjF,8B,GA5CQ3K,IAAMC,YCiDXuN,G,kDAhDb,WAAYhQ,GAAQ,IAAD,8BACjB,cAAMA,IACDmN,OAAS,EAAKA,OAAO/L,KAAZ,gBACd,EAAK6O,kBAAoB,EAAKA,kBAAkB7O,KAAvB,gBAHR,E,qDAOjBO,KAAK3B,MAAMmN,OAAOxL,KAAK3B,MAAMqC,M,0CAI7B,IAAM6N,EAAO,CAAC,SAAS,SAAS,UAAU,YAAY,WAAW,SAAS,YAGpE3W,EAAOoI,KAAK3B,MAAM4P,SAASjO,KAAK3B,MAAMqC,IAAI9I,KAC1CsW,EAAYlO,KAAK3B,MAAM4P,SAASjO,KAAK3B,MAAMqC,IAAIwN,UAAUvX,MAAM,KACrE,GAJwB,CAAC,MAAM,MAAM,MAAM,OAIvBW,SAASM,GAC3B,OAAOoI,KAAK3B,MAAM7G,QAAQ0W,EAAU,IAAM,MAAQ3W,EAAgBQ,OAAOmW,EAAU,IAAM3W,EAAgBQ,OAAOmW,EAAU,IAAI5X,KAAO4X,EAAU,IAAM,KAAQA,EAAU,GAAK,IAAOA,EAAU,GACxL,GAAa,QAATtW,EACT,OAAOoI,KAAK3B,MAAM7G,QAAQ0W,EAAU,IAAM,MAAQ3W,EAAgBQ,OAAOmW,EAAU,IAAM3W,EAAgBQ,OAAOmW,EAAU,IAAI5X,KAAO4X,EAAU,IAAM,KAAQA,EAAU,GAAK,IAAOlO,KAAK3B,MAAM7G,QAAQ0W,EAAU,IAAM,MAAQ3W,EAAgBQ,OAAOmW,EAAU,IAAI5X,KAAOiB,EAAgBQ,OAAOmW,EAAU,IAAI5X,KAAO4X,EAAU,IAAM,KACjU,GAAa,QAATtW,EACT,OAAOoI,KAAK3B,MAAM7G,QAAQ0W,EAAU,IAAM,MAAQ3W,EAAgBQ,OAAOmW,EAAU,IAAM3W,EAAgBQ,OAAOmW,EAAU,IAAI5X,KAAO4X,EAAU,IAAM,KAAQA,EAAU,GAAK,IAAOA,EAAU,GACxL,GAAa,SAATtW,EAAiB,CAG1B,IADA,IAAI4W,EAAO,GACF5X,EAAI,EAAGA,EAAIsX,EAAU,GAAGrX,OAAQD,IACvC4X,GAAQD,EAAKL,EAAU,GAAGtX,IACtBA,IAAMsX,EAAU,GAAGrX,OAAS,IAC9B2X,GAAQ,MAEZ,OAAON,EAAU,GAAK,IAAOA,EAAU,GAAK,OAASM,EAGrD,OAAOxO,KAAK3B,MAAM4P,SAASjO,KAAK3B,MAAMqC,IAAIwN,Y,+BAM5C,OACE,sBAAKrM,UAAU,2BAAf,UACE,+BAAO7B,KAAKsO,sBACZ,qBAAKxP,IAAI,uBAAuBE,IAAI,cAAc6C,UAAU,iBAAiBzC,QAASY,KAAKwL,gB,GA3C7E3K,IAAMC,WC6Cb2N,G,kDA7Cb,WAAYpQ,GAAQ,IAAD,8BACjB,cAAMA,IACDuP,MAAQ,EAAKA,MAAMnO,KAAX,gBACb,EAAKoO,OAAS,EAAKA,OAAOpO,KAAZ,gBACd,EAAKqO,qBAAuB,EAAKA,qBAAqBrO,KAA1B,gBAJX,E,oDAQjBO,KAAK3B,MAAM0P,gBAAgB,KAAK,c,+BAIhC/N,KAAK3B,MAAM0P,gBAAgB,MAAM,c,6CAIjC/N,KAAK3B,MAAMyP,qBAAqB,c,+BAKhC,IAAI9N,KAAK3B,MAAM4P,SAASS,QAYtB,OACE,gCACA,wBAAQ9W,KAAK,SAASiK,UAAU,uBAAuBzC,QAAUY,KAAK4N,MAAtE,gBACA,wBAAQhW,KAAK,SAASiK,UAAU,uBAAuBzC,QAAUY,KAAK6N,OAAtE,iBACA,wBAAQjW,KAAK,SAASiK,UAAU,uBAAuBzC,QAAUY,KAAK8N,qBAAtE,wBAfF,IAAII,EAAYlO,KAAK3B,MAAM4P,SAASjO,KAAK3B,MAAMqC,IAG/C,MAAuB,OAAnBwN,EAAUtW,MAEgB,QAAnBsW,EAAUtW,KADZ,cAAC,GAAD,CAAO8I,GAAIV,KAAK3B,MAAMqC,GAAIuN,SAAUjO,KAAK3B,MAAM4P,SAAUzW,QAASwI,KAAK3B,MAAM7G,QAASgU,OAAQxL,KAAK3B,MAAMmN,OAAQuC,gBAAiB/N,KAAK3B,MAAM0P,gBAAiBD,qBAAsB9N,KAAK3B,MAAMyP,uBAHhL,CAAC,MAAM,MAAM,MAAM,MAAM,OAAO,OAM7BxW,SAAS4W,EAAUtW,MACrC,cAAC,GAAD,CAAS8I,GAAIV,KAAK3B,MAAMqC,GAAIuN,SAAUjO,KAAK3B,MAAM4P,SAAUzW,QAASwI,KAAK3B,MAAM7G,QAASgU,OAAQxL,KAAK3B,MAAMmN,cAD7G,M,GA9BU3K,IAAMC,WCsJd6N,G,kDArJb,WAAYtQ,GAAQ,IAAD,8BACjB,cAAMA,IACDuQ,oBAAsB,EAAKA,oBAAoBnP,KAAzB,gBAFV,E,kEAMjB,IAAMoP,EAAOpY,SAASqY,eAAe,QAAQ9J,MACvC+J,EAAStY,SAASqY,eAAe,UAAU9J,MAC7CuJ,EAAO,GAEP9X,SAASqY,eAAe,UAAU1J,UACpCmJ,GAAQ,KACN9X,SAASqY,eAAe,WAAW1J,UACrCmJ,GAAQ,KACN9X,SAASqY,eAAe,aAAa1J,UACvCmJ,GAAQ,KACN9X,SAASqY,eAAe,YAAY1J,UACtCmJ,GAAQ,KACN9X,SAASqY,eAAe,UAAU1J,UACpCmJ,GAAQ,KACN9X,SAASqY,eAAe,YAAY1J,UACtCmJ,GAAQ,KACN9X,SAASqY,eAAe,UAAU1J,UACpCmJ,GAAQ,KAEV,IAAMvJ,EAAQ6J,EAAO,IAAME,EAAS,IAAMR,EAC1CvO,KAAK3B,MAAMuQ,oBAAoB,OAAO5J,GACtChF,KAAK3B,MAAM2Q,0B,+BAKX,OACE,sBAAKnN,UAAU,8BAAf,UACE,oBAAIA,UAAU,0BAAd,+BACA,sBAAKA,UAAU,kBAAf,UACE,qBAAKA,UAAU,kBAAf,mBAGA,qBAAKA,UAAU,kBAAf,SACE,uBAAOjK,KAAK,SAASiK,UAAU,GAAGnB,GAAG,OAAO6F,IAAI,IAAIC,IAAI,SAE1D,qBAAK3E,UAAU,kBAAf,SACE,sBAAMA,UAAU,SAAhB,6BAGJ,sBAAKA,UAAU,kBAAf,UACE,qBAAKA,UAAU,kBAAf,qBAGA,qBAAKA,UAAU,kBAAf,SACE,uBAAOjK,KAAK,SAASiK,UAAU,GAAGnB,GAAG,SAAS6F,IAAI,IAAIC,IAAI,SAE5D,qBAAK3E,UAAU,kBAAf,SACE,sBAAMA,UAAU,gBAIpB,sBAAKA,UAAU,kBAAf,UACE,qBAAKA,UAAU,kBAAf,mBAGA,qBAAKA,UAAU,kBAAf,oBAGA,qBAAKA,UAAU,kBAAf,SACE,uBAAOjK,KAAK,WAAW8I,GAAG,gBAI9B,sBAAKmB,UAAU,kBAAf,UACE,qBAAKA,UAAU,oBAEf,qBAAKA,UAAU,kBAAf,oBAGA,qBAAKA,UAAU,kBAAf,SACE,uBAAOjK,KAAK,WAAW8I,GAAG,gBAI9B,sBAAKmB,UAAU,kBAAf,UACE,qBAAKA,UAAU,oBAEf,qBAAKA,UAAU,kBAAf,qBAGA,qBAAKA,UAAU,kBAAf,SACE,uBAAOjK,KAAK,WAAW8I,GAAG,iBAI9B,sBAAKmB,UAAU,kBAAf,UACE,qBAAKA,UAAU,oBAEf,qBAAKA,UAAU,kBAAf,uBAGA,qBAAKA,UAAU,kBAAf,SACE,uBAAOjK,KAAK,WAAW8I,GAAG,mBAI9B,sBAAKmB,UAAU,kBAAf,UACE,qBAAKA,UAAU,oBAEf,qBAAKA,UAAU,kBAAf,sBAGA,qBAAKA,UAAU,kBAAf,SACE,uBAAOjK,KAAK,WAAW8I,GAAG,kBAI9B,sBAAKmB,UAAU,kBAAf,UACE,qBAAKA,UAAU,oBAEf,qBAAKA,UAAU,kBAAf,oBAGA,qBAAKA,UAAU,kBAAf,SACE,uBAAOjK,KAAK,WAAW8I,GAAG,gBAI9B,sBAAKmB,UAAU,kBAAf,UACE,qBAAKA,UAAU,oBAEf,qBAAKA,UAAU,kBAAf,sBAGA,qBAAKA,UAAU,kBAAf,SACE,uBAAOjK,KAAK,WAAW8I,GAAG,kBAQ9B,sBAAKmB,UAAU,uCAAf,UACE,wBAAQjK,KAAK,SAASiK,UAAU,2BAA2BzC,QAAUY,KAAK4O,oBAA1E,kBACA,wBAAQhX,KAAK,SAASiK,UAAU,sCAAsCzC,QAAUY,KAAK3B,MAAM2Q,sBAA3F,8B,GA/IcnO,IAAMC,WC6JfmO,G,kDA3Jb,WAAY5Q,GAAQ,IAAD,8BACjB,cAAMA,IACDgG,MAAQ,CACXlD,OAAQ,IAEV,EAAK+N,aAAe,EAAKA,aAAazP,KAAlB,gBACpB,EAAK0P,YAAc,EAAKA,YAAY1P,KAAjB,gBACnB,EAAKmP,oBAAsB,EAAKA,oBAAoBnP,KAAzB,gBAC3B,EAAK2P,eAAiB,EAAKA,eAAe3P,KAApB,gBARL,E,yDAWNqF,GACX9E,KAAK2E,SAAS,CACZxD,OAAQ2D,EAAMC,OAAOC,U,kCAIbF,GACV9E,KAAK2E,SAAS,CACZ0H,MAAOvH,EAAMC,OAAOC,U,4CAKtB,IAMMkJ,EANSzX,SAASqY,eAAe,UAAU9J,MAMtB,IALbvO,SAASqY,eAAe,SAAS9J,MAKN,IAJtBvO,SAASqY,eAAe,cAAc9J,MAIG,IAH9CvO,SAASqY,eAAe,SAAS9J,MAI/ChF,KAAK3B,MAAMuQ,oBAAoB5O,KAAKoP,eAAe7X,EAAgBQ,OAAOiI,KAAKqE,MAAMgI,OAAOzU,MAAMsW,GAClGlO,KAAK3B,MAAM2Q,0B,qCAGEK,GAQb,MAPa,CACXC,IAAK,MACLC,KAAM,MACNC,KAAM,MACNC,OAAQ,MACRpT,MAAO,OAEGgT,K,+BAGJ,IAAD,OAED7X,EAAU4J,OAAOC,KAAKrB,KAAK3B,MAAM7G,SAASoN,KAAI,SAACzD,GACnD,OAAO,wBAAqB6D,MAAO7D,EAA5B,SAAqC,EAAK9C,MAAM7G,QAAQ2J,IAA3CA,MAGhBpJ,EAA+B,KAAtBiI,KAAKqE,MAAMlD,OAAgB,GAAKC,OAAOC,KAAKrB,KAAK3B,MAAM0B,OAAOC,KAAKqE,MAAMlD,SAASyD,KAAI,SAACyH,GACpG,OAAO,wBAAoBrH,MAAOqH,EAA3B,SAAoC9U,EAAgBQ,OAAOsU,GAAS9U,EAAgBQ,OAAOsU,GAAO/V,KAAO+V,EAAQ,wBAApGA,MAGlBrH,EAAQ,GACZ,GAAIzN,EAAgBQ,OAAOiI,KAAKqE,MAAMgI,OAAO,CAC3C,IAAMzU,EAAOoI,KAAKoP,eAAe7X,EAAgBQ,OAAOiI,KAAKqE,MAAMgI,OAAOzU,MAC1E,GAAY,QAATA,EACDoN,EACE,sBAAKnD,UAAU,gBAAf,UACE,qBAAKA,UAAU,gBAAf,oBAGA,qBAAKA,UAAU,gBAAf,SACE,uBAAOjK,KAAK,SAASiK,UAAU,GAAGnB,GAAG,oBAItC,GAAY,QAAT9I,EACRoN,EACE,sBAAKnD,UAAU,gBAAf,UACE,qBAAKA,UAAU,gBAAf,oBAGA,qBAAKA,UAAU,gBAAf,SACE,uBAAOjK,KAAK,OAAOiK,UAAU,GAAGnB,GAAG,oBAIpC,GAAY,QAAT9I,GAA2B,QAATA,EAAe,CAEzC,IAAM8X,EAAUnY,EAAgBQ,OAAOiI,KAAKqE,MAAMgI,OAAOrQ,OAAO4I,KAAI,SAAC+K,GACnE,OAAO,wBAAqB3K,MAAO2K,EAA5B,SAAqCA,GAAxBA,MAGtB3K,EACE,sBAAKnD,UAAU,gBAAf,UACE,qBAAKA,UAAU,gBAAf,oBAGA,qBAAKA,UAAU,gBAAf,SACE,wBAAQvL,KAAK,OAAOuL,UAAU,YAAYnB,GAAG,QAA7C,SACGgP,UASb,OACE,sBAAK7N,UAAU,8BAAf,UACE,oBAAIA,UAAU,0BAAd,mCAEA,sBAAKA,UAAU,gBAAf,UACE,qBAAKA,UAAU,gBAAf,qBAGA,qBAAKA,UAAU,gBAAf,SACE,yBAAQvL,KAAK,OAAOuL,UAAU,YAAYnB,GAAG,SAASwE,SAAUlF,KAAKkP,aAArE,UACE,wBAAQlK,MAAM,GAAd,6BACCxN,UAIP,sBAAKqK,UAAU,gBAAf,UACE,qBAAKA,UAAU,gBAAf,oBAGA,qBAAKA,UAAU,gBAAf,SACE,yBAAQvL,KAAK,OAAOuL,UAAU,YAAYnB,GAAG,QAAQwE,SAAUlF,KAAKmP,YAApE,UACE,wBAAQnK,MAAM,GAAd,4BACCjN,UAIP,sBAAK8J,UAAU,gBAAf,UACE,qBAAKA,UAAU,gBAAf,yBAGA,qBAAKA,UAAU,gBAAf,SACE,yBAAQvL,KAAK,OAAOuL,UAAU,YAAYnB,GAAG,aAA7C,UACE,uCACA,uCACA,uCACA,wCACA,gDAKLsE,EAED,sBAAKnD,UAAU,uCAAf,UACE,wBAAQjK,KAAK,SAASiK,UAAU,2BAA2BzC,QAAUY,KAAK4O,oBAA1E,kBACA,wBAAQhX,KAAK,SAASiK,UAAU,sCAAsCzC,QAAUY,KAAK3B,MAAM2Q,sBAA3F,8B,GArJWnO,IAAMC,WCsHZ8O,G,kDArHb,WAAYvR,GAAQ,IAAD,8BACjB,cAAMA,IACDgG,MAAQ,CACXwL,SAAU,GACVC,SAAU,IAEZ,EAAKC,mBAAqB,EAAKA,mBAAmBtQ,KAAxB,gBAC1B,EAAKmP,oBAAsB,EAAKA,oBAAoBnP,KAAzB,gBAPV,E,+DAUAqF,GACjB,IAAIT,EAAQrE,KAAKqE,MACjBA,EAAMS,EAAMC,OAAOrE,IAAMoE,EAAMC,OAAOC,MACtChF,KAAK2E,SAASN,K,4CAKd,IAMM6J,EANWzX,SAASqY,eAAe,YAAY9J,MAMxB,IALbvO,SAASqY,eAAe,WAAW9J,MAKN,IAJ1BvO,SAASqY,eAAe,cAAc9J,MAIO,IAH/CvO,SAASqY,eAAe,YAAY9J,MAG4B,IAFjEvO,SAASqY,eAAe,WAAW9J,MAGnDhF,KAAK3B,MAAMuQ,oBAAoB,MAAMV,GACrClO,KAAK3B,MAAM2Q,0B,+BAGH,IAAD,OAEDxX,EAAU4J,OAAOC,KAAKrB,KAAK3B,MAAM7G,SAASoN,KAAI,SAACzD,GACnD,OAAO,wBAAqB6D,MAAO7D,EAA5B,SAAqC,EAAK9C,MAAM7G,QAAQ2J,IAA3CA,MAGhB6O,EAAmC,KAAxBhQ,KAAKqE,MAAMwL,SAAkB,GAAKzO,OAAOC,KAAKrB,KAAK3B,MAAM0B,OAAOC,KAAKqE,MAAMwL,WAAWjL,KAAI,SAACyH,GAC1G,OAAO,wBAAoBrH,MAAOqH,EAA3B,SAAoC9U,EAAgBQ,OAAOsU,GAAS9U,EAAgBQ,OAAOsU,GAAO/V,KAAO+V,EAAQ,wBAApGA,MAGhB4D,EAAmC,KAAxBjQ,KAAKqE,MAAMyL,SAAkB,GAAK1O,OAAOC,KAAKrB,KAAK3B,MAAM0B,OAAOC,KAAKqE,MAAMyL,WAAWlL,KAAI,SAACyH,GAC1G,OAAO,wBAAoBrH,MAAOqH,EAA3B,SAAoC9U,EAAgBQ,OAAOsU,GAAS9U,EAAgBQ,OAAOsU,GAAO/V,KAAO+V,EAAQ,wBAApGA,MAGtB,OACE,sBAAKxK,UAAU,8BAAf,UACE,oBAAIA,UAAU,0BAAd,iCAEA,sBAAKA,UAAU,gBAAf,UACE,qBAAKA,UAAU,gBAAf,uBAGA,qBAAKA,UAAU,gBAAf,SACE,yBAAQvL,KAAK,OAAOuL,UAAU,YAAYnB,GAAG,WAAWwE,SAAUlF,KAAK+P,mBAAvE,UACE,wBAAQ/K,MAAM,GAAd,6BACCxN,UAIP,sBAAKqK,UAAU,gBAAf,UACE,qBAAKA,UAAU,gBAAf,sBAGA,qBAAKA,UAAU,gBAAf,SACE,yBAAQvL,KAAK,OAAOuL,UAAU,YAAYnB,GAAG,UAAUwE,SAAUlF,KAAK+P,mBAAtE,UACE,wBAAQ/K,MAAM,GAAd,4BACCgL,UAKP,sBAAKnO,UAAU,gBAAf,UACE,qBAAKA,UAAU,gBAAf,yBAGA,qBAAKA,UAAU,gBAAf,SACE,yBAAQvL,KAAK,OAAOuL,UAAU,YAAYnB,GAAG,aAA7C,UACE,uCACA,uCACA,uCACA,wCACA,gDAKN,sBAAKmB,UAAU,gBAAf,UACE,qBAAKA,UAAU,gBAAf,uBAGA,qBAAKA,UAAU,gBAAf,SACE,yBAAQvL,KAAK,OAAOuL,UAAU,YAAYnB,GAAG,WAAWwE,SAAUlF,KAAK+P,mBAAvE,UACE,wBAAQ/K,MAAM,GAAd,6BACCxN,UAIP,sBAAKqK,UAAU,gBAAf,UACE,qBAAKA,UAAU,gBAAf,sBAGA,qBAAKA,UAAU,gBAAf,SACE,yBAAQvL,KAAK,OAAOuL,UAAU,YAAYnB,GAAG,UAAUwE,SAAUlF,KAAK+P,mBAAtE,UACE,wBAAQ/K,MAAM,GAAd,4BACCiL,UAKP,sBAAKpO,UAAU,uCAAf,UACE,wBAAQjK,KAAK,SAASiK,UAAU,2BAA2BzC,QAAUY,KAAK4O,oBAA1E,kBACA,wBAAQhX,KAAK,SAASiK,UAAU,sCAAsCzC,QAAUY,KAAK3B,MAAM2Q,sBAA3F,8B,GA/GmBnO,IAAMC,WCsDpB6N,G,kDAnDb,WAAYtQ,GAAQ,IAAD,8BACjB,cAAMA,IACDgG,MAAQ,CACXzM,KAAM,IAER,EAAKsY,WAAa,EAAKA,WAAWzQ,KAAhB,gBAClB,EAAK0Q,aAAe,EAAKA,aAAa1Q,KAAlB,gBACpB,EAAK2Q,sBAAwB,EAAKA,sBAAsB3Q,KAA3B,gBAPZ,E,yDAWjBO,KAAK2E,SAAS,CACZ/M,KAAM,W,qCAKRoI,KAAK2E,SAAS,CACZ/M,KAAM,a,8CAKRoI,KAAK2E,SAAS,CACZ/M,KAAM,oB,+BAMR,MAAwB,KAApBoI,KAAKqE,MAAMzM,KAEX,sBAAKiK,UAAU,8BAAf,UACE,oBAAIA,UAAU,0BAAd,+BACA,sBAAKA,UAAU,uCAAf,UACE,wBAAQjK,KAAK,SAASiK,UAAU,2BAA2BzC,QAAUY,KAAKkQ,WAA1E,kBACA,wBAAQtY,KAAK,SAASiK,UAAU,2BAA2BzC,QAAUY,KAAKmQ,aAA1E,oBACA,wBAAQvY,KAAK,SAASiK,UAAU,2BAA2BzC,QAAUY,KAAKoQ,sBAA1E,8BACA,wBAAQxY,KAAK,SAASiK,UAAU,sCAAsCzC,QAAUY,KAAK3B,MAAM2Q,sBAA3F,0BAIqB,SAApBhP,KAAKqE,MAAMzM,KACX,cAACyY,GAAD,CAAMrB,sBAAuBhP,KAAK3B,MAAM2Q,sBAAuBJ,oBAAqB5O,KAAK3B,MAAMuQ,sBAC3E,WAApB5O,KAAKqE,MAAMzM,KACX,cAAC,GAAD,CAAQJ,QAASwI,KAAK3B,MAAM7G,QAASuI,OAAQC,KAAK3B,MAAM0B,OAAQiP,sBAAuBhP,KAAK3B,MAAM2Q,sBAAuBJ,oBAAqB5O,KAAK3B,MAAMuQ,sBACrI,kBAApB5O,KAAKqE,MAAMzM,KACX,cAAC,GAAD,CAAgBJ,QAASwI,KAAK3B,MAAM7G,QAASuI,OAAQC,KAAK3B,MAAM0B,OAAQiP,sBAAuBhP,KAAK3B,MAAM2Q,sBAAuBJ,oBAAqB5O,KAAK3B,MAAMuQ,2BADrK,M,GA/Ce/N,IAAMC,WCyBfwP,G,kDA1Bb,WAAYjS,GAAQ,IAAD,8BACjB,cAAMA,IACDmN,OAAS,EAAKA,OAAO/L,KAAZ,gBAFG,E,qDAMjBO,KAAK3B,MAAMmN,OAAOxL,KAAK3B,MAAMqC,M,+BAS7B,OACE,sBAAKmB,UAAU,2BAA2BnD,MAL1B,CACd6R,aAAc,QAIhB,UACE,gCAASvQ,KAAK3B,MAAM7G,QAAQwI,KAAK3B,MAAM0G,OAAO5D,QAAUnB,KAAK3B,MAAM7G,QAAQwI,KAAK3B,MAAM0G,OAAO5D,QAAUnB,KAAK3B,MAAM0G,OAAO5D,QACvH,MAAQ5J,EAAgBQ,OAAOiI,KAAK3B,MAAM0G,OAAOsH,OAAS9U,EAAgBQ,OAAOiI,KAAK3B,MAAM0G,OAAOsH,OAAO/V,KAAO0J,KAAK3B,MAAM0G,OAAOsH,OACnI,OAASrM,KAAK3B,MAAM0G,OAAOC,QAC7B,qBAAKlG,IAAI,uBAAuBE,IAAI,cAAc6C,UAAU,iBAAiBzC,QAASY,KAAKwL,gB,GArB9E3K,IAAMC,WCmJZmO,G,kDAlJb,WAAY5Q,GAAQ,IAAD,8BACjB,cAAMA,IACDgG,MAAQ,CACXlD,OAAQ,IAEV,EAAK+N,aAAe,EAAKA,aAAazP,KAAlB,gBACpB,EAAK0P,YAAc,EAAKA,YAAY1P,KAAjB,gBACnB,EAAK+Q,UAAY,EAAKA,UAAU/Q,KAAf,gBACjB,EAAK2P,eAAiB,EAAKA,eAAe3P,KAApB,gBARL,E,yDAWNqF,GACX9E,KAAK2E,SAAS,CACZxD,OAAQ2D,EAAMC,OAAOC,U,kCAIbF,GACV9E,KAAK2E,SAAS,CACZ0H,MAAOvH,EAAMC,OAAOC,U,kCAKtB,IAIMD,EAAS,CACb5D,OALa1K,SAASqY,eAAe,UAAU9J,MAM/CqH,MALY5V,SAASqY,eAAe,SAAS9J,MAM7CA,MALYvO,SAASqY,eAAe,SAAS9J,OAO/ChF,KAAK3B,MAAMmS,UAAUzL,GACrBtO,SAASqY,eAAe,UAAU9J,MAAQ,GAC1CvO,SAASqY,eAAe,SAAS9J,MAAQ,GACzChF,KAAK2E,SAAS,CACZ0H,MAAO,O,qCAIIgD,GAQb,MAPa,CACXC,IAAK,MACLC,KAAM,MACNC,KAAM,MACNC,OAAQ,MACRpT,MAAO,OAEGgT,K,+BAGJ,IAAD,OAED7X,EAAU4J,OAAOC,KAAKrB,KAAK3B,MAAM7G,SAASoN,KAAI,SAACzD,GACnD,OAAO,wBAAqB6D,MAAO7D,EAA5B,SAAqC,EAAK9C,MAAM7G,QAAQ2J,IAA3CA,MAGhBpJ,EAA+B,KAAtBiI,KAAKqE,MAAMlD,OAAgB,GAAKC,OAAOC,KAAKrB,KAAK3B,MAAM0B,OAAOC,KAAKqE,MAAMlD,SAASyD,KAAI,SAACyH,GACpG,OAAO,wBAAoBrH,MAAOqH,EAA3B,SAAoC9U,EAAgBQ,OAAOsU,GAAS9U,EAAgBQ,OAAOsU,GAAO/V,KAAO+V,EAAQ,wBAApGA,MAGlBrH,EAAQ,GACZ,GAAIzN,EAAgBQ,OAAOiI,KAAKqE,MAAMgI,OAAO,CAC3C,IAAMzU,EAAOoI,KAAKoP,eAAe7X,EAAgBQ,OAAOiI,KAAKqE,MAAMgI,OAAOzU,MAC1E,GAAY,QAATA,EACDoN,EACE,sBAAKnD,UAAU,gBAAf,UACE,qBAAKA,UAAU,gBAAf,oBAGA,qBAAKA,UAAU,gBAAf,SACE,uBAAOjK,KAAK,SAASiK,UAAU,GAAGnB,GAAG,oBAItC,GAAY,QAAT9I,EACRoN,EACE,sBAAKnD,UAAU,gBAAf,UACE,qBAAKA,UAAU,gBAAf,oBAGA,qBAAKA,UAAU,gBAAf,SACE,uBAAOjK,KAAK,OAAOiK,UAAU,GAAGnB,GAAG,oBAIpC,GAAY,QAAT9I,GAA2B,QAATA,EAAe,CAEzC,IAAM8X,EAAUnY,EAAgBQ,OAAOiI,KAAKqE,MAAMgI,OAAOrQ,OAAO4I,KAAI,SAAC+K,GACnE,OAAO,wBAAqB3K,MAAO2K,EAA5B,SAAqCA,GAAxBA,MAGtB3K,EACE,sBAAKnD,UAAU,gBAAf,UACE,qBAAKA,UAAU,gBAAf,oBAGA,qBAAKA,UAAU,gBAAf,SACE,wBAAQvL,KAAK,OAAOuL,UAAU,YAAYnB,GAAG,QAA7C,SACGgP,UASb,OACE,sBAAK7N,UAAU,8BAAf,UACE,oBAAIA,UAAU,0BAAd,wBAEA,sBAAKA,UAAU,gBAAf,UACE,qBAAKA,UAAU,gBAAf,qBAGA,qBAAKA,UAAU,gBAAf,SACE,yBAAQvL,KAAK,OAAOuL,UAAU,YAAYnB,GAAG,SAASwE,SAAUlF,KAAKkP,aAArE,UACE,wBAAQlK,MAAM,GAAd,6BACCxN,UAIP,sBAAKqK,UAAU,gBAAf,UACE,qBAAKA,UAAU,gBAAf,oBAGA,qBAAKA,UAAU,gBAAf,SACE,yBAAQvL,KAAK,OAAOuL,UAAU,YAAYnB,GAAG,QAAQwE,SAAUlF,KAAKmP,YAApE,UACE,wBAAQnK,MAAM,GAAd,4BACCjN,UAKNiN,EAED,qBAAKnD,UAAU,uCAAf,SACE,wBAAQjK,KAAK,SAASiK,UAAU,2BAA2BzC,QAAUY,KAAKwQ,UAA1E,0B,GA5IW3P,IAAMC,WCsVZ2P,G,kDAhVb,WAAYpS,GAAQ,IAAD,sBACjB,cAAMA,GACN,IAAMqC,EAAKvJ,OAAOC,SAASsT,SAAS/T,MAAM,KAAK,GAC3CgU,GAAS,EAHI,MAIN,KAAPjK,IAAWiK,GAAS,GACxB,EAAKtG,MAAQ,CACX3D,GAAIA,EACJiK,OAAQA,EACRM,YAAa,GACbyF,yBAA0B,EAC1BhD,KAAM,CACJrO,MAAO,GACPzF,YAAa,GACbqU,SAAU,GACVlJ,OAAQ,IAEVvN,QAAS,GACTuI,OAAQ,IAEV,EAAKoC,OAAS,EAAKA,OAAO1C,KAAZ,gBACd,EAAK8L,KAAO,EAAKA,KAAK9L,KAAV,gBACZ,EAAK+L,OAAS,EAAKA,OAAO/L,KAAZ,gBACd,EAAKkR,cAAgB,EAAKA,cAAclR,KAAnB,gBACrB,EAAKsO,gBAAkB,EAAKA,gBAAgBtO,KAArB,gBACvB,EAAKqO,qBAAuB,EAAKA,qBAAqBrO,KAA1B,gBAC5B,EAAKmP,oBAAsB,EAAKA,oBAAoBnP,KAAzB,gBAC3B,EAAKuP,sBAAwB,EAAKA,sBAAsBvP,KAA3B,gBAC7B,EAAK+Q,UAAY,EAAKA,UAAU/Q,KAAf,gBACjB,EAAKmR,aAAe,EAAKA,aAAanR,KAAlB,gBA5BH,E,gEAiCjB,IAAI0N,EAAM,IAAIxN,eAuBd,GAtBAwN,EAAIvN,OAAS,SAAUC,GACrB,GAAuB,IAAnBsN,EAAIrN,WACN,GAAmB,MAAfqN,EAAIpN,OAAgB,CACtB,IAAIuE,EAAO9D,KAAKiE,MAAM0I,EAAIzI,cACtBmM,EAAgB,GACpBvM,EAAK9M,QAAQ4U,SAAQ,SAACjL,GACpB0P,EAAc1P,EAAOT,IAAMS,EAAO7K,KAAKA,QAEzC0J,KAAK2E,SAAS,CACXnN,QAASqZ,EACT9Q,OAASuE,EAAKvE,cAGjBG,QAAQC,MAAMgN,EAAI/M,aAGtBX,KAAKO,MACPmN,EAAI9M,KAAK,MAAOnJ,EAAO,mBACvBiW,EAAI7M,iBAAiB,gBAAiB,UAAYlK,EAAe,UACjE+W,EAAI5M,QAGCP,KAAKqE,MAAMsG,OAAO,CACrB,IAAImG,EAAM,IAAInR,eACdmR,EAAIlR,OAAS,SAAUC,GACrB,GAAuB,IAAnBiR,EAAIhR,WACN,GAAmB,MAAfgR,EAAI/Q,OAAgB,CACtB,IAAIuE,EAAO9D,KAAKiE,MAAMqM,EAAIpM,cAC1BxE,QAAQqM,IAAIjI,GACZtE,KAAK2E,SAAS,CACX+I,KAAMpJ,SAGTpE,QAAQC,MAAM2Q,EAAI1Q,aAGtBX,KAAKO,MACP8Q,EAAIzQ,KAAK,MAAOnJ,EAAO,iBAAmB8I,KAAKqE,MAAM3D,GAAK,KAC1DoQ,EAAIxQ,iBAAiB,gBAAiB,UAAYlK,EAAe,UACjE0a,EAAIvQ,U,6BAIDuE,GACL,IAAI4I,EAAO1N,KAAKqE,MAAMqJ,KACtBA,EAAK5I,EAAMC,OAAOrE,IAAMoE,EAAMC,OAAOC,MACrChF,KAAK2E,SAAS,CACZ+I,KAAMA,M,6BAKR,IAAIhO,EAAO,IAAIC,eACfD,EAAKE,OAAS,SAAUC,GACE,IAApBH,EAAKI,aACa,MAAhBJ,EAAKK,QACPS,KAAKiE,MAAM/E,EAAKgF,cACX1E,KAAKqE,MAAMsG,OACbxT,OAAOC,SAASC,KAAO,SAEvB2I,KAAK2E,SAAS,CACXsG,YAAa,uBAInB/K,QAAQC,MAAMT,EAAKU,YACnBJ,KAAK2E,SAAS,CACXsG,YAAa,4CAGlBuB,WAAW,WACTxM,KAAK2E,SAAS,CACXsG,YAAa,MAEhBxL,KAAKO,MAAO,OAEhBP,KAAKO,MACPE,QAAQqM,IAAIvM,KAAKqE,MAAMqJ,MACvB,IAAIjB,EAAU,CACZ,KAAQzM,KAAKqE,MAAMqJ,MAEjB1N,KAAKqE,MAAMsG,OACbjL,EAAKW,KAAK,OAAQnJ,EAAO,sBAEzBwI,EAAKW,KAAK,OAAQnJ,EAAO,qBACzBuV,EAAO,GAASzM,KAAKqE,MAAM3D,IAE7BhB,EAAKY,iBAAiB,eAAgB,kCACtCZ,EAAKY,iBAAiB,gBAAiB,UAAYlK,EAAe,UAClEsJ,EAAKa,KAAKC,KAAKC,UAAUgM,M,+BAIzB,GAAGtV,OAAOuV,QAAQ,mCAAmC,CACnD,IAAIhN,EAAO,IAAIC,eACfD,EAAKE,OAAS,SAAUC,GACE,IAApBH,EAAKI,aACa,MAAhBJ,EAAKK,OACP5I,OAAOC,SAASC,KAAO,WAEvB6I,QAAQC,MAAMT,EAAKU,YACnBJ,KAAK2E,SAAS,CACXsG,YAAa,4CAGlBuB,WAAW,WACTxM,KAAK2E,SAAS,CACXsG,YAAa,MAEhBxL,KAAKO,MAAO,OAEhBP,KAAKO,MACPN,EAAKW,KAAK,MAAOnJ,EAAO,oBAAsB8I,KAAKqE,MAAM3D,GAAK,KAC9DhB,EAAKY,iBAAiB,gBAAiB,UAAYlK,EAAe,UAClEsJ,EAAKa,YAELP,KAAK2E,SAAS,CACXsG,YAAa,8B,oCAKNvK,GAEZ,IAAIgN,EAAO1N,KAAKqE,MAAMqJ,KAClBO,EAAWP,EAAKO,SAEd8C,EAAS9C,EAASvN,GAAIqQ,OAC5B,GAAe,aAAXA,EAAuB,CAEzB,IAAMjF,EAAQmC,EAAS8C,GAAQ7C,UAAUjX,QAAQyJ,GACjDuN,EAAS8C,GAAQ7C,UAAUrH,OAAOiF,EAAM,UAEjCmC,EAASvN,GAChBgN,EAAKO,SAAWA,OAEhBP,EAAKO,SAAW,GAElBjO,KAAK2E,SAAS,CACZ+I,KAAMA,M,sCAIM9V,EAAMmZ,GAEpB,IAAIrD,EAAO1N,KAAKqE,MAAMqJ,KACtB,GAAe,aAAXqD,EAAuB,CAEzB,IAAMC,EAAKC,KAAKC,MAEhBxD,EAAKO,SAAS+C,GAAM,CAClB9C,UAAW,GACX6C,OAAQA,EACRnZ,KAAMA,GAGR8V,EAAKO,SAAS8C,GAAQ7C,UAAUnI,KAAKiL,QAErCtD,EAAKO,SAAL,QAA2B,CACzBC,UAAW,GACX6C,OAAQ,WACRnZ,KAAMA,GAIVoI,KAAK2E,SAAS,CACZ+I,KAAMA,M,2CAIWqD,GACnB/Q,KAAK2E,SAAS,CACZ+L,yBAA0BK,M,0CAIVnZ,EAAMsW,GAExB,IAAIR,EAAO1N,KAAKqE,MAAMqJ,KAChBqD,EAAS/Q,KAAKqE,MAAMqM,yBAC1B,GAAe,aAAXK,EAAuB,CAEzB,IAAMC,EAAKC,KAAKC,MAEhBxD,EAAKO,SAAS+C,GAAM,CAClB9C,UAAWA,EACX6C,OAAQA,EACRnZ,KAAMA,GAGR8V,EAAKO,SAAS8C,GAAQ7C,UAAUnI,KAAKiL,QAErCtD,EAAKO,SAAL,QAA2B,CACzBC,UAAWA,EACX6C,OAAQ,WACRnZ,KAAMA,GAIVoI,KAAK2E,SAAS,CACZ+I,KAAMA,M,8CAKR1N,KAAK2E,SAAS,CACZ+L,yBAA0B,M,gCAIpB3L,GACR,IAAI2I,EAAO1N,KAAKqE,MAAMqJ,KACtBA,EAAK3I,OAAOgB,KAAKhB,GACjB/E,KAAK2E,SAAS,CACZ+I,KAAMA,M,mCAIGhN,GACX,IAAIgN,EAAO1N,KAAKqE,MAAMqJ,KACtBA,EAAK3I,OAAO8B,OAAOnG,EAAG,GACtBV,KAAK2E,SAAS,CACZ+I,KAAMA,M,+BAIA,IAAD,OAmBDyD,EAAUnR,KAAKqE,MAAMqJ,KAAK3I,OAAOH,KAAI,SAACG,EAAQnO,GAClD,OAAO,cAAC,GAAD,CAAgB8J,GAAI9J,EAAGmO,OAAQA,EAAQvN,QAAS,EAAK6M,MAAM7M,QAASgU,OAAQ,EAAKoF,cAApEha,MAGtB,OACE,sBAAKiL,UAAU,uBAAf,UACE,sCACA,oBAAInD,MAXU,CAChBO,MAAO,SAWL,sBAAK4C,UAAU,+BAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,qBAAKA,UAAU,gBAAf,mBAGA,qBAAKA,UAAU,gBAAf,SACE,uBAAOjK,KAAK,OAAOiK,UAAU,YAAYnB,GAAG,QAAQuE,aAAcjF,KAAKqE,MAAMqJ,KAAKrO,MAAO6F,SAAUlF,KAAKmC,cAG5G,sBAAKN,UAAU,gBAAf,UACE,qBAAKA,UAAU,gBAAf,0BAGA,qBAAKA,UAAU,gBAAf,SACE,uBAAOjK,KAAK,OAAOiK,UAAU,YAAYnB,GAAG,cAAcuE,aAAcjF,KAAKqE,MAAMqJ,KAAK9T,YAAasL,SAAUlF,KAAKmC,cAGxH,uBACA,0CACA,qBAAKN,UAAU,SAAf,SACE,2BAGwC,IAAxC7B,KAAKqE,MAAMqM,yBAEX,cAAC,GAAD,CAAWlZ,QAASwI,KAAKqE,MAAM7M,QAASuI,OAAQC,KAAKqE,MAAMtE,OAAQiP,sBAAuBhP,KAAKgP,sBAAuBJ,oBAAqB5O,KAAK4O,sBAEhJ,cAAC,GAAD,CAAUlO,GAAG,UAAUuN,SAAUjO,KAAKqE,MAAMqJ,KAAKO,SAAUzW,QAASwI,KAAKqE,MAAM7M,QAASgU,OAAQxL,KAAK2Q,cAAe5C,gBAAiB/N,KAAK+N,gBAAiBD,qBAAsB9N,KAAK8N,uBAExL,uBACA,yCACA,qBAAKjM,UAAU,SAAf,SACE,2BAEDsP,EACD,cAACC,GAAD,CAAc5Z,QAASwI,KAAKqE,MAAM7M,QAASuI,OAAQC,KAAKqE,MAAMtE,OAAQyQ,UAAWxQ,KAAKwQ,YAEtF,uBACA,sBAAK3O,UAAU,gBAAf,UACE,wBAAQjK,KAAK,SAAS8G,MAAQsB,KAAKqE,MAAMsG,OAxDpB,CAC3BhJ,gBAAiB,MACjBC,QAAS,OANU,CACnBD,gBAAiB,OA2D6EvC,QAAUY,KAAKwL,OAASqB,WAAW7M,KAAKqE,MAAMsG,OAAtI,oBACA,wBAAQ/S,KAAK,SAASwH,QAAUY,KAAKuL,KAArC,kBACA,+BAAOvL,KAAKqE,MAAM4G,2B,GAzURpK,IAAMC,WCsQbuQ,G,kDA1Qb,WAAYhT,GAAQ,IAAD,8BACjB,cAAMA,IACDgG,MAAQ,CACXwD,SAAU,CACRyJ,OAAQ,GACRC,KAAM,GACNC,KAAM,GACNC,OAAQ,IAEVxG,YAAa,GACbyG,IAAK,CACHC,KAAM,GACNC,MAAO,GACPC,YAAa,KAGjB,EAAK1P,OAAS,EAAKA,OAAO1C,KAAZ,gBACd,EAAKqS,mBAAqB,EAAKA,mBAAmBrS,KAAxB,gBAC1B,EAAK8L,KAAO,EAAKA,KAAK9L,KAAV,gBAlBK,E,gEAsBjB,IAAKO,KAAKqE,MAAMsG,OAAO,CACrB,IAAIjL,EAAO,IAAIC,eACfD,EAAKE,OAAS,SAAUC,GACtB,GAAwB,IAApBH,EAAKI,WACP,GAAoB,MAAhBJ,EAAKK,OAAgB,CACvB,IAAIuE,EAAO9D,KAAKiE,MAAM/E,EAAKgF,cAC3B1E,KAAK2E,SAAS,CACXkD,SAAUvD,EACVoN,IAAK,CACHC,KAAM,WAAarN,EAAKiN,KAAKQ,SAAW,SACxCH,MAAO,WAAatN,EAAKiN,KAAKQ,SAAW,UACzCF,YAAa,WAAavN,EAAKiN,KAAKQ,SAAW,sBAIpD7R,QAAQC,MAAMT,EAAKU,aAGvBX,KAAKO,MACPN,EAAKW,KAAK,MAAOnJ,EAAO,qBACxBwI,EAAKY,iBAAiB,gBAAiB,UAAYlK,EAAe,UAClEsJ,EAAKa,U,6BAIFuE,GAEL,IAAMpE,EAAKoE,EAAMC,OAAOrE,GAAG/J,MAAM,KAC7BkR,EAAW7H,KAAKqE,MAAMwD,SACR,IAAdnH,EAAG7J,OACLgR,EAASnH,EAAG,IAAMoE,EAAMC,OAAOC,MACR,IAAdtE,EAAG7J,SACZgR,EAASnH,EAAG,IAAIA,EAAG,IAAMoE,EAAMC,OAAOC,OAExChF,KAAK2E,SAAS,CACXkD,SAAUA,M,yCAIIzC,GACjB,IAAIyC,EAAW7H,KAAKqE,MAAMwD,SAC1BA,EAAS0J,KAAKS,QAAU5M,EACxBpF,KAAK2E,SAAS,CACXkD,SAAUA,M,6BAKb,IAAInI,EAAO,IAAIC,eACfD,EAAKE,OAAS,SAAUC,GACE,IAApBH,EAAKI,aACa,MAAhBJ,EAAKK,QACPS,KAAKiE,MAAM/E,EAAKgF,cAChB1E,KAAK2E,SAAS,CACXsG,YAAa,sBAGhBjL,KAAK2E,SAAS,CACXsG,YAAa,2CAGlBuB,WAAW,WACTxM,KAAK2E,SAAS,CACXsG,YAAa,MAEhBxL,KAAKO,MAAO,OAEhBP,KAAKO,MACPN,EAAKW,KAAK,OAAQnJ,EAAO,wBACzBwI,EAAKY,iBAAiB,eAAgB,kCACtCZ,EAAKY,iBAAiB,gBAAiB,UAAYlK,EAAe,UAClEsJ,EAAKa,KAAKC,KAAKC,UAAUT,KAAKqE,MAAMwD,a,+BAKpC,OACE,gCACE,sBAAKhG,UAAU,uBAAf,UACE,mDACA,uBACA,sBAAKA,UAAU,+BAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,qBAAKA,UAAU,gBAAf,uBAGA,qBAAKA,UAAU,gBAAf,SACE,uBAAOjK,KAAK,OAAOiK,UAAU,YAAYnB,GAAG,mBAAmBuE,aAAcjF,KAAKqE,MAAMwD,SAASyJ,OAAOW,UAAW/M,SAAUlF,KAAKmC,cAGtI,sBAAKN,UAAU,gBAAf,UACE,qBAAKA,UAAU,gBAAf,2BAGA,qBAAKA,UAAU,gBAAf,SACE,uBAAOjK,KAAK,OAAOiK,UAAU,YAAYnB,GAAG,uBAAuBuE,aAAcjF,KAAKqE,MAAMwD,SAASyJ,OAAOY,cAAehN,SAAUlF,KAAKmC,cAG9I,sBAAKN,UAAU,gBAAf,UACE,qBAAKA,UAAU,gBAAf,+BAGA,qBAAKA,UAAU,gBAAf,SACE,uBAAOjK,KAAK,OAAOiK,UAAU,YAAYoD,aAAcjF,KAAKqE,MAAMqN,IAAIC,KAAM9E,UAAQ,SAGxF,sBAAKhL,UAAU,gBAAf,UACE,qBAAKA,UAAU,gBAAf,uBAGA,qBAAKA,UAAU,gBAAf,SACE,uBAAOjK,KAAK,OAAOiK,UAAU,YAAYoD,aAAcjF,KAAKqE,MAAMqN,IAAIE,MAAO/E,UAAQ,SAGzF,sBAAKhL,UAAU,gBAAf,UACE,qBAAKA,UAAU,gBAAf,6BAGA,qBAAKA,UAAU,gBAAf,SACE,uBAAOjK,KAAK,OAAOiK,UAAU,YAAYoD,aAAcjF,KAAKqE,MAAMqN,IAAIG,YAAahF,UAAQ,YAIjG,sBAAKhL,UAAU,+BAAf,UACE,wBAAQjK,KAAK,SAASwH,QAAUY,KAAKuL,KAArC,kBACA,+BAAOvL,KAAKqE,MAAM4G,iBAEpB,qBAAKpJ,UAAU,SAAf,SACE,0MAKJ,sBAAKA,UAAU,uBAAf,UACE,sCACA,uBACA,sBAAKA,UAAU,+BAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,qBAAKA,UAAU,gBAAf,kBAGA,qBAAKA,UAAU,gBAAf,SACE,uBAAOjK,KAAK,OAAOiK,UAAU,YAAYnB,GAAG,YAAYuE,aAAcjF,KAAKqE,MAAMwD,SAAS2J,KAAKW,KAAMjN,SAAUlF,KAAKmC,cAGxH,sBAAKN,UAAU,gBAAf,UACE,qBAAKA,UAAU,gBAAf,sBAGA,qBAAKA,UAAU,gBAAf,SACE,uBAAOjK,KAAK,OAAOiK,UAAU,YAAYnB,GAAG,gBAAgBuE,aAAcjF,KAAKqE,MAAMwD,SAAS2J,KAAKY,SAAUlN,SAAUlF,KAAKmC,iBAIlI,sBAAKN,UAAU,+BAAf,UACE,wBAAQjK,KAAK,SAASwH,QAAUY,KAAKuL,KAArC,kBACA,+BAAOvL,KAAKqE,MAAM4G,iBAEpB,qBAAKpJ,UAAU,SAAf,SACE,qOAIJ,sBAAKA,UAAU,uBAAf,UACE,+CACA,uBACA,sBAAKA,UAAU,+BAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,qBAAKA,UAAU,gBAAf,qBAGA,qBAAKA,UAAU,gBAAf,SACI7B,KAAKqE,MAAMwD,SAAS0J,KAAKxR,YAG/B,sBAAK8B,UAAU,gBAAf,UACE,qBAAKA,UAAU,gBAAf,0BAGA,qBAAKA,UAAU,gBAAf,SACI7B,KAAKqE,MAAMwD,SAAS0J,KAAKc,GAAK,eAAiBrS,KAAKqE,MAAMwD,SAAS0J,KAAKe,aAIhF,uBACA,sBAAKzQ,UAAU,+BAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,qBAAKA,UAAU,gBAAf,oBAGA,qBAAKA,UAAU,gBAAf,SACE,cAAC,KAAD,CAAQqD,SAAUlF,KAAK8R,mBAAoB1M,QAASpF,KAAKqE,MAAMwD,SAAS0J,KAAKS,eAGjF,sBAAKnQ,UAAU,gBAAf,UACE,qBAAKA,UAAU,gBAAf,sBAGA,qBAAKA,UAAU,gBAAf,SACE,wBAAQvL,KAAK,OAAOuL,UAAU,kBAAkBnB,GAAG,gBAAgBsE,MAAOhF,KAAKqE,MAAMwD,SAAS0J,KAAKgB,SAAUrN,SAAUlF,KAAKmC,OAA5H,SACE,wBAAQ6C,MAAM,OAAd,yBAIN,sBAAKnD,UAAU,gBAAf,UACE,qBAAKA,UAAU,gBAAf,sBAGA,qBAAKA,UAAU,gBAAf,SACE,uBAAOjK,KAAK,OAAOiK,UAAU,YAAYnB,GAAG,gBAAgBuE,aAAcjF,KAAKqE,MAAMwD,SAAS0J,KAAKiB,SAAUtN,SAAUlF,KAAKmC,cAGhI,sBAAKN,UAAU,gBAAf,UACE,qBAAKA,UAAU,gBAAf,sBAGA,qBAAKA,UAAU,gBAAf,SACE,uBAAOjK,KAAK,OAAOiK,UAAU,YAAYnB,GAAG,gBAAgBuE,aAAcjF,KAAKqE,MAAMwD,SAAS0J,KAAKa,SAAUlN,SAAUlF,KAAKmC,cAGhI,sBAAKN,UAAU,gBAAf,UACE,qBAAKA,UAAU,gBAAf,sBAGA,qBAAKA,UAAU,gBAAf,SACE,uBAAOjK,KAAK,OAAOiK,UAAU,YAAYnB,GAAG,gBAAgBuE,aAAcjF,KAAKqE,MAAMwD,SAAS0J,KAAKQ,SAAU7M,SAAUlF,KAAKmC,iBAIlI,sBAAKN,UAAU,+BAAf,UACE,wBAAQjK,KAAK,SAASwH,QAAUY,KAAKuL,KAArC,kBACA,+BAAOvL,KAAKqE,MAAM4G,iBAEpB,qBAAKpJ,UAAU,SAAf,SACE,4K,GAjQWhB,IAAMC,WCsDdA,OAzDf,SAAmBzC,GA6CjB,OACE,sBAAKK,MA5CW,CAChBC,UAAW,MACXM,MAAO,OACPL,QAAS,OACTC,oBAAqB,WAwCrB,UACE,qBAAKH,MAtCa,CACpB4O,UAAW,OACXpO,WAAY,OAoCV,SACE,sBAAMR,MA7BC,CACXH,SAAU,QA4BN,SAAuBF,EAAMgB,UAE/B,qBAAKX,MApCc,CACrB4O,UAAW,QACXpO,WAAY,OAkCV,SACE,sBAAMR,MAAyB,YAAjBL,EAAM0B,OA5BV,CACdxB,SAAU,OACVkU,WAAY,OACZpW,MAAO,QACPsF,gBAAiB,QACjB+Q,QAAS,MACT5Q,YAAa,OACb6Q,aAAc,OACdjR,aAAc,OAGA,CACdnD,SAAU,OACVkU,WAAY,OACZpW,MAAO,QACPsF,gBAAiB,MACjB+Q,QAAS,MACT5Q,YAAa,OACb6Q,aAAc,OACdjR,aAAc,OASV,SAAiErD,EAAM0B,eCjDzE6S,GAAgBC,EAAQ,IAuOfC,G,kDAlOb,WAAYzU,GAAQ,IAAD,8BACjB,cAAMA,IACDgG,MAAQ,CACX0O,WAAY,GACZC,qBAAqB,EACrBC,eAAgB,IAGlB,EAAKC,eAAiB,EAAKA,eAAezT,KAApB,gBACtB,EAAK0T,QAAU,EAAKA,QAAQ1T,KAAb,gBACf,EAAK2T,YAAc,EAAKA,YAAY3T,KAAjB,gBACnB,EAAK4T,QAAU,EAAKA,QAAQ5T,KAAb,gBACf,EAAK6T,OAAS,EAAKA,OAAO7T,KAAZ,gBACd,EAAK8T,SAAW,EAAKA,SAAS9T,KAAd,gBAbC,E,gEAiBjBO,KAAKkT,iBACL1O,YAAYxE,KAAKkT,eAAeM,O,uCAIhC,IAAIC,EAAO,IAAI9T,eACf8T,EAAK7T,OAAS,SAAUC,GACtB,GAAwB,IAApB4T,EAAK3T,WACP,GAAoB,MAAhB2T,EAAK1T,OAAgB,CAIvB,IAHA,IAAI2T,EAAWlT,KAAKiE,MAAMgP,EAAK/O,cAC3BqO,EAAa,GACb1R,EAAOD,OAAOC,KAAKqS,GACd9c,EAAI,EAAGA,EAAIyK,EAAKxK,OAAQD,IAC/Bmc,EAAWhN,KAAK2N,EAASrS,EAAKzK,KAGhCoJ,KAAK2E,SAAS,CAAEoO,WAAYA,SAE5B7S,QAAQC,MAAMsT,EAAKrT,aAGvBX,KAAKO,MACPyT,EAAKpT,KAAK,MAAOnJ,EAAO,sBACxBuc,EAAKnT,iBAAiB,gBAAiB,UAAYlK,EAAe,UAClEqd,EAAKlT,S,gCAIFpJ,OAAOuV,QAAQ,mBAChBvV,OAAOkJ,KAAKnJ,EAAO,yBAA2Bd,EAAe,UAC7D4J,KAAK2E,SAAS,CACZqO,qBAAqB,EACrBC,eAAgB,6GAElB9b,OAAOqV,WAAW,WAChB,IAAImH,EAAM,IAAIhU,eACdgU,EAAI/T,OAAS,SAAUC,GACE,IAAnB8T,EAAI7T,YACN0E,YAAYxE,KAAKoT,YAAY,MAE/B3T,KAAKO,MACP2T,EAAItT,KAAK,MAAOnJ,EAAO,uBACvByc,EAAIrT,iBAAiB,gBAAiB,UAAYlK,EAAe,UACjEud,EAAIpT,QACJd,KAAKO,MAAM,Q,oCAKf,IAAI4T,EAAM,IAAIjU,eACdiU,EAAIhU,OAAS,SAAUC,GACE,IAAnB+T,EAAI9T,aACa,MAAf8T,EAAI7T,OACN5I,OAAOC,SAASC,KAAO,IAEvB6I,QAAQC,MAAMyT,EAAIxT,cAIxBwT,EAAIvT,KAAK,MAAOnJ,EAAO,SACvB0c,EAAItT,iBAAiB,gBAAiB,UAAYlK,EAAe,UACjEwd,EAAIrT,S,gCAIJP,KAAK2E,SAAS,CACZqO,qBAAqB,EACrBC,eAAgB,4GAElB,IAAIY,EAAM,IAAIlU,eACdkU,EAAIjU,OAAS,SAAUC,GACE,IAAnBgU,EAAI/T,YACN0E,YAAYxE,KAAKoT,YAAY,MAE/B3T,KAAKO,MACP6T,EAAIxT,KAAK,MAAOnJ,EAAO,sBACvB2c,EAAIvT,iBAAiB,gBAAiB,UAAYlK,EAAe,UACjEyd,EAAItT,S,+BAIJP,KAAK2E,SAAS,CACZqO,qBAAqB,EACrBC,eAAgB,6GAElB,IAAIa,EAAM,IAAInU,eACdmU,EAAIlU,OAAS,SAAUC,GACE,IAAnBiU,EAAIhU,YACN0E,YAAYxE,KAAKoT,YAAY,MAE/B3T,KAAKO,MACP8T,EAAIzT,KAAK,MAAOnJ,EAAO,qBACvB4c,EAAIxT,iBAAiB,gBAAiB,UAAYlK,EAAe,UACjE0d,EAAIvT,S,iCAIJP,KAAK2E,SAAS,CACZqO,qBAAqB,EACrBC,eAAgB,8EAElB,IAAIc,EAAM,IAAIpU,eACdoU,EAAI1T,KAAK,MAAOnJ,EAAO,uBACvB6c,EAAIzT,iBAAiB,gBAAiB,UAAYlK,EAAe,UACjE2d,EAAIxT,S,+BAKJ,IAiBMwS,EAAa/S,KAAKqE,MAAM0O,WAAWnO,KAAI,SAACoP,GAAD,OAC3C,cAAC,GAAD,CAAW3U,MAAQ2U,EAAU3U,MAAQU,OAASiU,EAAUjU,OAASkU,OAASD,EAAUC,QAAeD,EAAU3U,UAG/G,OACE,8BAEIW,KAAKqE,MAAM2O,oBAET,sBAAKnR,UAAU,uBAAf,UACE,gDACA,uBACA,qBAAKA,UAAU,+BAAf,SACI7B,KAAKqE,MAAM4O,oBAInB,gCACE,sBAAKpR,UAAU,uBAAf,UACE,+CACA,uBACA,qBAAKA,UAAU,+BAAf,SACIkR,IAEJ,qBAAKlR,UAAU,SAAf,SACE,0GAIJ,sBAAKA,UAAU,uBAAf,UACE,+CACA,uBACA,sBAAKA,UAAU,yCAAf,UACE,gDADF,IAC2B7B,KAAK3B,MAAM6V,QAEV,MAAxBlU,KAAK3B,MAAM8V,IAAIC,KAEf,gCAAK,uBAAL,oDAEA,8BAEIpU,KAAK3B,MAAM6V,UAAYlU,KAAK3B,MAAM8V,IAAID,QAEtC,gCACE,4DAAgClU,KAAK3B,MAAM8V,IAAID,WAC/C,sBAAKxV,MA1DD,CACtBC,UAAW,OACXiC,WAAY,MACZ3B,MAAO,MACP6C,YAAa,OACb6Q,aAAc,OACdzT,WAAY,OACZmV,cAAe,OACf3S,aAAc,OACd4S,OAAQ,iBACRhH,UAAW,QAgDO,UACE,cAACsF,GAAD,CAAe2B,OAAQvU,KAAK3B,MAAM8V,IAAIva,cACtC,wBAAQhC,KAAK,SAAS8G,MAhErB,CACrBO,MAAO,SA+D4DG,QAAUY,KAAKmT,QAA9D,wCAIJ,gCAAK,uBAAL,qCAOR,qBAAKtR,UAAU,SAAf,SACE,qGAIJ,sBAAKA,UAAU,uBAAf,UACE,uCACA,uBACA,sBAAKA,UAAU,+BAAf,UACE,wBAAQjK,KAAK,SAASwH,QAAUY,KAAKqT,QAArC,8BACA,wBAAQzb,KAAK,SAASwH,QAAUY,KAAKsT,OAArC,2BACA,wBAAQ1b,KAAK,SAASwH,QAAUY,KAAKuT,SAArC,gCAEF,qBAAK1R,UAAU,SAAf,SACE,+G,GAxNKhB,IAAMC,WCkDZ0T,G,kDArDb,WAAYnW,GAAQ,IAAD,8BACjB,cAAMA,IACDgG,MAAQ,GAFI,E,qDAOjBlN,OAAOC,SAAWF,EAAO,yBAA2Bd,EAAe,W,+BAKnE,IAAMqe,EAAS,CACbxV,MAAO,SAGHyV,EAAcxd,EAAO,sBAAwBd,EAAe,SAAW,IAE7E,OACE,gCAGE,sBAAKyL,UAAU,uBAAf,UACE,wCACA,uBACA,qBAAKA,UAAU,+BAAf,SACI,wBAAQjK,KAAK,SAAS8G,MAAQ+V,EAASrV,QAAUY,KAAK2U,OAAtD,sBAEJ,qBAAK9S,UAAU,SAAf,SACE,gEAIJ,sBAAKA,UAAU,uBAAf,UACE,yCACA,uBACA,qBAAKA,UAAU,+BAAf,SACE,uBAAM+S,OAAO,OAAOC,QAAQ,sBAAsBC,OAASJ,EAA3D,UACE,uBAAO9c,KAAK,OAAOtB,KAAK,SACxB,wBAAQsB,KAAK,SAAS8G,MAAQ+V,EAASrV,QAAUY,KAAKqT,QAAtD,0BAGJ,qBAAKxR,UAAU,SAAf,SACE,sE,GA5CShB,IAAMC,WC0EZiU,G,kDAzEb,WAAY1W,GAAQ,IAAD,8BACjB,cAAMA,IACDgG,MAAQ,CACXC,KAAM,CACJmN,OAAQ,KAJK,E,gEAUjB,IAAI/R,EAAO,IAAIC,eACfD,EAAKE,OAAS,SAAUC,GACtB,GAAwB,IAApBH,EAAKI,WACP,GAAoB,MAAhBJ,EAAKK,OAAgB,CACvB,IAAIuE,EAAO9D,KAAKiE,MAAM/E,EAAKgF,cAC3B1E,KAAK2E,SAAS,CAAEL,KAAMA,SAEtBpE,QAAQC,MAAMT,EAAKU,aAGvBX,KAAKO,MACPN,EAAKW,KAAK,MAAOnJ,EAAO,mBACxBwI,EAAKY,iBAAiB,gBAAiB,UAAYlK,EAAe,UAClEsJ,EAAKa,S,uCAIL,IAAIb,EAAO,IAAIC,eACfD,EAAKE,OAAS,SAAUC,GACE,IAApBH,EAAKI,aACa,MAAhBJ,EAAKK,OAEP5I,OAAOC,SAASC,KAAO,UAEvB6I,QAAQC,MAAMT,EAAKU,cAIzBV,EAAKW,KAAK,MAAOnJ,EAAO,sBACxBwI,EAAKY,iBAAiB,gBAAiB,UAAYlK,EAAe,UAClEsJ,EAAKa,S,+BAKL,OACE,8BACE,sBAAKsB,UAAU,uBAAf,UACE,yCACA,uBACA,qBAAKA,UAAU,+BAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,qBAAKA,UAAU,gBAAf,qBAGA,qBAAKA,UAAU,gBAAf,SACE,uBAAOjK,KAAK,OAAOiK,UAAU,YAAYnB,GAAG,SAASsE,MAAQhF,KAAKqE,MAAMC,KAAKmN,OAAS5E,UAAQ,WAIpG,qBAAKhL,UAAU,+BAAf,SACE,wBAAQjK,KAAK,SAASwH,QAAUY,KAAKgV,eAArC,wBAGF,qBAAKnT,UAAU,SAAf,SACE,+K,GAlEShB,IAAMC,WC8FZmU,G,kDA7Fb,WAAY5W,GAAQ,IAAD,8BACjB,cAAMA,IACDgG,MAAQ,CACXC,KAAM,GACN4Q,KAAM,GAGR,EAAKC,aAAe,EAAKA,aAAa1V,KAAlB,gBACpB,EAAK2V,SAAW,EAAKA,SAAS3V,KAAd,gBAChB,EAAK4V,YAAc,EAAKA,YAAY5V,KAAjB,gBATF,E,gEAajB,IAAIC,EAAO,IAAIC,eACfD,EAAKE,OAAS,SAAUC,GACtB,GAAwB,IAApBH,EAAKI,WACP,GAAoB,MAAhBJ,EAAKK,OAAgB,CACvB,IAAIuE,EAAO9D,KAAKiE,MAAM/E,EAAKgF,cAC3B1E,KAAK2E,SAAS,CAAEL,KAAMA,SAEtBpE,QAAQC,MAAMT,EAAKU,aAGvBX,KAAKO,MACPN,EAAKW,KAAK,MAAOnJ,EAAO,gBACxBwI,EAAKY,iBAAiB,gBAAiB,UAAYlK,EAAe,UAClEsJ,EAAKa,S,qCAIDP,KAAKqE,MAAM6Q,KAAO,GACpBlV,KAAK2E,SAAS,CAAEuQ,KAAMlV,KAAKqE,MAAM6Q,KAAO,M,iCAItClV,KAAKqE,MAAM6Q,KAAOlV,KAAKqE,MAAMC,KAAKzN,OAAO,GAAG,GAC9CmJ,KAAK2E,SAAS,CAAEuQ,KAAMlV,KAAKqE,MAAM6Q,KAAO,M,oCAI1C/d,OAAOC,SAAWF,EAAO,sBAAwBd,EAAe,W,+BAKhE,IAAMkf,EAAO,CACXrW,MAAO,MACP2B,WAAY,KACZjC,UAAW,OACX4W,aAAc,iBACdzT,YAAa,OACbuS,cAAe,OACf1B,aAAc,OACdrF,UAAW,QAGPkI,EAAS,CACbnZ,MAAO,UAGHoZ,EAAM,CACVpZ,MAAO,OAIHqZ,EADwB1V,KAAKqE,MAAMC,KAAKqR,UAAUC,MAAM,EAAqB,GAAlB5V,KAAKqE,MAAM6Q,MAC7BtQ,KAAI,SAACiR,EAAUjf,GAAX,OACjD,sBAAK8H,MAAQ4W,EAAb,UAC0B,QAAtBO,EAASC,SAAqB,4BAAKD,EAASC,WAAiB,GACvC,YAAtBD,EAASC,SAAyB,mBAAGpX,MAAQ8W,EAAX,SAAsBK,EAASC,WAAiB,GAC5D,UAAtBD,EAASC,SAAuB,mBAAGpX,MAAQ+W,EAAX,SAAmBI,EAASC,WAAiB,GAHjF,KAIOD,EAASE,KAAM,uBAClBF,EAASG,UALapf,MAS5B,OACE,8BACE,sBAAKiL,UAAU,uBAAf,UACE,kDACA,uBACA,8BACI6T,IAEJ,sBAAK7T,UAAU,+BAAf,UACE,wBAAQjK,KAAK,SAASwH,QAAUY,KAAKoV,SAArC,uBACA,wBAAQxd,KAAK,SAASwH,QAAUY,KAAKqV,YAArC,kC,GAtFOxU,IAAMC,WC0FVmV,G,kDA1Fb,WAAY5X,GAAQ,IAAD,8BACjB,cAAMA,IACDgG,MAAQ,CACX6R,gBAAgB,EAChBF,QAAS,IAEX,EAAKG,MAAQ,EAAKA,MAAM1W,KAAX,gBACb,EAAK2W,YAAc,EAAKA,YAAY3W,KAAjB,gBAPF,E,oDAWjB,IAAIC,EAAO,IAAIC,eACfD,EAAKE,OAAS,SAAUC,GACtB,IAAI6T,EAAWlT,KAAKiE,MAAM/E,EAAKgF,cACL,OAAvBgP,EAAQ,QACTjd,SAASC,OAAS,QAAUgd,EAAQ,KAAW,WAC/Cjd,SAASC,OAAS,SAAWgd,EAAQ,MAAY,WACjDvc,OAAOC,SAAW,KACc,SAAvBsc,EAAQ,SACjB1T,KAAK2E,SAAS,CACZuR,gBAAgB,EAChBF,QAAS,+BAEXxJ,WAAW,WACTxM,KAAK2E,SAAS,CACXuR,gBAAgB,KAEnBzW,KAAKO,MAAO,OAEhBP,KAAKO,MACPN,EAAKW,KAAK,MAAOnJ,EAAO,mBACxBwI,EAAKY,iBAAiB,OAAQ7J,SAASqY,eAAe,QAAQ9J,OAC9DtF,EAAKY,iBAAiB,OAAQ7J,SAASqY,eAAe,YAAY9J,OAClEtF,EAAKa,S,oCAIL,IAAIb,EAAO,IAAIC,eACfD,EAAKE,OAAS,SAAUC,GACI,SAAtBH,EAAKgF,aACPvN,OAAOC,SAAWsI,EAAKgF,cAEvB1E,KAAK2E,SAAS,CACZuR,gBAAgB,EAChBF,QAAS,+BAEXxJ,WAAW,WACTxM,KAAK2E,SAAS,CACXuR,gBAAgB,KAEnBzW,KAAKO,MAAO,OAEhBP,KAAKO,MACPN,EAAKW,KAAK,MAAOnJ,EAAO,wBACxBwI,EAAKY,iBAAiB,OAAQ7J,SAASqY,eAAe,QAAQ9J,OAC9DtF,EAAKY,iBAAiB,OAAQ7J,SAASqY,eAAe,YAAY9J,OAClEtF,EAAKa,S,+BAKL,IAIM8V,EAAU,CACdC,OAAQ,QAGNN,EAAU,GAKd,OAJIhW,KAAKqE,MAAM6R,iBACbF,EAAU,sBAAKnU,UAAU,gBAAf,cAAkC7B,KAAKqE,MAAM2R,QAA7C,QAIV,sBAAKtX,MAdgB,CACrB4X,OAAQ,OAaR,UACInf,OAAOC,SAASC,KAAKC,SAAS,UAAY,sEAA+C,GAC3F,uBACA,sBAAMoH,MAAQ2X,EAAd,sBACA,uBAAOze,KAAK,OAAOtB,KAAK,OAAOoK,GAAG,SAClC,sBAAMhC,MAAQ2X,EAAd,sBACA,uBAAOze,KAAK,WAAWtB,KAAK,WAAWoK,GAAG,aAC1C,wBAAQ9I,KAAK,SAAS8G,MAAQ2X,EAAUjX,QAAWjI,OAAOC,SAASC,KAAKC,SAAS,UAAyB0I,KAAKoW,YAAlBpW,KAAKmW,MAAlG,SAAgIhf,OAAOC,SAASC,KAAKC,SAAS,UAAiC,gDAArB,2CAC1K,uBACE0e,S,GArFUnV,IAAMC,WC4NXyV,G,kDAtMb,WAAYlY,GAAQ,IAAD,8BACjB,cAAMA,IACDgG,MAAQ,CACXmS,SAAS,EACTC,MAAO,QACPvC,QAAS,GACTC,IAAK,CACHC,KAAM,GACNF,QAAS,IAGb,EAAKwC,gBAAkB,EAAKA,gBAAgBjX,KAArB,gBACvB,EAAKkX,YAAc,EAAKA,YAAYlX,KAAjB,gBACnB,EAAKmX,OAAS,EAAKA,OAAOnX,KAAZ,gBACd,EAAKoX,KAAO,EAAKA,KAAKpX,KAAV,gBAdK,E,gEAkBjB,IAAIC,EAAO,IAAIC,eACfD,EAAKE,OAAS,SAAUC,GACtB,GAAwB,IAApBH,EAAKI,WACP,GAAoB,MAAhBJ,EAAKK,OAAgB,CACvB,IAAIuE,EAAO9D,KAAKiE,MAAM/E,EAAKgF,cACP,OAAhBJ,EAAKvE,QAAoB5I,OAAOC,SAASC,KAAKC,SAAS,SAElC,OAAhBgN,EAAKvE,QACZC,KAAK2E,SAAS,CACZ6R,SAAS,IAHXrf,OAAOC,SAASC,KAAO,eAMzB6I,QAAQC,MAAMT,EAAKU,aAGvBX,KAAKO,MACPN,EAAKW,KAAK,MAAOnJ,EAAO,2BACxBwI,EAAKY,iBAAiB,QAASlK,EAAe,UAC9CsJ,EAAKY,iBAAiB,OAAQlK,EAAe,SAC7CsJ,EAAKa,OAELP,KAAK0W,kBACLvf,OAAOqN,YAAYxE,KAAK0W,gBAAgBI,KACxC9W,KAAK2W,cACLxf,OAAOqN,YAAYxE,KAAK2W,YAAYI,O,wCAKpC,IAAIC,EAAO,IAAIrX,eACfqX,EAAKpX,OAAS,SAAUC,GACtB,GAAwB,IAApBmX,EAAKlX,WACP,GAAoB,MAAhBkX,EAAKjX,OAAgB,CACvB,IAAImU,EAAU1T,KAAKiE,MAAMuS,EAAKtS,cAC9B1E,KAAK2E,SAAS,CAAEuP,QAASA,EAAQA,eAEjChU,QAAQC,MAAM6W,EAAK5W,aAGvBX,KAAKO,MACPgX,EAAK3W,KAAK,MAAOnJ,EAAO,uBACxB8f,EAAK1W,iBAAiB,gBAAiB,UAAYlK,EAAe,UAClE4gB,EAAKzW,OAEL,IAAI4T,EAAM,IAAIxU,eACdwU,EAAIvU,OAAS,SAAUC,GACrB,GAAuB,IAAnBsU,EAAIrU,WACN,GAAmB,MAAfqU,EAAIpU,OAAgB,CACtB,IAAMkX,EAAgBzW,KAAKiE,MAAM0P,EAAIzP,cACrC1E,KAAK2E,SAAS,CAAEwP,IAAK,CACnBD,QAAS+C,EAAcC,SACvBtd,YAAaqd,EAAcE,KAC3B/C,KAAM,YAGgB,MAAfD,EAAIpU,OACfC,KAAK2E,SAAS,CACZwP,IAAK,CACHC,KAAM,GACNF,QAAS,OAIXhU,QAAQC,MAAMgU,EAAI/T,aAGtBX,KAAKO,MACPmU,EAAI9T,KAAK,MAAO,6EAChB8T,EAAI5T,S,oCAIJ,IAAIyW,EAAO,IAAIrX,eACfqX,EAAKpX,OAAS,SAAUC,GACtB,GAAwB,IAApBmX,EAAKlX,WACP,GAAoB,MAAhBkX,EAAKjX,OAAgB,CACvB,IAAM0W,EAAQjW,KAAKiE,MAAMuS,EAAKtS,cAC9B1E,KAAK2E,SAAS,CACZ,MAAS8R,EAAMA,aAGjBvW,QAAQC,MAAM6W,EAAK5W,aAGvBX,KAAKO,MACPgX,EAAK3W,KAAK,MAAOnJ,EAAO,kBACxB8f,EAAK1W,iBAAiB,gBAAiB,UAAYlK,EAAe,UAClE4gB,EAAKzW,S,+BAIL9J,SAASC,OAAS,gBAClBD,SAASC,OAAS,iBAClBsJ,KAAK2E,SAAS,CACZ6R,SAAS,IAEXrf,OAAOC,SAASC,KAAO,M,6BAIvBZ,SAASqY,eAAe,YAAYsI,UAAU5X,OAAO,oBACrD/I,SAASqY,eAAe,QAAQsI,UAAU5X,OAAO,kB,+BAKjD,OAAKQ,KAAKqE,MAAMmS,SAAYrf,OAAOC,SAASC,KAAKC,SAAS,SAEjDH,OAAOC,SAASC,KAAKC,SAAS,SAEnC,qBAAKuK,UAAU,YAAf,SACE,cAAC,GAAD,MAKF,cAAC,IAAD,UACE,sBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,aAAf,UACE,sBAAKA,UAAU,sBAAsBnB,GAAG,WAAWtB,QAASY,KAAK6W,KAAjE,UACE,qBAAKhV,UAAU,oBACf,qBAAKA,UAAU,oBACf,qBAAKA,UAAU,uBAEjB,sBAAKA,UAAU,8BAAf,UACE,oBAAIA,UAAU,oBAAd,0BACA,qBAAKA,UAAU,qBAAf,SAA0D,QAArB7B,KAAKqE,MAAMoS,MAAkB,6BAA+B,WAGrG,sBAAK5U,UAAU,WAAf,UACE,sBAAKA,UAAU,OAAOnB,GAAG,OAAzB,UACE,gCACE,cAAC,EAAD,CAAM3B,MAAM,yBAAyBM,MAAM,UAAUhI,KAAK,aAC1D,cAAC,EAAD,CAAM0H,MAAM,uBAAuBM,MAAM,QAAQhI,KAAK,WACtD,cAAC,EAAD,CAAM0H,MAAM,0BAA0BM,MAAM,WAAWhI,KAAK,cAC5D,cAAC,EAAD,CAAM0H,MAAM,wBAAwBM,MAAM,SAAShI,KAAK,YACxD,cAAC,EAAD,CAAM0H,MAAM,wBAAwBM,MAAM,SAAShI,KAAK,YACxD,cAAC,EAAD,CAAM0H,MAAM,wBAAwBM,MAAM,SAAShI,KAAK,YACxD,cAAC,EAAD,CAAM0H,MAAM,sBAAsBM,MAAM,OAAOhI,KAAK,UACpD,uBACA,cAAC,EAAD,CAAM0H,MAAM,sBAAsBM,MAAM,OAAOF,KAAO,WAAKhI,OAAOC,SAASC,KAAO,qDAClF,cAAC,EAAD,CAAM0H,MAAM,sBAAsBM,MAAM,SAASF,KAAO,WAAKhI,OAAOC,SAASC,KAAO,qDACpF,uBACA,cAAC,EAAD,CAAM0H,MAAM,wBAAwBM,MAAM,SAASF,KAAOa,KAAK4W,YAEjE,sBAAK/U,UAAU,YAAf,UAEI7B,KAAKqE,MAAM8P,IAAID,UAAYlU,KAAKqE,MAAMgT,SAAsC,KAA3BrX,KAAKqE,MAAM8P,IAAID,QAEhE,cAAC,IAAD,CAAM5U,GAAG,UAAUuC,UAAU,uBAA7B,SACE,qBAAKA,UAAU,kBAAf,oCAGF,GAGF,oBAAGA,UAAU,oBAAb,sBAA4C7B,KAAKqE,MAAM6P,iBAG3D,sBAAKrS,UAAU,OAAf,UACE,eAAC,IAAD,CAAOyV,OAAQ,EAAOC,KAAK,IAA3B,cAAgC,cAAC,GAAD,IAAhC,OACA,eAAC,IAAD,CAAOD,OAAQ,EAAOC,KAAK,WAA3B,cAAuC,cAAC,GAAD,IAAvC,OACA,eAAC,IAAD,CAAOA,KAAK,kBAAZ,cAA+B,cAAC,GAAD,IAA/B,OACA,eAAC,IAAD,CAAOA,KAAK,gBAAZ,cAA6B,cAACC,GAAD,IAA7B,OACA,eAAC,IAAD,CAAOD,KAAK,sBAAZ,cAAmC,cAAC,GAAD,IAAnC,OACA,eAAC,IAAD,CAAOD,OAAQ,EAAOC,KAAK,SAA3B,cAAqC,cAAC,GAAD,IAArC,OACA,eAAC,IAAD,CAAOA,KAAK,iBAAZ,cAA8B,cAAC,GAAD,IAA9B,OACA,eAAC,IAAD,CAAOA,KAAK,YAAZ,cAAyB,cAAC,GAAD,IAAzB,OACA,eAAC,IAAD,CAAOA,KAAK,UAAZ,cAAuB,cAAC,GAAD,CAAQpD,IAAKnU,KAAKqE,MAAM8P,IAAKD,QAASlU,KAAKqE,MAAM6P,UAAxE,OACA,eAAC,IAAD,CAAOqD,KAAK,UAAZ,cAAuB,cAAC,GAAD,IAAvB,OACA,eAAC,IAAD,CAAOA,KAAK,UAAZ,cAAuB,cAAC,GAAD,IAAvB,OACA,eAAC,IAAD,CAAOA,KAAK,QAAZ,cAAqB,cAAC,GAAD,IAArB,kBAhEH,O,GA9HK1W,IAAMC,WCZJ2W,QACW,cAA7BtgB,OAAOC,SAAS2a,UAEe,UAA7B5a,OAAOC,SAAS2a,UAEhB5a,OAAOC,SAAS2a,SAAS2F,MACvB,2DCZNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFphB,SAASqY,eAAe,SDyHpB,kBAAmBgJ,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAjY,GACLD,QAAQC,MAAMA,EAAM6V,a","file":"static/js/main.13a03606.chunk.js","sourcesContent":["function getCookieValue(cname) {\n  var name = cname + \"=\";\n  var decodedCookie = decodeURIComponent(document.cookie);\n  var ca = decodedCookie.split(';');\n  for(var i = 0; i <ca.length; i++) {\n    var c = ca[i];\n    while (c.charAt(0) === ' ') {\n      c = c.substring(1);\n    }\n    if (c.indexOf(name) === 0) {\n      return c.substring(name.length, c.length);\n    }\n  }\n  return \"\";\n}\n\nexport default getCookieValue;\n","var root = window.location.href.includes('localhost') ? \"http://homeware.local/\" : \"/\"\n\nconst deviceReference = {\n  devices: {\n    \"action.devices.types.AC_UNIT\": {\n      name: \"AC unit\",\n      traits: [\n        \"action.devices.traits.FanSpeed\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.TemperatureSetting\"\n      ]\n    },\n    \"action.devices.types.AIRCOOLER\": {\n      name: \"Air cooler\",\n      traits: [\n        \"action.devices.traits.FanSpeed\",\n        \"action.devices.traits.HumiditySetting\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.TemperatureSetting\"\n      ]\n    },\n    \"action.devices.types.AIRFRESHENER\": {\n      name: \"Air freshener\",\n      traits: [\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.AIRPURIFIER\": {\n      name: \"Air purifier\",\n      traits: [\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.FanSpeed\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.Toggles\",\n        \"action.devices.traits.SensorState\"\n      ]\n    },\n    \"action.devices.types.AWNING\": {\n      name: \"Awing\",\n      traits: [\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OpenClose\"\n      ]\n    },\n    \"action.devices.types.BATHTUB\": {\n      name: \"Bathtub\",\n      traits: [\n        \"action.devices.traits.Fill\",\n        \"action.devices.traits.OnOff\"\n      ]\n    },\n    \"action.devices.types.BED\": {\n      name: \"Bed\",\n      traits: [\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.BLINDS\": {\n      name: \"Blinds\",\n      traits: [\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OpenClose\"\n      ]\n    },\n    \"action.devices.types.BLENDER\": {\n      name: \"Blender\",\n      traits: [\n        \"action.devices.traits.Cook\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Timer\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.BOILER\": {\n      name: \"Boiler\",\n      traits: [\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.TemperatureControl\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.CARBON_MONOXIDE_DETECTOR\": {\n      name: \"Carbon monoxide detector\",\n      traits: [\n        \"action.devices.traits.SensorState\"\n      ]\n    },\n    \"action.devices.types.CLOSET\": {\n      name: \"Closet\",\n      traits: [\n        \"action.devices.traits.OpenClose\"\n      ]\n    },\n    \"action.devices.types.COFFE_MAKER\": {\n      name: \"Coffe maker\",\n      traits: [\n        \"action.devices.traits.Cook\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.TemperatureControl\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.COOKTOP\": {\n      name: \"Cooktop\",\n      traits: [\n        \"action.devices.traits.Cook\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Timer\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.CURTAIN\": {\n      name: \"Curtain\",\n      traits: [\n        \"action.devices.traits.OpenClose\"\n      ]\n    },\n    \"action.devices.types.DEHUMIDIFIER\": {\n      name: \"Dehumidifier\",\n      traits: [\n        \"action.devices.traits.FanSpeed\",\n        \"action.devices.traits.HumiditySetting\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.RunCycle\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.DEHYDRATOR\": {\n      name: \"Dehydrator\",\n      traits: [\n        \"action.devices.traits.Cook\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Timer\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.DISHWASHER\": {\n      name: \"Dishwasher\",\n      traits: [\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.Toggles\",\n        \"action.devices.traits.RunCycle\"\n      ]\n    },\n    \"action.devices.types.DOOR\": {\n      name: \"Door\",\n      traits: [\n        \"action.devices.traits.OpenClose\"\n      ]\n    },\n    \"action.devices.types.DRAWER\": {\n      name: \"Drawer\",\n      traits: [\n        \"action.devices.traits.OpenClose\"\n      ]\n    },\n    \"action.devices.types.DRYER\": {\n      name: \"Dryer\",\n      traits: [\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.Toggles\",\n        \"action.devices.traits.RunCycle\"\n      ]\n    },\n    \"action.devices.types.FAN\": {\n      name: \"Fan\",\n      traits: [\n        \"action.devices.traits.FanSpeed\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.FIREPLACE\": {\n      name: \"Fireplace\",\n      traits: [\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.FREEZER\": {\n      name: \"Fireplace\",\n      traits: [\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.TemperatureControl\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.FRYER\": {\n      name: \"Fryer\",\n      traits: [\n        \"action.devices.traits.Cook\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Timer\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.GARAGE\": {\n      name: \"Garage\",\n      traits: [\n        \"action.devices.traits.OpenClose\"\n      ]\n    },\n    \"action.devices.types.GATE\": {\n      name: \"Gate\",\n      traits: [\n        \"action.devices.traits.OpenClose\"\n      ]\n    },\n    \"action.devices.types.GRILL\": {\n      name: \"Grill\",\n      traits: [\n        \"action.devices.traits.Cook\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Timer\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.HEATER\": {\n      name: \"Heater\",\n      traits: [\n        \"action.devices.traits.FanSpeed\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.TemperatureSetting\",\n      ]\n    },\n    \"action.devices.types.HOOD\": {\n      name: \"Hood\",\n      traits: [\n        \"action.devices.traits.FanSpeed\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.HUMIDIFIER\": {\n      name: \"Humidifier\",\n      traits: [\n        \"action.devices.traits.FanSpeed\",\n        \"action.devices.traits.HumiditySetting\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.KETTLE\": {\n      name: \"Kettle\",\n      traits: [\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.TemperatureControl\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.LIGHT\": {\n      name: \"Light\",\n      traits: [\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.Brightness\",\n        \"action.devices.traits.ColorSetting\"\n      ]\n    },\n    \"action.devices.types.LOCK\": {\n      name: \"Lock\",\n      traits: [\n        \"action.devices.traits.LockUnlock\"\n      ]\n    },\n    \"action.devices.types.MICROWAVE\": {\n      name: \"Microwave\",\n      traits: [\n        \"action.devices.traits.Cook\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Timer\",\n        \"action.devices.traits.Toggles\"\n      ],\n    },\n    \"action.devices.types.MOP\": {\n      name: \"Mop\",\n      traits: [\n        \"action.devices.traits.Dock\",\n        \"action.devices.traits.Locator\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.RunCycle\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.MOWER\": {\n      name: \"Mower\",\n      traits: [\n        \"action.devices.traits.Dock\",\n        \"action.devices.traits.Locator\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.RunCycle\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.MULTICOOKER\": {\n      name: \"Multicooker\",\n      traits: [\n        \"action.devices.traits.Cook\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Timer\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.OUTLET\": {\n      name: \"Outlet\",\n      traits: [\n        \"action.devices.traits.OnOff\"\n      ]\n    },\n    \"action.devices.types.OVEN\": {\n      name: \"Oven\",\n      traits: [\n        \"action.devices.traits.Cook\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.TemperatureControl\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.PERGOLA\": {\n      name: \"Pergola\",\n      traits: [\n        \"action.devices.traits.OpenClose\",\n        \"action.devices.traits.Rotation\"\n      ]\n    },\n    \"action.devices.types.PRESSURECOOKER\": {\n      name: \"Pressure cooker\",\n      traits: [\n        \"action.devices.traits.Cook\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Timer\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.RADIATOR\": {\n      name: \"Radiator\",\n      traits: [\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.REFRIGERATOR\": {\n      name: \"Refrigerator\",\n      traits: [\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.TemperatureControl\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.SENSOR\": {\n      name: \"Sensor\",\n      traits: [\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.SensorState\"\n      ]\n    },\n    \"action.devices.types.SECURITYSYSTEM\": {\n      name: \"Security system\",\n      traits: [\n        \"action.devices.traits.ArmDisarm\",\n        \"action.devices.traits.StatusReport\"\n      ]\n    },\n    \"action.devices.types.SHOWER\": {\n      name: \"Shower\",\n      traits: [\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.TemperatureControl\"\n      ]\n    },\n    \"action.devices.types.SHUTTER\": {\n      name: \"Shutter\",\n      traits: [\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OpenClose\",\n        \"action.devices.traits.Rotation\"\n      ]\n    },\n    \"action.devices.types.SMOKE_DETECTOR\": {\n      name: \"Smoke detector\",\n      traits: [\n        \"action.devices.traits.SensorState\"\n      ]\n    },\n    \"action.devices.types.SOUSVIDE\": {\n      name: \"Sous vide\",\n      traits: [\n        \"action.devices.traits.Cook\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Timer\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.SPRINKLER\": {\n      name: \"Sprinkler\",\n      traits: [\n        \"action.devices.traits.StartStop\"\n      ]\n    },\n    \"action.devices.types.STANDMIXER\": {\n      name: \"Stand mixer\",\n      traits: [\n        \"action.devices.traits.Cook\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.SWITCH\": {\n      name: \"Switch\",\n      traits: [\n        \"action.devices.traits.OnOff\"\n      ]\n    },\n    \"action.devices.types.THERMOSTAT\": {\n      name: \"Thermostat\",\n      traits: [\n        \"action.devices.traits.TemperatureSetting\"\n      ]\n    },\n    \"action.devices.types.VACUUM\": {\n      name: \"Vacum\",\n      traits: [\n        \"action.devices.traits.Dock\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.VALVE\": {\n      name: \"Valve\",\n      traits: [\n        \"action.devices.traits.OpenClose\"\n      ]\n    },\n    \"action.devices.types.WASHER\": {\n      name: \"Washer\",\n      traits: [\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.RunCycle\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.WATERHEATER\": {\n      name: \"Water heater\",\n      traits: [\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.TemperatureControl\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.WATERPURIFIER\": {\n      name: \"Water purifier\",\n      traits: [\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.SensorState\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.WATERSOFTENER\": {\n      name: \"Water softener\",\n      traits: [\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.SensorState\",\n        \"action.devices.traits.Toggles\"\n      ]\n    },\n    \"action.devices.types.WINDOW\": {\n      name: \"Window\",\n      traits: [\n        \"action.devices.traits.LockUnlock\",\n        \"action.devices.traits.OpenClose\"\n      ]\n    },\n    \"action.devices.types.SCENE\": {\n      name: \"Scene\",\n      traits: [\n        \"action.devices.traits.Scene\"\n      ]\n    },\n    \"action.devices.types.YOGURTMAKER\": {\n      name: \"Yogurt maker\",\n      traits: [\n        \"action.devices.traits.Cook\",\n        \"action.devices.traits.Modes\",\n        \"action.devices.traits.OnOff\",\n        \"action.devices.traits.StartStop\",\n        \"action.devices.traits.Timer\",\n        \"action.devices.traits.Toggles\"\n      ]\n    }\n  },\n  traits: {\n    \"action.devices.traits.OnOff\": {\n      name: 'Power control',\n      attributes: {\n        commandOnlyOnOff: {\n          type: \"bool\",\n          default: false\n        },\n        queryOnlyOnOff: {\n          type: \"bool\",\n          default: false\n        }\n      },\n      params: ['on'],\n      commands: []\n    },\n    \"action.devices.traits.Brightness\": {\n      name: 'Brightness',\n      attributes: {\n        commandOnlyBrightness: {\n          type: \"bool\",\n          default: false\n        }\n      },\n      params: ['brightness'],\n      commands: []\n    },\n    \"action.devices.traits.ColorSetting\": {\n      name: 'Color setting',\n      attributes: {\n        colorModel: {\n          type: \"string\",\n          default: \"rgb\"\n        },\n        commandOnlyColorSetting: {\n            type: \"bool\",\n            default: false\n        },\n        colorTemperatureRange: {\n          type: \"object\",\n          default: {\n            temperatureMinK: 4000,\n            temperatureMaxK: 4200\n          },\n          content: {\n            temperatureMinK: {\n              type: \"int\",\n              default: 4000\n            },\n            temperatureMaxK: {\n              type: \"int\",\n              default: 4200\n            }\n          }\n        }\n      },\n      params: ['color'],\n      commands: []\n    },\n    \"action.devices.traits.TemperatureSetting\": {\n      name: 'Temperature Settings',\n      attributes: {\n        availableThermostatModes: {\n          type: \"select\",\n          default: \"off,heat,cool\"\n        },\n        thermostatTemperatureRange: {\n          type: \"object\",\n          default: {\n            minThresholdCelsius: 18,\n            maxThresholdCelsius: 34\n          }\n        },\n        thermostatTemperatureUnit: {\n          type: \"string\",\n          default: \"C\"\n        },\n        bufferRangeCelsius: {\n          type: \"int\",\n          default: 2\n        },\n        commandOnlyTemperatureSetting: {\n          type: \"bool\",\n          default: false\n        },\n        queryOnlyTemperatureSetting: {\n          type: \"bool\",\n          default: false\n        }\n      },\n      params: [\n        'thermostatMode',\n        'thermostatTemperatureSetpoint',\n        'thermostatTemperatureAmbient',\n        'thermostatTemperatureSetpointHigh',\n        'thermostatTemperatureSetpointLow',\n        'thermostatHumidityAmbient'\n      ],\n      commands: []\n    },\n    \"action.devices.traits.OpenClose\": {\n      name: 'Open or close',\n      attributes: {\n        discreteOnlyOpenClose: {\n          type: \"bool\",\n          default: false\n        },\n        openDirection: {\n          type: \"array\",\n          default: [\"UP\",\"DOWN\",\"LEFT\",\"RIGHT\",\"IN\",\"OUT\"]\n        },\n        commandOnlyOpenClose: {\n          type: \"bool\",\n          default: false\n        },\n        queryOnlyOpenClose: {\n          type: \"bool\",\n          default: false\n        }\n      },\n      params: ['openPercent'],\n      commands: []\n    },\n    \"action.devices.traits.Rotation\": {\n      name: 'Rotation - Google doesn\\'t respond',\n      attributes: {\n        commandOnlyRotation: {\n          type: \"bool\",\n          default: false\n        },\n        supportsContinuousRotation: {\n          type: \"bool\",\n          default: false\n        },\n        supportsDegrees: {\n          type: \"bool\",\n          default: false\n        },\n        supportsPercent: {\n          type: \"bool\",\n          default: false\n        },\n        rotationDegreesRange: {\n          type: \"object\",\n          default: {\n            rotationDegreesMin: 0,\n            rotationDegreesMax: 0\n          },\n          content: {\n            rotationDegreesMin: {\n              type: \"int\"\n            },\n            rotationDegreesMax: {\n              type: \"int\"\n            }\n          }\n        }\n      },\n      params: ['rotationPercent','rotationDegrees'],\n      commands: []\n    },\n    \"action.devices.traits.LockUnlock\": {\n      name: 'Lock or unlock',\n      attributes: {},\n      params: ['isLocked','isJammed'],\n      commands: [\n        {\n          command: 'lock',\n          description: 'Lock'\n        },\n        {\n          command: 'unlock',\n          description: 'Unlock'\n        }\n      ]\n    },\n    \"action.devices.traits.Scene\": {\n      name: 'Scene',\n      attributes: {\n        sceneReversible: {\n          type: \"bool\",\n          default: true\n        }\n      },\n      params: ['deactivate'],\n      commands: []\n    },\n    \"action.devices.traits.Dock\": {\n      name: 'Dock',\n      attributes: {},\n      params: ['isDocked'],\n      commands: []\n    },\n    \"action.devices.traits.Toggles\": {\n      name: 'Toogles',\n      attributes: {\n        availableToggles: {\n          type: \"strigifyedObject\",\n          default: []\n        },\n        commandOnlyToggles: {\n          type: \"bool\",\n          default: false\n        }\n      },\n      params: ['currentToggleSettings'],\n      commands: []\n    },\n    \"action.devices.traits.StartStop\": {\n      name: 'Start and stop',\n      attributes: {\n        availableZones: {\n          type: \"array\",\n          default: []\n        },\n        pausable: {\n          type: \"bool\",\n          default: false\n        }\n      },\n      params: ['isRunning','isPaused','activeZones'],\n      commands: [\n        {\n          command: 'start',\n          description: 'Start the process'\n        },\n        {\n          command: 'stop',\n          description: 'Stop the process'\n        },\n        {\n          command: 'pause',\n          description: 'Pause cooking'\n        },\n        {\n          command: 'unpause',\n          description: 'Unpause cooking'\n        }\n      ]\n    },\n    \"action.devices.traits.Timer\": {\n      name: 'Timer - Google doesn\\'t respond',\n      attributes: {\n        maxTimerLimitSec: {\n          type: \"int\",\n          default: 1000\n        },\n        commandOnlyTimer: {\n          type: \"bool\",\n          default: false\n        }\n      },\n      params: ['timerRemainingSec', 'timerPaused'],\n      commands: []\n    },\n    \"action.devices.traits.TemperatureControl\": {\n      name: 'Temperature control',\n      attributes: {\n        temperatureStepCelsius: {\n          type: \"int\",\n          default: 5\n        },\n        temperatureUnitForUX: {\n          type: \"string\",\n          default: \"C\"\n        },\n        queryOnlyTemperatureControl: {\n          type: \"bool\",\n          default: false\n        },\n        commandOnlyTemperatureControl: {\n          type: \"bool\",\n          default: false\n        },\n        temperatureRange: {\n          type: \"object\",\n          default: {\n            minThresholdCelsius: 0,\n            maxThresholdCelsius: 150\n          },\n          content: {\n            minThresholdCelsius: {\n              type: \"int\"\n            },\n            maxThresholdCelsius: {\n              type: \"int\"\n            }\n          }\n        }\n      },\n      params: ['temperatureSetpointCelsius','temperatureAmbientCelsius'],\n      commands: []\n    },\n    \"action.devices.traits.FanSpeed\": {\n      name: 'Fan Speed',\n      attributes: {\n        availableFanSpeeds: {\n          type: \"strigifyedObject\",\n          default: {\n            speeds: [],\n            ordered: true\n          }\n        },\n        reversible: {\n          type: \"bool\",\n          default: true\n        },\n        commandOnlyFanSpeed: {\n          type: \"bool\",\n          default: true\n        }\n      },\n      params: ['currentFanSpeedSetting'],\n      commands: []\n    },\n    \"action.devices.traits.ArmDisarm\": {\n      name: 'Arm or disarm',\n      attributes: {\n        availableArmLevels: {\n          type: \"strigifyedObject\",\n          default: {\n            levels: [],\n            ordered: true\n          }\n        }\n      },\n      params: ['isArmed', 'currentArmLevel','exitAllowance'],\n      commands: [\n        {\n          command: 'cancel',\n          description: 'The arm process must be canceled'\n        },\n        {\n          command: 'arm',\n          description: 'Arm the system'\n        },\n        {\n          command: 'disarm',\n          description: 'Disarm the system'\n        }\n      ]\n    },\n    \"action.devices.traits.Fill\": {\n      name: 'Fill',\n      attributes: {\n        availableFillLevels: {\n          type: \"strigifyedObject\",\n          default: {\n            levels: [],\n            ordered: true\n          }\n        }\n      },\n      params: ['isFilled','currentFillLevel'],\n      commands: [\n        {\n          command: 'fill',\n          description: 'Fill'\n        },\n        {\n          command: 'drain',\n          description: 'Drain'\n        }\n      ]\n    },\n    \"action.devices.traits.RunCycle\": {\n      name: 'RunCycle',\n      attributes: {},\n      params: [],\n      commands: []\n    },\n    \"action.devices.traits.StatusReport\": {\n      name: 'Status report',\n      attributes: {},\n      params: ['currentStatusReport'],\n      commands: []\n    },\n    \"action.devices.traits.HumiditySetting\": {\n      name: 'Humidity setting',\n      attributes: {\n        humiditySetpointRange: {\n          type: \"object\",\n          default: {\n            minPercent: 0,\n            maxPercent: 100\n          },\n          content: {\n            minPercent: {\n              type: \"int\"\n            },\n            maxPercent: {\n              type: \"int\"\n            }\n          }\n        },\n        commandOnlyHumiditySetting: {\n          type: \"bool\",\n          default: false\n        },\n        queryOnlyHumiditySetting: {\n          type: \"bool\",\n          default: false\n        }\n      },\n      params: ['humiditySetpointPercent','humidityAmbientPercent'],\n      commands: []\n    },\n    \"action.devices.traits.Cook\": {\n      name: 'Cooking',\n      attributes: {\n        foodPresets: {\n          type: \"strigifyedObject\",\n          default: []\n        },\n        supportedCookingModes: {\n          type: \"selectToArray\",\n          default: []\n        }\n      },\n      params: ['currentCookingMode','currentFoodPreset','currentFoodQuantity','currentFoodUnit'],\n      commands: []\n    },\n    \"action.devices.traits.Modes\": {\n      name: 'Modes',\n      attributes: {\n        availableModes: {\n          type: \"strigifyedObject\",\n          default: []\n        },\n        commandOnlyModes: {\n          type: \"bool\",\n          default: false\n        }\n      },\n      params: ['currentModeSettings'],\n      commands: [\n        {\n          command: 'start',\n          description: 'Start cooking'\n        },\n        {\n          command: 'stop',\n          description: 'Stop cooking'\n        }\n      ]\n    },\n    \"action.devices.traits.Locator\": {\n      name: 'Locator',\n      attributes: {\n      },\n      params: [],\n      commands: [\n        {\n          command: 'silence',\n          description: 'Stop the alarm'\n        }\n      ]\n    },\n    \"action.devices.traits.SensorState\": {\n      name: 'Sesnor - Google doesn\\'t respond',\n      attributes: {\n        sensorStatesSupported: {\n          type: 'object',\n          default: [\n            {\n              name: \"\"\n            }\n          ]\n        }\n      },\n      params: ['currentSensorStateData'],\n      commands: []\n    }\n  },\n  params: {\n    thermostatTemperatureAmbient: {\n      type: \"int\",\n      name: 'Ambient temperature',\n      commanded: false,\n      default: 21\n    },\n    thermostatTemperatureSetpoint: {\n      type: \"int\",\n      name: 'Temperature set point',\n      commanded: true,\n      default: 22\n    },\n    thermostatHumidityAmbient: {\n      type: \"int\",\n      name: 'Ambient humidity',\n      commanded: false,\n      default: 60\n    },\n    thermostatMode: {\n      type: \"list\",\n      select: [\"cool\",\"heat\",\"off\",\"on\",\"heatcool\",\"auto\",\"fan-only\",\"purifier\",\"eco\",\"dry\"],\n      name: 'Mode',\n      commanded: true,\n      default: 'off'\n    },\n    on: {\n      type: \"bool\",\n      select: [\"true\",\"false\"],\n      name: 'Power',\n      commanded: true,\n      default: false\n    },\n    deactivate: {\n      type: \"bool\",\n      select: [\"true\",\"false\"],\n      name: 'Deactivate',\n      commanded: true,\n      default: true\n    },\n    brightness: {\n      type: \"int\",\n      name: 'Brightness',\n      commanded: true,\n      default: 80\n    },\n    online: {\n      type: \"bool\",\n      select: [\"true\",\"false\"],\n      name: 'Online',\n      commanded: false,\n      default: true\n    },\n    color: {\n      type: \"color\",\n      name: 'Color',\n      commanded: true,\n      default: {\n        spectrumRgb: 16711935\n      }\n    },\n    thermostatTemperatureSetpointHigh: {\n      type: \"int\",\n      name: 'Hight set point in heatcool mode',\n      commanded: true,\n      default: 22\n    },\n    thermostatTemperatureSetpointLow: {\n      type: \"int\",\n      name: 'Low set point in heatcool mode',\n      commanded: true,\n      default: 18\n    },\n    openPercent: {\n      type: \"int\",\n      name: 'Open percentage',\n      commanded: true,\n      default: 60\n    },\n    rotationPercent: {\n      type: \"int\",\n      name: 'Rotation percentage',\n      commanded: true,\n      default: 50\n    },\n    rotationDegrees: {\n      type: \"int\",\n      name: 'Ration degrees',\n      commanded: true,\n      default: 90\n    },\n    isLocked: {\n      type: \"bool\",\n      name: 'Is locked',\n      commanded: false,\n      default: false\n    },\n    isJammed: {\n      type: \"bool\",\n      name: 'Is jammed',\n      commanded: false,\n      default: false\n    },\n    isDocked: {\n      type: \"bool\",\n      name: 'Is docked',\n      commanded: false,\n      default: false\n    },\n    isRunning: {\n      type: \"bool\",\n      name: 'Is running',\n      commanded: false,\n      default: false\n    },\n    isPaused: {\n      type: \"bool\",\n      name: 'Is paused',\n      commanded: false,\n      default: false\n    },\n    activeZones: {\n      type: \"object\",\n      name: 'Active Zones',\n      commanded: true,\n      default: []\n    },\n    timerRemainingSec: {\n      type: \"int\",\n      name: 'Remaining time [seconds]',\n      commanded: true,\n      default: 0\n    },\n    timerPaused: {\n      type: \"bool\",\n      name: 'Is paused',\n      commanded: true,\n      default: false\n    },\n    temperatureSetpointCelsius: {\n      type: \"int\",\n      name: 'Set point',\n      commanded: true,\n      default: 22\n    },\n    temperatureAmbientCelsius: {\n      type: \"int\",\n      name: 'Ambient',\n      commanded: false,\n      default: 21\n    },\n    currentFanSpeedSetting: {\n      type: \"string\",\n      name: 'Fan speed setting',\n      commanded: true,\n      default: ''\n    },\n    isArmed: {\n      type: \"bool\",\n      name: 'Is armed',\n      commanded: false,\n      default: false\n    },\n    exitAllowance: {\n      type: \"int\",\n      name: 'Time to leave',\n      commanded: true,\n      default: 20\n    },\n    isFilled: {\n      type: \"bool\",\n      name: 'Is filled',\n      commanded: false,\n      default: false\n    },\n    humiditySetpointPercent: {\n      type: \"int\",\n      name: 'Humidity set point',\n      commanded: true,\n      default: 70\n    },\n    humidityAmbientPercent: {\n      type: \"int\",\n      name: 'Ambient humidity',\n      commanded: false,\n      default: 60\n    },\n    currentArmLevel: {\n      type: \"string\",\n      name: 'Current security level',\n      commanded: true,\n      default: ''\n    },\n    currentFillLevel: {\n      type: \"string\",\n      name: 'Current fill levell',\n      commanded: true,\n      default: ''\n    },\n    currentCookingMode: {\n      type: \"string\",\n      name: 'Current cooking mode',\n      commanded: true,\n      default: ''\n    },\n    currentFoodPreset: {\n      type: \"string\",\n      name: 'Current food preset',\n      commanded: true,\n      default: ''\n    },\n    currentFoodQuantity: {\n      type: \"int\",\n      name: 'Current food quantity',\n      commanded: true,\n      default: ''\n    },\n    currentFoodUnit: {\n      type: \"string\",\n      name: 'Current food unit',\n      commanded: true,\n      default: ''\n    },\n    currentToggleSettings: {\n      type: \"object\",\n      name: 'Toggles status',\n      commanded: true,\n      default: {}\n    },\n    currentModeSettings: {\n      type: \"object\",\n      name: 'Modes status',\n      commanded: true,\n      default: {}\n    },\n  }\n}\n\nexport { root, deviceReference }\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nfunction Menu(props) {\n\n  const menu = {\n    marginTop: '5px',\n    display: 'grid',\n    gridTemplateColumns: '40px auto'\n  }\n\n  const image = {\n    width: '30px'\n  }\n\n  const textContainer = {\n    paddingTop: '4px'\n  }\n\n  const text = {\n    fontSize: '18px',\n    textDecoration: 'none',\n    cursor: 'pointer',\n    color: 'black'\n  }\n\n  return (\n    <div style={ menu }>\n      <div>\n        <img src={ props.image } alt={ props.image } style={ image }/>\n      </div>\n      <div style={ textContainer }>\n        {\n          props.exec\n          ?\n          <span style={ text } onClick={props.exec}>{ props.title }</span>\n          :\n          <Link to={props.href} style={ text }>\n            <span > { props.title }</span>\n          </Link>\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default Menu\n","import React from 'react';\nimport getCookieValue from '../../../functions'\nimport { root } from '../../../constants'\n\nclass OnOff extends React.Component {\n  constructor(props) {\n    super(props);\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle(){\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      if (http.readyState === 4) {\n        if (http.status === 200) {\n          this.props.reload();\n        } else {\n          console.error(http.statusText);\n        }\n      }\n    }.bind(this)\n    http.open(\"POST\", root + \"api/status/update/\");\n    http.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\n    http.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    http.send(JSON.stringify({\n      \"id\": this.props.id,\n      \"param\": \"on\",\n      \"value\": !this.props.on\n    }));\n  }\n\n  render() {\n\n    const container = {\n      float: 'left',\n      marginLeft: '5px'\n    }\n\n    const image = {\n      width: '30px'\n    }\n\n    return (\n      <div style={container}>\n        <img src={ this.props.on ? '/devices/onoff_on_true.png' : '/devices/onoff_on_false.png'} onClick={ this.toggle } alt={ this.props.image } style={ image }/>\n      </div>\n    );\n  }\n}\n\nexport default OnOff\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nclass Information extends React.Component {\n  render() {\n\n    const container = {\n      float: 'left',\n      marginLeft: '5px'\n    }\n\n    const image = {\n      width: '30px'\n    }\n\n    return (\n      <div style={container}>\n        <Link to={\"/devices/info/\" + this.props.id + \"/\"}>\n          <img src=\"/devices/information.png\" alt={ this.props.image } style={ image }/>\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default Information\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nclass Connecting extends React.Component {\n  render() {\n\n    const container = {\n      float: 'left',\n      marginLeft: '5px'\n    }\n\n    const image = {\n      width: '30px'\n    }\n\n    return (\n      <div style={container}>\n        <Link to={\"/devices/connecting/\" + this.props.id + \"/\"}>\n          <img src=\"/devices/connecting.png\" alt={ this.props.image } style={ image }/>\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default Connecting\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nclass Edit extends React.Component {\n  render() {\n\n    const container = {\n      float: 'left',\n      marginLeft: '5px'\n    }\n\n    const image = {\n      width: '30px'\n    }\n\n    return (\n      <div style={container}>\n        <Link to={\"/devices/editor/\" + this.props.id + \"/\"}>\n          <img src=\"/devices/edit.png\" alt={ this.props.image } style={ image }/>\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default Edit\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Light extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    var color = 'yellow';\n    if (this.props.device.traits.includes(\"action.devices.traits.ColorSetting\" && Object.keys(this.props.status).includes(\"color\"))){\n      if (Object.keys(this.props.status.color).includes(\"spectrumRgb\"))\n        color = \"#\" + this.props.status.color.spectrumRgb.toString(16);\n      else\n        color = \"#\" + this.props.status.color.spectrumRGB.toString(16);\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: color,\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Light\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Outlet extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'blue',\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Outlet\n","import React from 'react';\nimport getCookieValue from '../../../functions'\nimport { root } from '../../../constants'\n\nclass TemperatureSetting extends React.Component {\n  constructor(props) {\n    super(props);\n    this.up = this.up.bind(this);\n    this.down = this.down.bind(this);\n    this.update = this.update.bind(this);\n  }\n\n  up(){\n    var temperature = this.props.status.thermostatTemperatureSetpoint + 1;\n    this.update(temperature)\n  }\n\n  down(){\n    var temperature = this.props.status.thermostatTemperatureSetpoint - 1;\n    this.update(temperature)\n  }\n\n  update(temperature){\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      if (http.readyState === 4) {\n        if (http.status === 200) {\n          this.props.reload();\n        } else {\n          console.error(http.statusText);\n        }\n      }\n    }.bind(this)\n    http.open(\"POST\", root + \"api/status/update/\");\n    http.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\n    http.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    http.send(JSON.stringify({\n      \"id\": this.props.id,\n      \"param\": \"thermostatTemperatureSetpoint\",\n      \"value\": temperature\n    }));\n  }\n\n  render() {\n\n    const container = {\n      float: 'left',\n      marginLeft: '5px'\n    }\n\n    const image = {\n      width: '30px'\n    }\n\n    const temperature = {\n      fontSize: '30px',\n      marginLeft: '5px',\n      marginRight: '5px',\n      color: '#777'\n    }\n\n    return (\n      <div style={container}>\n        <img src='/devices/arrow_down.png' onClick={ this.down } alt='Arrow up' style={ image }/>\n        <span style={temperature}>{this.props.status.thermostatTemperatureSetpoint}</span>\n        <img src='/devices/arrow_up.png' onClick={ this.up } alt='Arrow down' style={ image }/>\n      </div>\n    );\n  }\n}\n\nexport default TemperatureSetting\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport TemperatureSetting from './traits/TemperatureSetting'\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass AcUnit extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    var color = 'yellow';\n    if (this.props.status.thermostatMode === 'off')\n      color = \"#666\";\n    else if (this.props.status.thermostatMode === 'heat')\n      color = \"red\";\n    else if (this.props.status.thermostatMode === 'cool')\n      color = \"lightblue\";\n    else if (this.props.status.thermostatMode === 'on')\n      color = \"yellow\";\n    else if (this.props.status.thermostatMode === 'heatcool')\n      color = \"#DC97FF\";\n    else if (this.props.status.thermostatMode === 'auto')\n      color = \"#EE357E\";\n    else if (this.props.status.thermostatMode === 'fan-only')\n      color = \"blue\";\n    else if (this.props.status.thermostatMode === 'purifier')\n      color = \"#F3882E\";\n    else if (this.props.status.thermostatMode === 'eco')\n      color = \"green\";\n    else if (this.props.status.thermostatMode === 'dry')\n      color = \"#753500\";\n\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: color,\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <TemperatureSetting id={ this.props.device.id } status={this.props.status} on={ this.props.status } reload={ this.props.reload }/>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AcUnit\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass AirFreshener extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'yellow',\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AirFreshener\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass AirPurifier extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'yellow',\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AirPurifier\n","import React from 'react';\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Bed extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Bed\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Fan extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'yellow',\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Fan\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Fireplace extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'yellow',\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Fireplace\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Radiator extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'yellow',\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Radiator\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Switch extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'yellow',\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Switch\n","import React from 'react';\nimport TemperatureSetting from './traits/TemperatureSetting'\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Thermostat extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    var color = 'yellow';\n    if (this.props.status.thermostatMode === 'off')\n      color = \"#666\";\n    else if (this.props.status.thermostatMode === 'heat')\n      color = \"red\";\n    else if (this.props.status.thermostatMode === 'cool')\n      color = \"lightblue\";\n    else if (this.props.status.thermostatMode === 'on')\n      color = \"yellow\";\n    else if (this.props.status.thermostatMode === 'heatcool')\n      color = \"#DC97FF\";\n    else if (this.props.status.thermostatMode === 'auto')\n      color = \"#EE357E\";\n    else if (this.props.status.thermostatMode === 'fan-only')\n      color = \"blue\";\n    else if (this.props.status.thermostatMode === 'purifier')\n      color = \"#F3882E\";\n    else if (this.props.status.thermostatMode === 'eco')\n      color = \"green\";\n    else if (this.props.status.thermostatMode === 'dry')\n      color = \"#753500\";\n\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: color\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <TemperatureSetting id={ this.props.device.id } status={this.props.status} on={ this.props.status } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Thermostat\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass AirCooler extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    var color = 'yellow';\n    if (this.props.device.traits.includes(\"action.devices.traits.ColorSetting\")){\n      color = \"#\" + this.props.status.color.spectrumRgb.toString(16);\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: color,\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AirCooler\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Bathtub extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    var color = 'yellow';\n    if (this.props.device.traits.includes(\"action.devices.traits.ColorSetting\")){\n      color = \"#\" + this.props.status.color.spectrumRgb.toString(16);\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: color,\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Bathtub\n","import React from 'react';\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Awing extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Awing\n","import React from 'react';\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Blinds extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Blinds\n","import React from 'react';\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Closet extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Closet\n","import React from 'react';\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Curtain extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Curtain\n","import React from 'react';\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Door extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Door\n","import React from 'react';\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Drawer extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Drawer\n","import React from 'react';\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Garage extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Garage\n","import React from 'react';\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Pergola extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Pergola\n","import React from 'react';\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Shutter extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Shutter\n","import React from 'react';\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Valve extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Valve\n","import React from 'react';\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Window extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Window\n","import React from 'react';\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Lock extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Lock\n","import React from 'react';\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Gate extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Gate\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Heater extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    var color = 'yellow';\n    if (this.props.device.traits.includes(\"action.devices.traits.ColorSetting\")){\n      color = \"#\" + this.props.status.color.spectrumRgb.toString(16);\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: color,\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Heater\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Hood extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    var color = 'yellow';\n    if (this.props.device.traits.includes(\"action.devices.traits.ColorSetting\")){\n      color = \"#\" + this.props.status.color.spectrumRgb.toString(16);\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: color,\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Hood\n","import React from 'react';\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass SecuritySystem extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SecuritySystem\n","import React from 'react';\nimport OnOff from './traits/OnOff'\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Blender extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    var color = 'yellow';\n    if (this.props.device.traits.includes(\"action.devices.traits.ColorSetting\")){\n      color = \"#\" + this.props.status.color.spectrumRgb.toString(16);\n    }\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: color,\n      opacity: this.props.status.on ? '1' : '0.4'\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <OnOff id={ this.props.device.id } on={ this.props.status.on } reload={ this.props.reload }/>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Blender\n","import React from 'react';\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Global extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    var color = 'white';\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: color\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">{ this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Global\n","import React from 'react';\nimport Information from './aux/Information'\nimport Connecting from './aux/Connecting'\nimport Edit from './aux/Edit'\n\nclass Scene extends React.Component {\n\n  render() {\n\n    const traits_container = {\n      paddingLeft: '50px'\n    }\n\n    var color = 'white';\n\n    const color_strip = {\n      width: '100%',\n      height: '20px',\n      borderRadius: '20px 20px 0px 0px',\n      backgroundColor: color\n    }\n\n    return (\n      <div>\n        <div className=\"device_card\">\n          <div style={ color_strip }></div>\n          <h2 className=\"device_card_title\">Scene: { this.props.device.name.name }</h2>\n          <hr className=\"device_card_divider\"/>\n          <div style={traits_container}>\n            <Information id={ this.props.device.id }/>\n            <Connecting id={ this.props.device.id }/>\n            <Edit id={ this.props.device.id }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Scene\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport Light from '../devices/Light'\nimport Outlet from '../devices/Outlet'\nimport AcUnit from '../devices/AcUnit'\nimport AirFreshener from '../devices/AirFreshener'\nimport AirPurifier from '../devices/AirPurifier'\nimport Bed from '../devices/Bed'\nimport Fan from '../devices/Fan'\nimport Fireplace from '../devices/Fireplace'\nimport Radiator from '../devices/Radiator'\nimport Switch from '../devices/Switch'\nimport Thermostat from '../devices/Thermostat'\nimport AirCooler from '../devices/AirCooler'\nimport Bathtub from '../devices/Bathtub'\nimport Awing from '../devices/Awing'\nimport Blinds from '../devices/Blinds'\nimport Closet from '../devices/Closet'\nimport Curtain from '../devices/Curtain'\nimport Door from '../devices/Door'\nimport Drawer from '../devices/Drawer'\nimport Garage from '../devices/Garage'\nimport Pergola from '../devices/Pergola'\nimport Shutter from '../devices/Shutter'\nimport Valve from '../devices/Valve'\nimport Window from '../devices/Window'\nimport Lock from '../devices/Lock'\nimport Gate from '../devices/Gate'\nimport Heater from '../devices/Heater'\nimport Hood from '../devices/Hood'\nimport SecuritySystem from '../devices/SecuritySystem'\nimport Blender from '../devices/Blender'\nimport Global from '../devices/Global'\nimport Scene from '../devices/Scene'\nimport getCookieValue from '../../functions'\nimport { root } from '../../constants'\n\nimport './Devices.css';\n\nclass Devices extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {},\n      devices: []\n    }\n    this.loadData = this.loadData.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadData();\n    setInterval(this.loadData,3000);\n  }\n\n  loadData(){\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      if (http.readyState === 4) {\n        if (http.status === 200) {\n          var data = JSON.parse(http.responseText);\n          this.setState({\n             data: data,\n             devices: data.devices\n           });\n        } else {\n          console.error(http.statusText);\n        }\n      }\n    }.bind(this);\n    http.open(\"GET\", root + \"api/global/get/\");\n    http.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    http.send();\n  }\n\n  render() {\n\n    const devices = this.state.devices.map((device) => {\n      if(device.type === 'action.devices.types.LIGHT')\n        return <Light key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.OUTLET')\n        return <Outlet key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.AC_UNIT')\n        return <AcUnit key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.AIRFRESHENER')\n        return <AirFreshener key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.AIRPURIFIER')\n        return <AirPurifier key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.BED')\n        return <Bed key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.FAN')\n        return <Fan key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.FIREPLACE')\n        return <Fireplace key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.RADIATOR')\n        return <Radiator key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.SWITCH')\n        return <Switch key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.THERMOSTAT')\n        return <Thermostat key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.AIRCOOLER')\n        return <AirCooler key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.BATHTUB')\n        return <Bathtub key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.AWING')\n        return <Awing key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.AIRCOOLER')\n        return <AirCooler key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.BLINDS')\n        return <Blinds key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.CLOSET')\n        return <Closet key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.CURTAIN')\n        return <Curtain key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.DOOR')\n        return <Door key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.DRAWER')\n        return <Drawer key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.GARAGE')\n        return <Garage key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.GATE')\n        return <Gate key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.PERGOLA')\n        return <Pergola key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.SHUTTER')\n        return <Shutter key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.VALVE')\n        return <Valve key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.WINDOW')\n        return <Window key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.LOCK')\n        return <Lock key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.HEATER')\n        return <Heater key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.HOOD')\n        return <Hood key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.SECURITYSYSTEM')\n        return <SecuritySystem key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.BLENDER')\n        return <Blender key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else if(device.type === 'action.devices.types.SCENE')\n        return <Scene key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n      else\n        return <Global key={device.id} device={device} status={ this.state.data.status[device.id] } reload={ this.loadData }/>\n    });\n\n    return (\n      <div>\n        <div className=\"page_title_container\">\n          <h2>Devices and scences</h2>\n        </div>\n\n        <div className=\"page_cards_container\">\n          { devices }\n        </div>\n\n        <div className=\"page_buttons_containter\">\n          <Link to='/devices/editor/'>\n            <button type=\"button\">New</button>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Devices\n","import React from 'react';\n\nimport '../pages/Editor.css';\n\nclass Text extends React.Component {\n  constructor(props) {\n    super(props);\n    this.update = this.update.bind(this);\n  }\n\n\n  update(event){\n    this.props.update(this.props.data,event.target.value);\n  }\n\n  render() {\n    return (\n      <div className=\"two_table_row\">\n        <div className=\"two_table_cel\">\n          {this.props.name}\n        </div>\n        <div className=\"two_table_cel\">\n          <input type=\"text\" className=\"two_input\" id={this.props.data} defaultValue={this.props.value} onChange={this.update}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Text\n","import React from 'react';\nimport Switch from \"react-switch\";\n\nclass Scene extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n  }\n\n\n  updateCheckbox(checked, attribute){\n    this.props.update('attributes/' + attribute,checked);\n  }\n\n  render() {\n\n\n    return (\n      <div>\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            <i>sceneReversible</i>\n          </div>\n          <div className=\"three_table_cel\">\n            <Switch onChange={(checked) => {this.updateCheckbox(checked,\"sceneReversible\")}} checked={this.props.attributes.sceneReversible} />\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if the scene can be desabled.</span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Scene\n","import React from 'react';\nimport Switch from \"react-switch\";\n\nclass OnOff extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n  }\n\n\n  updateCheckbox(checked, attribute){\n    this.props.update('attributes/' + attribute,checked);\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            <i>commandOnlyOnOff</i>\n          </div>\n          <div className=\"three_table_cel\">\n            <Switch onChange={(checked) => {this.updateCheckbox(checked,\"commandOnlyOnOff\")}} checked={this.props.attributes.commandOnlyOnOff} />\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the state.</span>\n          </div>\n        </div>\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            <i>queryOnlyOnOff</i>\n          </div>\n          <div className=\"three_table_cel\">\n            <Switch onChange={(checked) => {this.updateCheckbox(checked,\"queryOnlyOnOff\")}} checked={this.props.attributes.queryOnlyOnOff} />\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Google shouldn't change the device state.</span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default OnOff\n","import React from 'react';\nimport Switch from \"react-switch\";\n\nclass Brightness extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n  }\n\n\n  updateCheckbox(checked, attribute){\n    this.props.update('attributes/' + attribute,checked);\n  }\n\n  render() {\n\n\n    return (\n      <div>\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            <i>commandOnlyBrightness</i>\n          </div>\n          <div className=\"three_table_cel\">\n            <Switch onChange={(checked) => {this.updateCheckbox(checked,\"commandOnlyBrightness\")}} checked={this.props.commandOnlyBrightness} />\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the brightness.</span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Brightness\n","import React from 'react';\nimport Switch from \"react-switch\";\n\nclass FanSpeed extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n    this.updateFanSpeeds = this.updateFanSpeeds.bind(this);\n    this.addFanSpeed = this.addFanSpeed.bind(this);\n  }\n\n\n  updateCheckbox(checked, attribute){\n    this.props.update('attributes/' + attribute,checked);\n  }\n\n  updateFanSpeeds(event){\n    const id = event.target.id.split('_')\n    const speed_id = id[1]\n    //Process the attribute and value depending of the attribute\n    const speed_attribute = id[0] === 'lang' ? id[0] : 'speed_synonym';\n    const value = id[0] === 'lang' ? event.target.value : event.target.value.split(',')\n    //Update the temporal data and update it\n    var temp_availableFanSpeeds = this.props.attributes.availableFanSpeeds\n    temp_availableFanSpeeds.speeds[speed_id].speed_values[0][speed_attribute] = value\n    if (id[0] === 'names') temp_availableFanSpeeds.speeds[speed_id].speed_name = value[0]\n    this.props.update('attributes/availableFanSpeeds', temp_availableFanSpeeds);\n  }\n\n  addFanSpeed(){\n    var temp_availableFanSpeeds = this.props.attributes.availableFanSpeeds\n    temp_availableFanSpeeds.speeds.push({\n      \"speed_name\": \"\",\n      \"speed_values\": [\n        {\n          \"speed_synonym\": [\"\"],\n          \"lang\": \"en\"\n        }\n      ]\n    });\n    this.props.update('attributes/availableFanSpeeds', temp_availableFanSpeeds);\n  }\n\n  render() {\n\n    const names_box = {\n      width: '150px'\n    }\n\n    const speeds = this.props.attributes.availableFanSpeeds.speeds.map((speed, i) => {\n      return (\n              <div key={i}>\n                <div className=\"two_table_row\" key={i}>\n                  <div className=\"two_table_cel\">\n                  </div>\n                  <div className=\"two_table_cel\">\n                    <label>\n                      <span>Languaje: </span>\n                      <select name=\"type\" id={\"lang_\" + i} value={speed.speed_values[0].lang} onChange={this.updateFanSpeeds}>\n                        <option value=\"es\">es</option>\n                        <option value=\"en\">en</option>\n                      </select>\n                    </label>\n                    <label>\n                      <span>Speed name: </span>\n                      <input type=\"text\" id={\"names_\" + i} style={names_box} defaultValue={speed.speed_values[0].speed_synonym} placeholder=\"Speed name\" onChange={this.updateFanSpeeds}/>\n                    </label>\n                  </div>\n                </div>\n              </div>\n              )\n    });\n\n    return (\n      <div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            <i>reversible</i>\n          </div>\n          <div className=\"three_table_cel\">\n            <Switch onChange={(checked) => {this.updateCheckbox(checked,\"reversible\")}} checked={this.props.attributes.reversible} />\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if the fan supports blowing in both directions.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            <i>supportsFanSpeedPercent</i>\n          </div>\n          <div className=\"three_table_cel\">\n            <Switch onChange={(checked) => {this.updateCheckbox(checked,\"supportsFanSpeedPercent\")}} checked={this.props.attributes.supportsFanSpeedPercent} />\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if the speed can be controlled with a number from 0 to 100.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            <i>commandOnlyFanSpeed</i>\n          </div>\n          <div className=\"three_table_cel\">\n            <Switch onChange={(checked) => {this.updateCheckbox(checked,\"commandOnlyFanSpeed\")}} checked={this.props.attributes.commandOnlyFanSpeed} />\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the fan speed.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            Add a speed\n          </div>\n          <div className=\"three_table_cel\">\n            <button type=\"button\" className=\"add_attribute_button\" onClick={ this.addFanSpeed }>Add</button>\n          </div>\n        </div>\n\n        {speeds}\n\n      </div>\n    );\n  }\n}\n\nexport default FanSpeed\n","import React from 'react';\nimport Switch from \"react-switch\";\n\nclass ColorSetting extends React.Component {\n  constructor(props) {\n    super(props);\n    this.update = this.update.bind(this);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n  }\n\n  update(event){\n    this.props.update('attributes/' + event.target.id,event.target.value);\n  }\n\n  updateCheckbox(checked, attribute){\n    this.props.update('attributes/' + attribute,checked);\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            <i>Color type</i>\n          </div>\n          <div className=\"three_table_cel\">\n            <select name=\"type\" id=\"colorModel\" className=\"table_input\" value={this.props.attributes.colorModel} onChange={this.update}>\n              <option value=\"\">Select</option>\n              <option value=\"rgb\">RGB light</option>\n              <option value=\"hsv\">HSV light</option>\n              <option value=\"\">Color temperature</option>\n            </select>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\"></span>\n          </div>\n        </div>\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            Minimum temperature\n          </div>\n          <div className=\"three_table_cel\">\n            <input type=\"number\" id=\"colorTemperatureRange/temperatureMinK\" defaultValue={ this.props.attributes.colorTemperatureRange ? this.props.attributes.colorTemperatureRange.temperatureMinK : 0} min=\"0\" max=\"10000\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Minimum color temperature (in Kelvin) supported by the device.</span>\n          </div>\n        </div>\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            Maximum temperature\n          </div>\n          <div className=\"three_table_cel\">\n            <input type=\"number\" id=\"colorTemperatureRange/temperatureMaxK\" defaultValue={this.props.attributes.colorTemperatureRange ? this.props.attributes.colorTemperatureRange.temperatureMaxK : 0} min=\"0\" max=\"10000\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Maximum color temperature (in Kelvin) supported by the device.</span>\n          </div>\n        </div>\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            <i>commandOnlyColorSetting</i>\n          </div>\n          <div className=\"three_table_cel\">\n            <Switch onChange={(checked) => {this.updateCheckbox(checked,\"commandOnlyColorSetting\")}} checked={this.props.attributes.commandOnlyColorSetting} />\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the color.</span>\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default ColorSetting\n","import React from 'react';\nimport Switch from \"react-switch\";\n\nclass TemperatureSetting extends React.Component {\n  constructor(props) {\n    super(props);\n    this.update = this.update.bind(this);\n    this.updateMode = this.updateMode.bind(this);\n    this.addMode = this.addMode.bind(this);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n  }\n\n  update(event){\n    this.props.update('attributes/' + event.target.id,event.target.value);\n  }\n\n  updateMode(event){\n    const id = event.target.id.split('_')\n    const mode_id = id[1]\n    var temp_availableThermostatModes = this.props.attributes.availableThermostatModes.split(',')\n\n    if (event.target.value === 'delete'){\n      temp_availableThermostatModes.splice(mode_id, 1)\n    } else if (event.target.value !== 'select') {\n      temp_availableThermostatModes[mode_id] = event.target.value;\n    }\n\n    this.props.update('attributes/availableThermostatModes', temp_availableThermostatModes.join(','));\n  }\n\n  addMode(){\n    var temp_availableThermostatModes = this.props.attributes.availableThermostatModes\n    temp_availableThermostatModes += \",\"\n    this.props.update('attributes/availableThermostatModes', temp_availableThermostatModes);\n  }\n\n  updateCheckbox(checked, attribute){\n    this.props.update('attributes/' + attribute,checked);\n  }\n\n\n  render() {\n\n    const modes = this.props.attributes.availableThermostatModes.split(',').map((mode, i) => {\n\n      return (\n          <div key={i}>\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">\n              </div>\n              <div className=\"two_table_cel\">\n                <label>\n                  <span>Mode: </span>\n                  <select name=\"type\" id={\"mode_\" + i} value={mode} onChange={this.updateMode}>\n                    <option value=\"select\">Select a mode</option>\n                    <option value=\"delete\">Delete this mode</option>\n                    <option value=\"off\">Off</option>\n                    <option value=\"heat\">Heat</option>\n                    <option value=\"cool\">Cool</option>\n                    <option value=\"on\">On</option>\n                    <option value=\"heatcool\">Heatcool</option>\n                    <option value=\"auto\">Auto</option>\n                    <option value=\"fan-only\">Fan only</option>\n                    <option value=\"purifier\">Purifier</option>\n                    <option value=\"eco\">Eco</option>\n                    <option value=\"dry\">Dry</option>\n                  </select>\n                </label>\n              </div>\n            </div>\n          </div>\n\n          )\n    });\n\n    return (\n      <div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            Add a thermostat mode\n          </div>\n          <div className=\"three_table_cel\">\n            <button type=\"button\" className=\"add_attribute_button\" onClick={ this.addMode }>Add</button>\n          </div>\n        </div>\n\n        {modes}\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            <i>commandOnlyTemperatureSetting</i>\n          </div>\n          <div className=\"three_table_cel\">\n            <Switch onChange={(checked) => {this.updateCheckbox(checked,\"commandOnlyTemperatureSetting\")}} checked={this.props.attributes.commandOnlyTemperatureSetting} />\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the temperature.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            <i>queryOnlyTemperatureSetting</i>\n          </div>\n          <div className=\"three_table_cel\">\n            <Switch onChange={(checked) => {this.updateCheckbox(checked,\"queryOnlyTemperatureSetting\")}} checked={this.props.attributes.queryOnlyTemperatureSetting} />\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Google shouldn't change the device temperature settings.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            Minimum temperature\n          </div>\n          <div className=\"three_table_cel\">\n            <input type=\"number\" id=\"thermostatTemperatureRange/minThresholdCelsius\" defaultValue={ this.props.attributes.thermostatTemperatureRange ? this.props.attributes.thermostatTemperatureRange.minThresholdCelsius : 0} min=\"0\" max=\"50\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Minimum temperature (in Celsius) supported by the device.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            Maximum temperature\n          </div>\n          <div className=\"three_table_cel\">\n            <input type=\"number\" id=\"thermostatTemperatureRange/maxThresholdCelsius\" defaultValue={this.props.attributes.thermostatTemperatureRange ? this.props.attributes.thermostatTemperatureRange.maxThresholdCelsius : 0} min=\"0\" max=\"50\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Maximum temperature (in Celsius) supported by the device.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            Range\n          </div>\n          <div className=\"three_table_cel\">\n            <input type=\"number\" id=\"bufferRangeCelsius\" defaultValue={this.props.attributes.bufferRangeCelsius} min=\"0\" max=\"50\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Specifies the minimum offset between heat-cool setpoints in Celsius.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            Units\n          </div>\n          <div className=\"three_table_cel\">\n            <select name=\"type\" id=\"thermostatTemperatureUnit\" className=\"table_input\" value={this.props.attributes.thermostatTemperatureUnit} onChange={this.update}>\n              <option value=\"C\">Celsius</option>\n              <option value=\"F\">Fahrenheit</option>\n            </select>\n          </div>\n        </div>\n\n\n\n      </div>\n    );\n  }\n}\n\nexport default TemperatureSetting\n","import React from 'react';\nimport Switch from \"react-switch\";\n\nclass Toggles extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n    this.updatetoggle = this.updatetoggle.bind(this);\n    this.addToggle = this.addToggle.bind(this);\n  }\n\n\n  updateCheckbox(checked, attribute){\n    this.props.update('attributes/' + attribute,checked);\n  }\n\n  updatetoggle(event){\n    const id = event.target.id.split('_')\n    const toggle_id = id[1]\n    //Process the attribute and value depending of the attribute\n    const toggle_attribute = id[0] === 'lang' ? id[0] : 'name_synonym';\n    const value = id[0] === 'lang' ? event.target.value : event.target.value.split(',')\n    //Update the temporal data and update it\n    var temp_availableToggles = this.props.attributes.availableToggles\n    temp_availableToggles[toggle_id].name_values[0][toggle_attribute] = value\n    if (id[0] === 'names') temp_availableToggles[toggle_id].name = value[0]\n    this.props.update('attributes/availableToggles', temp_availableToggles);\n  }\n\n  addToggle(){\n    var temp_availableToggles = this.props.attributes.availableToggles\n    temp_availableToggles.push({\n      \"name\": \"\",\n      \"name_values\": [\n        {\n          \"name_synonym\": [\"\"],\n          \"lang\": \"en\"\n        }\n      ]\n    });\n    this.props.update('attributes/availableToggles', temp_availableToggles);\n  }\n\n  render() {\n\n    const names_box = {\n      marginLeft: '20px',\n      width: '150px'\n    }\n\n    const toggles = this.props.attributes.availableToggles.map((toggle, i) => {\n      return (\n              <div key={i}>\n                <div className=\"two_table_row\">\n                  <div className=\"two_table_cel\">\n                  </div>\n                  <div className=\"two_table_cel\">\n                    <label>\n                      <span>Languaje: </span>\n                      <select name=\"type\" id={\"lang_\" + i} value={toggle.name_values[0].lang} placeholder=\"Name for the toggle\" onChange={this.updatetoggle}>\n                        <option value=\"es\">es</option>\n                        <option value=\"en\">en</option>\n                      </select>\n                    </label>\n                    <label>\n                      <span>Name: </span>\n                      <input type=\"text\" id={\"names_\" + i} style={names_box} defaultValue={toggle.name_values[0].name_synonym} placeholder=\"Name\" onChange={this.updatetoggle}/>\n                    </label>\n\n\n                  </div>\n                </div>\n              </div>\n            )\n    });\n\n    return (\n      <div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            <i>commandOnlyToggles</i>\n          </div>\n          <div className=\"three_table_cel\">\n            <Switch onChange={(checked) => {this.updateCheckbox(checked,\"commandOnlyToggles\")}} checked={this.props.attributes.commandOnlyToggles} />\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the states.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            Add a toggle\n          </div>\n          <div className=\"three_table_cel\">\n            <button type=\"button\" className=\"add_attribute_button\" onClick={ this.addToggle }>Add</button>\n          </div>\n        </div>\n\n        {toggles}\n\n      </div>\n    );\n  }\n}\n\nexport default Toggles\n","import React from 'react';\nimport Switch from \"react-switch\";\n\nclass Modes extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n    this.updateMode = this.updateMode.bind(this);\n    this.addMode = this.addMode.bind(this);\n  }\n\n\n  updateCheckbox(checked, attribute){\n    this.props.update('attributes/' + attribute,checked);\n  }\n\n  updateMode(event){\n    const id = event.target.id.split('_')\n    const mode_id = id[1]\n    var temp_availableModes = this.props.attributes.availableModes\n\n    if(id[0] === 'lang'){\n      temp_availableModes[mode_id].name_values[0].lang = event.target.value;\n    } else if (id[0] === 'names'){\n      temp_availableModes[mode_id].name_values[0].name_synonym = event.target.value.split(',');\n      temp_availableModes[mode_id].name = event.target.value.split(',')[0]\n    } else if (id[0] === 'settings'){\n      var values = event.target.value.split(',')\n      var settings = []\n      for ( var i = 0; i < values.length; i ++){\n        settings.push({\n          setting_name: values[i],\n            setting_values: [{\n              setting_synonym: [values[i]],\n              lang: this.props.attributes.availableModes[mode_id].name_values[0].lang\n             }]\n        })\n      }\n      temp_availableModes[mode_id].settings = settings\n    }\n    this.props.update('attributes/availableModes', temp_availableModes);\n  }\n\n  addMode(){\n    var temp_availableModes = this.props.attributes.availableModes\n    temp_availableModes.push({\n      \"name\": \"\",\n      \"name_values\": [\n        {\n          \"name_synonym\": [\"\"],\n          \"lang\": \"en\"\n        }\n      ],\n      \"settings\": [\n        {\n          \"setting_name\": \"\",\n            \"setting_values\": [{\n              \"setting_synonym\": [\"\"],\n              \"lang\": \"en\"\n             }]\n        }\n      ]\n    });\n    this.props.update('attributes/availableModes', temp_availableModes);\n  }\n\n  render() {\n\n    const names_box = {\n      width: '150px'\n    }\n\n    const settings_box = {\n      width: '230px'\n    }\n\n\n    const modes = this.props.attributes.availableModes.map((mode, i) => {\n      const settings = mode.settings.map((setting,i) => {return setting.setting_name});\n\n      return (\n              <div key={i}>\n                <div className=\"two_table_row\">\n                  <div className=\"two_table_cel\">\n                  </div>\n                  <div className=\"two_table_cel\">\n                    <label>\n                      <span>Languaje: </span>\n                      <select name=\"type\" id={\"lang_\" + i} value={mode.name_values[0].lang} onChange={this.updateMode}>\n                        <option value=\"es\">es</option>\n                        <option value=\"en\">en</option>\n                      </select>\n                    </label>\n                    <label>\n                      <span>Mode name: </span>\n                      <input type=\"text\" id={\"names_\" + i} style={names_box} defaultValue={mode.name_values[0].name_synonym} placeholder=\"Mode name\" onChange={this.updateMode}/>\n                    </label>\n                    <label>\n                      <span>Mode settings: </span>\n                      <input type=\"text\" id={\"settings_\" + i} style={settings_box} defaultValue={settings} placeholder=\"Separated by commas\" onChange={this.updateMode}/>\n                    </label>\n                  </div>\n                </div>\n\n\n              </div>\n\n              )\n    });\n\n    return (\n      <div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            <i>commandOnlyModes</i>\n          </div>\n          <div className=\"three_table_cel\">\n            <Switch onChange={(checked) => {this.updateCheckbox(checked,\"commandOnlyModes\")}} checked={this.props.attributes.commandOnlyModes} />\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the modes.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            Add a mode\n          </div>\n          <div className=\"three_table_cel\">\n            <button type=\"button\" className=\"add_attribute_button\" onClick={ this.addMode }>Add</button>\n          </div>\n        </div>\n\n        {modes}\n\n      </div>\n    );\n  }\n}\n\nexport default Modes\n","import React from 'react';\nimport Switch from \"react-switch\";\n\nclass HumiditySetting extends React.Component {\n  constructor(props) {\n    super(props);\n    this.update = this.update.bind(this);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n  }\n\n  update(event){\n    this.props.update('attributes/' + event.target.id,event.target.value);\n  }\n\n  updateCheckbox(checked, attribute){\n    this.props.update('attributes/' + attribute,checked);\n  }\n\n  render() {\n    return (\n      <div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            Minimum humidity\n          </div>\n          <div className=\"three_table_cel\">\n            <input type=\"number\" id=\"humiditySetpointRange/minPercent\" defaultValue={ this.props.attributes.humiditySetpointRange ? this.props.attributes.humiditySetpointRange.minPercent : 0} min=\"0\" max=\"100\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Minimum humidity level as percentage.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            Maximum humidity\n          </div>\n          <div className=\"three_table_cel\">\n            <input type=\"number\" id=\"humiditySetpointRange/maxPercent\" defaultValue={this.props.attributes.humiditySetpointRange ? this.props.attributes.humiditySetpointRange.maxPercent : 0} min=\"0\" max=\"100\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Maximum humidity level as percentage.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            <i>commandOnlyHumiditySetting</i>\n          </div>\n          <div className=\"three_table_cel\">\n            <Switch onChange={(checked) => {this.updateCheckbox(checked,\"commandOnlyHumiditySetting\")}} checked={this.props.attributes.commandOnlyHumiditySetting} />\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the humidity.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            <i>queryOnlyHumiditySetting</i>\n          </div>\n          <div className=\"three_table_cel\">\n            <Switch onChange={(checked) => {this.updateCheckbox(checked,\"queryOnlyHumiditySetting\")}} checked={this.props.attributes.queryOnlyHumiditySetting} />\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Google shouldn't change the device humidity.</span>\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default HumiditySetting\n","import React from 'react';\nimport Switch from \"react-switch\";\n\nclass OpenClose extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n  }\n\n\n  updateCheckbox(checked, attribute){\n    this.props.update('attributes/' + attribute,checked);\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            <i>discreteOnlyOpenClose</i>\n          </div>\n          <div className=\"three_table_cel\">\n            <Switch onChange={(checked) => {this.updateCheckbox(checked,\"discreteOnlyOpenClose\")}} checked={this.props.attributes.discreteOnlyOpenClose} />\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if the device must either be fully open or fully closed.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            <i>commandOnlyOpenClose</i>\n          </div>\n          <div className=\"three_table_cel\">\n            <Switch onChange={(checked) => {this.updateCheckbox(checked,\"commandOnlyOpenClose\")}} checked={this.props.attributes.commandOnlyOpenClose} />\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the state.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            <i>queryOnlyOpenClose</i>\n          </div>\n          <div className=\"three_table_cel\">\n            <Switch onChange={(checked) => {this.updateCheckbox(checked,\"queryOnlyOpenClose\")}} checked={this.props.attributes.queryOnlyOpenClose} />\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Google shouldn't change the device state.</span>\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default OpenClose\n","import React from 'react';\nimport Switch from \"react-switch\";\n\nclass Rotation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.update = this.update.bind(this);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n  }\n\n  update(event){\n    this.props.update('attributes/' + event.target.id,event.target.value);\n  }\n\n  updateCheckbox(checked, attribute){\n    this.props.update('attributes/' + attribute,checked);\n  }\n\n  render() {\n    return (\n      <div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            Minimum rotation\n          </div>\n          <div className=\"three_table_cel\">\n            <input type=\"number\" id=\"rotationDegreesRange/rotationDegreesMin\" defaultValue={ this.props.attributes.rotationDegreesRange ? this.props.attributes.rotationDegreesRange.rotationDegreesMin : 0} min=\"0\" max=\"100\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Minimum rotation degrees that a device can rotate.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            Maximum rotation\n          </div>\n          <div className=\"three_table_cel\">\n            <input type=\"number\" id=\"rotationDegreesRange/rotationDegreesMax\" defaultValue={this.props.attributes.rotationDegreesRange ? this.props.attributes.rotationDegreesRange.rotationDegreesMax : 0} min=\"0\" max=\"100\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Maximum rotation degrees that a device can rotate.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            <i>commandOnlyRotation</i>\n          </div>\n          <div className=\"three_table_cel\">\n            <Switch onChange={(checked) => {this.updateCheckbox(checked,\"commandOnlyRotation\")}} checked={this.props.attributes.commandOnlyRotation} />\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the device.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            <i>supportsContinuousRotation</i>\n          </div>\n          <div className=\"three_table_cel\">\n            <Switch onChange={(checked) => {this.updateCheckbox(checked,\"supportsContinuousRotation\")}} checked={this.props.attributes.supportsContinuousRotation} />\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if the device supports continuous rotation.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            <i>supportsDegrees</i>\n          </div>\n          <div className=\"three_table_cel\">\n            <Switch onChange={(checked) => {this.updateCheckbox(checked,\"supportsDegrees\")}} checked={this.props.attributes.supportsDegrees} />\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if the device allows rotation by degree.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            <i>supportsPercent</i>\n          </div>\n          <div className=\"three_table_cel\">\n            <Switch onChange={(checked) => {this.updateCheckbox(checked,\"supportsPercent\")}} checked={this.props.attributes.supportsPercent} />\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if device allows rotation by percent.</span>\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default Rotation\n","import React from 'react';\n\nclass Fill extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateLevels = this.updateLevels.bind(this);\n    this.addLevel = this.addLevel.bind(this);\n  }\n\n  updateLevels(event){\n    const id = event.target.id.split('_')\n    const level_id = id[1]\n    //Process the attribute and value depending of the attribute\n    const level_attribute = id[0] === 'lang' ? id[0] : 'level_synonym';\n    const value = id[0] === 'lang' ? event.target.value : event.target.value.split(',')\n    //Update the temporal data and update it\n    var temp_availableFillLevels = this.props.attributes.availableFillLevels\n    temp_availableFillLevels.levels[level_id].level_values[0][level_attribute] = value\n    if (id[0] === 'names') temp_availableFillLevels.levels[level_id].level_name = value[0]\n    this.props.update('attributes/availableFillLevels', temp_availableFillLevels);\n  }\n\n  addLevel(){\n    var temp_availableFillLevels = this.props.attributes.availableFillLevels\n    temp_availableFillLevels.levels.push({\n      \"level_name\": \"\",\n      \"level_values\": [\n        {\n          \"level_synonym\": [\"\"],\n          \"lang\": \"en\"\n        }\n      ]\n    });\n    this.props.update('attributes/availableFillLevels', temp_availableFillLevels);\n  }\n\n  render() {\n\n    const names_box = {\n      width: '150px'\n    }\n\n    const levels = this.props.attributes.availableFillLevels.levels.map((level, i) => {\n      return (\n              <div key={i}>\n                <div className=\"two_table_row\" key={i}>\n                  <div className=\"two_table_cel\">\n                  </div>\n                  <div className=\"two_table_cel\">\n                    <label>\n                      <span>Languaje: </span>\n                      <select name=\"type\" id={\"lang_\" + i} value={level.level_values[0].lang} onChange={this.updateLevels}>\n                        <option value=\"es\">es</option>\n                        <option value=\"en\">en</option>\n                      </select>\n                    </label>\n                    <label>\n                      <span>Fill level name: </span>\n                      <input type=\"text\" id={\"names_\" + i} style={names_box} defaultValue={level.level_values[0].level_synonym} placeholder=\"Fill level name\" onChange={this.updateLevels}/>\n                    </label>\n                  </div>\n                </div>\n              </div>\n              )\n    });\n\n    return (\n      <div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            Add a level\n          </div>\n          <div className=\"three_table_cel\">\n            <button type=\"button\" className=\"add_attribute_button\" onClick={ this.addLevel }>Add</button>\n          </div>\n        </div>\n\n        {levels}\n\n      </div>\n    );\n  }\n}\n\nexport default Fill\n","import React from 'react';\n\nclass ArmDisarm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateSecurityLevel = this.updateSecurityLevel.bind(this);\n    this.addSecurityLevel = this.addSecurityLevel.bind(this);\n  }\n\n  updateSecurityLevel(event){\n    const id = event.target.id.split('_')\n    const level_id = id[1]\n    //Process the attribute and value depending of the attribute\n    const level_attribute = id[0] === 'lang' ? id[0] : 'level_synonym';\n    const value = id[0] === 'lang' ? event.target.value : event.target.value.split(',')\n    //Update the temporal data and update it\n    var temp_availableArmLevels = this.props.attributes.availableArmLevels\n    temp_availableArmLevels.levels[level_id].level_values[0][level_attribute] = value\n    if (id[0] === 'names') temp_availableArmLevels.levels[level_id].level_name = value[0]\n    this.props.update('attributes/availableArmLevels', temp_availableArmLevels);\n  }\n\n  addSecurityLevel(){\n    var temp_availableArmLevels = this.props.attributes.availableArmLevels\n    temp_availableArmLevels.levels.push({\n      \"level_name\": \"\",\n      \"level_values\": [\n        {\n          \"level_synonym\": [\"\"],\n          \"lang\": \"en\"\n        }\n      ]\n    });\n    this.props.update('attributes/availableArmLevels', temp_availableArmLevels);\n  }\n\n  render() {\n\n    const names_box = {\n      marginLeft: '20px',\n      width: '150px'\n    }\n\n    const levels = this.props.attributes.availableArmLevels.levels.map((level, i) => {\n      return (\n              <div key={i}>\n                <div className=\"two_table_row\" key={i}>\n                  <div className=\"two_table_cel\">\n                  </div>\n                  <div className=\"two_table_cel\">\n                    <label>\n                      <span>Languaje: </span>\n                      <select name=\"type\" id={\"lang_\" + i} value={level.level_values[0].lang} onChange={this.updateSecurityLevel}>\n                        <option value=\"es\">es</option>\n                        <option value=\"en\">en</option>\n                      </select>\n                    </label>\n                    <label>\n                      <span>Level name: </span>\n                      <input type=\"text\" id={\"names_\" + i} style={names_box} defaultValue={level.level_values[0].level_synonym} placeholder=\"Security level name\" onChange={this.updateSecurityLevel}/>\n                    </label>\n                  </div>\n                </div>\n              </div>\n              )\n    });\n\n    return (\n      <div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            Add a security level\n          </div>\n          <div className=\"three_table_cel\">\n            <button type=\"button\" className=\"add_attribute_button\" onClick={ this.addSecurityLevel }>Add</button>\n          </div>\n        </div>\n\n        {levels}\n\n      </div>\n    );\n  }\n}\n\nexport default ArmDisarm\n","import React from 'react';\nimport Switch from \"react-switch\";\n\nclass StartStop extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n    this.updateArray = this.updateArray.bind(this);\n  }\n\n\n  updateCheckbox(checked, attribute){\n    this.props.update('attributes/' + attribute,checked);\n  }\n\n  updateArray(event){\n    this.props.update('attributes/' + event.target.id,event.target.value.split(','));\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            <i>pausable</i>\n          </div>\n          <div className=\"three_table_cel\">\n            <Switch onChange={(checked) => {this.updateCheckbox(checked,\"pausable\")}} checked={this.props.attributes.pausable} />\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if the device can be paused.</span>\n          </div>\n        </div>\n\n        <div className=\"two_table_row\">\n          <div className=\"two_table_cel align_right\">\n            Zones\n          </div>\n          <div className=\"two_table_cel\">\n            <input type=\"text\" id=\"availableThermostatModes\" defaultValue={this.props.attributes.availableZones} onChange={this.updateArray} className=\"text_input\"/>\n          </div>\n        </div>\n\n        <div className=\"two_table_row\">\n          <div className=\"two_table_cel\">\n\n          </div>\n          <div className=\"two_table_cel\">\n            <span className=\"attribute_advise\">Supported zones names separeted by commas.</span>\n          </div>\n        </div>\n\n\n      </div>\n    );\n  }\n}\n\nexport default StartStop\n","import React from 'react';\nimport Switch from \"react-switch\";\n\nclass Timer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n    this.update = this.update.bind(this);\n  }\n\n\n  updateCheckbox(checked, attribute){\n    this.props.update('attributes/' + attribute,checked);\n  }\n\n  update(event){\n    this.props.update('attributes/' + event.target.id,event.target.value);\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            <i>commandOnlyTimer</i>\n          </div>\n          <div className=\"three_table_cel\">\n            <Switch onChange={(checked) => {this.updateCheckbox(checked,\"commandOnlyTimer\")}} checked={this.props.attributes.commandOnlyTimer} />\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the state.</span>\n          </div>\n        </div>\n\n        <div className=\"two_table_row\">\n          <div className=\"two_table_cel align_right\">\n            Max time\n          </div>\n          <div className=\"two_table_cel\">\n            <input type=\"text\" id=\"maxTimerLimitSec\" defaultValue={this.props.attributes.maxTimerLimitSec} onChange={this.update} className=\"text_input\"/>\n          </div>\n        </div>\n\n        <div className=\"two_table_row\">\n          <div className=\"two_table_cel\">\n\n          </div>\n          <div className=\"two_table_cel\">\n            <span className=\"attribute_advise\">Indicates the longest timer setting in seconds available on the device.</span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Timer\n","import React from 'react';\nimport Switch from \"react-switch\";\n\nclass TemperatureControl extends React.Component {\n  constructor(props) {\n    super(props);\n    this.update = this.update.bind(this);\n    this.updateCheckbox = this.updateCheckbox.bind(this);\n  }\n\n  update(event){\n    this.props.update('attributes/' + event.target.id,event.target.value);\n  }\n\n  updateCheckbox(checked, attribute){\n    this.props.update('attributes/' + attribute,checked);\n  }\n\n  render() {\n\n\n    return (\n      <div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            <i>commandOnlyTemperatureControl</i>\n          </div>\n          <div className=\"three_table_cel\">\n            <Switch onChange={(checked) => {this.updateCheckbox(checked,\"commandOnlyTemperatureControl\")}} checked={this.props.attributes.commandOnlyTemperatureControl} />\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Homeware-LAN shouldn't inform Google Home about the temperature.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            <i>queryOnlyTemperatureControl</i>\n          </div>\n          <div className=\"three_table_cel\">\n            <Switch onChange={(checked) => {this.updateCheckbox(checked,\"queryOnlyTemperatureControl\")}} checked={this.props.attributes.queryOnlyTemperatureControl} />\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Enable it if Google shouldn't change the device temperature settings.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            Minimum temperature\n          </div>\n          <div className=\"three_table_cel\">\n            <input type=\"number\" id=\"temperatureRange/minThresholdCelsius\" defaultValue={ this.props.attributes.temperatureRange ? this.props.attributes.temperatureRange.minThresholdCelsius : 0} min=\"0\" max=\"400\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Minimum temperature (in Celsius) supported by the device.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            Maximum temperature\n          </div>\n          <div className=\"three_table_cel\">\n            <input type=\"number\" id=\"temperatureRange/maxThresholdCelsius\" defaultValue={this.props.attributes.temperatureRange ? this.props.attributes.temperatureRange.maxThresholdCelsius : 0} min=\"0\" max=\"400\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Maximum temperature (in Celsius) supported by the device.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            Step\n          </div>\n          <div className=\"three_table_cel\">\n            <input type=\"number\" id=\"temperatureStepCelsius\" defaultValue={this.props.attributes.temperatureStepCelsius} min=\"0\" max=\"400\" onChange={this.update} className=\"int_input\"/>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\">Specifies the relative temperature step.</span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            Units\n          </div>\n          <div className=\"three_table_cel\">\n            <select name=\"type\" id=\"temperatureUnitForUX\" className=\"table_input\" value={this.props.attributes.temperatureUnitForUX} onChange={this.update}>\n              <option value=\"C\">Celsius</option>\n              <option value=\"F\">Fahrenheit</option>\n            </select>\n          </div>\n        </div>\n\n\n\n      </div>\n    );\n  }\n}\n\nexport default TemperatureControl\n","import React from 'react';\n\nclass Cook extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateMode = this.updateMode.bind(this);\n    this.addMode = this.addMode.bind(this);\n    this.updatePreset = this.updatePreset.bind(this);\n    this.addPreset = this.addPreset.bind(this);\n  }\n\n  updateMode(event){\n    const id = event.target.id.split('_')\n    const mode_id = id[1]\n    var temp_supportedCookingModes = this.props.attributes.supportedCookingModes\n\n    if (event.target.value === 'delete'){\n      temp_supportedCookingModes.splice(mode_id, 1)\n    } else if (event.target.value !== 'select') {\n      temp_supportedCookingModes[mode_id] = event.target.value;\n    }\n\n    this.props.update('attributes/supportedCookingModes', temp_supportedCookingModes);\n  }\n\n  addMode(){\n    var temp_supportedCookingModes = this.props.attributes.supportedCookingModes\n    temp_supportedCookingModes.push(\"\");\n    this.props.update('attributes/supportedCookingModes', temp_supportedCookingModes);\n  }\n\n  updatePreset(event){\n    const id = event.target.id.split('_')\n    const preset_id = id[1]\n    var temp_foodPresets = this.props.attributes.foodPresets\n\n    if(id[0] === 'lang'){\n      temp_foodPresets[preset_id].food_synonyms[0].lang = event.target.value;\n    } else if (id[0] === 'names'){\n      temp_foodPresets[preset_id].food_synonyms[0].synonym = event.target.value.split(',');\n      temp_foodPresets[preset_id].food_preset_name = event.target.value.split(',')[0]\n    } else if (id[0] === 'units'){\n      temp_foodPresets[preset_id].supported_units[0] = event.target.value;\n    }\n    this.props.update('attributes/foodPresets', temp_foodPresets);\n  }\n\n  addPreset(){\n    var temp_foodPresets = this.props.attributes.foodPresets\n    temp_foodPresets.push({\n      \"food_preset_name\": \"\",\n      \"supported_units\": [\"\"],\n      \"food_synonyms\": [{\n        \"synonym\": [\"\"],\n        \"language\": \"en\"\n      }]\n    });\n    this.props.update('attributes/foodPresets', temp_foodPresets);\n  }\n\n  render() {\n\n    const names_box = {\n      width: '150px'\n    }\n\n    const modes = this.props.attributes.supportedCookingModes.map((mode, i) => {\n\n      return (\n              <div key={i}>\n                <div className=\"two_table_row\">\n                  <div className=\"two_table_cel\">\n                  </div>\n                  <div className=\"two_table_cel\">\n                    <label>\n                      <span>Mode: </span>\n                      <select name=\"type\" id={\"mode_\" + i} value={mode} onChange={this.updateMode}>\n                        <option value=\"select\">Select a mode</option>\n                        <option value=\"delete\">Delete this mode</option>\n                        <option value=\"UNKNOWN_COOKING_MODE\">UNKNOWN_COOKING_MODE</option>\n                        <option value=\"BAKE\">BAKE</option>\n                        <option value=\"BEAT\">BEAT</option>\n                        <option value=\"BLEND\">BLEND</option>\n                        <option value=\"BOIL\">BOIL</option>\n                        <option value=\"BREW\">BREW</option>\n                        <option value=\"BROIL\">BROIL</option>\n                        <option value=\"CONVECTION_BAKE\">CONVECTION_BAKE</option>\n                        <option value=\"COOK\">COOK</option>\n                        <option value=\"DEFROST\">DEFROST</option>\n                        <option value=\"DEHYDRATE\">DEHYDRATE</option>\n                        <option value=\"FERMENT\">FERMENT</option>\n                        <option value=\"FRY\">FRY</option>\n                        <option value=\"KNEAD\">KNEAD</option>\n                        <option value=\"MICROWAVE\">MICROWAVE</option>\n                        <option value=\"PRESSURE_COOK\">PRESSURE_COOK</option>\n                        <option value=\"PUREE\">PUREE</option>\n                        <option value=\"ROAST\">ROAST</option>\n                        <option value=\"SAUTE\">SAUTE</option>\n                        <option value=\"SLOW_COOK\">SLOW_COOK</option>\n                        <option value=\"SOUS_VIDE\">SOUS_VIDE</option>\n                        <option value=\"STEAM\">STEAM</option>\n                        <option value=\"STEW\">STEW</option>\n                        <option value=\"WARM\">WARM</option>\n                        <option value=\"WHIP\">WHIP</option>\n                      </select>\n                    </label>\n                  </div>\n                </div>\n              </div>\n\n              )\n    });\n\n    const presets = this.props.attributes.foodPresets.map((preset, i) => {\n\n      return (\n              <div key={i}>\n                <div className=\"two_table_row\">\n                  <div className=\"two_table_cel\">\n                  </div>\n                  <div className=\"two_table_cel\">\n                    <label>\n                      <span>Language: </span>\n                      <select name=\"type\" id={\"lang_\" + i} value={preset.food_synonyms[0].lang} onChange={this.updatePreset}>\n                        <option value=\"es\">es</option>\n                        <option value=\"en\">en</option>\n                      </select>\n                    </label>\n                    <label style={names_box}>\n                      <span>Preset name: </span>\n                      <input type=\"text\" id={\"names_\" + i} defaultValue={preset.food_synonyms[0].synonym} placeholder=\"Preset name\" onChange={this.updatePreset}/>\n                    </label>\n                    <label>\n                      <span>Units: </span>\n                      <select name=\"type\" id={\"units_\" + i} value={preset.supported_units[0]} onChange={this.updatePreset}>\n                        <option value=\"NO_UNITS\">No units</option>\n                        <option value=\"UNKNOWN_UNITS\">Unkown</option>\n                        <option value=\"CENTIMETERS\">Centimeters</option>\n                        <option value=\"CUPS\">Cups</option>\n                        <option value=\"DECILITERS\">Deciliters</option>\n                        <option value=\"FEET\">Feet</option>\n                        <option value=\"FLUID_OUNCES\">Fluid ounces</option>\n                        <option value=\"GALLONS\">Gallons</option>\n                        <option value=\"GRAMS\">Grams</option>\n                        <option value=\"INCHES\">Inches</option>\n                        <option value=\"KILOGRAMS\">Kilograms</option>\n                        <option value=\"LITERS\">Liters</option>\n                        <option value=\"METERS\">Meters</option>\n                        <option value=\"MILLIGRAMS\">Miligrams</option>\n                        <option value=\"MILLILITERS\">Mililiters</option>\n                        <option value=\"MILLIMETERS\">Milimeters</option>\n                        <option value=\"OUNCES\">Ounces</option>\n                        <option value=\"PINCH\">Pinch</option>\n                        <option value=\"PINTS\">Pints</option>\n                        <option value=\"PORTION\">Portion</option>\n                        <option value=\"POUNDS\">Pounds</option>\n                        <option value=\"QUARTS\">Quarts</option>\n                        <option value=\"TABLESPOONS\">Tablespoons</option>\n                        <option value=\"TEASPOONS\">Teaspoons</option>\n                      </select>\n                    </label>\n                  </div>\n                </div>\n              </div>\n              )\n    });\n\n    return (\n      <div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            Add a cooking mode\n          </div>\n          <div className=\"three_table_cel\">\n            <button type=\"button\" className=\"add_attribute_button\" onClick={ this.addMode }>Add</button>\n          </div>\n        </div>\n\n        {modes}\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            Add a preset\n          </div>\n          <div className=\"three_table_cel\">\n            <button type=\"button\" className=\"add_attribute_button\" onClick={ this.addPreset }>Add</button>\n          </div>\n        </div>\n\n        {presets}\n\n      </div>\n    );\n  }\n}\n\nexport default Cook\n","import React from 'react';\n\nclass SensorState extends React.Component {\n  constructor(props) {\n    super(props);\n    this.update = this.update.bind(this);\n  }\n\n  update(event){\n    const value = event.target.value;\n    var sensor = {\n      name: value\n    }\n\n    switch (value) {\n      default:\n        sensor['descriptiveCapabilities'] = {\n          availableStates: ['fair','good','healthy','moderate','poor','severe','unhealthy','unhealthy for sensitive groups','very poor','very unhealthy','unknown'],\n        }\n        sensor['numericCapabilities']= { rawValueUnit: \"AQI\" }\n        break;\n      case 'AirQuality':\n        sensor['descriptiveCapabilities'] = {\n          availableStates: ['fair','good','healthy','moderate','poor','severe','unhealthy','unhealthy for sensitive groups','very poor','very unhealthy','unknown'],\n        }\n        sensor['numericCapabilities']= { rawValueUnit: \"AQI\" }\n        break;\n      case 'CarbonDioxideLevel':\n        sensor['descriptiveCapabilities'] = {\n          numericCapabilities: { rawValueUnit: \"PARTS_PER_MILLION\" }\n        }\n        break;\n      case 'CarbonMonoxideLevel':\n        sensor['descriptiveCapabilities'] = {\n          availableStates: ['carbon monoxide detected','high','no carbon monoxide detected','unknown']\n        }\n        sensor['numericCapabilities']= { rawValueUnit: \"PARTS_PER_MILLION\" }\n        break;\n      case 'FilterCleanliness':\n        sensor['descriptiveCapabilities'] = {\n          availableStates: ['clean','dirty','needs replacement','unknown']\n        }\n        break;\n      case 'FilterLifeTime':\n        sensor['descriptiveCapabilities'] = {\n          availableStates: ['good','new','replace soon','replace now','unknown']\n        }\n        sensor['numericCapabilities']= { rawValueUnit: \"PERCENTAGE\" }\n        break;\n      case 'HEPAFilterLifeTime':\n        sensor['numericCapabilities']= { rawValueUnit: \"PERCENTAGE\" }\n        break;\n      case 'Max2FilterLifeTime':\n        sensor['numericCapabilities']= { rawValueUnit: \"PERCENTAGE\" }\n        break;\n      case 'PM2.5':\n        sensor['numericCapabilities']= { rawValueUnit: \"MICROGRAMS_PER_CUBIC_METER\" }\n        break;\n      case 'PM10':\n        sensor['numericCapabilities']= { rawValueUnit: \"MICROGRAMS_PER_CUBIC_METER\" }\n        break;\n      case 'PreFilterLifeTime':\n        sensor['numericCapabilities']= { rawValueUnit: \"PERCENTAGE\" }\n        break;\n      case 'SmokeLevel':\n        sensor['descriptiveCapabilities'] = {\n          availableStates: ['smoke detected','high','no smoke detected','unknown']\n        }\n        sensor['numericCapabilities']= { rawValueUnit: \"PARTS_PER_MILLION\" }\n        break;\n      case 'WaterLeak':\n        sensor['descriptiveCapabilities'] = {\n          availableStates: ['leak','no leak','unknown']\n        }\n        break;\n      case 'RainDetection':\n        sensor['descriptiveCapabilities'] = {\n          availableStates: ['rain detected','no rain detected','unknown']\n        }\n        break;\n      case 'VolatileOrganicCompounds':\n        sensor['numericCapabilities']= { rawValueUnit: \"PARTS_PER_MILLION\" }\n        break;\n    }\n\n    var sensorStatesSupported = []\n    sensorStatesSupported.push(sensor);\n    this.props.update('attributes/' + event.target.id,sensorStatesSupported);\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel align_right\">\n            Sensor type\n          </div>\n          <div className=\"three_table_cel\">\n            <select name=\"type\" id=\"sensorStatesSupported\" className=\"table_input\" value={this.props.attributes.sensorStatesSupported[0].name} onChange={this.update}>\n              <option value=\"\">Select</option>\n              <option value=\"AirQuality\">Air Quality</option>\n              <option value=\"CarbonDioxideLevel\">Carbon Dioxide Level</option>\n              <option value=\"CarbonMonoxideLevel\">Carbon Monoxide Level</option>\n              <option value=\"FilterCleanliness\">Filter Clean liness</option>\n              <option value=\"FilterLifeTime\">Filter Life Time</option>\n              <option value=\"HEPAFilterLifeTime\">HEPA Filter Life Time</option>\n              <option value=\"Max2FilterLifeTime\">Max2 Filter Life Time</option>\n              <option value=\"PM2.5\">PM2.5</option>\n              <option value=\"PM10\">PM10</option>\n              <option value=\"PreFilterLifeTime\">PreFilter Life Time</option>\n              <option value=\"SmokeLevel\">Smoke Level</option>\n              <option value=\"WaterLeak\">Water Leak</option>\n              <option value=\"RainDetection\">Rain Detection</option>\n              <option value=\"VolatileOrganicCompounds\">Volatile Organic Compounds</option>\n            </select>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"attribute_advise\"></span>\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default SensorState\n","import React from 'react';\nimport Switch from \"react-switch\";\nimport Text from '../editor/Text'\nimport Scene from '../editor/traits/Scene'\nimport OnOff from '../editor/traits/OnOff'\nimport Brightness from '../editor/traits/Brightness'\nimport FanSpeed from '../editor/traits/FanSpeed'\nimport ColorSetting from '../editor/traits/ColorSetting'\nimport TemperatureSetting from '../editor/traits/TemperatureSetting'\nimport Toggles from '../editor/traits/Toggles'\nimport Modes from '../editor/traits/Modes'\nimport HumiditySetting from '../editor/traits/HumiditySetting'\nimport OpenClose from '../editor/traits/OpenClose'\nimport Rotation from '../editor/traits/Rotation'\nimport Fill from '../editor/traits/Fill'\nimport ArmDisarm from '../editor/traits/ArmDisarm'\nimport StartStop from '../editor/traits/StartStop'\nimport Timer from '../editor/traits/Timer'\nimport TemperatureControl from '../editor/traits/TemperatureControl'\nimport Cook from '../editor/traits/Cook'\nimport SensorState from '../editor/traits/SensorState'\nimport getCookieValue from '../../functions'\nimport { root, deviceReference } from '../../constants'\n\nimport './Editor.css';\n\nclass Editor extends React.Component {\n  constructor(props) {\n    super(props);\n    const id = window.location.pathname.split('/')[3];\n    var create = false;\n    if (id === \"\") create = true;\n    this.state = {\n      id: id,\n      create: create,\n      device: {\n        attributes: {},\n        deviceInfo: {},\n        id: \"\",\n        name: {\n          defaultNames: [],\n          nicknames: [],\n          name: \"\"\n        },\n        traits: [],\n        type: \"\"\n      },\n      status: {\n        online: true\n      },\n      device_tratis: [],\n      not_recomended_traits: false,\n      save_status: \"\"\n    }\n    this.updateNames = this.updateNames.bind(this);\n    this.update = this.update.bind(this);\n    this.updateId = this.updateId.bind(this);\n    this.updateType = this.updateType.bind(this);\n    this.updateTraits = this.updateTraits.bind(this);\n    this.notRecomendedTraits = this.notRecomendedTraits.bind(this);\n    this.save = this.save.bind(this);\n    this.delete = this.delete.bind(this);\n    this.renderAttrinutes = this.renderAttrinutes.bind(this);\n  }\n\n  componentDidMount() {\n    if (!this.state.create){\n      var http = new XMLHttpRequest();\n      http.onload = function (e) {\n        if (http.readyState === 4) {\n          if (http.status === 200) {\n            var data = JSON.parse(http.responseText);\n            var recomended_tratis = deviceReference.devices[data.type].traits\n            var device_tratis = data.traits.concat(recomended_tratis)\n            device_tratis = device_tratis.filter((trait,index) => {\n              return (device_tratis.indexOf(trait) === index)\n            })\n            this.setState({\n               device: data,\n               device_tratis: device_tratis\n             });\n          } else {\n            console.error(http.statusText);\n          }\n        }\n      }.bind(this);\n      http.open(\"GET\", root + \"api/devices/get/\" + this.state.id + \"/\");\n      http.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n      http.send();\n    }\n  }\n\n  updateNames(dumy_key, value){\n    var names = value.split(',');\n    var temp_device = this.state.device\n    temp_device.name = {\n      defaultNames: names,\n      nicknames: names,\n      name: names[0]\n    }\n    this.setState({\n      device: temp_device\n    })\n  }\n\n  update(key, value){\n    var temp_device = this.state.device\n    var keys = key.split('/');\n    if (keys.length === 1)\n      temp_device[key] = value\n    else if (keys.length === 2)\n      temp_device[keys[0]][keys[1]] = value\n    else if (keys.length === 3)\n      temp_device[keys[0]][keys[1]][keys[2]] = value\n    this.setState({\n      device: temp_device\n    })\n  }\n\n  updateId(event){\n    this.update('id',event.target.value)\n  }\n\n  updateType(event){\n    this.update('type',event.target.value)\n    this.setState({\n       device_tratis: deviceReference.devices[event.target.value].traits\n     });\n  }\n\n  updateTraits(checked, trait){\n    var temp_device = this.state.device\n    var temp_status = this.state.status\n    if (checked) {\n      if (this.state.device.traits.includes(trait) === false){\n        //Push the trait to the device\n        temp_device.traits.push(trait)\n        //Set the default values\n        var attributes = deviceReference.traits[trait].attributes;\n        Object.keys(attributes).forEach((attribute, i) => {\n          temp_device.attributes[attribute] = attributes[attribute].default\n        });\n        //Set the default status params\n        var params = deviceReference.traits[trait].params;\n        params.forEach((param, i) => {\n          temp_status[param] = deviceReference.params[param].default\n        });\n      }\n    } else {\n      if (this.state.device.traits.includes(trait) === true){\n        temp_device.traits = temp_device.traits.filter(function(value, index, arr){ return value !== trait;});\n      }\n    }\n    console.log(temp_device)\n    console.log(trait)\n    this.setState({\n      device: temp_device,\n      status: temp_status\n    })\n  }\n\n  notRecomendedTraits(){\n    this.setState({\n      device_tratis: Object.keys(deviceReference.traits),\n      not_recomended_traits: true\n    })\n  }\n\n  save(){\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      if (http.readyState === 4) {\n        if (http.status === 200) {\n          JSON.parse(http.responseText);\n          this.setState({\n             save_status: \"Saved correctly.\"\n           });\n           if (this.state.create) {\n             window.location.href = '/devices'\n           }\n        } else {\n          console.error(http.statusText);\n          this.setState({\n             save_status: \"Error, the changes haven't been saved.\"\n           });\n        }\n        setTimeout(function(){\n          this.setState({\n             save_status: \"\"\n           });\n        }.bind(this), 5000)\n      }\n    }.bind(this);\n    var payload = {\n      \"device\": this.state.device\n    }\n    if (this.state.create){\n      http.open(\"POST\", root + \"api/devices/create/\");\n      payload.status = this.state.status\n    } else {\n      http.open(\"POST\", root + \"api/devices/update/\");\n    }\n    http.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\n    http.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    http.send(JSON.stringify(payload));\n  }\n\n  delete(){\n    if(window.confirm('Do you want to delete the device?')){\n      var http = new XMLHttpRequest();\n      http.onload = function (e) {\n        if (http.readyState === 4) {\n          if (http.status === 200) {\n            window.location.href = \"/devices/\"\n          } else {\n            console.error(http.statusText);\n            this.setState({\n               save_status: \"Error, the device hasn't been deleted.\"\n             });\n          }\n          setTimeout(function(){\n            this.setState({\n               save_status: \"\"\n             });\n          }.bind(this), 5000)\n        }\n      }.bind(this);\n      http.open(\"GET\", root + \"api/devices/delete/\" + this.state.device.id + \"/\");\n      http.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n      http.send();\n    } else {\n      this.setState({\n         save_status: \"Ok. The device is save.\"\n       });\n    }\n  }\n\n  renderAttrinutes(trait){\n    if (this.state.device.traits.includes(trait)){\n      if (trait === 'action.devices.traits.Scene')\n        return <Scene attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.OnOff')\n        return <OnOff attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.Brightness')\n        return <Brightness commandOnlyBrightness={this.state.device.attributes.commandOnlyBrightness} update={this.update}/>\n      else if (trait === 'action.devices.traits.ColorSetting')\n        return <ColorSetting attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.FanSpeed')\n        return <FanSpeed attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.TemperatureSetting')\n        return <TemperatureSetting attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.Toggles')\n        return <Toggles attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.Modes')\n        return <Modes attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.HumiditySetting')\n        return <HumiditySetting attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.OpenClose')\n        return <OpenClose attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.Rotation')\n        return <Rotation attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.Fill')\n        return <Fill attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.ArmDisarm')\n        return <ArmDisarm attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.StartStop')\n        return <StartStop attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.Timer')\n        return <Timer attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.TemperatureControl')\n        return <TemperatureControl attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.Cook')\n        return <Cook attributes={this.state.device.attributes} update={this.update}/>\n      else if (trait === 'action.devices.traits.SensorState')\n        return <SensorState attributes={this.state.device.attributes} update={this.update}/>\n    }\n  }\n\n  render() {\n\n    const deleteButton = {\n      backgroundColor: 'red'\n    }\n\n    const deleteButtonDisabled = {\n      backgroundColor: 'red',\n      opacity: '0.2'\n    }\n\n    const types = Object.keys(deviceReference.devices).map((type) => {\n      return <option key={type} value={type}>{deviceReference.devices[type].name}</option>\n    })\n\n    const nicknames = this.state.device.name.nicknames.map((name) => {\n      return name\n    });\n\n    const traits = this.state.device_tratis.map((trait) =>\n      <div key={trait}>\n        <hr className=\"separator\"/>\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n            <b>{deviceReference.traits[trait].name}</b>\n          </div>\n          <div className=\"three_table_cel\">\n            <Switch onChange={(checked) => {this.updateTraits(checked,trait)}} checked={this.state.device.traits.includes(trait)} />\n          </div>\n          <div className=\"three_table_cel\">\n            Read Google's <a href={\"https://developers.google.com/assistant/smarthome/traits/\" + trait.split('.')[3].toLowerCase()} target=\"blanck\">documentation</a>\n          </div>\n        </div>\n        {this.renderAttrinutes(trait)}\n      </div>\n    );\n\n    return (\n      <div>\n\n        <div className=\"page_block_container\">\n          <h2>Global settings</h2>\n          <div className=\"advise\">\n            <span>General settings of the device.</span>\n            <hr/>\n          </div>\n          <div className=\"page_block_content_container\">\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">\n                Device ID*\n              </div>\n              <div className=\"two_table_cel\">\n                <input type=\"text\" className=\"two_input\" id=\"id\" defaultValue={this.state.device.id} onChange={this.updateId} disabled={ this.state.create ? false : true }/>\n              </div>\n            </div>\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">\n                Device Type*\n              </div>\n              <div className=\"two_table_cel\">\n                <select name=\"type\" className=\"two_input\" id=\"type\" value={this.state.device.type} onChange={this.updateType} disabled={ this.state.create ? false : true }>\n                  <option value=\"default\">Select a device</option>\n                  {types}\n                </select>\n              </div>\n            </div>\n            <Text name=\"Nick names*\" data=\"nicknames\" value={nicknames} update={this.updateNames}/>\n            <Text name=\"Hardware version\" data=\"deviceInfo/hwVersion\" value={this.state.device.deviceInfo ? this.state.device.deviceInfo.hwVersion : ''} update={this.update}/>\n            <Text name=\"Software version\" data=\"deviceInfo/swVersion\" value={this.state.device.deviceInfo ? this.state.device.deviceInfo.swVersion : ''} update={this.update}/>\n            <Text name=\"Manufacturer\" data=\"deviceInfo/manufacturer\" value={this.state.device.deviceInfo ? this.state.device.deviceInfo.manufacturer : ''} update={this.update}/>\n            <Text name=\"Model\" data=\"deviceInfo/model\" value={this.state.device.deviceInfo ? this.state.device.deviceInfo.model : ''} update={this.update}/>\n            <div className=\"advise\">\n              <span>Nick names must be separeted by <i>,</i> commas.</span><br/>\n              <span>* data is required.</span>\n            </div>\n            <hr/>\n            <h2>Traits</h2>\n            <div className=\"advise\">\n              <span>The traits define what the device can do.</span>\n            </div>\n            {traits}\n            {\n              this.state.not_recomended_traits\n              ?\n                \"\"\n              :\n                <button type=\"button\" onClick={ this.notRecomendedTraits }>More traits</button>\n\n            }\n            <hr/>\n            <div className=\"two_table_cel\">\n              <button type=\"button\" style={ this.state.create ? deleteButtonDisabled : deleteButton } onClick={ this.delete } disabled={ this.state.create ? true : false}>Delete</button>\n              <button type=\"button\" onClick={ this.save }>Save</button>\n              <span>{this.state.save_status}</span>\n            </div>\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default Editor\n","import React from 'react';\nimport ReactJson from 'react-json-view'\nimport getCookieValue from '../../functions'\nimport { root } from '../../constants'\n\nclass Editor extends React.Component {\n  constructor(props) {\n    super(props);\n    const id = window.location.pathname.split('/')[3];\n    this.state = {\n      id: id,\n      device: {\n        attributes: {},\n        deviceInfo: {},\n        id: \"\",\n        name: {\n          defaultnames: [],\n          nicknames: [],\n          name: \"\"\n        },\n        traits: [],\n        type: \"\"\n      },\n      status: {\n        online: true\n      }\n    }\n  }\n\n  componentDidMount() {\n    var dev = new XMLHttpRequest();\n    dev.onload = function (e) {\n      if (dev.readyState === 4) {\n        if (dev.status === 200) {\n          var data = JSON.parse(dev.responseText);\n          this.setState({\n             device: data\n           });\n        } else {\n          console.error(dev.statusText);\n        }\n      }\n    }.bind(this);\n    dev.open(\"GET\", root + \"api/devices/get/\" + this.state.id + \"/\");\n    dev.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    dev.send();\n\n    var sta = new XMLHttpRequest();\n    sta.onload = function (e) {\n      if (sta.readyState === 4) {\n        if (sta.status === 200) {\n          var data = JSON.parse(sta.responseText);\n          this.setState({\n             status: data\n           });\n        } else {\n          console.error(sta.statusText);\n        }\n      }\n    }.bind(this);\n    sta.open(\"GET\", root + \"api/status/get/\" + this.state.id + \"/\");\n    sta.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    sta.send();\n  }\n\n\n\n  render() {\n\n    const json_viewer = {\n      textAlign: 'left',\n    }\n\n    return (\n      <div>\n\n        <div className=\"page_block_container\">\n          <h2>Device definition</h2>\n          <div className=\"advise\">\n            <span>General settings of the device.</span>\n            <hr/>\n          </div>\n          <div style={json_viewer}>\n            <ReactJson src={this.state.device} />\n          </div>\n        </div>\n\n        <div className=\"page_block_container\">\n          <h2>Device status</h2>\n          <div className=\"advise\">\n            <span>Status of the device.</span>\n            <hr/>\n          </div>\n          <div style={json_viewer}>\n            <ReactJson src={this.state.status} />\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default Editor\n","import React from 'react';\nimport ReactJson from 'react-json-view'\nimport getCookieValue from '../../functions'\nimport { root, deviceReference } from '../../constants'\n\nimport './Connecting.css';\n\nclass Connecting extends React.Component {\n  constructor(props) {\n    super(props);\n    const id = window.location.pathname.split('/')[3]\n    this.state = {\n      id: id,\n      traits: [],\n      params: [],\n      commands: []\n    }\n  }\n\n  componentDidMount() {\n    var dev = new XMLHttpRequest();\n    dev.onload = function (e) {\n      if (dev.readyState === 4) {\n        if (dev.status === 200) {\n          const data = JSON.parse(dev.responseText);\n          const traits = data.traits;\n          var commands = [];\n          var params = []\n          traits.forEach((trait) => {\n            params = params.concat(deviceReference.traits[trait].params);\n            commands = commands.concat(deviceReference.traits[trait].commands);\n          });\n          this.setState({\n             traits: traits,\n             params: params,\n             commands: commands\n           });\n        } else {\n          console.error(dev.statusText)\n        }\n      }\n    }.bind(this);\n    dev.open(\"GET\", root + \"api/devices/get/\" + this.state.id + \"/\");\n    dev.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    dev.send();\n  }\n\n  render() {\n\n    const params = this.state.params.map((param, i) => {\n      var type = deviceReference.params[param].type\n      if (type === 'list')\n        type = 'string'\n\n      var topic = 'None - Controlled only by the device'\n      if (deviceReference.params[param].commanded)\n        topic = 'device/' + this.state.id + '/' + param\n\n      return (\n        <div key={i} className=\"param_table_row\">\n          <div className=\"param_table_cel\">{param}</div>\n          <div className=\"param_table_cel\">{topic}</div>\n          <div className=\"param_table_cel\">{type}</div>\n        </div>\n      )\n    })\n\n    const commands = this.state.commands.map((command, i) => {\n      return (\n        <div key={i} className=\"command_table_row\">\n          <div className=\"command_table_cel\">{command.command}</div>\n          <div className=\"command_table_cel\">{'device/' + this.state.id + '/command'}</div>\n          <div className=\"command_table_cel\">{command.description}</div>\n        </div>\n      )\n    })\n\n    var example = {\"id\":\"light001\",\"param\":\"brightness\",\"value\":\"80\",\"intent\":\"execute\"}\n    var advise = {\n      textAlign: 'left'\n    }\n\n    return (\n      <div>\n\n        <div className=\"page_block_container\">\n          <h2>Params</h2>\n          <div className=\"advise\">\n            <p>Params are data interchanged between Google and the device and stored in Homeware database. </p>\n            <p>If the param has got a notification topic, Google Home can control it. A notification will be sent in this MQTT topic when Google change a param.</p>\n            <p>If the param hasn't got a notification topic, the device should update the param value when necessary.</p>\n            <hr/>\n          </div>\n          <div className=\"param_table_row param_table_header\">\n            <div className=\"param_table_cel\"><b>Param</b></div>\n            <div className=\"param_table_cel\"><b>Notifications topic</b></div>\n            <div className=\"param_table_cel\"><b>Type</b></div>\n          </div>\n          {params}\n          <div className=\"advise\" style={advise}>\n            <hr/>\n            <p>The device can change the value of any param sending an execute request to device/control topic as follow</p>\n            <ReactJson src={example}/>\n          </div>\n        </div>\n\n        <div className=\"page_block_container\">\n          <h2>Commands</h2>\n          <div className=\"advise\">\n            <p>Commands are directs orders from Google to the device. Commands are not stored in Homeware's database.</p>\n            <hr/>\n          </div>\n          <div className=\"command_table_row command_table_header\">\n            <div className=\"command_table_cel\"><b>Command</b></div>\n            <div className=\"command_table_cel\"><b>Notifications topic</b></div>\n            <div className=\"command_table_cel\"><b>Description</b></div>\n          </div>\n          {commands}\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default Connecting\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport getCookieValue from '../../functions'\nimport { root } from '../../constants'\n\nimport './Tasks.css';\n\nclass Tasks extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      devices: [],\n      tasks: []\n    }\n    this.loadData = this.loadData.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  loadData(){\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      if (http.readyState === 4) {\n        if (http.status === 200) {\n          var data = JSON.parse(http.responseText);\n          this.setState({\n             devices: data.devices,\n             tasks: data.tasks\n           });\n        } else {\n          console.error(http.statusText);\n        }\n      }\n    }.bind(this);\n    http.open(\"GET\", root + \"api/global/get/\");\n    http.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    http.send();\n  }\n\n  render() {\n\n    const tasks = this.state.tasks.map((task, i) => {\n      return(\n        <Link key={i} to={'/tasks/manager/' + i} className=\"task_link\">\n          <div className=\"task_card\">\n            <h2 className=\"task_card_title\" id={ 'task_' + i }>{ task.title }</h2>\n            <hr className=\"task_card_divider\"/>\n            <p>{ task.description }</p>\n          </div>\n        </Link>\n      )\n    });\n\n    return (\n      <div>\n        <div className=\"page_title_container\">\n          <h2>Tasks</h2>\n        </div>\n\n        <div className=\"page_cards_container\">\n          {tasks}\n        </div>\n\n        <div className=\"page_buttons_containter\">\n          <Link to='/tasks/manager/'>\n            <button type=\"button\">New</button>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Tasks\n","import React from 'react';\nimport Triggers from './Triggers'\n\nimport '../pages/Manager.css';\n\nclass Logic extends React.Component {\n  constructor(props) {\n    super(props);\n    this.delete = this.delete.bind(this);\n    this.addOr = this.addOr.bind(this);\n    this.addAnd = this.addAnd.bind(this);\n    this.openTriggerAssistant = this.openTriggerAssistant.bind(this);\n  }\n\n  delete() {\n    this.props.delete(this.props.id);\n  }\n\n  addOr() {\n    this.props.addTriggerLogic('or',this.props.id)\n  }\n\n  addAnd() {\n    this.props.addTriggerLogic('and',this.props.id)\n  }\n\n  openTriggerAssistant() {\n    this.props.openTriggerAssistant(this.props.id)\n  }\n\n  render() {\n\n    const num_operations = this.props.triggers[this.props.id].operation.length-1;\n    const operations = this.props.triggers[this.props.id].operation.map((op, i) => {\n      return (\n        <div key={op + i }>\n          <Triggers id={op} triggers={this.props.triggers} devices={this.props.devices} delete={this.props.delete} addTriggerLogic={this.props.addTriggerLogic}  openTriggerAssistant={this.props.openTriggerAssistant}/>\n          {i < num_operations ? <h2 className=\"trigger_logic_title\">{this.props.triggers[this.props.id].type}</h2> : '' }\n        </div>\n      );\n    });\n\n    return (\n      <div className=\"trigger_logic_container\">\n          {operations}\n          <div className=\"trigger_logic_buttons_container\">\n            <button type=\"button\" className=\"trigger_logic_button\" onClick={ this.addOr }>Or</button>\n            <button type=\"button\" className=\"trigger_logic_button\" onClick={ this.addAnd }>And</button>\n            <button type=\"button\" className=\"trigger_logic_button\" onClick={ this.openTriggerAssistant }>Trigger</button>\n            <button type=\"button\" className=\"trigger_logic_button red_button\" onClick={ this.delete }>Delete</button>\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default Logic\n","import React from 'react';\nimport { deviceReference } from '../../constants'\n\nimport '../pages/Manager.css';\n\nclass Trigger extends React.Component {\n  constructor(props) {\n    super(props);\n    this.delete = this.delete.bind(this);\n    this.renderTriggerText = this.renderTriggerText.bind(this);\n  }\n\n  delete() {\n    this.props.delete(this.props.id);\n  }\n\n  renderTriggerText() {\n    const week = ['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday']\n    const device_triggers = ['d2b','d2i','d2l','d2s']\n\n    const type = this.props.triggers[this.props.id].type;\n    const operation = this.props.triggers[this.props.id].operation.split(':');\n    if (device_triggers.includes(type)) {\n      return this.props.devices[operation[0]] + ' (' + (deviceReference.params[operation[1]] ? deviceReference.params[operation[1]].name : operation[1]) + ') ' +  operation[2] + ' ' +  operation[3];\n    } else if (type === 'd2d') {\n      return this.props.devices[operation[0]] + ' (' + (deviceReference.params[operation[1]] ? deviceReference.params[operation[1]].name : operation[1]) + ') ' +  operation[2] + ' ' +  this.props.devices[operation[3]] + ' (' + (deviceReference.params[operation[4]].name ? deviceReference.params[operation[4]].name : operation[4]) + ') ';\n    } else if (type === 'd2c') {\n      return this.props.devices[operation[0]] + ' (' + (deviceReference.params[operation[1]] ? deviceReference.params[operation[1]].name : operation[1]) + ') ' +  operation[2] + ' ' +  operation[3];\n    } else if (type === 'time') {\n\n      var days = '';\n      for( var i = 0; i < operation[2].length; i++){\n        days += week[operation[2][i]];\n        if (i !== operation[2].length - 1)\n          days += ', ';\n      }\n      return operation[0] + ':'  + operation[1] + ' on ' + days\n\n    } else {\n      return this.props.triggers[this.props.id].operation\n    }\n  }\n\n  render() {\n\n    return (\n      <div className=\"trigger_device_container\">\n        <span>{this.renderTriggerText()}</span>\n        <img src=\"/global/bin_icon.png\" alt=\"Delete icon\" className=\"trigger_delete\" onClick={this.delete}/>\n      </div>\n    );\n  }\n}\n\nexport default Trigger\n","import React from 'react';\nimport Logic from './Logic'\nimport Trigger from './Trigger'\n\nclass Triggers extends React.Component {\n  constructor(props) {\n    super(props);\n    this.addOr = this.addOr.bind(this);\n    this.addAnd = this.addAnd.bind(this);\n    this.openTriggerAssistant = this.openTriggerAssistant.bind(this);\n  }\n\n  addOr() {\n    this.props.addTriggerLogic('or','triggers')\n  }\n\n  addAnd() {\n    this.props.addTriggerLogic('and','triggers')\n  }\n\n  openTriggerAssistant() {\n    this.props.openTriggerAssistant('triggers')\n  }\n\n  render() {\n\n    if (this.props.triggers.trigger) {\n      var operation = this.props.triggers[this.props.id]\n      const device_triggers = ['d2b','d2d','d2i','d2l','time','d2c']\n\n      if (operation.type === 'or'){\n        return <Logic id={this.props.id} triggers={this.props.triggers} devices={this.props.devices} delete={this.props.delete} addTriggerLogic={this.props.addTriggerLogic} openTriggerAssistant={this.props.openTriggerAssistant}/>\n      } else if (operation.type === 'and'){\n        return <Logic id={this.props.id} triggers={this.props.triggers} devices={this.props.devices} delete={this.props.delete} addTriggerLogic={this.props.addTriggerLogic} openTriggerAssistant={this.props.openTriggerAssistant}/>\n      } else if (device_triggers.includes(operation.type)){\n        return <Trigger id={this.props.id} triggers={this.props.triggers} devices={this.props.devices} delete={this.props.delete}/>\n      }\n    } else {\n      return (\n        <div>\n        <button type=\"button\" className=\"trigger_logic_button\" onClick={ this.addOr }>Or</button>\n        <button type=\"button\" className=\"trigger_logic_button\" onClick={ this.addAnd }>And</button>\n        <button type=\"button\" className=\"trigger_logic_button\" onClick={ this.openTriggerAssistant }>Trigger</button>\n        </div>\n      );\n    }\n\n  }\n}\n\nexport default Triggers\n","import React from 'react';\n\nimport '../pages/Manager.css';\n\nclass Assistant extends React.Component {\n  constructor(props) {\n    super(props);\n    this.addTriggerOperation = this.addTriggerOperation.bind(this);\n  }\n\n  addTriggerOperation(){\n    const hour = document.getElementById('hour').value;\n    const minute = document.getElementById('minute').value;\n    var week = '';\n\n    if (document.getElementById('monday').checked)\n      week += '1'\n    if (document.getElementById('tuesday').checked)\n      week += '2'\n    if (document.getElementById('wednesday').checked)\n      week += '3'\n    if (document.getElementById('thursday').checked)\n      week += '4'\n    if (document.getElementById('friday').checked)\n      week += '5'\n    if (document.getElementById('saturday').checked)\n      week += '6'\n    if (document.getElementById('sunday').checked)\n      week += '0'\n\n    const value = hour + ':' + minute + ':' + week;\n    this.props.addTriggerOperation('time',value);\n    this.props.closeTriggerAssistant();\n  }\n\n  render() {\n\n    return (\n      <div className=\"trigger_assistant_container\">\n        <h2 className=\"trigger_assistant_title\">Triggered by time</h2>\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n            Hour*\n          </div>\n          <div className=\"three_table_cel\">\n            <input type=\"number\" className=\"\" id=\"hour\" min=\"0\" max=\"23\"/>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"advise\">24h format</span>\n          </div>\n        </div>\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n            Minute*\n          </div>\n          <div className=\"three_table_cel\">\n            <input type=\"number\" className=\"\" id=\"minute\" min=\"0\" max=\"59\"/>\n          </div>\n          <div className=\"three_table_cel\">\n            <span className=\"advise\"></span>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n            Week*\n          </div>\n          <div className=\"three_table_cel\">\n            Sunday\n          </div>\n          <div className=\"three_table_cel\">\n            <input type=\"checkbox\" id=\"sunday\"/>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n          </div>\n          <div className=\"three_table_cel\">\n            Monday\n          </div>\n          <div className=\"three_table_cel\">\n            <input type=\"checkbox\" id=\"monday\"/>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n          </div>\n          <div className=\"three_table_cel\">\n            Tuesday\n          </div>\n          <div className=\"three_table_cel\">\n            <input type=\"checkbox\" id=\"tuesday\"/>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n          </div>\n          <div className=\"three_table_cel\">\n            Wednesday\n          </div>\n          <div className=\"three_table_cel\">\n            <input type=\"checkbox\" id=\"wednesday\"/>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n          </div>\n          <div className=\"three_table_cel\">\n            Thursday\n          </div>\n          <div className=\"three_table_cel\">\n            <input type=\"checkbox\" id=\"thursday\"/>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n          </div>\n          <div className=\"three_table_cel\">\n            Friday\n          </div>\n          <div className=\"three_table_cel\">\n            <input type=\"checkbox\" id=\"friday\"/>\n          </div>\n        </div>\n\n        <div className=\"three_table_row\">\n          <div className=\"three_table_cel\">\n          </div>\n          <div className=\"three_table_cel\">\n            Saturday\n          </div>\n          <div className=\"three_table_cel\">\n            <input type=\"checkbox\" id=\"saturday\"/>\n          </div>\n        </div>\n\n\n\n\n\n        <div className=\"trigger_assisstant_buttons_container\">\n          <button type=\"button\" className=\"trigger_assistant_button\" onClick={ this.addTriggerOperation }>Save</button>\n          <button type=\"button\" className=\"trigger_assistant_button red_button\" onClick={ this.props.closeTriggerAssistant }>Cancel</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Assistant\n","import React from 'react';\nimport { deviceReference } from '../../constants'\n\nimport '../pages/Manager.css';\n\nclass Device extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      device: \"\"\n    }\n    this.updateDevice = this.updateDevice.bind(this);\n    this.updateParam = this.updateParam.bind(this);\n    this.addTriggerOperation = this.addTriggerOperation.bind(this);\n    this.typeConversion = this.typeConversion.bind(this);\n  }\n\n  updateDevice(event) {\n    this.setState({\n      device: event.target.value\n    });\n  }\n\n  updateParam(event) {\n    this.setState({\n      param: event.target.value\n    });\n  }\n\n  addTriggerOperation(){\n    const device = document.getElementById('device').value;\n    const param = document.getElementById('param').value;\n    const comparator = document.getElementById('comparator').value;\n    const value = document.getElementById('value').value;\n\n\n    const operation = device + ':' + param + ':' + comparator + ':' + value;\n    this.props.addTriggerOperation(this.typeConversion(deviceReference.params[this.state.param].type),operation);\n    this.props.closeTriggerAssistant();\n  }\n\n  typeConversion(origen) {\n    const type = {\n      int: 'd2i',\n      list: 'd2l',\n      bool: 'd2b',\n      string: 'd2s',\n      color: 'd2c'\n    }\n    return type[origen]\n  }\n\n  render() {\n\n    const devices = Object.keys(this.props.devices).map((device) => {\n      return <option key={device} value={device}>{this.props.devices[device]}</option>\n    })\n\n    const params = this.state.device === \"\" ? '' : Object.keys(this.props.status[this.state.device]).map((param) => {\n      return <option key={param} value={param}>{ deviceReference.params[param] ? deviceReference.params[param].name : param + ' - Not supported yet' }</option>\n    })\n\n    var value = '';\n    if (deviceReference.params[this.state.param]){\n      const type = this.typeConversion(deviceReference.params[this.state.param].type);\n      if(type === 'd2i'){\n        value = (\n          <div className=\"two_table_row\">\n            <div className=\"two_table_cel\">\n              Value*\n            </div>\n            <div className=\"two_table_cel\">\n              <input type=\"number\" className=\"\" id=\"value\"/>\n            </div>\n          </div>\n        )\n      } else if(type === 'd2s'){\n        value = (\n          <div className=\"two_table_row\">\n            <div className=\"two_table_cel\">\n              Value*\n            </div>\n            <div className=\"two_table_cel\">\n              <input type=\"text\" className=\"\" id=\"value\"/>\n            </div>\n          </div>\n        )\n      } else if(type === 'd2b' || type === 'd2l'){\n\n        const options = deviceReference.params[this.state.param].select.map((option) => {\n          return <option key={option} value={option}>{option}</option>\n        })\n\n        value = (\n          <div className=\"two_table_row\">\n            <div className=\"two_table_cel\">\n              Value*\n            </div>\n            <div className=\"two_table_cel\">\n              <select name=\"type\" className=\"two_input\" id=\"value\">\n                {options}\n              </select>\n            </div>\n          </div>\n        )\n      }\n\n    }\n\n    return (\n      <div className=\"trigger_assistant_container\">\n        <h2 className=\"trigger_assistant_title\">Triggered by a device</h2>\n\n        <div className=\"two_table_row\">\n          <div className=\"two_table_cel\">\n            Device*\n          </div>\n          <div className=\"two_table_cel\">\n            <select name=\"type\" className=\"two_input\" id=\"device\" onChange={this.updateDevice}>\n              <option value=\"\">Select a device</option>\n              {devices}\n            </select>\n          </div>\n        </div>\n        <div className=\"two_table_row\">\n          <div className=\"two_table_cel\">\n            Param*\n          </div>\n          <div className=\"two_table_cel\">\n            <select name=\"type\" className=\"two_input\" id=\"param\" onChange={this.updateParam}>\n              <option value=\"\">Select a param</option>\n              {params}\n            </select>\n          </div>\n        </div>\n        <div className=\"two_table_row\">\n          <div className=\"two_table_cel\">\n            Comparator*\n          </div>\n          <div className=\"two_table_cel\">\n            <select name=\"type\" className=\"two_input\" id=\"comparator\">\n              <option>=</option>\n              <option>&lt;</option>\n              <option>&gt;</option>\n              <option>&lt;=</option>\n              <option>&gt;=</option>\n            </select>\n          </div>\n        </div>\n\n        {value}\n\n        <div className=\"trigger_assisstant_buttons_container\">\n          <button type=\"button\" className=\"trigger_assistant_button\" onClick={ this.addTriggerOperation }>Save</button>\n          <button type=\"button\" className=\"trigger_assistant_button red_button\" onClick={ this.props.closeTriggerAssistant }>Cancel</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Device\n","import React from 'react';\nimport { deviceReference } from '../../constants'\n\nimport '../pages/Manager.css';\n\nclass DeviceToDevice extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      device_a: \"\",\n      device_b: \"\"\n    }\n    this.updateDependencies = this.updateDependencies.bind(this);\n    this.addTriggerOperation = this.addTriggerOperation.bind(this);\n  }\n\n  updateDependencies(event) {\n    var state = this.state;\n    state[event.target.id] = event.target.value;\n    this.setState(state);\n  }\n\n\n  addTriggerOperation(){\n    const device_a = document.getElementById('device_a').value;\n    const param_a = document.getElementById('param_a').value;\n    const comparator = document.getElementById('comparator').value;\n    const device_b = document.getElementById('device_b').value;\n    const param_b = document.getElementById('param_b').value;\n\n    const operation = device_a + ':' + param_a + ':' + comparator + ':' + device_b + ':' + param_b;\n    this.props.addTriggerOperation('d2d',operation);\n    this.props.closeTriggerAssistant();\n  }\n\n  render() {\n\n    const devices = Object.keys(this.props.devices).map((device) => {\n      return <option key={device} value={device}>{this.props.devices[device]}</option>\n    })\n\n    const params_a = this.state.device_a === \"\" ? '' : Object.keys(this.props.status[this.state.device_a]).map((param) => {\n      return <option key={param} value={param}>{ deviceReference.params[param] ? deviceReference.params[param].name : param + ' - Not supported yet' }</option>\n    })\n\n    const params_b = this.state.device_b === \"\" ? '' : Object.keys(this.props.status[this.state.device_b]).map((param) => {\n      return <option key={param} value={param}>{ deviceReference.params[param] ? deviceReference.params[param].name : param + ' - Not supported yet' }</option>\n    })\n\n    return (\n      <div className=\"trigger_assistant_container\">\n        <h2 className=\"trigger_assistant_title\">Compare two devices</h2>\n\n        <div className=\"two_table_row\">\n          <div className=\"two_table_cel\">\n            Device A*\n          </div>\n          <div className=\"two_table_cel\">\n            <select name=\"type\" className=\"two_input\" id=\"device_a\" onChange={this.updateDependencies}>\n              <option value=\"\">Select a device</option>\n              {devices}\n            </select>\n          </div>\n        </div>\n        <div className=\"two_table_row\">\n          <div className=\"two_table_cel\">\n            Param A*\n          </div>\n          <div className=\"two_table_cel\">\n            <select name=\"type\" className=\"two_input\" id=\"param_a\" onChange={this.updateDependencies}>\n              <option value=\"\">Select a param</option>\n              {params_a}\n            </select>\n          </div>\n        </div>\n\n        <div className=\"two_table_row\">\n          <div className=\"two_table_cel\">\n            Comparator*\n          </div>\n          <div className=\"two_table_cel\">\n            <select name=\"type\" className=\"two_input\" id=\"comparator\">\n              <option>=</option>\n              <option>&lt;</option>\n              <option>&gt;</option>\n              <option>&lt;=</option>\n              <option>&gt;=</option>\n            </select>\n          </div>\n        </div>\n\n        <div className=\"two_table_row\">\n          <div className=\"two_table_cel\">\n            Device B*\n          </div>\n          <div className=\"two_table_cel\">\n            <select name=\"type\" className=\"two_input\" id=\"device_b\" onChange={this.updateDependencies}>\n              <option value=\"\">Select a device</option>\n              {devices}\n            </select>\n          </div>\n        </div>\n        <div className=\"two_table_row\">\n          <div className=\"two_table_cel\">\n            Param B*\n          </div>\n          <div className=\"two_table_cel\">\n            <select name=\"type\" className=\"two_input\" id=\"param_b\" onChange={this.updateDependencies}>\n              <option value=\"\">Select a param</option>\n              {params_b}\n            </select>\n          </div>\n        </div>\n\n        <div className=\"trigger_assisstant_buttons_container\">\n          <button type=\"button\" className=\"trigger_assistant_button\" onClick={ this.addTriggerOperation }>Save</button>\n          <button type=\"button\" className=\"trigger_assistant_button red_button\" onClick={ this.props.closeTriggerAssistant }>Cancel</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default DeviceToDevice\n","import React from 'react';\nimport Time from './Time'\nimport Device from './Device'\nimport DeviceToDevice from './DeviceToDevice'\n\nimport '../pages/Manager.css';\n\nclass Assistant extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      type: ''\n    }\n    this.timeTigger = this.timeTigger.bind(this);\n    this.deiceTrigger = this.deiceTrigger.bind(this);\n    this.deviceToDeviceTrigger = this.deviceToDeviceTrigger.bind(this);\n  }\n\n  timeTigger() {\n    this.setState({\n      type: 'time'\n    });\n  }\n\n  deiceTrigger() {\n    this.setState({\n      type: 'device'\n    });\n  }\n\n  deviceToDeviceTrigger() {\n    this.setState({\n      type: 'device2device'\n    });\n  }\n\n  render() {\n\n    if (this.state.type === '')\n      return (\n        <div className=\"trigger_assistant_container\">\n          <h2 className=\"trigger_assistant_title\">Add a new trigger</h2>\n          <div className=\"trigger_assisstant_buttons_container\">\n            <button type=\"button\" className=\"trigger_assistant_button\" onClick={ this.timeTigger }>Time</button>\n            <button type=\"button\" className=\"trigger_assistant_button\" onClick={ this.deiceTrigger }>Device</button>\n            <button type=\"button\" className=\"trigger_assistant_button\" onClick={ this.deviceToDeviceTrigger }>Device to device</button>\n            <button type=\"button\" className=\"trigger_assistant_button red_button\" onClick={ this.props.closeTriggerAssistant }>Cancel</button>\n          </div>\n        </div>\n      );\n    else if (this.state.type === 'time')\n      return <Time closeTriggerAssistant={this.props.closeTriggerAssistant} addTriggerOperation={this.props.addTriggerOperation}/>\n    else if (this.state.type === 'device')\n      return <Device devices={this.props.devices} status={this.props.status} closeTriggerAssistant={this.props.closeTriggerAssistant} addTriggerOperation={this.props.addTriggerOperation}/>\n    else if (this.state.type === 'device2device')\n      return <DeviceToDevice devices={this.props.devices} status={this.props.status} closeTriggerAssistant={this.props.closeTriggerAssistant} addTriggerOperation={this.props.addTriggerOperation}/>\n  }\n}\n\nexport default Assistant\n","import React from 'react';\nimport { deviceReference } from '../../constants'\n\nimport '../pages/Manager.css';\n\nclass Target extends React.Component {\n  constructor(props) {\n    super(props);\n    this.delete = this.delete.bind(this);\n  }\n\n  delete() {\n    this.props.delete(this.props.id);\n  }\n\n  render() {\n\n    const container = {\n        marginBottom: '10px'\n    }\n\n    return (\n      <div className=\"trigger_device_container\" style={container}>\n        <span>{ (this.props.devices[this.props.target.device] ? this.props.devices[this.props.target.device] : this.props.target.device)\n        + ' (' + (deviceReference.params[this.props.target.param] ? deviceReference.params[this.props.target.param].name : this.props.target.param)\n        + ') = ' + this.props.target.value}</span>\n        <img src=\"/global/bin_icon.png\" alt=\"Delete icon\" className=\"trigger_delete\" onClick={this.delete}/>\n      </div>\n    );\n  }\n}\n\nexport default Target\n","import React from 'react';\nimport { deviceReference } from '../../constants'\n\nimport '../pages/Manager.css';\n\nclass Device extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      device: \"\"\n    }\n    this.updateDevice = this.updateDevice.bind(this);\n    this.updateParam = this.updateParam.bind(this);\n    this.addTarget = this.addTarget.bind(this);\n    this.typeConversion = this.typeConversion.bind(this);\n  }\n\n  updateDevice(event) {\n    this.setState({\n      device: event.target.value\n    });\n  }\n\n  updateParam(event) {\n    this.setState({\n      param: event.target.value\n    });\n  }\n\n  addTarget(){\n    const device = document.getElementById('device').value;\n    const param = document.getElementById('param').value;\n    const value = document.getElementById('value').value;\n\n    const target = {\n      device: device,\n      param: param,\n      value: value\n    }\n    this.props.addTarget(target);\n    document.getElementById('device').value = '';\n    document.getElementById('param').value = '';\n    this.setState({\n      param: ''\n    });\n  }\n\n  typeConversion(origen) {\n    const type = {\n      int: 'd2i',\n      list: 'd2l',\n      bool: 'd2b',\n      string: 'd2s',\n      color: 'd2c'\n    }\n    return type[origen]\n  }\n\n  render() {\n\n    const devices = Object.keys(this.props.devices).map((device) => {\n      return <option key={device} value={device}>{this.props.devices[device]}</option>\n    })\n\n    const params = this.state.device === \"\" ? '' : Object.keys(this.props.status[this.state.device]).map((param) => {\n      return <option key={param} value={param}>{ deviceReference.params[param] ? deviceReference.params[param].name : param + ' - Not supported yet' }</option>\n    })\n\n    var value = '';\n    if (deviceReference.params[this.state.param]){\n      const type = this.typeConversion(deviceReference.params[this.state.param].type);\n      if(type === 'd2i'){\n        value = (\n          <div className=\"two_table_row\">\n            <div className=\"two_table_cel\">\n              Value*\n            </div>\n            <div className=\"two_table_cel\">\n              <input type=\"number\" className=\"\" id=\"value\"/>\n            </div>\n          </div>\n        )\n      } else if(type === 'd2s'){\n        value = (\n          <div className=\"two_table_row\">\n            <div className=\"two_table_cel\">\n              Value*\n            </div>\n            <div className=\"two_table_cel\">\n              <input type=\"text\" className=\"\" id=\"value\"/>\n            </div>\n          </div>\n        )\n      } else if(type === 'd2b' || type === 'd2l'){\n\n        const options = deviceReference.params[this.state.param].select.map((option) => {\n          return <option key={option} value={option}>{option}</option>\n        })\n\n        value = (\n          <div className=\"two_table_row\">\n            <div className=\"two_table_cel\">\n              Value*\n            </div>\n            <div className=\"two_table_cel\">\n              <select name=\"type\" className=\"two_input\" id=\"value\">\n                {options}\n              </select>\n            </div>\n          </div>\n        )\n      }\n\n    }\n\n    return (\n      <div className=\"trigger_assistant_container\">\n        <h2 className=\"trigger_assistant_title\">New target</h2>\n\n        <div className=\"two_table_row\">\n          <div className=\"two_table_cel\">\n            Device*\n          </div>\n          <div className=\"two_table_cel\">\n            <select name=\"type\" className=\"two_input\" id=\"device\" onChange={this.updateDevice}>\n              <option value=\"\">Select a device</option>\n              {devices}\n            </select>\n          </div>\n        </div>\n        <div className=\"two_table_row\">\n          <div className=\"two_table_cel\">\n            Param*\n          </div>\n          <div className=\"two_table_cel\">\n            <select name=\"type\" className=\"two_input\" id=\"param\" onChange={this.updateParam}>\n              <option value=\"\">Select a param</option>\n              {params}\n            </select>\n          </div>\n        </div>\n\n        {value}\n\n        <div className=\"trigger_assisstant_buttons_container\">\n          <button type=\"button\" className=\"trigger_assistant_button\" onClick={ this.addTarget }>Add</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Device\n","import React from 'react';\nimport Triggers from '../manager/Triggers.js'\nimport Assistant from '../manager/Assistant.js'\nimport Target from '../manager/Target.js'\nimport DeviceTarget from '../manager/DeviceTarget.js'\nimport getCookieValue from '../../functions'\nimport { root } from '../../constants'\n\nimport './Manager.css';\n\nclass Manager extends React.Component {\n  constructor(props) {\n    super(props);\n    const id = window.location.pathname.split('/')[3];\n    var create = false;\n    if (id === \"\") create = true;\n    this.state = {\n      id: id,\n      create: create,\n      save_status: \"\",\n      trigger_assistant_parent: 0,\n      task: {\n        title: '',\n        description: '',\n        triggers: {},\n        target: []\n      },\n      devices: [],\n      status: {}\n    }\n    this.update = this.update.bind(this);\n    this.save = this.save.bind(this);\n    this.delete = this.delete.bind(this);\n    this.deleteTrigger = this.deleteTrigger.bind(this);\n    this.addTriggerLogic = this.addTriggerLogic.bind(this);\n    this.openTriggerAssistant = this.openTriggerAssistant.bind(this);\n    this.addTriggerOperation = this.addTriggerOperation.bind(this);\n    this.closeTriggerAssistant = this.closeTriggerAssistant.bind(this);\n    this.addTarget = this.addTarget.bind(this);\n    this.deleteTarget = this.deleteTarget.bind(this);\n  }\n\n  componentDidMount() {\n    // Load devices data\n    var dev = new XMLHttpRequest();\n    dev.onload = function (e) {\n      if (dev.readyState === 4) {\n        if (dev.status === 200) {\n          var data = JSON.parse(dev.responseText);\n          var devices_names = {}\n          data.devices.forEach((device) => {\n            devices_names[device.id] = device.name.name\n          })\n          this.setState({\n             devices: devices_names,\n             status:  data.status\n           });\n        } else {\n          console.error(dev.statusText);\n        }\n      }\n    }.bind(this);\n    dev.open(\"GET\", root + \"api/global/get/\");\n    dev.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    dev.send();\n\n    // Load task if neeeded\n    if (!this.state.create){\n      var tas = new XMLHttpRequest();\n      tas.onload = function (e) {\n        if (tas.readyState === 4) {\n          if (tas.status === 200) {\n            var data = JSON.parse(tas.responseText);\n            console.log(data);\n            this.setState({\n               task: data\n             });\n          } else {\n            console.error(tas.statusText);\n          }\n        }\n      }.bind(this);\n      tas.open(\"GET\", root + \"api/tasks/get/\" + this.state.id + \"/\");\n      tas.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n      tas.send();\n    }\n  }\n\n  update(event){\n    var task = this.state.task;\n    task[event.target.id] = event.target.value\n    this.setState({\n      task: task\n    })\n  }\n\n  save(){\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      if (http.readyState === 4) {\n        if (http.status === 200) {\n          JSON.parse(http.responseText);\n           if (this.state.create){\n             window.location.href = \"/tasks\"\n           } else {\n             this.setState({\n                save_status: \"Saved correctly.\"\n              });\n           }\n        } else {\n          console.error(http.statusText);\n          this.setState({\n             save_status: \"Error, the changes haven't been saved.\"\n           });\n        }\n        setTimeout(function(){\n          this.setState({\n             save_status: \"\"\n           });\n        }.bind(this), 5000)\n      }\n    }.bind(this);\n    console.log(this.state.task)\n    var payload = {\n      \"task\": this.state.task\n    }\n    if (this.state.create){\n      http.open(\"POST\", root + \"api/tasks/create/\");\n    } else {\n      http.open(\"POST\", root + \"api/tasks/update/\");\n      payload['id'] = this.state.id;\n    }\n    http.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\n    http.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    http.send(JSON.stringify(payload));\n  }\n\n  delete(){\n    if(window.confirm('Do you want to delete the task?')){\n      var http = new XMLHttpRequest();\n      http.onload = function (e) {\n        if (http.readyState === 4) {\n          if (http.status === 200) {\n            window.location.href = \"/tasks/\"\n          } else {\n            console.error(http.statusText);\n            this.setState({\n               save_status: \"Error, the device hasn't been deleted.\"\n             });\n          }\n          setTimeout(function(){\n            this.setState({\n               save_status: \"\"\n             });\n          }.bind(this), 5000)\n        }\n      }.bind(this);\n      http.open(\"GET\", root + \"api/tasks/delete/\" + this.state.id + \"/\");\n      http.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n      http.send();\n    } else {\n      this.setState({\n         save_status: \"Ok. The device is save.\"\n       });\n    }\n  }\n\n  deleteTrigger(id) {\n    // Get the task\n    var task = this.state.task;\n    var triggers = task.triggers;\n    // Get the the parent id\n    const parent = triggers[id].parent\n    if (parent !== 'triggers') {\n      // Delete from the parent\n      const index = triggers[parent].operation.indexOf(id);\n      triggers[parent].operation.splice(index,1)\n      // Delete the trigger\n      delete triggers[id];\n      task.triggers = triggers;\n    } else {\n      task.triggers = {};\n    }\n    this.setState({\n      task: task\n    });\n  }\n\n  addTriggerLogic(type, parent) {\n    // Get the triggers\n    var task = this.state.task;\n    if (parent !== 'triggers') {\n      // Get the timestamp\n      const ts = Date.now();\n      // Compose and create the logic trigger\n      task.triggers[ts] = {\n        operation: [],\n        parent: parent,\n        type: type\n      };\n      // Register the trigger in the parent\n      task.triggers[parent].operation.push(ts);\n    } else {\n      task.triggers['trigger'] = {\n        operation: [],\n        parent: 'triggers',\n        type: type\n      };\n    }\n    // Update the component state\n    this.setState({\n      task: task\n    });\n  }\n\n  openTriggerAssistant(parent) {\n    this.setState({\n      trigger_assistant_parent: parent\n    });\n  }\n\n  addTriggerOperation(type, operation) {\n    // Get the triggers\n    var task = this.state.task;\n    const parent = this.state.trigger_assistant_parent;\n    if (parent !== 'triggers') {\n      // Get the timestamp\n      const ts = Date.now();\n      // Compose and create the logic trigger\n      task.triggers[ts] = {\n        operation: operation,\n        parent: parent,\n        type: type\n      };\n      // Register the trigger in the parent\n      task.triggers[parent].operation.push(ts);\n    } else {\n      task.triggers['trigger'] = {\n        operation: operation,\n        parent: 'triggers',\n        type: type\n      };\n    }\n    // Update the component state\n    this.setState({\n      task: task\n    });\n  }\n\n  closeTriggerAssistant() {\n    this.setState({\n      trigger_assistant_parent: 0\n    });\n  }\n\n  addTarget(target) {\n    var task = this.state.task;\n    task.target.push(target);\n    this.setState({\n      task: task\n    });\n  }\n\n  deleteTarget(id) {\n    var task = this.state.task;\n    task.target.splice(id,1)\n    this.setState({\n      task: task\n    });\n  }\n\n  render() {\n\n    const button = {\n      width: '200px'\n    }\n\n    const deleteButton = {\n      backgroundColor: 'red'\n    }\n\n    const deleteButtonDisabled = {\n      backgroundColor: 'red',\n      opacity: '0.2'\n    }\n\n    const separator = {\n      width: '70%'\n    }\n\n    const targets = this.state.task.target.map((target, i) => {\n      return <Target key={i} id={i} target={target} devices={this.state.devices} delete={this.deleteTarget} />\n    })\n\n    return (\n      <div className=\"page_block_container\">\n        <h2>Task</h2>\n        <hr style={separator}/>\n        <div className=\"page_block_content_container\">\n          <div className=\"two_table_row\">\n            <div className=\"two_table_cel\">\n              Name*\n            </div>\n            <div className=\"two_table_cel\">\n              <input type=\"text\" className=\"two_input\" id=\"title\" defaultValue={this.state.task.title} onChange={this.update}/>\n            </div>\n          </div>\n          <div className=\"two_table_row\">\n            <div className=\"two_table_cel\">\n              Description*\n            </div>\n            <div className=\"two_table_cel\">\n              <input type=\"text\" className=\"two_input\" id=\"description\" defaultValue={this.state.task.description} onChange={this.update}/>\n            </div>\n          </div>\n          <hr/>\n          <h2>Triggers</h2>\n          <div className=\"advise\">\n            <span></span>\n          </div>\n          {\n            this.state.trigger_assistant_parent !== 0\n            ?\n            <Assistant devices={this.state.devices} status={this.state.status} closeTriggerAssistant={this.closeTriggerAssistant} addTriggerOperation={this.addTriggerOperation}/>\n            :\n            <Triggers id=\"trigger\" triggers={this.state.task.triggers} devices={this.state.devices} delete={this.deleteTrigger} addTriggerLogic={this.addTriggerLogic} openTriggerAssistant={this.openTriggerAssistant}/>\n          }\n          <hr/>\n          <h2>Targets</h2>\n          <div className=\"advise\">\n            <span></span>\n          </div>\n          {targets}\n          <DeviceTarget devices={this.state.devices} status={this.state.status} addTarget={this.addTarget}/>\n\n          <hr/>\n          <div className=\"two_table_cel\">\n            <button type=\"button\" style={ this.state.create ? deleteButtonDisabled : deleteButton } onClick={ this.delete } disabled={ this.state.create ? true : false}>Delete</button>\n            <button type=\"button\" onClick={ this.save }>Save</button>\n            <span>{this.state.save_status}</span>\n          </div>\n        </div>\n      </div>\n  );\n  }\n}\n\nexport default Manager\n","import React from 'react';\nimport Switch from \"react-switch\";\nimport getCookieValue from '../../functions'\nimport { root } from '../../constants'\n\nclass Settings extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      settings: {\n        google: {},\n        ddns: {},\n        mqtt: {},\n        apikey: \"\"\n      },\n      save_status: \"\",\n      url: {\n        auth: \"\",\n        token: \"\",\n        fulfillment: \"\"\n      }\n    }\n    this.update = this.update.bind(this);\n    this.enableDdnsProvider = this.enableDdnsProvider.bind(this);\n    this.save = this.save.bind(this);\n  }\n\n  componentDidMount() {\n    if (!this.state.create){\n      var http = new XMLHttpRequest();\n      http.onload = function (e) {\n        if (http.readyState === 4) {\n          if (http.status === 200) {\n            var data = JSON.parse(http.responseText);\n            this.setState({\n               settings: data,\n               url: {\n                 auth: \"https://\" + data.ddns.hostname + \"/auth/\",\n                 token: \"https://\" + data.ddns.hostname + \"/token/\",\n                 fulfillment: \"https://\" + data.ddns.hostname + \"/smarthome/\"\n               }\n             });\n          } else {\n            console.error(http.statusText);\n          }\n        }\n      }.bind(this);\n      http.open(\"GET\", root + \"api/settings/get/\");\n      http.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n      http.send();\n    }\n  }\n\n  update(event){\n    // this.props.update('attributes/' + event.target.id,event.target.value);\n    const id = event.target.id.split(\"/\");\n    var settings = this.state.settings;\n    if (id.length === 1){\n      settings[id[0]] = event.target.value;\n    } else if (id.length === 2){\n      settings[id[0]][id[1]] = event.target.value;\n    }\n    this.setState({\n       settings: settings\n     });\n  }\n\n  enableDdnsProvider(checked){\n    var settings = this.state.settings;\n    settings.ddns.enabled = checked;\n    this.setState({\n       settings: settings\n     });\n  }\n\n  save(){\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      if (http.readyState === 4) {\n        if (http.status === 200) {\n          JSON.parse(http.responseText);\n          this.setState({\n             save_status: \"Saved correctly.\"\n           });\n        } else {\n          this.setState({\n             save_status: \"Error, the changes haven't been saved.\"\n           });\n        }\n        setTimeout(function(){\n          this.setState({\n             save_status: \"\"\n           });\n        }.bind(this), 5000)\n      }\n    }.bind(this);\n    http.open(\"POST\", root + \"api/settings/update/\");\n    http.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\n    http.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    http.send(JSON.stringify(this.state.settings));\n  }\n\n  render() {\n\n    return (\n      <div>\n        <div className=\"page_block_container\">\n          <h2>Actions on Google</h2>\n          <hr/>\n          <div className=\"page_block_content_container\">\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">\n                Client ID\n              </div>\n              <div className=\"two_table_cel\">\n                <input type=\"text\" className=\"two_input\" id=\"google/client_id\" defaultValue={this.state.settings.google.client_id} onChange={this.update}/>\n              </div>\n            </div>\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">\n                Client Secret\n              </div>\n              <div className=\"two_table_cel\">\n                <input type=\"text\" className=\"two_input\" id=\"google/client_secret\" defaultValue={this.state.settings.google.client_secret} onChange={this.update}/>\n              </div>\n            </div>\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">\n                Authorization URL\n              </div>\n              <div className=\"two_table_cel\">\n                <input type=\"text\" className=\"two_input\" defaultValue={this.state.url.auth} disabled/>\n              </div>\n            </div>\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">\n                Token URL\n              </div>\n              <div className=\"two_table_cel\">\n                <input type=\"text\" className=\"two_input\" defaultValue={this.state.url.token} disabled/>\n              </div>\n            </div>\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">\n                Fulfillment URL\n              </div>\n              <div className=\"two_table_cel\">\n                <input type=\"text\" className=\"two_input\" defaultValue={this.state.url.fulfillment} disabled/>\n              </div>\n            </div>\n          </div>\n          <div className=\"page_block_buttons_container\">\n            <button type=\"button\" onClick={ this.save }>Save</button>\n            <span>{this.state.save_status}</span>\n          </div>\n          <div className=\"advise\">\n            <span>Actions on Google settings. It is used to authenticate with Google. If you change it here, you must change it on the Actions Console &#62; Develop &#62; Account Linking.</span>\n          </div>\n        </div>\n\n\n        <div className=\"page_block_container\">\n          <h2>MQTT</h2>\n          <hr/>\n          <div className=\"page_block_content_container\">\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">\n                User\n              </div>\n              <div className=\"two_table_cel\">\n                <input type=\"text\" className=\"two_input\" id=\"mqtt/user\" defaultValue={this.state.settings.mqtt.user} onChange={this.update}/>\n              </div>\n            </div>\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">\n                Password\n              </div>\n              <div className=\"two_table_cel\">\n                <input type=\"text\" className=\"two_input\" id=\"mqtt/password\" defaultValue={this.state.settings.mqtt.password} onChange={this.update}/>\n              </div>\n            </div>\n          </div>\n          <div className=\"page_block_buttons_container\">\n            <button type=\"button\" onClick={ this.save }>Save</button>\n            <span>{this.state.save_status}</span>\n          </div>\n          <div className=\"advise\">\n            <span>Important. You must configure the username and password into Mosquitto manually from a terminal. This is only for telling Homeware its credentials. Clear both if you don't use credentials.</span>\n          </div>\n        </div>\n\n        <div className=\"page_block_container\">\n          <h2>DDNS provider</h2>\n          <hr/>\n          <div className=\"page_block_content_container\">\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">\n                Status:\n              </div>\n              <div className=\"two_table_cel\">\n                { this.state.settings.ddns.status }\n              </div>\n            </div>\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">\n                IP and time:\n              </div>\n              <div className=\"two_table_cel\">\n                { this.state.settings.ddns.ip + \" updated at \" + this.state.settings.ddns.last}\n              </div>\n            </div>\n          </div>\n          <hr/>\n          <div className=\"page_block_content_container\">\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">\n                Enable\n              </div>\n              <div className=\"two_table_cel\">\n                <Switch onChange={this.enableDdnsProvider} checked={this.state.settings.ddns.enabled} />\n              </div>\n            </div>\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">\n                Provider\n              </div>\n              <div className=\"two_table_cel\">\n                <select name=\"type\" className=\"settings_select\" id=\"ddns/provider\" value={this.state.settings.ddns.provider} onChange={this.update}>\n                  <option value=\"noip\">Noip</option>\n                </select>\n              </div>\n            </div>\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">\n                Username\n              </div>\n              <div className=\"two_table_cel\">\n                <input type=\"text\" className=\"two_input\" id=\"ddns/username\" defaultValue={this.state.settings.ddns.username} onChange={this.update}/>\n              </div>\n            </div>\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">\n                Password\n              </div>\n              <div className=\"two_table_cel\">\n                <input type=\"text\" className=\"two_input\" id=\"ddns/password\" defaultValue={this.state.settings.ddns.password} onChange={this.update}/>\n              </div>\n            </div>\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">\n                Hostname\n              </div>\n              <div className=\"two_table_cel\">\n                <input type=\"text\" className=\"two_input\" id=\"ddns/hostname\" defaultValue={this.state.settings.ddns.hostname} onChange={this.update}/>\n              </div>\n            </div>\n          </div>\n          <div className=\"page_block_buttons_container\">\n            <button type=\"button\" onClick={ this.save }>Save</button>\n            <span>{this.state.save_status}</span>\n          </div>\n          <div className=\"advise\">\n            <span>Set up the access data to the DDNS provider account. Open an issue on Github if you want a DDNS provider that is not listed.</span>\n          </div>\n        </div>\n\n\n      </div>\n    );\n  }\n}\n\nexport default Settings\n","import React from 'react';\n\nfunction Component(props) {\n\n  const component = {\n    marginTop: '5px',\n    width: '100%',\n    display: 'grid',\n    gridTemplateColumns: '70% 30%'\n  }\n\n  const textContainer = {\n    textAlign: 'left',\n    paddingTop: '4px'\n  }\n\n  const labelContainer = {\n    textAlign: 'right',\n    paddingTop: '4px'\n  }\n\n  const text = {\n    fontSize: '18px'\n  }\n\n  const running = {\n    fontSize: '12px',\n    fontWeight: 'bold',\n    color: 'white',\n    backgroundColor: 'green',\n    padding: '5px',\n    paddingLeft: '10px',\n    paddingRight: '10px',\n    borderRadius: '5px'\n  }\n\n  const stopped = {\n    fontSize: '12px',\n    fontWeight: 'bold',\n    color: 'white',\n    backgroundColor: 'red',\n    padding: '5px',\n    paddingLeft: '10px',\n    paddingRight: '10px',\n    borderRadius: '5px'\n  }\n\n  return (\n    <div style={ component }>\n      <div style={ textContainer }>\n        <span style={ text }>{ props.title }</span>\n      </div>\n      <div style={ labelContainer }>\n        <span style={ props.status === 'Running' ? running : stopped }>{ props.status }</span>\n      </div>\n    </div>\n  );\n}\n\nexport default Component\n","import React from 'react';\nimport getCookieValue from '../../functions'\nimport { root } from '../../constants'\nimport Component from '../system/Component.js'\nconst ReactMarkdown = require('react-markdown')\n\nconst COMPONENTS_CHECK_INTERVAL = 3;\n\nclass System extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      components: [],\n      show_system_message: false,\n      system_message: ''\n    }\n\n    this.loadComponents = this.loadComponents.bind(this);\n    this.upgrade = this.upgrade.bind(this);\n    this.areYouAwake = this.areYouAwake.bind(this);\n    this.restart = this.restart.bind(this);\n    this.reboot = this.reboot.bind(this);\n    this.shutdown = this.shutdown.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadComponents();\n    setInterval(this.loadComponents,COMPONENTS_CHECK_INTERVAL*1000)\n  }\n\n  loadComponents() {\n    var comp = new XMLHttpRequest();\n    comp.onload = function (e) {\n      if (comp.readyState === 4) {\n        if (comp.status === 200) {\n          var response = JSON.parse(comp.responseText);\n          var components = []\n          var keys = Object.keys(response);\n          for (var i = 0; i < keys.length; i++) {\n            components.push(response[keys[i]])\n          }\n\n          this.setState({ components: components });\n        } else {\n          console.error(comp.statusText);\n        }\n      }\n    }.bind(this);\n    comp.open(\"GET\", root + \"api/system/status/\");\n    comp.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    comp.send();\n  }\n\n  upgrade(){\n    if(window.confirm('Are you sure?')){\n      window.open(root + \"files/buckup/homeware/\" + getCookieValue('token'))\n      this.setState({\n        show_system_message: true,\n        system_message: 'Upgrading the system. It will take a couple of minutes and then you will be redirected to the home page.'\n      });\n      window.setTimeout(function() {\n        var upg = new XMLHttpRequest();\n        upg.onload = function (e) {\n          if (upg.readyState === 4) {\n            setInterval(this.areYouAwake,2000);\n          }\n        }.bind(this)\n        upg.open(\"GET\", root + \"api/system/upgrade/\");\n        upg.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n        upg.send();\n      }.bind(this),2000);\n    }\n  }\n\n  areYouAwake(){\n    var awa = new XMLHttpRequest();\n    awa.onload = function (e) {\n      if (awa.readyState === 4) {\n        if (awa.status === 200) {\n          window.location.href = '/'\n        } else {\n          console.error(awa.statusText);\n        }\n      }\n    }\n    awa.open(\"GET\", root + \"test/\");\n    awa.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    awa.send();\n  }\n\n  restart(){\n    this.setState({\n      show_system_message: true,\n      system_message: 'Restarting Homeware. It will take a couple of minutes and then you will be redirected to the home page.'\n    });\n    var res = new XMLHttpRequest();\n    res.onload = function (e) {\n      if (res.readyState === 4) {\n        setInterval(this.areYouAwake,2000);\n      }\n    }.bind(this)\n    res.open(\"GET\", root + \"api/system/restart\");\n    res.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    res.send();\n  }\n\n  reboot(){\n    this.setState({\n      show_system_message: true,\n      system_message: 'Rebooting the system. It will take a couple of minutes and then you will be redirected to the home page.'\n    });\n    var reb = new XMLHttpRequest();\n    reb.onload = function (e) {\n      if (reb.readyState === 4) {\n        setInterval(this.areYouAwake,2000);\n      }\n    }.bind(this)\n    reb.open(\"GET\", root + \"api/system/reboot\");\n    reb.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    reb.send();\n  }\n\n  shutdown(){\n    this.setState({\n      show_system_message: true,\n      system_message: 'The system will be shut down, you will lose the connection with Homeware.'\n    });\n    var shu = new XMLHttpRequest();\n    shu.open(\"GET\", root + \"api/system/shutdown\");\n    shu.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    shu.send();\n  }\n\n  render() {\n\n    const upgrade_button = {\n      width: '200px'\n    }\n\n    const git_description = {\n      marginTop: '20px',\n      marginLeft: '10%',\n      width: '80%',\n      paddingLeft: '20px',\n      paddingRight: '20px',\n      paddingTop: '20px',\n      paddingBottom: '20px',\n      borderRadius: '20px',\n      border: '1px solid #aaa',\n      textAlign: 'left'\n    }\n\n    const components = this.state.components.map((component) =>\n      <Component title={ component.title } status={ component.status } enable={ component.enable } key={ component.title }/>\n    );\n\n    return (\n      <div>\n        {\n          this.state.show_system_message\n          ?\n            <div className=\"page_block_container\">\n              <h2>System message</h2>\n              <hr/>\n              <div className=\"page_block_content_container\">\n                { this.state.system_message }\n              </div>\n            </div>\n          :\n          <div>\n            <div className=\"page_block_container\">\n              <h2>System status</h2>\n              <hr/>\n              <div className=\"page_block_content_container\">\n                { components }\n              </div>\n              <div className=\"advise\">\n                <span>These are the core elements of Homeware-LAN. All must be running.</span>\n              </div>\n            </div>\n\n            <div className=\"page_block_container\">\n              <h2>System update</h2>\n              <hr/>\n              <div className=\"page_block_content_container text_left\">\n                <b>System version:</b> { this.props.version }\n                {\n                  this.props.git.code !== 200\n                  ?\n                  <div><br/> Unable to verify if there is a system update.</div>\n                  :\n                  <div>\n                    {\n                      this.props.version !== this.props.git.version\n                      ?\n                      <div>\n                        <h2>System update available - { this.props.git.version }</h2>\n                        <div style={ git_description }>\n                          <ReactMarkdown source={this.props.git.description} />\n                          <button type=\"button\" style={ upgrade_button } onClick={ this.upgrade }>Download and install</button>\n                        </div>\n                      </div>\n                      :\n                      <div><br/> The system is up to date.</div>\n                    }\n                  </div>\n                }\n\n\n              </div>\n              <div className=\"advise\">\n                <span>Verify if there is any code update and upgrade if necessary.</span>\n              </div>\n            </div>\n\n            <div className=\"page_block_container\">\n              <h2>Power</h2>\n              <hr/>\n              <div className=\"page_block_buttons_container\">\n                <button type=\"button\" onClick={ this.restart }>Restart Homeware</button>\n                <button type=\"button\" onClick={ this.reboot }>Reboot System</button>\n                <button type=\"button\" onClick={ this.shutdown }>Shutdown System</button>\n              </div>\n              <div className=\"advise\">\n                <span>Control the device and restart the Homeware-LAN installation.</span>\n              </div>\n            </div>\n          </div>\n        }\n\n      </div>\n    );\n  }\n}\n\nexport default System\n","import React from 'react';\nimport getCookieValue from '../../functions'\nimport { root } from '../../constants'\n\nclass Backup extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    }\n  }\n\n  backup(){\n    window.location = root + \"files/buckup/homeware/\" + getCookieValue('token')\n  }\n\n  render() {\n\n    const button = {\n      width: '200px'\n    }\n\n    const restore_url = root + \"files/restore/file/\" + getCookieValue('token') + \"/\";\n\n    return (\n      <div>\n\n\n        <div className=\"page_block_container\">\n          <h2>Backup</h2>\n          <hr/>\n          <div className=\"page_block_content_container\">\n              <button type=\"button\" style={ button } onClick={ this.backup }>Backup</button>\n          </div>\n          <div className=\"advise\">\n            <span>Download a backup file.</span>\n          </div>\n        </div>\n\n        <div className=\"page_block_container\">\n          <h2>Restore</h2>\n          <hr/>\n          <div className=\"page_block_content_container\">\n            <form method=\"post\" encType=\"multipart/form-data\" action={ restore_url }>\n              <input type=\"file\" name=\"file\"/>\n              <button type=\"submit\" style={ button } onClick={ this.restart }>Restore</button>\n              </form>\n          </div>\n          <div className=\"advise\">\n            <span>Restore a backup file.</span>\n          </div>\n        </div>\n\n\n      </div>\n    );\n  }\n}\n\nexport default Backup\n","import React from 'react';\nimport getCookieValue from '../../functions'\nimport { root } from '../../constants'\n\nclass Access extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {\n        apikey: ''\n      }\n    }\n  }\n\n  componentDidMount() {\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      if (http.readyState === 4) {\n        if (http.status === 200) {\n          var data = JSON.parse(http.responseText);\n          this.setState({ data: data });\n        } else {\n          console.error(http.statusText);\n        }\n      }\n    }.bind(this);\n    http.open(\"GET\", root + \"api/access/get/\");\n    http.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    http.send();\n  }\n\n  generateAPIKey(){\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      if (http.readyState === 4) {\n        if (http.status === 200) {\n          // var data = JSON.parse(http.responseText);\n          window.location.href = \"/access\"\n        } else {\n          console.error(http.statusText);\n        }\n      }\n    };\n    http.open(\"GET\", root + \"api/access/create/\");\n    http.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    http.send();\n  }\n\n  render() {\n\n    return (\n      <div>\n        <div className=\"page_block_container\">\n          <h2>API key</h2>\n          <hr/>\n          <div className=\"page_block_content_container\">\n            <div className=\"two_table_row\">\n              <div className=\"two_table_cel\">\n                API Key\n              </div>\n              <div className=\"two_table_cel\">\n                <input type=\"text\" className=\"two_input\" id=\"apikey\" value={ this.state.data.apikey } disabled/>\n              </div>\n            </div>\n          </div>\n          <div className=\"page_block_buttons_container\">\n            <button type=\"button\" onClick={ this.generateAPIKey }>Generate</button>\n\n          </div>\n          <div className=\"advise\">\n            <span>The API Key gives you access to the Homeware's API. Please do not generate an API Key if you are not sure of what you are doing.</span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Access\n","import React from 'react';\nimport getCookieValue from '../../functions'\nimport { root } from '../../constants'\n\nclass Logs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      page: 1\n    }\n\n    this.previousPage = this.previousPage.bind(this);\n    this.nextPage = this.nextPage.bind(this);\n    this.downloadLog = this.downloadLog.bind(this);\n  }\n\n  componentDidMount() {\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      if (http.readyState === 4) {\n        if (http.status === 200) {\n          var data = JSON.parse(http.responseText);\n          this.setState({ data: data });\n        } else {\n          console.error(http.statusText);\n        }\n      }\n    }.bind(this);\n    http.open(\"GET\", root + \"api/log/get/\");\n    http.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    http.send();\n  }\n\n  previousPage() {\n    if (this.state.page > 1)\n      this.setState({ page: this.state.page - 1 });\n  }\n\n  nextPage() {\n    if (this.state.page < this.state.data.length/10-1)\n      this.setState({ page: this.state.page + 1 });\n  }\n\n  downloadLog() {\n    window.location = root + \"files/log/homeware/\" + getCookieValue('token')\n  }\n\n  render() {\n\n    const line = {\n      width: '80%',\n      marginLeft: '8%',\n      marginTop: '10px',\n      borderBottom: '1px solid #eee',\n      paddingLeft: '20px',\n      paddingBottom: '10px',\n      paddingRight: '20px',\n      textAlign: 'left'\n    }\n\n    const yellow = {\n      color: 'orange'\n    }\n\n    const red = {\n      color: 'red'\n    }\n\n    const homeware_lan_log_data = this.state.data.reverse().slice(0, this.state.page * 10);\n    const homeware_lan_log = homeware_lan_log_data.map((register, i) =>\n      <div style={ line } key={ i }>\n        { register.severity === 'Log' ? <b>{ register.severity }</b> : '' }\n        { register.severity === 'Warning' ? <b style={ yellow }>{ register.severity }</b> : '' }\n        { register.severity === 'Alert' ? <b style={ red }>{ register.severity }</b> : '' }\n         - { register.time }<br/>\n        { register.message }\n      </div>\n    );\n\n    return (\n      <div>\n        <div className=\"page_block_container\">\n          <h2>Homeware-LAN log</h2>\n          <hr/>\n          <div>\n            { homeware_lan_log }\n          </div>\n          <div className=\"page_block_buttons_container\">\n            <button type=\"button\" onClick={ this.nextPage }>Load more</button>\n            <button type=\"button\" onClick={ this.downloadLog }>Download</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Logs\n","import React from 'react';\nimport { root } from '../../constants'\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      enable_message: false,\n      message: ''\n    }\n    this.login = this.login.bind(this);\n    this.grantAccess = this.grantAccess.bind(this);\n  }\n\n  login() {\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      var response = JSON.parse(http.responseText);\n      if(response['status'] === 'in'){\n        document.cookie = \"user=\" + response['user'] + \"; path=/\";\n        document.cookie = \"token=\" + response['token'] + \"; path=/\";\n        window.location = '/';\n      } else if (response['status'] === 'fail'){\n        this.setState({\n          enable_message: true,\n          message: 'Incorrect User or Password'\n        })\n        setTimeout(function(){\n          this.setState({\n             enable_message: false\n           });\n        }.bind(this), 5000)\n      }\n    }.bind(this);\n    http.open(\"GET\", root + \"api/user/login/\");\n    http.setRequestHeader('user', document.getElementById('user').value)\n    http.setRequestHeader('pass', document.getElementById('password').value)\n    http.send();\n  }\n\n  grantAccess() {\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      if (http.responseText !== 'fail')\n        window.location = http.responseText;\n      else {\n        this.setState({\n          enable_message: true,\n          message: 'Incorrect User or Password'\n        })\n        setTimeout(function(){\n          this.setState({\n             enable_message: false\n           });\n        }.bind(this), 5000)\n      }\n    }.bind(this);\n    http.open(\"GET\", root + \"api/user/googleSync/\");\n    http.setRequestHeader('user', document.getElementById('user').value)\n    http.setRequestHeader('pass', document.getElementById('password').value)\n    http.send();\n  }\n\n  render() {\n\n    const form_container = {\n      margin: '20%',\n    }\n\n    const element = {\n      margin: '10px'\n    }\n\n    var message = '';\n    if (this.state.enable_message){\n      message = <div className=\"alert_message\"> { this.state.message } </div>\n    }\n\n    return (\n      <div style={ form_container }>\n        { window.location.href.includes('google') ? <p>Google request access to Homeware-Lan</p> : '' }\n        <br/>\n        <span style={ element }>Username</span>\n        <input type=\"text\" name=\"user\" id=\"user\"/>\n        <span style={ element }>Password</span>\n        <input type=\"password\" name=\"password\" id=\"password\"/>\n        <button type=\"button\" style={ element } onClick={ !window.location.href.includes('google') ? this.login : this.grantAccess }>{ !window.location.href.includes('google') ? <span>Login</span> : <span>Grant access</span> }</button>\n        <br/>\n        { message }\n      </div>\n    );\n  }\n}\n\nexport default Login\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { Link } from \"react-router-dom\";\nimport getCookieValue from './functions'\nimport { root } from './constants'\n\nimport Menu from './components/web/Menu'\nimport Devices from './components/pages/Devices'\nimport Editor from './components/pages/Editor'\nimport Info from './components/pages/Info'\nimport Connecting from './components/pages/Connecting'\nimport Tasks from './components/pages/Tasks'\nimport Manager from './components/pages/Manager'\nimport Settings from './components/pages/Settings'\nimport System from './components/pages/System'\nimport Backup from './components/pages/Backup'\nimport Access from './components/pages/Access'\nimport Logs from './components/pages/Logs'\nimport Login from './components/pages/Login'\n\nconst GIT_CHECKOUT_INTERVAL = 600;\nconst LOG_CHECKOUT_INTERVAL = 5\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      session: false,\n      alert: \"clear\",\n      version: \"\",\n      git: {\n        code: \"\",\n        version: 0\n      }\n    }\n    this.checkoutVersion = this.checkoutVersion.bind(this);\n    this.checkoutLog = this.checkoutLog.bind(this);\n    this.logout = this.logout.bind(this);\n    this.menu = this.menu.bind(this);\n  }\n\n  componentDidMount() {\n    var http = new XMLHttpRequest();\n    http.onload = function (e) {\n      if (http.readyState === 4) {\n        if (http.status === 200) {\n          var data = JSON.parse(http.responseText);\n          if (data.status !== 'in' && !window.location.href.includes('login'))\n            window.location.href = '/login/'\n          else if (data.status === 'in')\n            this.setState({\n              session: true\n            });\n        } else {\n          console.error(http.statusText);\n        }\n      }\n    }.bind(this);\n    http.open(\"GET\", root + \"api/user/validateToken/\");\n    http.setRequestHeader('token', getCookieValue('token'))\n    http.setRequestHeader('user', getCookieValue('user'))\n    http.send();\n\n    this.checkoutVersion();\n    window.setInterval(this.checkoutVersion,GIT_CHECKOUT_INTERVAL*1000)\n    this.checkoutLog();\n    window.setInterval(this.checkoutLog,LOG_CHECKOUT_INTERVAL*1000)\n  }\n\n  checkoutVersion() {\n\n    var vers = new XMLHttpRequest();\n    vers.onload = function (e) {\n      if (vers.readyState === 4) {\n        if (vers.status === 200) {\n          var version = JSON.parse(vers.responseText);\n          this.setState({ version: version.version });\n        } else {\n          console.error(vers.statusText);\n        }\n      }\n    }.bind(this);\n    vers.open(\"GET\", root + \"api/global/version/\");\n    vers.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    vers.send();\n\n    var git = new XMLHttpRequest();\n    git.onload = function (e) {\n      if (git.readyState === 4) {\n        if (git.status === 200) {\n          const latestRelease = JSON.parse(git.responseText);\n          this.setState({ git: {\n            version: latestRelease.tag_name,\n            description: latestRelease.body,\n            code: 200\n            }\n          });\n        } else if (git.status === 403) {\n        this.setState({\n          git: {\n            code: \"\",\n            version: 403\n          }\n        });\n        } else {\n          console.error(git.statusText);\n        }\n      }\n    }.bind(this);\n    git.open(\"GET\", 'https://api.github.com/repos/kikeelectronico/Homeware-LAN/releases/latest');\n    git.send();\n  }\n\n  checkoutLog() {\n    var vers = new XMLHttpRequest();\n    vers.onload = function (e) {\n      if (vers.readyState === 4) {\n        if (vers.status === 200) {\n          const alert = JSON.parse(vers.responseText)\n          this.setState({\n            \"alert\": alert.alert\n          });\n        } else {\n          console.error(vers.statusText);\n        }\n      }\n    }.bind(this);\n    vers.open(\"GET\", root + \"api/log/alert/\");\n    vers.setRequestHeader('authorization', 'baerer ' + getCookieValue('token'))\n    vers.send();\n  }\n\n  logout() {\n    document.cookie = \"user=; path=/\";\n    document.cookie = \"token=; path=/\";\n    this.setState({\n      session: false\n    });\n    window.location.href = '/'\n  }\n\n  menu() {\n    document.getElementById('menuIcon').classList.toggle(\"change_menu_icon\");\n    document.getElementById('menu').classList.toggle(\"menu_show_up\");\n  }\n\n  render() {\n\n    if (!this.state.session && !window.location.href.includes('login'))\n      return ''\n    else if (window.location.href.includes('login'))\n      return (\n        <div className=\"Clear_app\">\n          <Login/>\n        </div>\n      );\n    else\n      return (\n        <Router>\n          <div className=\"App\">\n            <div className=\"upper-menu\">\n              <div className=\"menu_icon_container\" id=\"menuIcon\" onClick={this.menu}>\n                <div className=\"menu_icon_bar_1\"></div>\n                <div className=\"menu_icon_bar_2\"></div>\n                <div className=\"menu_icon_bar_3\"></div>\n              </div>\n              <div className=\"uppper_menu_title_container\">\n                <h1 className=\"uppper_menu_title\">Homeware-LAN</h1>\n                <div className=\"uppper_menua_alert\">{this.state.alert === \"set\" ? \"Alert - See the system log\" : \"\"}</div>\n              </div>\n            </div>\n            <div className=\"main-app\">\n              <div className=\"menu\" id=\"menu\">\n                <div>\n                  <Menu image=\"/menu/devices_icon.png\" title=\"Devices\" href=\"/devices\"/>\n                  <Menu image=\"/menu/tasks_icon.png\" title=\"Tasks\" href=\"/tasks\"/>\n                  <Menu image=\"/menu/settings_icon.png\" title=\"Settings\" href=\"/settings\"/>\n                  <Menu image=\"/menu/status_icon.png\" title=\"System\" href=\"/system\"/>\n                  <Menu image=\"/menu/backup_icon.png\" title=\"Backup\" href=\"/backup\"/>\n                  <Menu image=\"/menu/access_icon.png\" title=\"Access\" href=\"/access\"/>\n                  <Menu image=\"/menu/logs_icon.png\" title=\"Logs\" href=\"/logs\"/>\n                  <hr/>\n                  <Menu image=\"/menu/repo_icon.png\" title=\"Repo\" exec={ ()=>{window.location.href = \"https://github.com/kikeelectronico/Homeware-LAN\"} }/>\n                  <Menu image=\"/menu/help_icon.png\" title=\"How to\" exec={ ()=>{window.location.href = \"https://kikeelectronico.github.io/Homeware-LAN/\"} }/>\n                  <hr/>\n                  <Menu image=\"/menu/logout_icon.png\" title=\"Logout\" exec={ this.logout }/>\n                </div>\n                <div className=\"menu_data\">\n                  {\n                    this.state.git.version !== this.state.Version && this.state.git.version !== ''\n                    ?\n                    <Link to=\"/system\" className=\"text_decoration_none\">\n                      <div className=\"menu_data_alert\">New update available</div>\n                    </Link>\n                    :\n                    \"\"\n                  }\n\n                  <p className=\"menu_data_version\">Version: { this.state.version }</p>\n                </div>\n              </div>\n              <div className=\"page\">\n                <Route exact={ true } path=\"/\"> <Devices/> </Route>\n                <Route exact={ true } path=\"/devices\"> <Devices/> </Route>\n                <Route path=\"/devices/editor\"> <Editor/> </Route>\n                <Route path=\"/devices/info\"> <Info/> </Route>\n                <Route path=\"/devices/connecting\"> <Connecting/> </Route>\n                <Route exact={ true } path=\"/tasks\"> <Tasks/> </Route>\n                <Route path=\"/tasks/manager\"> <Manager/> </Route>\n                <Route path=\"/settings\"> <Settings/> </Route>\n                <Route path=\"/system\"> <System git={this.state.git} version={this.state.version}/> </Route>\n                <Route path=\"/backup\"> <Backup/> </Route>\n                <Route path=\"/access\"> <Access/> </Route>\n                <Route path=\"/logs\"> <Logs/> </Route>\n              </div>\n            </div>\n          </div>\n        </Router>\n      );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}